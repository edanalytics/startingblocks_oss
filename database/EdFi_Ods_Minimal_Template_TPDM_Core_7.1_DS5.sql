--
-- PostgreSQL database dump
--

-- Dumped from database version 13.13 (Debian 13.13-1.pgdg120+1)
-- Dumped by pg_dump version 14.10 (Ubuntu 14.10-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: changes; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA changes;


ALTER SCHEMA changes OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tpdm;


ALTER SCHEMA tpdm OWNER TO postgres;

--
-- Name: tracked_changes_edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_edfi;


ALTER SCHEMA tracked_changes_edfi OWNER TO postgres;

--
-- Name: tracked_changes_tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_tpdm;


ALTER SCHEMA tracked_changes_tpdm OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: getmaxchangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.getmaxchangeversion() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
DECLARE
	result bigint;
BEGIN
    SELECT last_value FROM changes.ChangeVersionSequence INTO result;
    RETURN result;
END
$$;


ALTER FUNCTION changes.getmaxchangeversion() OWNER TO postgres;

--
-- Name: updatechangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.updatechangeversion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    new.ChangeVersion := nextval('changes.ChangeVersionSequence');
    RETURN new;
END;
$$;


ALTER FUNCTION changes.updatechangeversion() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityorganizationid
            AND targeteducationorganizationid = OLD.communityorganizationid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityorganizationid AS SourceEducationOrganizationId, 
            NEW.communityorganizationid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid 
                    AND OLD.communityorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.communityproviderid
            ) as targets
        WHERE sources.communityproviderid = targets.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityproviderid
            AND targeteducationorganizationid = OLD.communityproviderid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityproviderid AS SourceEducationOrganizationId, 
            NEW.communityproviderid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the communityorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.communityproviderid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid  
                AND NEW.communityorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.communityproviderid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.communityproviderid
        ) as targets
    WHERE sources.communityproviderid = targets.communityproviderid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid  
                    AND OLD.communityorganizationid IS NOT NULL 
                    AND (NEW.communityorganizationid IS NULL OR OLD.communityorganizationid <> NEW.communityorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the communityorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.communityproviderid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.communityproviderid = d2.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid
                AND ((OLD.communityorganizationid IS NULL AND NEW.communityorganizationid IS NOT NULL)
                OR OLD.communityorganizationid <> NEW.communityorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.communityproviderid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_update() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationorganizationnetworkid
            AND targeteducationorganizationid = OLD.educationorganizationnetworkid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationorganizationnetworkid AS SourceEducationOrganizationId, 
            NEW.educationorganizationnetworkid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.educationservicecenterid
            ) as targets
        WHERE sources.educationservicecenterid = targets.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationservicecenterid
            AND targeteducationorganizationid = OLD.educationservicecenterid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationservicecenterid AS SourceEducationOrganizationId, 
            NEW.educationservicecenterid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.educationservicecenterid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.educationservicecenterid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.educationservicecenterid
        ) as targets
    WHERE sources.educationservicecenterid = targets.educationservicecenterid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.educationservicecenterid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.educationservicecenterid = d2.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.educationservicecenterid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_update() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid 
                    AND OLD.parentlocaleducationagencyid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid 
                    AND OLD.educationservicecenterid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.localeducationagencyid
            ) as targets
        WHERE sources.localeducationagencyid = targets.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.localeducationagencyid
            AND targeteducationorganizationid = OLD.localeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.localeducationagencyid AS SourceEducationOrganizationId, 
            NEW.localeducationagencyid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parentlocaleducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid  
                AND NEW.parentlocaleducationagencyid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the educationservicecenterid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid  
                AND NEW.educationservicecenterid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.localeducationagencyid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.localeducationagencyid
        ) as targets
    WHERE sources.localeducationagencyid = targets.localeducationagencyid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid  
                    AND OLD.parentlocaleducationagencyid IS NOT NULL 
                    AND (NEW.parentlocaleducationagencyid IS NULL OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid  
                    AND OLD.educationservicecenterid IS NOT NULL 
                    AND (NEW.educationservicecenterid IS NULL OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parentlocaleducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the educationservicecenterid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.localeducationagencyid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.localeducationagencyid = d2.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid
                AND ((OLD.parentlocaleducationagencyid IS NULL AND NEW.parentlocaleducationagencyid IS NOT NULL)
                OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid
                AND ((OLD.educationservicecenterid IS NULL AND NEW.educationservicecenterid IS NOT NULL)
                OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.localeducationagencyid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_update() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid 
                    AND OLD.parenteducationorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.organizationdepartmentid
            ) as targets
        WHERE sources.organizationdepartmentid = targets.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.organizationdepartmentid
            AND targeteducationorganizationid = OLD.organizationdepartmentid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_delete() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.organizationdepartmentid AS SourceEducationOrganizationId, 
            NEW.organizationdepartmentid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parenteducationorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.organizationdepartmentid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid  
                AND NEW.parenteducationorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.organizationdepartmentid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.organizationdepartmentid
        ) as targets
    WHERE sources.organizationdepartmentid = targets.organizationdepartmentid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_insert() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid  
                    AND OLD.parenteducationorganizationid IS NOT NULL 
                    AND (NEW.parenteducationorganizationid IS NULL OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parenteducationorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.organizationdepartmentid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.organizationdepartmentid = d2.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid
                AND ((OLD.parenteducationorganizationid IS NULL AND NEW.parenteducationorganizationid IS NOT NULL)
                OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.organizationdepartmentid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_update() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.postsecondaryinstitutionid
            AND targeteducationorganizationid = OLD.postsecondaryinstitutionid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.postsecondaryinstitutionid AS SourceEducationOrganizationId, 
            NEW.postsecondaryinstitutionid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid 
                    AND OLD.localeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.schoolid
            ) as targets
        WHERE sources.schoolid = targets.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.schoolid
            AND targeteducationorganizationid = OLD.schoolid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_delete() OWNER TO postgres;

--
-- Name: edfi_school_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.schoolid AS SourceEducationOrganizationId, 
            NEW.schoolid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the localeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.schoolid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid  
                AND NEW.localeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.schoolid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.schoolid
        ) as targets
    WHERE sources.schoolid = targets.schoolid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid  
                    AND OLD.localeducationagencyid IS NOT NULL 
                    AND (NEW.localeducationagencyid IS NULL OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the localeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.schoolid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.schoolid = d2.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid
                AND ((OLD.localeducationagencyid IS NULL AND NEW.localeducationagencyid IS NOT NULL)
                OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.schoolid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_update() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.stateeducationagencyid
            AND targeteducationorganizationid = OLD.stateeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.stateeducationagencyid AS SourceEducationOrganizationId, 
            NEW.stateeducationagencyid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AbsenceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AbsenceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AbsenceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicHonorCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicHonorCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicHonorCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academicsubjectdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicSubjectDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicSubjectDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicSubjectDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() OWNER TO postgres;

--
-- Name: academicweek_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicweek_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.academicweek(
        oldschoolid, oldweekidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.weekidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicweek_deleted() OWNER TO postgres;

--
-- Name: accommodationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccommodationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccommodationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccommodationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() OWNER TO postgres;

--
-- Name: accountabilityrating_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accountabilityrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.accountabilityrating(
        oldeducationorganizationid, oldratingtitle, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.ratingtitle, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accountabilityrating_deleted() OWNER TO postgres;

--
-- Name: accounttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccountTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccountTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccountTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: achievementcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AchievementCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AchievementCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AchievementCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdditionalCreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdditionalCreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdditionalCreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: addresstypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AddressTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AddressTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AddressTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrationEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrationEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrationEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrativeFundingControlDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrativeFundingControlDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrativeFundingControlDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AncestryEthnicOriginDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AncestryEthnicOriginDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AncestryEthnicOriginDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() OWNER TO postgres;

--
-- Name: assessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessment(
        oldassessmentidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessment_deleted() OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitem_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitem_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentitem(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitem_deleted() OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentReportingMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentReportingMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentReportingMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentscorerangelearningstandard(
        oldassessmentidentifier, oldnamespace, oldscorerangeid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.scorerangeid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() OWNER TO postgres;

--
-- Name: assignmentlatestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssignmentLateStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssignmentLateStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssignmentLateStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attemptstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttemptStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttemptStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttemptStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttendanceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttendanceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttendanceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: balancesheetdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.balancesheetdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BarrierToInternetAccessInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BarrierToInternetAccessInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BarrierToInternetAccessInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: behaviordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BehaviorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BehaviorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BehaviorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() OWNER TO postgres;

--
-- Name: bellschedule_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.bellschedule_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.bellschedule(
        oldbellschedulename, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.bellschedulename, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.bellschedule_deleted() OWNER TO postgres;

--
-- Name: calendar_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendar_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendar(
        oldcalendarcode, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendar_deleted() OWNER TO postgres;

--
-- Name: calendardate_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendardate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendardate(
        oldcalendarcode, olddate, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendardate_deleted() OWNER TO postgres;

--
-- Name: calendareventdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarEventDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarEventDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarEventDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() OWNER TO postgres;

--
-- Name: calendartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: careerpathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CareerPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CareerPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CareerPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterApprovalAgencyTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterApprovalAgencyTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterApprovalAgencyTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: charterstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: chartofaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.chartofaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.chartofaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.chartofaccount_deleted() OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CitizenshipStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CitizenshipStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CitizenshipStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: classperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classperiodname, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_deleted() OWNER TO postgres;

--
-- Name: classperiod_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid, 
        newclassperiodname, newschoolid, 
        id, changeversion)
    VALUES (
        old.classperiodname, old.schoolid, 
        new.classperiodname, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_keychg() OWNER TO postgres;

--
-- Name: classroompositiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ClassroomPositionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ClassroomPositionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ClassroomPositionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() OWNER TO postgres;

--
-- Name: cohort_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohort_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.cohort(
        oldcohortidentifier, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.cohortidentifier, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohort_deleted() OWNER TO postgres;

--
-- Name: cohortscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohorttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortYearTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortYearTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortYearTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: communityproviderlicense_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.communityproviderlicense(
        oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization,
        id, discriminator, changeversion)
    VALUES (
        OLD.communityproviderid, OLD.licenseidentifier, OLD.licensingorganization, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() OWNER TO postgres;

--
-- Name: competencyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CompetencyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CompetencyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CompetencyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: competencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    INSERT INTO tracked_changes_edfi.competencyobjective(
        oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyobjective_deleted() OWNER TO postgres;

--
-- Name: contact_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contact_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.contact(
        oldcontactusi, oldcontactuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contactusi, OLD.contactuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contact_deleted() OWNER TO postgres;

--
-- Name: contact_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contact_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.contact(
        oldcontactusi, oldcontactuniqueid, 
        newcontactusi, newcontactuniqueid, 
        id, changeversion)
    VALUES (
        old.contactusi, old.contactuniqueid, 
        new.contactusi, new.contactuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contact_keychg() OWNER TO postgres;

--
-- Name: contacttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContactTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContactTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContactTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: contentclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContentClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContentClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContentClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContinuationOfServicesReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContinuationOfServicesReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContinuationOfServicesReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: costratedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.costratedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CostRateDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CostRateDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CostRateDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.costratedescriptor_deleted() OWNER TO postgres;

--
-- Name: countrydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.countrydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CountryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CountryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CountryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.countrydescriptor_deleted() OWNER TO postgres;

--
-- Name: course_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.course_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.course(
        oldcoursecode, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.course_deleted() OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseAttemptResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseAttemptResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseAttemptResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseDefinedByDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseDefinedByDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseDefinedByDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseGPAApplicabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseGPAApplicabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseGPAApplicabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseLevelCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseLevelCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseLevelCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: courseoffering_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_deleted() OWNER TO postgres;

--
-- Name: courseoffering_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_keychg() OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseRepeatCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseRepeatCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseRepeatCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: coursetranscript_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursetranscript_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.courseattemptresultdescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.coursetranscript(
        oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.courseattemptresultdescriptorid, dj0.namespace, dj0.codevalue, OLD.coursecode, OLD.courseeducationorganizationid, OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj1.studentuniqueid, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursetranscript_deleted() OWNER TO postgres;

--
-- Name: credential_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credential_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.stateofissuestateabbreviationdescriptorid;

    INSERT INTO tracked_changes_edfi.credential(
        oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.credentialidentifier, OLD.stateofissuestateabbreviationdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credential_deleted() OWNER TO postgres;

--
-- Name: credentialfielddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialFieldDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialFieldDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialFieldDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: creditcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: credittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CTEProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CTEProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CTEProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: curriculumuseddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CurriculumUsedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CurriculumUsedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CurriculumUsedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() OWNER TO postgres;

--
-- Name: deliverymethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DeliveryMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DeliveryMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DeliveryMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: descriptormapping_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.descriptormapping_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptormapping(
        oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.mappednamespace, OLD.mappedvalue, OLD.namespace, OLD.value, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.descriptormapping_deleted() OWNER TO postgres;

--
-- Name: diagnosisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiagnosisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiagnosisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiagnosisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomaleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomatypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDeterminationSourceTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDeterminationSourceTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDeterminationSourceTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineaction_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineaction_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.disciplineaction(
        olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.disciplineactionidentifier, OLD.disciplinedate, OLD.studentusi, dj0.studentuniqueid, OLD.responsibilityschoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineaction_deleted() OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineActionLengthDifferenceReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineActionLengthDifferenceReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineActionLengthDifferenceReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplinedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineincident_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincident_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.disciplineincident(
        oldincidentidentifier, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincident_deleted() OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineIncidentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineIncidentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineIncidentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationalEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationalEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationalEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationcontent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationcontent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationcontent(
        oldcontentidentifier,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.contentidentifier, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationcontent_deleted() OWNER TO postgres;

--
-- Name: educationorganization_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganization_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganization(
        oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganization_deleted() OWNER TO postgres;

--
-- Name: educationorganizationassociationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationAssociationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationAssociationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationAssociationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionass_e670ae_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationinterventionprescriptionassociation(
        oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptioneducationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationnetworkassociation(
        oldeducationorganizationnetworkid, oldmembereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationnetworkid, OLD.membereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationpeerassociation(
        oldeducationorganizationid, oldpeereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.peereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() OWNER TO postgres;

--
-- Name: educationplandescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationPlanDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationPlanDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationPlanDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ElectronicMailTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ElectronicMailTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ElectronicMailTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: eligibilitydelayreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EligibilityDelayReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EligibilityDelayReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EligibilityDelayReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: eligibilityevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EligibilityEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EligibilityEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EligibilityEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: employmentstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EmploymentStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EmploymentStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EmploymentStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: enrollmenttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EnrollmentTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EnrollmentTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EnrollmentTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryGradeLevelReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryGradeLevelReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryGradeLevelReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: entrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationdelayreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationDelayReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EvaluationDelayReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationDelayReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationrubricdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.evaluationrubricdimension(
        oldevaluationrubricrating, oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.evaluationrubricrating, OLD.programeducationorganizationid, OLD.programevaluationelementtitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted() OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EventCircumstanceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EventCircumstanceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EventCircumstanceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ExitWithdrawTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ExitWithdrawTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ExitWithdrawTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: feederschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.feederschoolassociation(
        oldbegindate, oldfeederschoolid, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.feederschoolid, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() OWNER TO postgres;

--
-- Name: financialcollectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.FinancialCollectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.FinancialCollectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.FinancialCollectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: functiondimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.functiondimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.functiondimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.functiondimension_deleted() OWNER TO postgres;

--
-- Name: funddimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.funddimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.funddimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.funddimension_deleted() OWNER TO postgres;

--
-- Name: generalstudentprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.generalstudentprogramassociation(
        oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() OWNER TO postgres;

--
-- Name: grade_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.gradetypedescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolyear, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_deleted() OWNER TO postgres;

--
-- Name: grade_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    ij1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
    ij2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.gradetypedescriptorid;
    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;
    SELECT INTO ij1 * FROM edfi.descriptor j1 WHERE descriptorid = new.gradingperioddescriptorid;
    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;
    SELECT INTO ij2 * FROM edfi.student j2 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.gradetypedescriptorid, dj0.namespace, dj0.codevalue, old.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, old.gradingperiodname, old.gradingperiodschoolyear, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj2.studentuniqueid, 
        new.begindate, new.gradetypedescriptorid, ij0.namespace, ij0.codevalue, new.gradingperioddescriptorid, ij1.namespace, ij1.codevalue, new.gradingperiodname, new.gradingperiodschoolyear, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij2.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_keychg() OWNER TO postgres;

--
-- Name: gradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_deleted() OWNER TO postgres;

--
-- Name: gradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace, 
        newgradebookentryidentifier, newnamespace, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, 
        new.gradebookentryidentifier, new.namespace, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_keychg() OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradebookEntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradebookEntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradebookEntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradeleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradePointAverageTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradePointAverageTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradePointAverageTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradingperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    INSERT INTO tracked_changes_edfi.gradingperiod(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperiod_deleted() OWNER TO postgres;

--
-- Name: gradingperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradingPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradingPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradingPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: graduationplan_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplan_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.graduationplantypedescriptorid;

    INSERT INTO tracked_changes_edfi.graduationplan(
        oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.graduationplantypedescriptorid, dj0.namespace, dj0.codevalue, OLD.graduationschoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplan_deleted() OWNER TO postgres;

--
-- Name: graduationplantypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GraduationPlanTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GraduationPlanTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GraduationPlanTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GunFreeSchoolsActReportingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GunFreeSchoolsActReportingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GunFreeSchoolsActReportingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessPrimaryNighttimeResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessPrimaryNighttimeResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessPrimaryNighttimeResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: ideapartdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IDEAPartDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IDEAPartDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IDEAPartDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted() OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IdentificationDocumentUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IdentificationDocumentUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IdentificationDocumentUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() OWNER TO postgres;

--
-- Name: incidentlocationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IncidentLocationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IncidentLocationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IncidentLocationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorGroupDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorGroupDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorGroupDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InstitutionTelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InstitutionTelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InstitutionTelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: interactivitystyledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InteractivityStyleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InteractivityStyleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InteractivityStyleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessTypeInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessTypeInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessTypeInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetPerformanceInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetPerformanceInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetPerformanceInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: intervention_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.intervention_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.intervention(
        oldeducationorganizationid, oldinterventionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.intervention_deleted() OWNER TO postgres;

--
-- Name: interventionclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionEffectivenessRatingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionEffectivenessRatingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionEffectivenessRatingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventionprescription_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionprescription_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionprescription(
        oldeducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionprescription_deleted() OWNER TO postgres;

--
-- Name: interventionstudy_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionstudy_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionstudy(
        oldeducationorganizationid, oldinterventionstudyidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionstudyidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionstudy_deleted() OWNER TO postgres;

--
-- Name: languagedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languagedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languagedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageInstructionProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageInstructionProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageInstructionProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandard(
        oldlearningstandardid,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.learningstandardid, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandard_deleted() OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandardequivalenceassociation(
        oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.sourcelearningstandardid, OLD.targetlearningstandardid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardEquivalenceStrengthDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardEquivalenceStrengthDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardEquivalenceStrengthDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: levelofeducationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LevelOfEducationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LevelOfEducationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LevelOfEducationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LimitedEnglishProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LimitedEnglishProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LimitedEnglishProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: localaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localaccount_deleted() OWNER TO postgres;

--
-- Name: localactual_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localactual_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localactual(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localactual_deleted() OWNER TO postgres;

--
-- Name: localbudget_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localbudget_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localbudget(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localbudget_deleted() OWNER TO postgres;

--
-- Name: localcontractedstaff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localcontractedstaff(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() OWNER TO postgres;

--
-- Name: localedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocaleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocaleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocaleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localedescriptor_deleted() OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocalEducationAgencyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocalEducationAgencyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocalEducationAgencyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: localencumbrance_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localencumbrance_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localencumbrance(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localencumbrance_deleted() OWNER TO postgres;

--
-- Name: localpayroll_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localpayroll_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localpayroll(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localpayroll_deleted() OWNER TO postgres;

--
-- Name: location_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classroomidentificationcode, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_deleted() OWNER TO postgres;

--
-- Name: location_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid, 
        newclassroomidentificationcode, newschoolid, 
        id, changeversion)
    VALUES (
        old.classroomidentificationcode, old.schoolid, 
        new.classroomidentificationcode, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_keychg() OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MagnetSpecialProgramEmphasisSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MagnetSpecialProgramEmphasisSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MediumOfInstructionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MediumOfInstructionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MediumOfInstructionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MethodCreditEarnedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MethodCreditEarnedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MethodCreditEarnedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MigrantEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MigrantEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MigrantEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: modelentitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ModelEntityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ModelEntityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ModelEntityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() OWNER TO postgres;

--
-- Name: monitoreddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MonitoredDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MonitoredDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MonitoredDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: networkpurposedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NetworkPurposeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NetworkPurposeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NetworkPurposeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() OWNER TO postgres;

--
-- Name: objectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectdimension_deleted() OWNER TO postgres;

--
-- Name: objectiveassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectiveassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectiveassessment(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectiveassessment_deleted() OWNER TO postgres;

--
-- Name: openstaffposition_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.openstaffposition_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.openstaffposition(
        oldeducationorganizationid, oldrequisitionnumber,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.requisitionnumber, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.openstaffposition_deleted() OWNER TO postgres;

--
-- Name: operationalstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OperationalStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OperationalStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OperationalStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: operationalunitdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.operationalunitdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() OWNER TO postgres;

--
-- Name: othernametypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OtherNameTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OtherNameTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OtherNameTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() OWNER TO postgres;

--
-- Name: participationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationdescriptor_deleted() OWNER TO postgres;

--
-- Name: participationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceBaseConversionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceBaseConversionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceBaseConversionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: person_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.person_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_edfi.person(
        oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.person_deleted() OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PersonalInformationVerificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PersonalInformationVerificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PersonalInformationVerificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: platformtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PlatformTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PlatformTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PlatformTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: populationserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PopulationServedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PopulationServedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PopulationServedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: postingresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostingResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostingResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostingResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.postsecondaryeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.postsecondaryevent(
        oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.eventdate, OLD.postsecondaryeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryInstitutionLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryInstitutionLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryInstitutionLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAwayFromSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceProviderDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceProviderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceProviderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() OWNER TO postgres;

--
-- Name: proficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: program_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.program_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.program(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.program_deleted() OWNER TO postgres;

--
-- Name: programassignmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramAssignmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramAssignmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramAssignmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: programdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.programdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programdimension_deleted() OWNER TO postgres;

--
-- Name: programevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluation(
        oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluation_deleted() OWNER TO postgres;

--
-- Name: programevaluationelement_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationelement_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluationelement(
        oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationelementtitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationelement_deleted() OWNER TO postgres;

--
-- Name: programevaluationobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluationobjective(
        oldprogrameducationorganizationid, oldprogramevaluationobjectivetitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationobjectivetitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationobjective_deleted() OWNER TO postgres;

--
-- Name: programevaluationperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramEvaluationPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramEvaluationPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramEvaluationPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: programevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: programsponsordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramSponsorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramSponsorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramSponsorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() OWNER TO postgres;

--
-- Name: programtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: progressdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressdescriptor_deleted() OWNER TO postgres;

--
-- Name: progressleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: projectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.projectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.projectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.projectdimension_deleted() OWNER TO postgres;

--
-- Name: providercategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderProfitabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderProfitabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderProfitabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: publicationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PublicationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PublicationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PublicationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: questionformdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.QuestionFormDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.QuestionFormDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.QuestionFormDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() OWNER TO postgres;

--
-- Name: racedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.racedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RaceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RaceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RaceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.racedescriptor_deleted() OWNER TO postgres;

--
-- Name: ratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonexiteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonExitedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonExitedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonExitedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonNotTestedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonNotTestedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonNotTestedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() OWNER TO postgres;

--
-- Name: recognitiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RecognitionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RecognitionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RecognitionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: relationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.relationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RelationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RelationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RelationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.relationdescriptor_deleted() OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RepeatIdentifierDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RepeatIdentifierDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RepeatIdentifierDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() OWNER TO postgres;

--
-- Name: reportcard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportcard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.reportcard(
        oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportcard_deleted() OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReporterDescriptionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReporterDescriptionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReporterDescriptionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() OWNER TO postgres;

--
-- Name: reportingtagdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReportingTagDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReportingTagDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReportingTagDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() OWNER TO postgres;

--
-- Name: residencystatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResidencyStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResidencyStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResidencyStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: responseindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponseIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponseIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponseIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: responsibilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponsibilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponsibilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponsibilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: restraintevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restraintevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.restraintevent(
        oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.restrainteventidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restraintevent_deleted() OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RestraintEventReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RestraintEventReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RestraintEventReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResultDatatypeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResultDatatypeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResultDatatypeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: retestindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RetestIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RetestIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RetestIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoicebasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceImplementStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceImplementStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceImplementStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolFoodServiceProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolFoodServiceProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolFoodServiceProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: schooltypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolyeartype_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolyeartype_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.schoolyeartype(
        oldschoolyear,
        id, changeversion)
    VALUES (
        OLD.schoolyear, 
        OLD.id, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolyeartype_deleted() OWNER TO postgres;

--
-- Name: section_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_deleted() OWNER TO postgres;

--
-- Name: section_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_keychg() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.calendarcode, old.date, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.calendarcode, new.date, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: sectiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: separationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: servicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.servicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.servicedescriptor_deleted() OWNER TO postgres;

--
-- Name: session_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_deleted() OWNER TO postgres;

--
-- Name: session_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname, 
        newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.schoolid, old.schoolyear, old.sessionname, 
        new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_keychg() OWNER TO postgres;

--
-- Name: sexdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sexdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SexDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SexDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SexDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sexdescriptor_deleted() OWNER TO postgres;

--
-- Name: sourcedimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcedimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sourcedimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcedimension_deleted() OWNER TO postgres;

--
-- Name: sourcesystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SourceSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SourceSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SourceSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationexitreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationexitreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationExitReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationExitReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationExitReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationexitreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationSettingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationSettingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationSettingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() OWNER TO postgres;

--
-- Name: staff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.staffusi, OLD.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_deleted() OWNER TO postgres;

--
-- Name: staff_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid, 
        newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.staffusi, old.staffuniqueid, 
        new.staffusi, new.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_keychg() OWNER TO postgres;

--
-- Name: staffabsenceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.absenceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffabsenceevent(
        oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.absenceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() OWNER TO postgres;

--
-- Name: staffclassificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffClassificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffClassificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffClassificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffclassificationdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationassignmentassociation(
        oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.staffclassificationdescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationcontactassociation(
        oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contacttitle, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.employmentstatusdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationemploymentassociation(
        oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.employmentstatusdescriptorid, dj0.namespace, dj0.codevalue, OLD.hiredate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffleave_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleave_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffleaveeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffleave(
        oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.staffleaveeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleave_deleted() OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffLeaveEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffLeaveEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffLeaveEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: staffprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffprogramassociation(
        oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() OWNER TO postgres;

--
-- Name: staffschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programassignmentdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffschoolassociation(
        oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.programassignmentdescriptorid, dj0.namespace, dj0.codevalue, OLD.schoolid, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
    ij0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;
    SELECT INTO ij0 * FROM edfi.staff j0 WHERE staffusi = new.staffusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, 
        newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.staffusi, dj0.staffuniqueid, 
        new.begindate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.staffusi, ij0.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StateAbbreviationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StateAbbreviationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StateAbbreviationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() OWNER TO postgres;

--
-- Name: student_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.studentusi, OLD.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_deleted() OWNER TO postgres;

--
-- Name: student_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid, 
        newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.studentusi, old.studentuniqueid, 
        new.studentusi, new.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_keychg() OWNER TO postgres;

--
-- Name: studentacademicrecord_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.studentacademicrecord(
        oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj0.studentuniqueid, OLD.termdescriptorid, dj1.namespace, dj1.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() OWNER TO postgres;

--
-- Name: studentassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessment(
        oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessment_deleted() OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.educationorganizationassociationtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessmenteducationorganizationassociation(
        oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.educationorganizationassociationtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() OWNER TO postgres;

--
-- Name: studentcompetencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcompetencyobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.objectiveeducationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() OWNER TO postgres;

--
-- Name: studentcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.contact%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.contact j0 WHERE contactusi = old.contactusi;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcontactassociation(
        oldcontactusi, oldcontactuniqueid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contactusi, dj0.contactuniqueid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcontactassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.behaviordescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentbehaviorassociation(
        oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.behaviordescriptorid, dj0.namespace, dj0.codevalue, OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationassociation(
        oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.responsibilitydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationresponsibilityassociation(
        oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.responsibilitydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, 
        newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, old.studentusi, dj0.studentuniqueid, 
        new.gradebookentryidentifier, new.namespace, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentinterventionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionassociation(
        oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.interventionidentificationcode, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: studentprogramattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentprogramevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj3 * FROM edfi.student j3 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramevaluation(
        oldevaluationdate, oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.evaluationdate, OLD.programeducationorganizationid, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, OLD.studentusi, dj3.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.entrydate, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, 
        newentrydate, newschoolid, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.entrydate, old.schoolid, old.studentusi, dj0.studentuniqueid, 
        new.entrydate, new.schoolid, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.schoolid, OLD.schoolyear, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.schoolid, old.schoolyear, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.schoolid, new.schoolyear, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() OWNER TO postgres;

--
-- Name: studentsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj0.studentuniqueid, 
        new.begindate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentspecialeducationprogrameligibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation(
        oldconsenttoevaluationreceiveddate, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.consenttoevaluationreceiveddate, OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted() OWNER TO postgres;

--
-- Name: submissionstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SubmissionStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SubmissionStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SubmissionStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: supportermilitaryconnectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SupporterMilitaryConnectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SupporterMilitaryConnectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SupporterMilitaryConnectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: survey_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.survey_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.survey(
        oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.survey_deleted() OWNER TO postgres;

--
-- Name: surveycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: surveycourseassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveycourseassociation(
        oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() OWNER TO postgres;

--
-- Name: surveyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.surveyprogramassociation(
        oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() OWNER TO postgres;

--
-- Name: surveyquestion_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestion_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestion(
        oldnamespace, oldquestioncode, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestion_deleted() OWNER TO postgres;

--
-- Name: surveyquestionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestionresponse(
        oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveyresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysection_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysection_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysection(
        oldnamespace, oldsurveyidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysection_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.namespace, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, 
        newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.namespace, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.surveyidentifier, 
        new.localcoursecode, new.namespace, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.surveyidentifier, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() OWNER TO postgres;

--
-- Name: surveysectionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtarget_730be1_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveysectionresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TechnicalSkillsAssessmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TechnicalSkillsAssessmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TechnicalSkillsAssessmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: termdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.termdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TermDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TermDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TermDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.termdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAParticipantDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAParticipantDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAParticipantDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartASchoolDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartASchoolDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartASchoolDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TribalAffiliationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TribalAffiliationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TribalAffiliationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() OWNER TO postgres;

--
-- Name: visadescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.visadescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.VisaDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.VisaDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.VisaDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.visadescriptor_deleted() OWNER TO postgres;

--
-- Name: weapondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.weapondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.WeaponDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.WeaponDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.WeaponDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.weapondescriptor_deleted() OWNER TO postgres;

--
-- Name: accreditationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccreditationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AccreditationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccreditationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: aidtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AidTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AidTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AidTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: candidate_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_tpdm.candidate(
        oldcandidateidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.candidateidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidate_deleted() OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.candidateeducatorpreparationprogramassociation(
        oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.candidateidentifier, OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() OWNER TO postgres;

--
-- Name: certificationroutedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CertificationRouteDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CertificationRouteDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CertificationRouteDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() OWNER TO postgres;

--
-- Name: coteachingstyleobserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CoteachingStyleObservedDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CoteachingStyleObservedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CoteachingStyleObservedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CredentialStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: educatorpreparationprogram_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.educatorpreparationprogram(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() OWNER TO postgres;

--
-- Name: educatorroledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducatorRoleDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EducatorRoleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducatorRoleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() OWNER TO postgres;

--
-- Name: englishlanguageexamdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EnglishLanguageExamDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EnglishLanguageExamDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EnglishLanguageExamDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() OWNER TO postgres;

--
-- Name: eppprogrampathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EPPProgramPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EPPProgramPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EPPProgramPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluation_deleted() OWNER TO postgres;

--
-- Name: evaluationelement_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelement_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelement(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelement_deleted() OWNER TO postgres;

--
-- Name: evaluationelementrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelementrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() OWNER TO postgres;

--
-- Name: evaluationelementratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationElementRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationElementRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationElementRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjective(
        oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() OWNER TO postgres;

--
-- Name: evaluationobjectiverating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjectiverating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() OWNER TO postgres;

--
-- Name: evaluationperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationrating_deleted() OWNER TO postgres;

--
-- Name: evaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationratingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: financialaid_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.financialaid_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.aidtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_tpdm.financialaid(
        oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.aidtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.begindate, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.financialaid_deleted() OWNER TO postgres;

--
-- Name: genderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GenderDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.GenderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GenderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() OWNER TO postgres;

--
-- Name: objectiveratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ObjectiveRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.ObjectiveRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ObjectiveRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluationrating(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: rubricdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.rubricdimension(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.rubricrating, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricdimension_deleted() OWNER TO postgres;

--
-- Name: rubricratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RubricRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.RubricRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RubricRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveyresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveysectionresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '7.1';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

--
-- Name: getedfistandardversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfistandardversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '5.0';
END;
$$;


ALTER FUNCTION util.getedfistandardversion() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: educationorganizationidtoeducationorganizationid; Type: TABLE; Schema: auth; Owner: postgres
--

CREATE TABLE auth.educationorganizationidtoeducationorganizationid (
    sourceeducationorganizationid bigint NOT NULL,
    targeteducationorganizationid bigint NOT NULL
);


ALTER TABLE auth.educationorganizationidtoeducationorganizationid OWNER TO postgres;

--
-- Name: changeversionsequence; Type: SEQUENCE; Schema: changes; Owner: postgres
--

CREATE SEQUENCE changes.changeversionsequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE changes.changeversionsequence OWNER TO postgres;

--
-- Name: studentcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcontactassociation (
    contactusi integer NOT NULL,
    studentusi integer NOT NULL,
    contactpriority integer,
    contactrestrictions character varying(250),
    emergencycontactstatus boolean,
    legalguardian boolean,
    liveswith boolean,
    primarycontactstatus boolean,
    relationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcontactassociation OWNER TO postgres;

--
-- Name: TABLE studentcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcontactassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentcontactassociation.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN studentcontactassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcontactassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentcontactassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: COLUMN studentcontactassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the student.';


--
-- Name: COLUMN studentcontactassociation.legalguardian; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.legalguardian IS 'Indicator of whether the person is a legal guardian for the student.';


--
-- Name: COLUMN studentcontactassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.liveswith IS 'Indicator of whether the student lives with the associated contact.';


--
-- Name: COLUMN studentcontactassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.primarycontactstatus IS 'Indicator of whether the person is a primary contact for the student.';


--
-- Name: COLUMN studentcontactassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student, primarily used to capture family relationships.';


--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    calendarcode character varying(60),
    classofschoolyear smallint,
    educationorganizationid bigint,
    employedwhileenrolled boolean,
    enrollmenttypedescriptorid integer,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    fulltimeequivalency numeric(5,4),
    graduationplantypedescriptorid integer,
    graduationschoolyear smallint,
    nextyeargradeleveldescriptorid integer,
    nextyearschoolid bigint,
    primaryschool boolean,
    repeatgradeindicator boolean,
    residencystatusdescriptorid integer,
    schoolchoice boolean,
    schoolchoicebasisdescriptorid integer,
    schoolchoicetransfer boolean,
    schoolyear smallint,
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected high school graduation year.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.enrollmenttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.enrollmenttypedescriptorid IS 'The type of enrollment reflected by the StudentSchoolAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.nextyeargradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.nextyeargradeleveldescriptorid IS 'The anticipated grade level for the student for the next school year.';


--
-- Name: COLUMN studentschoolassociation.nextyearschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.nextyearschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.schoolchoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoice IS 'An indication of whether the student enrolled in this school under the provisions for public school choice';


--
-- Name: COLUMN studentschoolassociation.schoolchoicebasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicebasisdescriptorid IS 'The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: educationorganizationidtocontactusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocontactusi AS
 SELECT edorgs.sourceeducationorganizationid,
    spa.contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN edfi.studentcontactassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY edorgs.sourceeducationorganizationid, spa.contactusi;


ALTER TABLE auth.educationorganizationidtocontactusi OWNER TO postgres;

--
-- Name: studentcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcontactassociation (
    oldcontactusi integer NOT NULL,
    oldcontactuniqueid character varying(32) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newcontactusi integer,
    newcontactuniqueid character varying(32),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcontactassociation OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolassociation (
    oldentrydate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newentrydate date,
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: educationorganizationidtocontactusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocontactusiincludingdeletes AS
 SELECT educationorganizationidtocontactusi.sourceeducationorganizationid,
    educationorganizationidtocontactusi.contactusi
   FROM auth.educationorganizationidtocontactusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldcontactusi AS contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN tracked_changes_edfi.studentcontactassociation spa_tc ON ((ssa.studentusi = spa_tc.oldstudentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa.contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN edfi.studentcontactassociation spa ON ((ssa_tc.oldstudentusi = spa.studentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldcontactusi AS contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN tracked_changes_edfi.studentcontactassociation spa_tc ON ((ssa_tc.oldstudentusi = spa_tc.oldstudentusi)));


ALTER TABLE auth.educationorganizationidtocontactusiincludingdeletes OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    credentialidentifier character varying(60),
    employmenteducationorganizationid bigint,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    enddate date,
    fulltimeequivalency numeric(5,4),
    orderofassignment integer,
    positiontitle character varying(100),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid bigint NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    annualwage money,
    credentialidentifier character varying(60),
    department character varying(60),
    enddate date,
    fulltimeequivalency numeric(5,4),
    hourlywage money,
    offerdate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.annualwage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.annualwage IS 'Annual wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT edorgs.sourceeducationorganizationid,
    seo_assign.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assign ON ((edorgs.targeteducationorganizationid = seo_assign.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seo_empl.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((edorgs.targeteducationorganizationid = seo_empl.educationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffclassificationdescriptorid integer NOT NULL,
    oldstaffclassificationdescriptornamespace character varying(255) NOT NULL,
    oldstaffclassificationdescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newstaffclassificationdescriptorid integer,
    newstaffclassificationdescriptornamespace character varying(255),
    newstaffclassificationdescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldemploymentstatusdescriptorid integer NOT NULL,
    oldemploymentstatusdescriptornamespace character varying(255) NOT NULL,
    oldemploymentstatusdescriptorcodevalue character varying(50) NOT NULL,
    oldhiredate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newemploymentstatusdescriptorid integer,
    newemploymentstatusdescriptornamespace character varying(255),
    newemploymentstatusdescriptorcodevalue character varying(50),
    newhiredate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostaffusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusiincludingdeletes AS
 SELECT edorgtostaff.sourceeducationorganizationid,
    edorgtostaff.staffusi
   FROM auth.educationorganizationidtostaffusi edorgtostaff
UNION
 SELECT edorgs.sourceeducationorganizationid,
    emp_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationemploymentassociation emp_tc ON ((edorgs.targeteducationorganizationid = emp_tc.oldeducationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    assgn_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationassignmentassociation assgn_tc ON ((edorgs.targeteducationorganizationid = assgn_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusiincludingdeletes OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    ssa.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
  GROUP BY edorgs.sourceeducationorganizationid, ssa.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusiincludingdeletes AS
 SELECT educationorganizationidtostudentusi.sourceeducationorganizationid,
    educationorganizationidtostudentusi.studentusi
   FROM auth.educationorganizationidtostudentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    ssa_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)));


ALTER TABLE auth.educationorganizationidtostudentusiincludingdeletes OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldresponsibilitydescriptorid integer NOT NULL,
    oldresponsibilitydescriptornamespace character varying(255) NOT NULL,
    oldresponsibilitydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newresponsibilitydescriptorid integer,
    newresponsibilitydescriptornamespace character varying(255),
    newresponsibilitydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusithroughdeletedresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughdeletedresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seora_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studenteducationorganizationresponsibilityassociation seora_tc ON ((edorgs.targeteducationorganizationid = seora_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostudentusithroughdeletedresponsibility OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusithroughresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
  GROUP BY edorgs.sourceeducationorganizationid, seora.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusithroughresponsibility OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid bigint NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid bigint NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating.';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the accountability rating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the accountability rating (e.g., NCLB, AEIS).';


--
-- Name: accounttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accounttypedescriptor (
    accounttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.accounttypedescriptor OWNER TO postgres;

--
-- Name: TABLE accounttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accounttypedescriptor IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN accounttypedescriptor.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accounttypedescriptor.accounttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL
);


ALTER TABLE edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: TABLE ancestryethnicorigindescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ancestryethnicorigindescriptor IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    adaptiveassessment boolean,
    assessmentcategorydescriptorid integer,
    assessmentfamily character varying(60),
    assessmentform character varying(60),
    assessmenttitle character varying(255) NOT NULL,
    assessmentversion integer,
    educationorganizationid bigint,
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    revisiondate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The assessment family this assessment is a member of.';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the assessment.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid bigint,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    assessmentitemuri character varying(255),
    expectedtimeassessed character varying(30),
    itemtext character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the assessment item.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for assessment item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'Learning standard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    correctresponse boolean,
    responsedescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer,
    identificationcode character varying(60),
    maximumscore character varying(35) NOT NULL,
    minimumscore character varying(35) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandard IS 'Score ranges of an assessment associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid IS 'The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).';


--
-- Name: COLUMN assessmentscorerangelearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.maximumscore IS 'The maximum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.minimumscore IS 'The minimum score in the score range.';


--
-- Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandardlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandardlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandardlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandardlearningstandard IS 'Learning standard associated with the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: assignmentlatestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assignmentlatestatusdescriptor (
    assignmentlatestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assignmentlatestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE assignmentlatestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assignmentlatestatusdescriptor IS 'Status of whether the assignment was submitted after the due date and/or marked as late.';


--
-- Name: COLUMN assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: balancesheetdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: TABLE balancesheetdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimension IS 'The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.';


--
-- Name: COLUMN balancesheetdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.codename IS 'A description of the account balance sheet dimension.';


--
-- Name: balancesheetdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.balancesheetdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE balancesheetdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE barriertointernetaccessinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.barriertointernetaccessinresidencedescriptor IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    alternatedayname character varying(20),
    endtime time without time zone,
    starttime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    date date NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the bell schedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the bell schedule applies.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the grade level associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the grade level associated with the calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: chartofaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    accounttypedescriptorid integer NOT NULL,
    balancesheetcode character varying(16),
    functioncode character varying(16),
    fundcode character varying(16),
    objectcode character varying(16),
    operationalunitcode character varying(16),
    programcode character varying(16),
    projectcode character varying(16),
    sourcecode character varying(16),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.chartofaccount OWNER TO postgres;

--
-- Name: TABLE chartofaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccount IS 'A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN chartofaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN chartofaccount.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accounttypedescriptorid IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN chartofaccount.balancesheetcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.balancesheetcode IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN chartofaccount.functioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.functioncode IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN chartofaccount.fundcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fundcode IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN chartofaccount.objectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.objectcode IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN chartofaccount.operationalunitcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.operationalunitcode IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN chartofaccount.programcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.programcode IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN chartofaccount.projectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.projectcode IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN chartofaccount.sourcecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.sourcecode IS 'The code representation of the account source dimension.';


--
-- Name: chartofaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.chartofaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE chartofaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    academicsubjectdescriptorid integer,
    cohortdescription character varying(1024),
    cohortscopedescriptorid integer,
    cohorttypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the cohort and its purpose.';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid bigint NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid bigint NOT NULL,
    communityorganizationid bigint,
    licenseexemptindicator boolean,
    providercategorydescriptorid integer NOT NULL,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    schoolindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid bigint NOT NULL,
    licenseidentifier character varying(36) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    authorizedfacilitycapacity integer,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the community provider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the competency objective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.';


--
-- Name: contact; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contact (
    contactusi integer NOT NULL,
    contactuniqueid character varying(32) NOT NULL,
    firstname character varying(75) NOT NULL,
    genderidentity character varying(60),
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.contact OWNER TO postgres;

--
-- Name: TABLE contact; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contact IS 'This entity represents a contact of a student, such as a parent, guardian or caretaker.';


--
-- Name: COLUMN contact.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contact.contactuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.contactuniqueid IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contact.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN contact.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.genderidentity IS 'The gender the contact identifies themselves as.';


--
-- Name: COLUMN contact.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN contact.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN contact.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN contact.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN contact.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN contact.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN contact.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN contact.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN contact.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN contact.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN contact.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.sexdescriptorid IS 'A person''s birth sex.';


--
-- Name: COLUMN contact.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: contact_contactusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.contact_contactusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.contact_contactusi_seq OWNER TO postgres;

--
-- Name: contact_contactusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.contact_contactusi_seq OWNED BY edfi.contact.contactusi;


--
-- Name: contactaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactaddress (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactaddress OWNER TO postgres;

--
-- Name: TABLE contactaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactaddress IS 'Contact''s address, if different from the student address.';


--
-- Name: COLUMN contactaddress.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN contactaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN contactaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN contactaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN contactaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN contactaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN contactaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN contactaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN contactaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN contactaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN contactaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN contactaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN contactaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: contactaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactaddressperiod (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactaddressperiod OWNER TO postgres;

--
-- Name: TABLE contactaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN contactaddressperiod.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN contactaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN contactaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN contactaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN contactaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN contactaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: contactelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactelectronicmail (
    contactusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactelectronicmail OWNER TO postgres;

--
-- Name: TABLE contactelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN contactelectronicmail.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN contactelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN contactelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN contactelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: contactinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactinternationaladdress (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactinternationaladdress OWNER TO postgres;

--
-- Name: TABLE contactinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN contactinternationaladdress.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN contactinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN contactinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN contactinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN contactinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN contactinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: contactlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactlanguage (
    contactusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactlanguage OWNER TO postgres;

--
-- Name: TABLE contactlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN contactlanguage.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguage.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: contactlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactlanguageuse (
    contactusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactlanguageuse OWNER TO postgres;

--
-- Name: TABLE contactlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN contactlanguageuse.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN contactlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: contactothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactothername (
    contactusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactothername OWNER TO postgres;

--
-- Name: TABLE contactothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN contactothername.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN contactothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN contactothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN contactothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN contactothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN contactothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: contactpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactpersonalidentificationdocument (
    contactusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE contactpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN contactpersonalidentificationdocument.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN contactpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN contactpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN contactpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: contacttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttelephone (
    contactusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contacttelephone OWNER TO postgres;

--
-- Name: TABLE contacttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN contacttelephone.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contacttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN contacttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN contacttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN contacttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN contacttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    careerpathwaydescriptorid integer,
    coursedefinedbydescriptorid integer,
    coursedescription character varying(1024),
    coursegpaapplicabilitydescriptorid integer,
    coursetitle character varying(60) NOT NULL,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    maxcompletionsforcredit integer,
    maximumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    numberofparts integer NOT NULL,
    timerequiredforcompletion integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s grade point average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: courseacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseacademicsubject (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseacademicsubject OWNER TO postgres;

--
-- Name: TABLE courseacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseacademicsubject IS 'The intended major subject/s area of the course.';


--
-- Name: COLUMN courseacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.academicsubjectdescriptorid IS 'The intended major subject/s area of the course.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    instructionaltimeplanned integer,
    localcoursetitle character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the course title.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    curriculumuseddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    alternativecoursetitle character varying(60),
    assigningorganizationidentificationcode character varying(60),
    attemptedcreditconversion numeric(9,2),
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    coursecatalogurl character varying(255),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    earnedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3),
    earnedcredittypedescriptorid integer,
    externaleducationorganizationid bigint,
    externaleducationorganizationnameofinstitution character varying(75),
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    methodcreditearneddescriptorid integer,
    responsibleteacherstaffusi integer,
    whentakengradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationnameofinstitution IS 'Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscript.responsibleteacherstaffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.responsibleteacherstaffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: coursetranscriptcourseprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcourseprogram (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    courseprogramname character varying(60) NOT NULL,
    courseprogramtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcourseprogram OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcourseprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcourseprogram IS 'The program(s) that the student participated in the context of the course.';


--
-- Name: COLUMN coursetranscriptcourseprogram.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptcourseprogram.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcourseprogram.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcourseprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcourseprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcourseprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcourseprogram.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptcourseprogram.courseprogramname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.courseprogramname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN coursetranscriptcourseprogram.courseprogramtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcourseprogram.courseprogramtypedescriptorid IS 'The type of program.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    additionalcredittypedescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptpartialcoursetranscriptawards (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    awarddate date NOT NULL,
    earnedcredits numeric(9,3) NOT NULL,
    lettergradeearned character varying(20),
    methodcreditearneddescriptorid integer,
    numericgradeearned character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptpartialcoursetranscriptawards OWNER TO postgres;

--
-- Name: TABLE coursetranscriptpartialcoursetranscriptawards; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptpartialcoursetranscriptawards IS 'A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.awarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.awarddate IS 'The date the partial credits and/or grades were awarded or earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.earnedcredits IS 'The number of credits a student earned for completing a given course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.lettergradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.numericgradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: coursetranscriptsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptsection (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptsection OWNER TO postgres;

--
-- Name: TABLE coursetranscriptsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptsection IS 'The section(s) associated with the course transcript.';


--
-- Name: COLUMN coursetranscriptsection.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptsection.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptsection.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptsection.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN coursetranscriptsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN coursetranscriptsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialfielddescriptorid integer,
    credentialtypedescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    issuancedate date NOT NULL,
    namespace character varying(255) NOT NULL,
    teachingcredentialbasisdescriptorid integer,
    teachingcredentialdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the credential.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialendorsement character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    discriminator character varying(128),
    uri character varying(306) GENERATED ALWAYS AS ((((namespace)::text || '#'::text) || (codevalue)::text)) STORED,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: descriptormapping; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormapping (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptormapping OWNER TO postgres;

--
-- Name: TABLE descriptormapping; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormapping IS 'A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.';


--
-- Name: COLUMN descriptormapping.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormapping.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormapping.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormapping.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: descriptormappingmodelentity; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormappingmodelentity (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    modelentitydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.descriptormappingmodelentity OWNER TO postgres;

--
-- Name: TABLE descriptormappingmodelentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormappingmodelentity IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: COLUMN descriptormappingmodelentity.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.modelentitydescriptorid IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    actualdisciplineactionlength numeric(5,2),
    assignmentschoolid bigint,
    disciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    iepplacementmeetingindicator boolean,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the discipline action (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation IS 'A reference to the behavior(s) by the student that led or contributed to this specific action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    casenumber character varying(20),
    incidentcost money,
    incidentdate date NOT NULL,
    incidentdescription character varying(1024),
    incidentlocationdescriptorid integer,
    incidenttime time without time zone,
    reportedtolawenforcement boolean,
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the discipline incident occurred.';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the discipline incident occurred and whether or not it occurred on school.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff").';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the discipline incident by name.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    behaviordescriptorid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of an individual in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    additionalauthorsindicator boolean,
    contentclassdescriptorid integer,
    cost money,
    costratedescriptorid integer,
    description character varying(1024),
    interactivitystyledescriptorid integer,
    learningresourcemetadatauri character varying(255),
    learningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    publicationdate date,
    publicationyear smallint,
    publisher character varying(50),
    shortdescription character varying(75),
    timerequired character varying(30),
    userightsurl character varying(255),
    version character varying(10),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the education content.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the education content.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    contentidentifier character varying(225) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the education content.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid bigint NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    operationalstatusdescriptorid integer,
    shortnameofinstitution character varying(75),
    website character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the education organization.';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationassociationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationassociationtypedescriptor (
    educationorganizationassociationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationassociationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationassociationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationassociationtypedescriptor IS 'The type of education organization association being represented.';


--
-- Name: COLUMN educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationid bigint NOT NULL,
    educationorganizationcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid bigint NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicator (
    educationorganizationid bigint NOT NULL,
    indicatordescriptorid integer NOT NULL,
    designatedby character varying(60),
    indicatorgroupdescriptorid integer,
    indicatorleveldescriptorid integer,
    indicatorvalue character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicator OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicator IS 'An indicator or metric of an education organization.';


--
-- Name: COLUMN educationorganizationindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicator.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.designatedby IS 'The person, organization, or department that defined the metric.';


--
-- Name: COLUMN educationorganizationindicator.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorgroupdescriptorid IS 'The name for a group of indicators.';


--
-- Name: COLUMN educationorganizationindicator.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorleveldescriptorid IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorvalue IS 'The value of the indicator or metric. The semantics of an empty value is "not submitted."';


--
-- Name: educationorganizationindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicatorperiod (
    educationorganizationid bigint NOT NULL,
    indicatordescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicatorperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicatorperiod IS 'The time period or as-of date for the indicator.';


--
-- Name: COLUMN educationorganizationindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicatorperiod.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid bigint NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid bigint NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the intervention prescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the intervention prescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid bigint NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid bigint NOT NULL,
    membereducationorganizationid bigint NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the education organization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the education organization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the education organization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid bigint NOT NULL,
    peereducationorganizationid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid bigint NOT NULL,
    stateeducationagencyid bigint
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eligibilitydelayreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eligibilitydelayreasondescriptor (
    eligibilitydelayreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.eligibilitydelayreasondescriptor OWNER TO postgres;

--
-- Name: TABLE eligibilitydelayreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eligibilitydelayreasondescriptor IS 'The reason why the eligibility determination was completed beyond the required timeframe.';


--
-- Name: COLUMN eligibilitydelayreasondescriptor.eligibilitydelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eligibilitydelayreasondescriptor.eligibilitydelayreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eligibilityevaluationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eligibilityevaluationtypedescriptor (
    eligibilityevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eligibilityevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE eligibilityevaluationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eligibilityevaluationtypedescriptor IS 'Indicates if this is an initial evaluation or a reevaluation.';


--
-- Name: COLUMN eligibilityevaluationtypedescriptor.eligibilityevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eligibilityevaluationtypedescriptor.eligibilityevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: enrollmenttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.enrollmenttypedescriptor (
    enrollmenttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.enrollmenttypedescriptor OWNER TO postgres;

--
-- Name: TABLE enrollmenttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.enrollmenttypedescriptor IS 'The type of enrollment reflected by the StudentSchoolAssociation.';


--
-- Name: COLUMN enrollmenttypedescriptor.enrollmenttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.enrollmenttypedescriptor.enrollmenttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationdelayreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.evaluationdelayreasondescriptor (
    evaluationdelayreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.evaluationdelayreasondescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationdelayreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.evaluationdelayreasondescriptor IS 'Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe.';


--
-- Name: COLUMN evaluationdelayreasondescriptor.evaluationdelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationdelayreasondescriptor.evaluationdelayreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrubricdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.evaluationrubricdimension (
    evaluationrubricrating integer NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    evaluationcriteriondescription character varying(1024) NOT NULL,
    evaluationrubricratingleveldescriptorid integer,
    rubricdimensionsortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.evaluationrubricdimension OWNER TO postgres;

--
-- Name: TABLE evaluationrubricdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.evaluationrubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric evaluation level.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationrubricrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationrubricrating IS 'The numeric rating associated with the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN evaluationrubricdimension.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN evaluationrubricdimension.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationcriteriondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationcriteriondescription IS 'The evaluation criterion description for the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationrubricratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationrubricratingleveldescriptorid IS 'The rating level achieved for the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.rubricdimensionsortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.rubricdimensionsortorder IS 'The sort order of the rubric dimension.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid bigint NOT NULL,
    schoolid bigint NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: financialcollectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.financialcollectiondescriptor (
    financialcollectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.financialcollectiondescriptor OWNER TO postgres;

--
-- Name: TABLE financialcollectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.financialcollectiondescriptor IS 'The accounting period or grouping for which financial information is collected.';


--
-- Name: COLUMN financialcollectiondescriptor.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.financialcollectiondescriptor.financialcollectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: functiondimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.functiondimension OWNER TO postgres;

--
-- Name: TABLE functiondimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimension IS 'The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.';


--
-- Name: COLUMN functiondimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.codename IS 'A description of the account function dimension.';


--
-- Name: functiondimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.functiondimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE functiondimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN functiondimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: funddimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.funddimension OWNER TO postgres;

--
-- Name: TABLE funddimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimension IS 'The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.';


--
-- Name: COLUMN funddimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.codename IS 'A description of the account fund dimension.';


--
-- Name: funddimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.funddimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE funddimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN funddimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the student exited the program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the student left the program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationprogramparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date NOT NULL,
    designatedby character varying(60),
    statusenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationprogramparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationprogramparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationprogramparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    currentgradeasofdate date,
    currentgradeindicator boolean,
    diagnosticstatement character varying(1024),
    gradeearneddescription character varying(64),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.currentgradeasofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeasofdate IS 'As-Of date for a grade posted as the current grade.';


--
-- Name: COLUMN grade.currentgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeindicator IS 'An indicator that the posted grade is an interim grade for the grading period and not the final grade.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.gradeearneddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradeearneddescription IS 'A description of the grade earned by the learner.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    dateassigned date NOT NULL,
    description character varying(1024),
    duedate date,
    duetime time without time zone,
    gradebookentrytypedescriptorid integer,
    gradingperioddescriptorid integer,
    gradingperiodname character varying(60),
    localcoursecode character varying(60),
    maxpoints numeric(9,2),
    schoolid bigint,
    schoolyear smallint,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    sourcesectionidentifier character varying(255) NOT NULL,
    title character varying(100) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.duetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duetime IS 'The time the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.maxpoints; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.maxpoints IS 'The maximum number of points  that can be earned for the submission.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradebookentry.sourcesectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sourcesectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.title IS 'The name or title of the activity to be recorded in the gradebook entry.';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentrylearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    periodsequence integer,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the grading period.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the grading period.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the grading period.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the state''s name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcreditconversion numeric(9,2),
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the graduation plan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ideapartdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ideapartdescriptor (
    ideapartdescriptorid integer NOT NULL
);


ALTER TABLE edfi.ideapartdescriptor OWNER TO postgres;

--
-- Name: TABLE ideapartdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ideapartdescriptor IS 'Indicates if the evaluation is done under Part B IDEA or Part C IDEA.';


--
-- Name: COLUMN ideapartdescriptor.ideapartdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ideapartdescriptor.ideapartdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: TABLE indicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatordescriptor IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN indicatordescriptor.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatordescriptor.indicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorgroupdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorgroupdescriptor IS 'The name for a group of indicators.';


--
-- Name: COLUMN indicatorgroupdescriptor.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorgroupdescriptor.indicatorgroupdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorleveldescriptor IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN indicatorleveldescriptor.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorleveldescriptor.indicatorleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccesstypeinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccesstypeinresidencedescriptor IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetperformanceinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetperformanceinresidencedescriptor IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    begindate date NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    enddate date,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the intervention.';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the intervention study per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    coursetitle character varying(60),
    description character varying(1024) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandarditemcode character varying(60),
    learningstandardscopedescriptorid integer,
    namespace character varying(255) NOT NULL,
    parentlearningstandardid character varying(60),
    successcriteria character varying(150),
    uri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official course title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    learningstandardid character varying(60) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the learning standard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the learning standard.';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid bigint,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the learning standard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    learningstandardid character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescription character varying(255),
    learningstandardequivalencestrengthdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is partial.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    learningstandardid character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    learningstandardid character varying(60) NOT NULL,
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    chartofaccountidentifier character varying(50) NOT NULL,
    chartofaccounteducationorganizationid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localaccount OWNER TO postgres;

--
-- Name: TABLE localaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccount IS 'The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN localaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN localaccount.chartofaccountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN localaccount.chartofaccounteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccounteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: localaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE localaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN localaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN localaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: localactual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localactual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localactual OWNER TO postgres;

--
-- Name: TABLE localactual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localactual IS 'The set of local education agency or charter management organization expense or revenue amounts.';


--
-- Name: COLUMN localactual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localactual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localactual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localactual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localactual.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localactual.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localbudget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localbudget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localbudget OWNER TO postgres;

--
-- Name: TABLE localbudget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localbudget IS 'The set of local education agency or charter management organization budget amounts.';


--
-- Name: COLUMN localbudget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localbudget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localbudget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localbudget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localbudget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localbudget.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localcontractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localcontractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: TABLE localcontractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localcontractedstaff IS 'The set of local education agency or charter management organization contracted staff amounts.';


--
-- Name: COLUMN localcontractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localcontractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localcontractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localcontractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localcontractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localcontractedstaff.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localcontractedstaff.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid bigint NOT NULL,
    charterstatusdescriptorid integer,
    educationservicecenterid bigint,
    localeducationagencycategorydescriptorid integer NOT NULL,
    parentlocaleducationagencyid bigint,
    stateeducationagencyid bigint
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    localeducationagencyid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    stateassessmentadministrationfunding numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: localencumbrance; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localencumbrance (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localencumbrance OWNER TO postgres;

--
-- Name: TABLE localencumbrance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localencumbrance IS 'The set of local education agency or charter management organization encumbrance amounts.';


--
-- Name: COLUMN localencumbrance.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localencumbrance.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localencumbrance.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localencumbrance.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localencumbrance.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localencumbrance.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localpayroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localpayroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localpayroll OWNER TO postgres;

--
-- Name: TABLE localpayroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localpayroll IS 'The set of local education agency or charter management organization payroll amounts.';


--
-- Name: COLUMN localpayroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localpayroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localpayroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localpayroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localpayroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localpayroll.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localpayroll.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: modelentitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.modelentitydescriptor (
    modelentitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.modelentitydescriptor OWNER TO postgres;

--
-- Name: TABLE modelentitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.modelentitydescriptor IS 'The class of a domain entity in the Ed-Fi data model.';


--
-- Name: COLUMN modelentitydescriptor.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.modelentitydescriptor.modelentitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectdimension OWNER TO postgres;

--
-- Name: TABLE objectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimension IS 'The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.';


--
-- Name: COLUMN objectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.codename IS 'A description of the account object dimension.';


--
-- Name: objectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE objectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN objectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer,
    description character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    parentidentificationcode character varying(60),
    percentofassessment numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the objective assessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of objective assessment.';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the assessment that tests this objective.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'Learning standard tested by this objective assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    dateposted date NOT NULL,
    datepostingremoved date,
    employmentstatusdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    postingresultdescriptorid integer,
    programassignmentdescriptorid integer,
    staffclassificationdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the open staff position was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the open staff position will be assigned.';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the open staff position.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the open staff position.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: operationalunitdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: TABLE operationalunitdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimension IS 'The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN operationalunitdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.codename IS 'A description of the account operational unit dimension.';


--
-- Name: operationalunitdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.operationalunitdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE operationalunitdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: organizationdepartment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.organizationdepartment (
    organizationdepartmentid bigint NOT NULL,
    academicsubjectdescriptorid integer,
    parenteducationorganizationid bigint
);


ALTER TABLE edfi.organizationdepartment OWNER TO postgres;

--
-- Name: TABLE organizationdepartment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.organizationdepartment IS 'An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.';


--
-- Name: COLUMN organizationdepartment.organizationdepartmentid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.organizationdepartmentid IS 'The unique identification code for the organization department.';


--
-- Name: COLUMN organizationdepartment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.academicsubjectdescriptorid IS 'The intended major subject area of the department.';


--
-- Name: COLUMN organizationdepartment.parenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.parenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: person; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.person OWNER TO postgres;

--
-- Name: TABLE person; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.person IS 'This entity represents a human being.';


--
-- Name: COLUMN person.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN person.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid bigint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The post secondary event that is logged.';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid bigint NOT NULL,
    administrativefundingcontroldescriptorid integer,
    postsecondaryinstitutionleveldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of a postsecondary institution''s highest level of offering. Default values are based on the Carnegie Classifications.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    postsecondaryinstitutionid bigint NOT NULL,
    mediumofinstructiondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceaccessdescriptor IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceawayfromschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceawayfromschooldescriptor IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceproviderdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceproviderdescriptor IS 'The provider of the primary learning device.';


--
-- Name: COLUMN primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programdimension OWNER TO postgres;

--
-- Name: TABLE programdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimension IS 'The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.';


--
-- Name: COLUMN programdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.codename IS 'A description of the account program dimension.';


--
-- Name: programdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE programdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN programdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: programevaluation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluation (
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    evaluationmaxnumericrating numeric(6,3),
    evaluationminnumericrating numeric(6,3),
    programevaluationdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluation OWNER TO postgres;

--
-- Name: TABLE programevaluation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluation IS 'An evaluation instrument applied to evaluate a student in the context of a program. Student evaluations are typically applied by a staff member based upon a rubric.';


--
-- Name: COLUMN programevaluation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluation.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluation.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluation.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluation.evaluationmaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.evaluationmaxnumericrating IS 'The maximum summary numerical rating or score for the program evaluation.';


--
-- Name: COLUMN programevaluation.evaluationminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.evaluationminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0';


--
-- Name: COLUMN programevaluation.programevaluationdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationdescription IS 'The long description of the program evaluation.';


--
-- Name: programevaluationelement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationelement (
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    elementmaxnumericrating numeric(6,3),
    elementminnumericrating numeric(6,3),
    elementsortorder integer,
    programevaluationelementdescription character varying(255),
    programevaluationobjectivetitle character varying(50),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluationelement OWNER TO postgres;

--
-- Name: TABLE programevaluationelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationelement IS 'The lowest level elements or criterion of a students''s performance that is being evaluated, typically by a rubric.';


--
-- Name: COLUMN programevaluationelement.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationelement.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationelement.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationelement.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationelement.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationelement.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationelement.elementmaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementmaxnumericrating IS 'The maximum summary numerical rating or score for the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.elementminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN programevaluationelement.elementsortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementsortorder IS 'The sort order of this program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationelementdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationelementdescription IS 'The long description of the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: programevaluationelementprogramevaluationlevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationelementprogramevaluationlevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationelementprogramevaluationlevel OWNER TO postgres;

--
-- Name: TABLE programevaluationelementprogramevaluationlevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationelementprogramevaluationlevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation element.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationelementprogramevaluationlevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementprogramevaluationlevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationlevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationlevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationlevel OWNER TO postgres;

--
-- Name: TABLE programevaluationlevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationlevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation.';


--
-- Name: COLUMN programevaluationlevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationlevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationlevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationlevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationlevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationlevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationlevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationlevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationlevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationlevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationobjective (
    programeducationorganizationid bigint NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    objectivemaxnumericrating numeric(6,3),
    objectiveminnumericrating numeric(6,3),
    objectivesortorder integer,
    programevaluationobjectivedescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluationobjective OWNER TO postgres;

--
-- Name: TABLE programevaluationobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationobjective IS 'A subcomponent of a ProgramEvaluation, a specific student objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN programevaluationobjective.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationobjective.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationobjective.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationobjective.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationobjective.objectivemaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectivemaxnumericrating IS 'The maximum summary numerical rating or score for the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.objectiveminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectiveminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0';


--
-- Name: COLUMN programevaluationobjective.objectivesortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectivesortorder IS 'The sort order of this program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.programevaluationobjectivedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationobjectivedescription IS 'The long description of the program evaluation objective.';


--
-- Name: programevaluationobjectiveprogramevaluationlevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationobjectiveprogramevaluationlevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationobjectiveprogramevaluationlevel OWNER TO postgres;

--
-- Name: TABLE programevaluationobjectiveprogramevaluationlevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationobjectiveprogramevaluationlevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationobjectiveprogramevaluationlevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveprogramevaluationlevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationperioddescriptor (
    programevaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.programevaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE programevaluationperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN programevaluationperioddescriptor.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationperioddescriptor.programevaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programevaluationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationtypedescriptor (
    programevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programevaluationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationtypedescriptor IS 'The type of the evaluation.';


--
-- Name: COLUMN programevaluationtypedescriptor.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationtypedescriptor.programevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'Learning standard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: projectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.projectdimension OWNER TO postgres;

--
-- Name: TABLE projectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimension IS 'The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.';


--
-- Name: COLUMN projectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.codename IS 'A description of the account project dimension.';


--
-- Name: projectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.projectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE projectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN projectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: questionformdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL
);


ALTER TABLE edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: TABLE questionformdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.questionformdescriptor IS 'The form or type of question.';


--
-- Name: COLUMN questionformdescriptor.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.questionformdescriptor.questionformdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ratingleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ratingleveldescriptor (
    ratingleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.ratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE ratingleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ratingleveldescriptor IS 'The descriptive level(s) of ratings (cut scores) for evaluation.';


--
-- Name: COLUMN ratingleveldescriptor.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ratingleveldescriptor.ratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested.';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the student for this grading period.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportingtagdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportingtagdescriptor (
    reportingtagdescriptorid integer NOT NULL
);


ALTER TABLE edfi.reportingtagdescriptor OWNER TO postgres;

--
-- Name: TABLE reportingtagdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportingtagdescriptor IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN reportingtagdescriptor.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportingtagdescriptor.reportingtagdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationalenvironmentdescriptorid integer,
    eventdate date NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the restraint event.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the restraint event.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid bigint NOT NULL,
    administrativefundingcontroldescriptorid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint,
    charterstatusdescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid bigint,
    magnetspecialprogramemphasisschooldescriptorid integer,
    schooltypedescriptorid integer,
    titleipartaschooldesignationdescriptorid integer
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolid bigint NOT NULL,
    schoolcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoicebasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoicebasisdescriptor (
    schoolchoicebasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoicebasisdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoicebasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoicebasisdescriptor IS 'The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state).';


--
-- Name: COLUMN schoolchoicebasisdescriptor.schoolchoicebasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoicebasisdescriptor.schoolchoicebasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    schoolid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus such as Alternative, Career and Technical Education, Regular, or Special Education schools.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    availablecreditconversion numeric(9,2),
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    educationalenvironmentdescriptorid integer,
    instructionlanguagedescriptorid integer,
    locationclassroomidentificationcode character varying(60),
    locationschoolid bigint,
    mediumofinstructiondescriptorid integer,
    officialattendanceperiod boolean,
    populationserveddescriptorid integer,
    sectionname character varying(100),
    sectiontypedescriptorid integer,
    sequenceofcourse integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a student receives education and related services.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction. If omitted, English is assumed.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the section is offered and tailored to.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.';


--
-- Name: COLUMN section.sectiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectiontypedescriptorid IS 'Specifies whether the section is for attendance only, credit only, or both.';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the section attendance taken event was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the section meets.';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program to which the section is associated.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: sectiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectiontypedescriptor (
    sectiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE sectiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectiontypedescriptor IS 'Specifies whether the section is for attendance only, credit only, or both.';


--
-- Name: COLUMN sectiontypedescriptor.sectiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectiontypedescriptor.sectiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A specific designated unit of time during which instruction is provided, grades are reported and academic credits are awarded to students (whenever applicable). Sessions serve as organized segments of the academic year and can be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'A descriptor value to indicate the term that the session is associated with.';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s birth sex.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sourcedimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sourcedimension OWNER TO postgres;

--
-- Name: TABLE sourcedimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimension IS 'The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN sourcedimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.codename IS 'A description of the account source dimension.';


--
-- Name: sourcedimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sourcedimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE sourcedimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN sourcedimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: TABLE sourcesystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcesystemdescriptor IS 'This descriptor defines the originating record source system.';


--
-- Name: COLUMN sourcesystemdescriptor.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcesystemdescriptor.sourcesystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationexitreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationexitreasondescriptor (
    specialeducationexitreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationexitreasondescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationexitreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationexitreasondescriptor IS 'The reason why a person stops receiving special education services.';


--
-- Name: COLUMN specialeducationexitreasondescriptor.specialeducationexitreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationexitreasondescriptor.specialeducationexitreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    birthdate date,
    citizenshipstatusdescriptorid integer,
    firstname character varying(75) NOT NULL,
    genderidentity character varying(60),
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    highlyqualifiedteacher boolean,
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    staffuniqueid character varying(32) NOT NULL,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.genderidentity IS 'The gender the staff member identifies themselves as.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN staff.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN staff.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN staff.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'The birth sex of the staff member.';


--
-- Name: COLUMN staff.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffancestryethnicorigin (
    staffusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE staffancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    staffusi integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the education organization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    staffusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffusi integer NOT NULL,
    staffidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    staffusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    staffusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    staffusi integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the school(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    classroompositiondescriptorid integer NOT NULL,
    enddate date,
    highlyqualifiedteacher boolean,
    percentagecontribution numeric(5,4),
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the section.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the staff member holds in the specific class/section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid bigint NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    stateeducationagencyid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    stateeducationagencyid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    dateenteredus date,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sourcesystemdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s sex at birth.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN student.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN student.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN student.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN student.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    projectedgraduationdate date,
    sessionattemptedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academichonorcategorydescriptorid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    honorawarddate date,
    honorawardexpiresdate date,
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the honor expires.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    classrankingdate date,
    percentageranking integer,
    totalnumberinclass integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    ctecompleter boolean,
    diplomaawardexpiresdate date,
    diplomadescription character varying(80),
    diplomaleveldescriptorid integer,
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the diploma expires.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of the diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    administrationenvironmentdescriptorid integer,
    administrationlanguagedescriptorid integer,
    assessedminutes integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    platformtypedescriptorid integer,
    reasonnottesteddescriptorid integer,
    reportedschoolid bigint,
    reportedschoolidentifier character varying(60),
    retestindicatordescriptorid integer,
    schoolyear smallint,
    serialnumber character varying(60),
    whenassessedgradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested.';


--
-- Name: COLUMN studentassessment.reportedschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentassessment.reportedschoolidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolidentifier IS 'A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was a retake.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    accommodationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmenteducationorganizationassociation (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationassociationtypedescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studentassessmenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmenteducationorganizationassociation IS 'The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid IS 'The type of association being represented.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.schoolyear IS 'The school year associated with the association..';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentitemresultdescriptorid integer NOT NULL,
    assessmentresponse character varying(255),
    descriptivefeedback character varying(1024),
    itemnumber integer,
    rawscoreresult numeric(15,5),
    responseindicatordescriptorid integer,
    timeassessed character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.itemnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.itemnumber IS 'The test question number for this student''s test item.';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of a student on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the assessment item.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the student assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperiod OWNER TO postgres;

--
-- Name: TABLE studentassessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN studentassessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperiod.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN studentassessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN studentassessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    assessedminutes integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The performance level(s) achieved for the objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the student was removed as part of the cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the student and program associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the student and section associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    cipcode character varying(120),
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the service(s) being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociation IS 'This association describes the behavior of students involved in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociation IS 'This association indicates those students who were involved and not perpetrators for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    barriertointernetaccessinresidencedescriptorid integer,
    genderidentity character varying(60),
    hispaniclatinoethnicity boolean,
    internetaccessinresidence boolean,
    internetaccesstypeinresidencedescriptorid integer,
    internetperformanceinresidencedescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    primarylearningdeviceaccessdescriptorid integer,
    primarylearningdeviceawayfromschooldescriptorid integer,
    primarylearningdeviceproviderdescriptorid integer,
    profilethumbnail character varying(255),
    sexdescriptorid integer,
    supportermilitaryconnectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.genderidentity IS 'The student''s gender as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccessinresidence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccessinresidence IS 'An indication of whether the student is able to access the internet in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetperformanceinresidencedescriptorid IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid IS 'The provider of the primary learning device.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s birth sex as reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.supportermilitaryconnectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.supportermilitaryconnectiondescriptorid IS 'Military connection of the person/people whom the student is a dependent of.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationancestryethnicorigin (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    designatedby character varying(60),
    indicator character varying(60) NOT NULL,
    indicatorgroup character varying(200),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'An indicator or metric computed for the student (e.g., at risk).';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    assignmentlatestatusdescriptorid integer,
    competencyleveldescriptorid integer,
    datefulfilled date,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    pointsearned numeric(9,2),
    submissionstatusdescriptorid integer,
    timefulfilled time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN studentgradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.assignmentlatestatusdescriptorid IS 'Status of whether the assignment was submitted after the due date and/or marked as.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.pointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.pointsearned IS 'The points earned for the submission. With extra credit, the points earned may exceed the max points.';


--
-- Name: COLUMN studentgradebookentry.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.submissionstatusdescriptorid IS 'The status of the student''s submission.';


--
-- Name: COLUMN studentgradebookentry.timefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.timefulfilled IS 'The time an assignment was turned in on the date fulfilled.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    awaitingfostercare boolean,
    homelessprimarynighttimeresidencedescriptorid integer,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(36),
    cohorteducationorganizationid bigint,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    dosage integer,
    englishlearnerparticipation boolean
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint NOT NULL,
    monitoreddescriptorid integer,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The school year for which the assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    continuationofservicesreasondescriptorid integer,
    eligibilityexpirationdate date,
    lastqualifyingmove date NOT NULL,
    priorityforservices boolean NOT NULL,
    qualifyingarrivaldate date,
    stateresidencydate date,
    usinitialentry date,
    usinitialschoolentry date,
    usmostrecententry date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The eligibility expiration date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states'' requirements), or if the child passes away.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the state''s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified state residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the student''s most recent entry into the U.S.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the service(s) being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer,
    neglectedordelinquentprogramdescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    studentusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentprogramevaluation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluation (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint,
    evaluationduration integer,
    staffevaluatorstaffusi integer,
    summaryevaluationcomment character varying(1024),
    summaryevaluationnumericrating numeric(6,3),
    summaryevaluationratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramevaluation OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluation IS 'The evaluation results for a student as evaluated in the context of a program.';


--
-- Name: COLUMN studentprogramevaluation.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluation.evaluationduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.evaluationduration IS 'The actual or estimated number of clock minutes during which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluation.staffevaluatorstaffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.staffevaluatorstaffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationcomment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationcomment IS 'Any comments about the summary evaluation to be captured.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationnumericrating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationratingleveldescriptorid IS 'The summary rating level achieved based upon the rating or score.';


--
-- Name: studentprogramevaluationexternalevaluator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationexternalevaluator (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    externalevaluator character varying(150) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationexternalevaluator OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationexternalevaluator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationexternalevaluator IS 'The external person(s) - not staff - that conducted the evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.externalevaluator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.externalevaluator IS 'The external person(s) - not staff - that conducted the evaluation.';


--
-- Name: studentprogramevaluationstudentevaluationelement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationstudentevaluationelement (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    evaluationelementnumericrating numeric(6,3),
    evaluationelementratingleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationstudentevaluationelement OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationstudentevaluationelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationstudentevaluationelement IS 'The student''s rating and/or rating levels earned for a program evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationelementnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationelementnumericrating IS 'The numerical rating or score for the evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score for the evaluation element.';


--
-- Name: studentprogramevaluationstudentevaluationobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationstudentevaluationobjective (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    evaluationobjectivenumericrating numeric(6,3),
    evaluationobjectiveratingleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationstudentevaluationobjective OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationstudentevaluationobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationstudentevaluationobjective IS 'The student''s rating and/or rating levels earned for a program evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationobjectivenumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationobjectivenumericrating IS 'The numerical rating or score for the evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationobjectiveratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationobjectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score for the evaluation objective.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    alternativeeducationorganizationid bigint NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationplandescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attemptstatusdescriptorid integer,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the student from the section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: studentsectionassociationprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociationprogram (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionassociationprogram OWNER TO postgres;

--
-- Name: TABLE studentsectionassociationprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociationprogram IS 'The program(s) that the student is participating in the context of the course.';


--
-- Name: COLUMN studentsectionassociationprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociationprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociationprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociationprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociationprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociationprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociationprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociationprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentsectionassociationprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentsectionassociationprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: studentsectionattendanceeventclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceeventclassperiod (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceeventclassperiod OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceeventclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceeventclassperiod IS 'The class period(s) to which the section attendance event applies.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    iepbegindate date,
    iependdate date,
    iepreviewdate date,
    lastevaluationdate date,
    medicallyfragile boolean,
    multiplydisabled boolean,
    schoolhoursperweek numeric(5,2),
    specialeducationexitdate date,
    specialeducationexitexplained character varying(1024),
    specialeducationexitreasondescriptorid integer,
    specialeducationhoursperweek numeric(5,2),
    specialeducationsettingdescriptorid integer
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationexitdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationexitdate IS 'The  month, day and year on which a person stops receiving special education services.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationexitexplained; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationexitexplained IS 'Explanation on why a person stops receiving special education services.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationexitreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationexitreasondescriptorid IS 'The reason why a person stops receiving special education services.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The staff providing special education services to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the service(s) being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The staff providing the service to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogrameligibilityassociation (
    consenttoevaluationreceiveddate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    consenttoevaluationdate date,
    eligibilityconferencedate date,
    eligibilitydelayreasondescriptorid integer,
    eligibilitydeterminationdate date,
    eligibilityevaluationdate date,
    eligibilityevaluationtypedescriptorid integer,
    evaluationcompleteindicator boolean,
    evaluationdelaydays integer,
    evaluationdelayreasondescriptorid integer,
    evaluationlatereason character varying(255),
    ideaindicator boolean,
    ideapartdescriptorid integer NOT NULL,
    originaleciservicesdate date,
    transitionconferencedate date,
    transitionnotificationdate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogrameligibilityassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogrameligibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogrameligibilityassociation IS 'Captures details regarding the evaluation process for eligibility of students for special education services under IDEA Part C or Part B.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.consenttoevaluationreceiveddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.consenttoevaluationreceiveddate IS 'Indicates the date on which the local education agency received written consent for the evaluation from the student''s parent or guardian. This is the first day of the evaluation timeframe.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.consenttoevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.consenttoevaluationdate IS 'The date on which the student''s parent gave a consent (Parent Consent Date).';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilityconferencedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilityconferencedate IS 'The month, day, and year when the eligibility conference is held between the parent(s)/guardian(s) and the educational organization responsible staff member(s) to review and make decision on special education related services eligibility.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilitydelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilitydelayreasondescriptorid IS 'The reason why the eligibility determination was completed beyond the required timeframe.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilitydeterminationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilitydeterminationdate IS 'Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child''s eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilityevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilityevaluationdate IS 'Indicates the month, day, and year when the written individual evaluation report was completed.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilityevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilityevaluationtypedescriptorid IS 'Indicates if this is an initial evaluation or a reevaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationcompleteindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationcompleteindicator IS 'Indicates the evaluation completed status.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationdelaydays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationdelaydays IS 'Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationdelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationdelayreasondescriptorid IS 'Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationlatereason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationlatereason IS 'Refers to additional information for delay in doing the evaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.ideaindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.ideaindicator IS 'Indicates whether or not the student was determined eligible as a result of an evaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.ideapartdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.ideapartdescriptorid IS 'Indicates if the evaluation is done under Part B IDEA or Part C IDEA.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.originaleciservicesdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.originaleciservicesdate IS 'The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.transitionconferencedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.transitionconferencedate IS 'Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child''s potential eligibility for early childhood special education (ECSE) services.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.transitionnotificationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.transitionnotificationdate IS 'Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the student by the Title I Part A program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: submissionstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.submissionstatusdescriptor (
    submissionstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.submissionstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE submissionstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.submissionstatusdescriptor IS 'The status of the student''s submission.';


--
-- Name: COLUMN submissionstatusdescriptor.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.submissionstatusdescriptor.submissionstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: supportermilitaryconnectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.supportermilitaryconnectiondescriptor (
    supportermilitaryconnectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.supportermilitaryconnectiondescriptor OWNER TO postgres;

--
-- Name: TABLE supportermilitaryconnectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.supportermilitaryconnectiondescriptor IS 'Military connection of the person/people whom the student is a dependent of.';


--
-- Name: COLUMN supportermilitaryconnectiondescriptor.supportermilitaryconnectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.supportermilitaryconnectiondescriptor.supportermilitaryconnectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: survey; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    educationorganizationid bigint,
    numberadministered integer,
    schoolid bigint,
    schoolyear smallint NOT NULL,
    sessionname character varying(60),
    surveycategorydescriptorid integer,
    surveytitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.survey OWNER TO postgres;

--
-- Name: TABLE survey; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.survey IS 'A survey to identified or anonymous respondents.';


--
-- Name: COLUMN survey.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN survey.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN survey.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN survey.numberadministered; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.numberadministered IS 'Number of persons to whom this survey was administered.';


--
-- Name: COLUMN survey.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN survey.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolyear IS 'The school year associated with the survey.';


--
-- Name: COLUMN survey.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN survey.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveycategorydescriptorid IS 'The category or type of survey.';


--
-- Name: COLUMN survey.surveytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveytitle IS 'The title of the survey.';


--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE surveycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycategorydescriptor IS 'The descriptor holds the category or type of survey.';


--
-- Name: COLUMN surveycategorydescriptor.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycategorydescriptor.surveycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveycourseassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: TABLE surveycourseassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycourseassociation IS 'The course associated with the survey.';


--
-- Name: COLUMN surveycourseassociation.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN surveycourseassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveycourseassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveycourseassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE surveyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyleveldescriptor IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyleveldescriptor.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyleveldescriptor.surveyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveyprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyprogramassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: TABLE surveyprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyprogramassociation IS 'The program associated with the survey.';


--
-- Name: COLUMN surveyprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN surveyprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN surveyprogramassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyquestion; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    questionformdescriptorid integer NOT NULL,
    questiontext character varying(1024) NOT NULL,
    surveysectiontitle character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestion OWNER TO postgres;

--
-- Name: TABLE surveyquestion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestion IS 'The questions for the survey.';


--
-- Name: COLUMN surveyquestion.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestion.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestion.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestion.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questionformdescriptorid IS 'The form or type of question.';


--
-- Name: COLUMN surveyquestion.questiontext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questiontext IS 'The text of the question.';


--
-- Name: COLUMN surveyquestion.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveyquestionmatrix; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionmatrix (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxrawscore integer,
    minrawscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionmatrix OWNER TO postgres;

--
-- Name: TABLE surveyquestionmatrix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionmatrix IS 'Information about the matrix element in the survey.';


--
-- Name: COLUMN surveyquestionmatrix.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionmatrix.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionmatrix.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.maxrawscore IS 'The maximum score possible on a survey.';


--
-- Name: COLUMN surveyquestionmatrix.minrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.minrawscore IS 'The minimum score possible on a survey.';


--
-- Name: surveyquestionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    comment character varying(1024),
    noresponse boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponse IS 'The response to a survey question.';


--
-- Name: COLUMN surveyquestionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponse.comment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.comment IS 'Additional information provided by the responder about the question in the survey.';


--
-- Name: COLUMN surveyquestionresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: surveyquestionresponsechoice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsechoice (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    sortorder integer NOT NULL,
    numericvalue integer,
    textvalue character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsechoice OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsechoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsechoice IS 'The optional list of possible responses to a survey question.';


--
-- Name: COLUMN surveyquestionresponsechoice.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsechoice.sortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.sortorder IS 'Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn''t apply, the value of NumericValue or a unique, possibly sequential numeric value.';


--
-- Name: COLUMN surveyquestionresponsechoice.numericvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.numericvalue IS 'A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.';


--
-- Name: COLUMN surveyquestionresponsechoice.textvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.textvalue IS 'A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.';


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxnumericresponse integer,
    minnumericresponse integer,
    noresponse boolean,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsesurveyquestionmatrixelementresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse IS 'For matrix questions, the response for each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse IS 'The maximum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse IS 'The minimum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse IS 'The numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse IS 'The text response(s) for the question.';


--
-- Name: surveyquestionresponsevalue; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsevalue (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyquestionresponsevalueidentifier integer NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsevalue OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsevalue IS 'For free-form, single- or multiple-selection questions, one or more responses.';


--
-- Name: COLUMN surveyquestionresponsevalue.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyquestionresponsevalueidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyquestionresponsevalueidentifier IS 'Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.';


--
-- Name: COLUMN surveyquestionresponsevalue.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.numericresponse IS 'A numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsevalue.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.textresponse IS 'A text response to the question.';


--
-- Name: surveyresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    contactusi integer,
    electronicmailaddress character varying(128),
    fullname character varying(80),
    location character varying(75),
    responsedate date NOT NULL,
    responsetime integer,
    staffusi integer,
    studentusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponse OWNER TO postgres;

--
-- Name: TABLE surveyresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponse IS 'Responses to a Survey for named or anonymous persons.';


--
-- Name: COLUMN surveyresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponse.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN surveyresponse.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.electronicmailaddress IS 'Email address of the respondent.';


--
-- Name: COLUMN surveyresponse.fullname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.fullname IS 'Full name of the respondent.';


--
-- Name: COLUMN surveyresponse.location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.location IS 'Location of the respondent, often a city, district, or school.';


--
-- Name: COLUMN surveyresponse.responsedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsedate IS 'Date of the survey response.';


--
-- Name: COLUMN surveyresponse.responsetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsetime IS 'The amount of time (in seconds) it took for the respondent to complete the survey.';


--
-- Name: COLUMN surveyresponse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponseeducationorganizationtargetassociation IS 'This association provides information about the survey being taken and the education organization the survey is about.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsestafftargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsesurveylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsesurveylevel (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyresponsesurveylevel OWNER TO postgres;

--
-- Name: TABLE surveyresponsesurveylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsesurveylevel IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyleveldescriptorid IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: surveysection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysection OWNER TO postgres;

--
-- Name: TABLE surveysection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysection IS 'The section of questions for the survey.';


--
-- Name: COLUMN surveysection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysection.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysection.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionassociation IS 'The section associated with the survey.';


--
-- Name: COLUMN surveysectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN surveysectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN surveysectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN surveysectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN surveysectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN surveysectionassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveysectionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    sectionrating numeric(9,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: TABLE surveysectionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponse IS 'Optional information about the responses provided for a section of a survey.';


--
-- Name: COLUMN surveysectionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponse.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: COLUMN surveysectionresponse.sectionrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.sectionrating IS 'Numeric rating computed from the survey responses for the section.';


--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponseeducationorganizationtargetassociation IS 'This association provides information about the survey section and the education organization the survey section is about.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponsestafftargetassociation IS 'This association provides information about the survey section and the staff the survey section is about.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'A distinct period of time into which the academic year is divided. These could be “semesters”, “trimesters” or “quarters”, depending on the school or district’s academic calendar.';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: accreditationstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.accreditationstatusdescriptor (
    accreditationstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.accreditationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE accreditationstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.accreditationstatusdescriptor IS 'Accreditation Status for a Teacher Preparation Provider.';


--
-- Name: COLUMN accreditationstatusdescriptor.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.accreditationstatusdescriptor.accreditationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: aidtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.aidtypedescriptor (
    aidtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.aidtypedescriptor OWNER TO postgres;

--
-- Name: TABLE aidtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.aidtypedescriptor IS 'This descriptor defines the classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN aidtypedescriptor.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.aidtypedescriptor.aidtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: candidate; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidate (
    candidateidentifier character varying(32) NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    dateenteredus date,
    displacementstatus character varying(30),
    economicdisadvantaged boolean,
    englishlanguageexamdescriptorid integer,
    firstgenerationstudent boolean,
    firstname character varying(75) NOT NULL,
    genderdescriptorid integer,
    generationcodesuffix character varying(10),
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    limitedenglishproficiencydescriptorid integer,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer NOT NULL,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidate OWNER TO postgres;

--
-- Name: TABLE candidate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidate IS 'A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.';


--
-- Name: COLUMN candidate.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidate.birthcity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN candidate.birthcountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidate.birthdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN candidate.birthinternationalprovince; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN candidate.birthsexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthsexdescriptorid IS 'A person''s sex at birth.';


--
-- Name: COLUMN candidate.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN candidate.dateenteredus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN candidate.displacementstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.displacementstatus IS 'Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.';


--
-- Name: COLUMN candidate.economicdisadvantaged; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.economicdisadvantaged IS 'An indication of inadequate financial condition of an individual''s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.';


--
-- Name: COLUMN candidate.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.englishlanguageexamdescriptorid IS 'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).';


--
-- Name: COLUMN candidate.firstgenerationstudent; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstgenerationstudent IS 'Indicator of whether individual is a first generation college student.';


--
-- Name: COLUMN candidate.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidate.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.genderdescriptorid IS 'The gender of the candidate.';


--
-- Name: COLUMN candidate.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidate.hispaniclatinoethnicity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN candidate.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidate.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN candidate.maidenname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN candidate.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidate.multiplebirthstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN candidate.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN candidate.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN candidate.preferredfirstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN candidate.preferredlastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN candidate.sexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sexdescriptorid IS 'The sex of the candidate.';


--
-- Name: COLUMN candidate.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: candidateaddress; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddress (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddress OWNER TO postgres;

--
-- Name: TABLE candidateaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN candidateaddress.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddress.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddress.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddress.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddress.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN candidateaddress.buildingsitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN candidateaddress.congressionaldistrict; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN candidateaddress.countyfipscode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN candidateaddress.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN candidateaddress.latitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN candidateaddress.localedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN candidateaddress.longitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN candidateaddress.nameofcounty; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: candidateaddressperiod; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddressperiod (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddressperiod OWNER TO postgres;

--
-- Name: TABLE candidateaddressperiod; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN candidateaddressperiod.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddressperiod.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddressperiod.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN candidateaddressperiod.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: candidatedisability; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisability (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisability OWNER TO postgres;

--
-- Name: TABLE candidatedisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisability IS 'The disability condition(s) that best describes an individual''s impairment.';


--
-- Name: COLUMN candidatedisability.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisability.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN candidatedisability.disabilitydiagnosis; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN candidatedisability.orderofdisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: candidatedisabilitydesignation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisabilitydesignation (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE candidatedisabilitydesignation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN candidatedisabilitydesignation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociation (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    enddate date,
    eppprogrampathwaydescriptorid integer,
    reasonexiteddescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociation IS 'Information about the association between the Teacher Candidate and the EducatorPreparationProgram';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.enddate IS 'The end date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid IS 'The program pathway the candidate is following; for example: Residency, Internship, Traditional';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid IS 'Reason exited for the association.';


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationcohortyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear IS 'The type and year of a cohort the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    majorspecialization character varying(255) NOT NULL,
    enddate date,
    minorspecialization character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 IS 'Information around the area(s) of specialization for an individual.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization IS 'The major area for a degree or area of specialization for a certificate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate IS 'The month, day, and year on which the Teacher Candidate exited the declared specialization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization IS 'The minor area for a degree or area of specialization for a certificate.';


--
-- Name: candidateelectronicmail; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateelectronicmail (
    candidateidentifier character varying(32) NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateelectronicmail OWNER TO postgres;

--
-- Name: TABLE candidateelectronicmail; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN candidateelectronicmail.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN candidateelectronicmail.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN candidateelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: candidatelanguage; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguage (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguage OWNER TO postgres;

--
-- Name: TABLE candidatelanguage; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguage IS 'The language(s) the individual uses to communicate.';


--
-- Name: COLUMN candidatelanguage.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguage.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: candidatelanguageuse; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguageuse (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguageuse OWNER TO postgres;

--
-- Name: TABLE candidatelanguageuse; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN candidatelanguageuse.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguageuse.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN candidatelanguageuse.languageusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: candidateothername; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateothername (
    candidateidentifier character varying(32) NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateothername OWNER TO postgres;

--
-- Name: TABLE candidateothername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN candidateothername.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateothername.othernametypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN candidateothername.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidateothername.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidateothername.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidateothername.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidateothername.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: candidatepersonalidentificationdocument; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatepersonalidentificationdocument (
    candidateidentifier character varying(32) NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatepersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE candidatepersonalidentificationdocument; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatepersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: candidaterace; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidaterace (
    candidateidentifier character varying(32) NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidaterace OWNER TO postgres;

--
-- Name: TABLE candidaterace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidaterace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN candidaterace.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidaterace.racedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: candidatetelephone; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatetelephone (
    candidateidentifier character varying(32) NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatetelephone OWNER TO postgres;

--
-- Name: TABLE candidatetelephone; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatetelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN candidatetelephone.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatetelephone.telephonenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN candidatetelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN candidatetelephone.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN candidatetelephone.orderofpriority; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN candidatetelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: certificationroutedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.certificationroutedescriptor (
    certificationroutedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.certificationroutedescriptor OWNER TO postgres;

--
-- Name: TABLE certificationroutedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.certificationroutedescriptor IS 'The process, program, or pathway used to obtain a certification.';


--
-- Name: COLUMN certificationroutedescriptor.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.certificationroutedescriptor.certificationroutedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coteachingstyleobserveddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.coteachingstyleobserveddescriptor (
    coteachingstyleobserveddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.coteachingstyleobserveddescriptor OWNER TO postgres;

--
-- Name: TABLE coteachingstyleobserveddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.coteachingstyleobserveddescriptor IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialextension (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    boardcertificationindicator boolean,
    certificationroutedescriptorid integer,
    certificationtitle character varying(64),
    credentialstatusdate date,
    credentialstatusdescriptorid integer,
    educatorroledescriptorid integer,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialextension OWNER TO postgres;

--
-- Name: COLUMN credentialextension.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialextension.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialextension.boardcertificationindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.boardcertificationindicator IS 'Indicator that the credential was granted under the authority of a national Board Certification.';


--
-- Name: COLUMN credentialextension.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationroutedescriptorid IS 'The process, program, or pathway used to obtain certification.';


--
-- Name: COLUMN credentialextension.certificationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationtitle IS 'The title of the certification obtained by the educator.';


--
-- Name: COLUMN credentialextension.credentialstatusdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdate IS 'The month, day, and year on which the credential status was effective.';


--
-- Name: COLUMN credentialextension.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdescriptorid IS 'The current status of the credential (e.g., active, suspended, etc.).';


--
-- Name: COLUMN credentialextension.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.educatorroledescriptorid IS 'The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN credentialextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN credentialextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: credentialstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstatusdescriptor (
    credentialstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.credentialstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE credentialstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstatusdescriptor IS 'The current status of the credential.';


--
-- Name: COLUMN credentialstatusdescriptor.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstatusdescriptor.credentialstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialstudentacademicrecord; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstudentacademicrecord (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialstudentacademicrecord OWNER TO postgres;

--
-- Name: TABLE credentialstudentacademicrecord; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstudentacademicrecord IS 'Reference to the person''s Student Academic Records for the school(s) with which the Credential is associated.';


--
-- Name: COLUMN credentialstudentacademicrecord.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialstudentacademicrecord.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN credentialstudentacademicrecord.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN credentialstudentacademicrecord.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN credentialstudentacademicrecord.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogram (
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    accreditationstatusdescriptorid integer,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogram; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogram IS 'The Educator Preparation Program is designed to prepare students to become licensed educators.';


--
-- Name: COLUMN educatorpreparationprogram.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogram.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogram.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.accreditationstatusdescriptorid IS 'The current accreditation status of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: educatorpreparationprogramgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogramgradelevel (
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogramgradelevel OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogramgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogramgradelevel IS 'The grade levels served at the EPP Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.gradeleveldescriptorid IS 'The grade levels served at the EPP Program.';


--
-- Name: educatorroledescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorroledescriptor (
    educatorroledescriptorid integer NOT NULL
);


ALTER TABLE tpdm.educatorroledescriptor OWNER TO postgres;

--
-- Name: TABLE educatorroledescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorroledescriptor IS 'The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN educatorroledescriptor.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorroledescriptor.educatorroledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: englishlanguageexamdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.englishlanguageexamdescriptor (
    englishlanguageexamdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.englishlanguageexamdescriptor OWNER TO postgres;

--
-- Name: TABLE englishlanguageexamdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.englishlanguageexamdescriptor IS 'Indicates that a person passed, failed, or did not take an English Language assessment.';


--
-- Name: COLUMN englishlanguageexamdescriptor.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.englishlanguageexamdescriptor.englishlanguageexamdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eppprogrampathwaydescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.eppprogrampathwaydescriptor (
    eppprogrampathwaydescriptorid integer NOT NULL
);


ALTER TABLE tpdm.eppprogrampathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE eppprogrampathwaydescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.eppprogrampathwaydescriptor IS 'The description of the program pathway, for example: Residency, Internship, Traditional';


--
-- Name: COLUMN eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluation (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationdescription character varying(255),
    evaluationtypedescriptorid integer,
    interraterreliabilityscore integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluation OWNER TO postgres;

--
-- Name: TABLE evaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluation IS 'An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.';


--
-- Name: COLUMN evaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluation.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluation.evaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationdescription IS 'The long description of the Evaluation.';


--
-- Name: COLUMN evaluation.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluation.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluation.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.maxrating IS 'The maximum summary numerical rating or score for the evaluation.';


--
-- Name: COLUMN evaluation.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.minrating IS 'The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.';


--
-- Name: evaluationelement; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelement (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelement OWNER TO postgres;

--
-- Name: TABLE evaluationelement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelement IS 'The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.';


--
-- Name: COLUMN evaluationelement.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelement.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelement.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelement.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelement.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelement.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelement.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelement.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationelement.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.maxrating IS 'The maximum summary numerical rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelement.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.minrating IS 'The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationelement.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.sortorder IS 'The sort order of this Evaluation Element.';


--
-- Name: evaluationelementrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementrating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    areaofrefinement character varying(1024),
    areaofreinforcement character varying(1024),
    comments character varying(1024),
    evaluationelementratingleveldescriptorid integer,
    feedback character varying(2048),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: TABLE evaluationelementrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementrating IS 'The lowest-level rating for an Evaluation Element for an individual educator.';


--
-- Name: COLUMN evaluationelementrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementrating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementrating.areaofrefinement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofrefinement IS 'Area identified for person to refine or improve as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.areaofreinforcement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofreinforcement IS 'Area identified for reinforcement or positive feedback as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationelementrating.feedback; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.feedback IS 'Feedback provided to the evaluated person.';


--
-- Name: evaluationelementratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationelementratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationelementratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationelementratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationelementratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingleveldescriptor (
    evaluationelementratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingleveldescriptor IS 'Rating levels for Evaluation Elements.';


--
-- Name: COLUMN evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationelementratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingresult IS 'The numerical summary rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationelementratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationobjective; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjective (
    educationorganizationid bigint NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationobjectivedescription character varying(255),
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: TABLE evaluationobjective; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjective IS 'A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN evaluationobjective.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjective.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjective.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjective.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivedescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivedescription IS 'The long description of the Evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtypedescriptorid IS 'The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationobjective.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.maxrating IS 'The maximum summary numerical rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.minrating IS 'The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationobjective.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.sortorder IS 'The sort order of this Evaluation Objective.';


--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiverating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    comments character varying(1024),
    objectiveratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiverating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiverating IS 'The rating for the component Evaluation Objective for an individual educator.';


--
-- Name: COLUMN evaluationobjectiverating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiverating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiverating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiverating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiverating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiverating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationobjectiverating.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.objectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: evaluationobjectiveratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationobjectiveratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationobjectiveratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratingresult IS 'The numerical summary rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationobjectiveratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationperioddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationperioddescriptor (
    evaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationperioddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationperioddescriptor.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationperioddescriptor.evaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationrating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer,
    evaluationratingstatusdescriptorid integer,
    localcoursecode character varying(60),
    schoolid bigint,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationrating OWNER TO postgres;

--
-- Name: TABLE evaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationrating IS 'The summary weighting for the Evaluation instrument for an individual educator.';


--
-- Name: COLUMN evaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationrating.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationrating.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingstatusdescriptorid IS 'The Status of the poerformance evaluation.';


--
-- Name: COLUMN evaluationrating.localcoursecode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN evaluationrating.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN evaluationrating.sectionidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN evaluationrating.sessionname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: evaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingleveldescriptor (
    evaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingleveldescriptor IS 'Rating levels for Evaluations.';


--
-- Name: COLUMN evaluationratingleveldescriptor.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingleveldescriptor.evaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingresult IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewer (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: evaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewerreceivedtraining (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: evaluationratingstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingstatusdescriptor (
    evaluationratingstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingstatusdescriptor IS 'Represents the status of a Evaluation Rating.';


--
-- Name: COLUMN evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationtypedescriptor (
    evaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationtypedescriptor IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationtypedescriptor.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationtypedescriptor.evaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: financialaid; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.financialaid (
    aidtypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    studentusi integer NOT NULL,
    aidamount numeric(19,4),
    aidconditiondescription character varying(1024),
    enddate date,
    pellgrantrecipient boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.financialaid OWNER TO postgres;

--
-- Name: TABLE financialaid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.financialaid IS 'This entity represents the financial aid a person is awarded.';


--
-- Name: COLUMN financialaid.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidtypedescriptorid IS 'The classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN financialaid.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.begindate IS 'The date the award was designated.';


--
-- Name: COLUMN financialaid.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN financialaid.aidamount; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidamount IS 'The amount of financial aid awarded to a person for the term/year.';


--
-- Name: COLUMN financialaid.aidconditiondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidconditiondescription IS 'The description of the condition (e.g., placement in a high need school) under which the aid was given.';


--
-- Name: COLUMN financialaid.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.enddate IS 'The date the award was removed.';


--
-- Name: COLUMN financialaid.pellgrantrecipient; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.pellgrantrecipient IS 'Indicates a person who receives Pell Grant aid.';


--
-- Name: genderdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.genderdescriptor (
    genderdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.genderdescriptor OWNER TO postgres;

--
-- Name: TABLE genderdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.genderdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN genderdescriptor.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.genderdescriptor.genderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.objectiveratingleveldescriptor (
    objectiveratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.objectiveratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE objectiveratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.objectiveratingleveldescriptor IS 'Rating levels for Evaluation Objectives.';


--
-- Name: COLUMN objectiveratingleveldescriptor.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.objectiveratingleveldescriptor.objectiveratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluation (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer,
    performanceevaluationdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: TABLE performanceevaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluation IS 'A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.';


--
-- Name: COLUMN performanceevaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluation.academicsubjectdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.academicsubjectdescriptorid IS 'The description of the content or subject area of a performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationdescription IS 'The long description of the Performance Evaluation.';


--
-- Name: performanceevaluationgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationgradelevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationgradelevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationgradelevel IS 'The grade levels involved with the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationgradelevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationgradelevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.gradeleveldescriptorid IS 'The grade levels involved with the performance evaluation.';


--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationrating (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    actualdate date NOT NULL,
    actualduration integer,
    actualtime time without time zone,
    announced boolean,
    comments character varying(1024),
    coteachingstyleobserveddescriptorid integer,
    performanceevaluationratingleveldescriptorid integer,
    scheduledate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: TABLE performanceevaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationrating IS 'The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.';


--
-- Name: COLUMN performanceevaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationrating.actualdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualdate IS 'The month, day, and year on which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualduration; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualduration IS 'The actual or estimated number of clock minutes during which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualtime; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualtime IS 'An indication of the the time at which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.announced; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.announced IS 'An indicator of whether the performance evaluation was announced or not.';


--
-- Name: COLUMN performanceevaluationrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN performanceevaluationrating.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.coteachingstyleobserveddescriptorid IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN performanceevaluationrating.scheduledate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.scheduledate IS 'The month, day, and year on which the performance evaluation was scheduled.';


--
-- Name: performanceevaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN performanceevaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN performanceevaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: performanceevaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingleveldescriptor (
    performanceevaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingleveldescriptor IS 'Rating levels for Performance Evaluations.';


--
-- Name: COLUMN performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingresult OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingresult IS 'The numerical summary rating or score for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN performanceevaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: performanceevaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewer (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewerreceivedtraining (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: performanceevaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationtypedescriptor (
    performanceevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationtypedescriptor IS 'The type of performance evaluation conducted (e.g., walkthrough, summative).';


--
-- Name: COLUMN performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: rubricdimension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricdimension (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    rubricrating integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    criteriondescription character varying(1024) NOT NULL,
    dimensionorder integer,
    rubricratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.rubricdimension OWNER TO postgres;

--
-- Name: TABLE rubricdimension; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.';


--
-- Name: COLUMN rubricdimension.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN rubricdimension.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN rubricdimension.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN rubricdimension.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN rubricdimension.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN rubricdimension.rubricrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricrating IS 'The rating achieved for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN rubricdimension.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN rubricdimension.criteriondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.criteriondescription IS 'The criterion description for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.dimensionorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.dimensionorder IS 'The order for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricratingleveldescriptorid IS 'The rating level achieved for the rubric dimension.';


--
-- Name: rubricratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricratingleveldescriptor (
    rubricratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.rubricratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE rubricratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricratingleveldescriptor IS 'Rating levels for Rubric Dimensions.';


--
-- Name: COLUMN rubricratingleveldescriptor.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricratingleveldescriptor.rubricratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.schoolextension (
    schoolid bigint NOT NULL,
    postsecondaryinstitutionid bigint,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.schoolextension OWNER TO postgres;

--
-- Name: COLUMN schoolextension.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolextension.postsecondaryinstitutionid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: surveyresponseextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponseextension (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.surveyresponseextension OWNER TO postgres;

--
-- Name: COLUMN surveyresponseextension.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseextension.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseextension.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponseextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponseextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveyresponsepersontargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveysectionresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveysectionresponsepersontargetassociation IS 'This association provides information about the survey section and the person the survey section is about.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveysectiontitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: academicweek; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.academicweek (
    oldschoolid bigint NOT NULL,
    oldweekidentifier character varying(80) NOT NULL,
    newschoolid bigint,
    newweekidentifier character varying(80),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.academicweek OWNER TO postgres;

--
-- Name: accountabilityrating; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.accountabilityrating (
    oldeducationorganizationid bigint NOT NULL,
    oldratingtitle character varying(60) NOT NULL,
    oldschoolyear smallint NOT NULL,
    neweducationorganizationid bigint,
    newratingtitle character varying(60),
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.accountabilityrating OWNER TO postgres;

--
-- Name: assessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessment OWNER TO postgres;

--
-- Name: assessmentitem; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentitem (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentitem OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentscorerangelearningstandard (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldscorerangeid character varying(60) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newscorerangeid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: balancesheetdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.balancesheetdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: bellschedule; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.bellschedule (
    oldbellschedulename character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newbellschedulename character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.bellschedule OWNER TO postgres;

--
-- Name: calendar; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendar (
    oldcalendarcode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendar OWNER TO postgres;

--
-- Name: calendardate; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendardate (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendardate OWNER TO postgres;

--
-- Name: chartofaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.chartofaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.chartofaccount OWNER TO postgres;

--
-- Name: classperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.classperiod (
    oldclassperiodname character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newclassperiodname character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.classperiod OWNER TO postgres;

--
-- Name: cohort; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.cohort (
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.cohort OWNER TO postgres;

--
-- Name: communityproviderlicense; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.communityproviderlicense (
    oldcommunityproviderid bigint NOT NULL,
    oldlicenseidentifier character varying(36) NOT NULL,
    oldlicensingorganization character varying(75) NOT NULL,
    newcommunityproviderid bigint,
    newlicenseidentifier character varying(36),
    newlicensingorganization character varying(75),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: competencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.competencyobjective (
    oldeducationorganizationid bigint NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.competencyobjective OWNER TO postgres;

--
-- Name: contact; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.contact (
    oldcontactusi integer NOT NULL,
    oldcontactuniqueid character varying(32) NOT NULL,
    newcontactusi integer,
    newcontactuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.contact OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.course (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.course OWNER TO postgres;

--
-- Name: courseoffering; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.courseoffering (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.courseoffering OWNER TO postgres;

--
-- Name: coursetranscript; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.coursetranscript (
    oldcourseattemptresultdescriptorid integer NOT NULL,
    oldcourseattemptresultdescriptornamespace character varying(255) NOT NULL,
    oldcourseattemptresultdescriptorcodevalue character varying(50) NOT NULL,
    oldcoursecode character varying(60) NOT NULL,
    oldcourseeducationorganizationid bigint NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    newcourseattemptresultdescriptorid integer,
    newcourseattemptresultdescriptornamespace character varying(255),
    newcourseattemptresultdescriptorcodevalue character varying(50),
    newcoursecode character varying(60),
    newcourseeducationorganizationid bigint,
    neweducationorganizationid bigint,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.coursetranscript OWNER TO postgres;

--
-- Name: credential; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.credential (
    oldcredentialidentifier character varying(60) NOT NULL,
    oldstateofissuestateabbreviationdescriptorid integer NOT NULL,
    oldstateofissuestateabbreviationdescriptornamespace character varying(255) NOT NULL,
    oldstateofissuestateabbreviationdescriptorcodevalue character varying(50) NOT NULL,
    newcredentialidentifier character varying(60),
    newstateofissuestateabbreviationdescriptorid integer,
    newstateofissuestateabbreviationdescriptornamespace character varying(255),
    newstateofissuestateabbreviationdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.credential OWNER TO postgres;

--
-- Name: descriptor; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptor (
    olddescriptorid integer NOT NULL,
    oldcodevalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newdescriptorid integer,
    newcodevalue character varying(50),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptor OWNER TO postgres;

--
-- Name: descriptormapping; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptormapping (
    oldmappednamespace character varying(255) NOT NULL,
    oldmappedvalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldvalue character varying(50) NOT NULL,
    newmappednamespace character varying(255),
    newmappedvalue character varying(50),
    newnamespace character varying(255),
    newvalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptormapping OWNER TO postgres;

--
-- Name: disciplineaction; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineaction (
    olddisciplineactionidentifier character varying(36) NOT NULL,
    olddisciplinedate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldresponsibilityschoolid bigint NOT NULL,
    newdisciplineactionidentifier character varying(36),
    newdisciplinedate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineaction OWNER TO postgres;

--
-- Name: disciplineincident; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineincident (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineincident OWNER TO postgres;

--
-- Name: educationcontent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationcontent (
    oldcontentidentifier character varying(225) NOT NULL,
    newcontentidentifier character varying(225),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationcontent OWNER TO postgres;

--
-- Name: educationorganization; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganization (
    oldeducationorganizationid bigint NOT NULL,
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganization OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionprescriptioneducationorganizationid bigint NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionprescriptioneducationorganizationid bigint,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationnetworkassociation (
    oldeducationorganizationnetworkid bigint NOT NULL,
    oldmembereducationorganizationid bigint NOT NULL,
    neweducationorganizationnetworkid bigint,
    newmembereducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationpeerassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldpeereducationorganizationid bigint NOT NULL,
    neweducationorganizationid bigint,
    newpeereducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: evaluationrubricdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.evaluationrubricdimension (
    oldevaluationrubricrating integer NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationelementtitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newevaluationrubricrating integer,
    newprogrameducationorganizationid bigint,
    newprogramevaluationelementtitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.evaluationrubricdimension OWNER TO postgres;

--
-- Name: feederschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.feederschoolassociation (
    oldbegindate date NOT NULL,
    oldfeederschoolid bigint NOT NULL,
    oldschoolid bigint NOT NULL,
    newbegindate date,
    newfeederschoolid bigint,
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: functiondimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.functiondimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.functiondimension OWNER TO postgres;

--
-- Name: funddimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.funddimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.funddimension OWNER TO postgres;

--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.generalstudentprogramassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: grade; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.grade (
    oldbegindate date NOT NULL,
    oldgradetypedescriptorid integer NOT NULL,
    oldgradetypedescriptornamespace character varying(255) NOT NULL,
    oldgradetypedescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newgradetypedescriptorid integer,
    newgradetypedescriptornamespace character varying(255),
    newgradetypedescriptorcodevalue character varying(50),
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolyear smallint,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.grade OWNER TO postgres;

--
-- Name: gradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradebookentry OWNER TO postgres;

--
-- Name: gradingperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradingperiod (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradingperiod OWNER TO postgres;

--
-- Name: graduationplan; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.graduationplan (
    oldeducationorganizationid bigint NOT NULL,
    oldgraduationplantypedescriptorid integer NOT NULL,
    oldgraduationplantypedescriptornamespace character varying(255) NOT NULL,
    oldgraduationplantypedescriptorcodevalue character varying(50) NOT NULL,
    oldgraduationschoolyear smallint NOT NULL,
    neweducationorganizationid bigint,
    newgraduationplantypedescriptorid integer,
    newgraduationplantypedescriptornamespace character varying(255),
    newgraduationplantypedescriptorcodevalue character varying(50),
    newgraduationschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.graduationplan OWNER TO postgres;

--
-- Name: intervention; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.intervention (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.intervention OWNER TO postgres;

--
-- Name: interventionprescription; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionprescription (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionprescription OWNER TO postgres;

--
-- Name: interventionstudy; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionstudy (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionstudyidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionstudyidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionstudy OWNER TO postgres;

--
-- Name: learningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandard (
    oldlearningstandardid character varying(60) NOT NULL,
    newlearningstandardid character varying(60),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandard OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandardequivalenceassociation (
    oldnamespace character varying(255) NOT NULL,
    oldsourcelearningstandardid character varying(60) NOT NULL,
    oldtargetlearningstandardid character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsourcelearningstandardid character varying(60),
    newtargetlearningstandardid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: localaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localaccount OWNER TO postgres;

--
-- Name: localactual; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localactual (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localactual OWNER TO postgres;

--
-- Name: localbudget; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localbudget (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localbudget OWNER TO postgres;

--
-- Name: localcontractedstaff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localcontractedstaff (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: localencumbrance; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localencumbrance (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localencumbrance OWNER TO postgres;

--
-- Name: localpayroll; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localpayroll (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localpayroll OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.location (
    oldclassroomidentificationcode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newclassroomidentificationcode character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.location OWNER TO postgres;

--
-- Name: objectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectdimension OWNER TO postgres;

--
-- Name: objectiveassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectiveassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectiveassessment OWNER TO postgres;

--
-- Name: openstaffposition; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.openstaffposition (
    oldeducationorganizationid bigint NOT NULL,
    oldrequisitionnumber character varying(20) NOT NULL,
    neweducationorganizationid bigint,
    newrequisitionnumber character varying(20),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.openstaffposition OWNER TO postgres;

--
-- Name: operationalunitdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.operationalunitdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.person (
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.person OWNER TO postgres;

--
-- Name: postsecondaryevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.postsecondaryevent (
    oldeventdate date NOT NULL,
    oldpostsecondaryeventcategorydescriptorid integer NOT NULL,
    oldpostsecondaryeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldpostsecondaryeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweventdate date,
    newpostsecondaryeventcategorydescriptorid integer,
    newpostsecondaryeventcategorydescriptornamespace character varying(255),
    newpostsecondaryeventcategorydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.program (
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.program OWNER TO postgres;

--
-- Name: programdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programdimension OWNER TO postgres;

--
-- Name: programevaluation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluation (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluation OWNER TO postgres;

--
-- Name: programevaluationelement; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluationelement (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationelementtitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationelementtitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluationelement OWNER TO postgres;

--
-- Name: programevaluationobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluationobjective (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationobjectivetitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationobjectivetitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluationobjective OWNER TO postgres;

--
-- Name: projectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.projectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.projectdimension OWNER TO postgres;

--
-- Name: reportcard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.reportcard (
    oldeducationorganizationid bigint NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolid bigint NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolid bigint,
    newgradingperiodschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.reportcard OWNER TO postgres;

--
-- Name: restraintevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.restraintevent (
    oldrestrainteventidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newrestrainteventidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.restraintevent OWNER TO postgres;

--
-- Name: schoolyeartype; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.schoolyeartype (
    oldschoolyear smallint NOT NULL,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.schoolyeartype OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.section (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.section OWNER TO postgres;

--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sectionattendancetakenevent (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: session; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.session (
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.session OWNER TO postgres;

--
-- Name: sourcedimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sourcedimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sourcedimension OWNER TO postgres;

--
-- Name: staff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staff (
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staff OWNER TO postgres;

--
-- Name: staffabsenceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffabsenceevent (
    oldabsenceeventcategorydescriptorid integer NOT NULL,
    oldabsenceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldabsenceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newabsenceeventcategorydescriptorid integer,
    newabsenceeventcategorydescriptornamespace character varying(255),
    newabsenceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: staffcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffdisciplineincidentassociation (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation (
    oldcontacttitle character varying(75) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newcontacttitle character varying(75),
    neweducationorganizationid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: staffleave; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffleave (
    oldbegindate date NOT NULL,
    oldstaffleaveeventcategorydescriptorid integer NOT NULL,
    oldstaffleaveeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldstaffleaveeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newstaffleaveeventcategorydescriptorid integer,
    newstaffleaveeventcategorydescriptornamespace character varying(255),
    newstaffleaveeventcategorydescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffleave OWNER TO postgres;

--
-- Name: staffprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffprogramassociation (
    oldbegindate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: staffschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffschoolassociation (
    oldprogramassignmentdescriptorid integer NOT NULL,
    oldprogramassignmentdescriptornamespace character varying(255) NOT NULL,
    oldprogramassignmentdescriptorcodevalue character varying(50) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newprogramassignmentdescriptorid integer,
    newprogramassignmentdescriptornamespace character varying(255),
    newprogramassignmentdescriptorcodevalue character varying(50),
    newschoolid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: staffsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffsectionassociation (
    oldbegindate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.student (
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.student OWNER TO postgres;

--
-- Name: studentacademicrecord; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentacademicrecord (
    oldeducationorganizationid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: studentassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessment OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldeducationorganizationassociationtypedescriptorid integer NOT NULL,
    oldeducationorganizationassociationtypedescriptornamespace character varying(255) NOT NULL,
    oldeducationorganizationassociationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    neweducationorganizationassociationtypedescriptorid integer,
    neweducationorganizationassociationtypedescriptornamespace character varying(255),
    neweducationorganizationassociationtypedescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcompetencyobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolid bigint NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldobjectiveeducationorganizationid bigint NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolid bigint,
    newgradingperiodschoolyear smallint,
    newobjectiveeducationorganizationid bigint,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (
    oldbehaviordescriptorid integer NOT NULL,
    oldbehaviordescriptornamespace character varying(255) NOT NULL,
    oldbehaviordescriptorcodevalue character varying(50) NOT NULL,
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbehaviordescriptorid integer,
    newbehaviordescriptornamespace character varying(255),
    newbehaviordescriptorcodevalue character varying(50),
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentgradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentgradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: studentinterventionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldeventdate date NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    neweventdate date,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldeventdate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    neweventdate date,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: studentprogramevaluation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramevaluation (
    oldevaluationdate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newevaluationdate date,
    newprogrameducationorganizationid bigint,
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramevaluation OWNER TO postgres;

--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: studentsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionassociation (
    oldbegindate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation (
    oldconsenttoevaluationreceiveddate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newconsenttoevaluationreceiveddate date,
    neweducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation OWNER TO postgres;

--
-- Name: survey; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.survey (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.survey OWNER TO postgres;

--
-- Name: surveycourseassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveycourseassociation (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: surveyprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyprogramassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: surveyquestion; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestion (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestion OWNER TO postgres;

--
-- Name: surveyquestionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: surveyresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponse OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: surveysection; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysection (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysection OWNER TO postgres;

--
-- Name: surveysectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newnamespace character varying(255),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: surveysectionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: candidate; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidate (
    oldcandidateidentifier character varying(32) NOT NULL,
    newcandidateidentifier character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidate OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (
    oldbegindate date NOT NULL,
    oldcandidateidentifier character varying(32) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newbegindate date,
    newcandidateidentifier character varying(32),
    neweducationorganizationid bigint,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.educatorpreparationprogram (
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: evaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluation (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluation OWNER TO postgres;

--
-- Name: evaluationelement; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelement (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelement OWNER TO postgres;

--
-- Name: evaluationelementrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelementrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: evaluationobjective; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjective (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjectiverating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: evaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationrating OWNER TO postgres;

--
-- Name: financialaid; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.financialaid (
    oldaidtypedescriptorid integer NOT NULL,
    oldaidtypedescriptornamespace character varying(255) NOT NULL,
    oldaidtypedescriptorcodevalue character varying(50) NOT NULL,
    oldbegindate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newaidtypedescriptorid integer,
    newaidtypedescriptornamespace character varying(255),
    newaidtypedescriptorcodevalue character varying(50),
    newbegindate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.financialaid OWNER TO postgres;

--
-- Name: performanceevaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluation (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluationrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: rubricdimension; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.rubricdimension (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldrubricrating integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newrubricrating integer,
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.rubricdimension OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: contact contactusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact ALTER COLUMN contactusi SET DEFAULT nextval('edfi.contact_contactusi_seq'::regclass);


--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: educationorganizationidtoeducationorganizationid; Type: TABLE DATA; Schema: auth; Owner: postgres
--

COPY auth.educationorganizationidtoeducationorganizationid (sourceeducationorganizationid, targeteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
3071
3072
3073
3074
3076
3075
3077
3078
3079
3080
3081
3082
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
1778
1779
1780
1781
1782
1783
1784
1785
1786
1787
1788
1789
1791
1790
1792
1794
1793
1795
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
1362
1363
1366
1367
1368
1370
1371
1372
1373
1375
1360
1364
1369
1374
1376
1378
1361
1365
1377
3254
3255
3256
3257
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
1163
1165
1164
1162
1166
1167
1168
1169
1170
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accounttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accounttypedescriptor (accounttypedescriptorid) FROM stdin;
76
75
77
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
826
827
829
828
832
830
831
833
834
835
836
837
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
2946
2948
2947
2949
2950
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
1394
1397
1395
1396
1398
1399
1400
1401
1402
1403
1405
1404
1406
1407
1408
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
3067
3068
3069
3070
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
1015
1016
1017
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, adaptiveassessment, assessmentcategorydescriptorid, assessmentfamily, assessmentform, assessmenttitle, assessmentversion, educationorganizationid, maxrawscore, nomenclature, revisiondate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (assessmentidentifier, namespace, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, namespace, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
1685
1686
1689
1688
1692
1694
1696
1697
1701
1704
1705
1706
1708
1709
1715
1718
1720
1721
1723
1724
1725
1687
1690
1693
1695
1699
1702
1707
1710
1713
1717
1727
1684
1691
1698
1700
1703
1711
1712
1714
1716
1719
1722
1726
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, namespace, author, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
1809
1814
1811
1812
1815
1810
1813
1816
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, assessmentitemuri, expectedtimeassessed, itemtext, maxrawscore, nomenclature, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
1514
1516
1515
1517
1518
1520
1519
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, correctresponse, responsedescription, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
2187
2189
2190
2188
2191
2192
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, namespace, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, namespace, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
942
947
945
944
946
943
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
2999
3001
3002
3000
3003
3004
3005
3006
3007
3008
3010
3009
3011
3012
3013
3014
3015
3016
3017
3018
3019
3020
3021
3022
3023
3024
3025
3026
3027
3028
3029
3030
3031
3032
3033
3034
3035
3036
3037
3038
3039
3040
3041
3042
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, assessmentreportingmethoddescriptorid, identificationcode, maximumscore, minimumscore, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandardlearningstandard (assessmentidentifier, namespace, scorerangeid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: assignmentlatestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assignmentlatestatusdescriptor (assignmentlatestatusdescriptorid) FROM stdin;
673
674
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
30
31
34
35
36
37
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: balancesheetdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid) FROM stdin;
1085
1086
1084
1087
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
1475
1477
1476
1478
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, endtime, starttime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, schoolid, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, schoolid, date, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
1154
1157
1153
1155
1156
1159
1161
1160
1152
1158
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, schoolid, schoolyear, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
1626
1627
1624
1628
1625
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
781
782
780
783
784
786
785
787
788
789
790
791
792
793
795
794
796
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
1824
1825
1826
1827
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
1049
1050
1051
1052
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, accounttypedescriptorid, balancesheetcode, functioncode, fundcode, objectcode, operationalunitcode, programcode, projectcode, sourcecode, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: chartofaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
96
97
99
98
100
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, schoolid, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
1493
1494
1495
1492
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, academicsubjectdescriptorid, cohortdescription, cohortscopedescriptorid, cohorttypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
1307
1306
1308
1309
1310
1311
1312
1313
1314
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
1761
1765
1770
1764
1768
1763
1766
1769
1762
1767
1771
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
1672
1675
1673
1674
1677
1676
1679
1678
1681
1680
1682
1683
3269
3270
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, licenseexemptindicator, providercategorydescriptorid, providerprofitabilitydescriptorid, providerstatusdescriptorid, schoolindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, authorizedfacilitycapacity, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
675
679
677
681
678
680
676
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contact; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contact (contactusi, contactuniqueid, firstname, genderidentity, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, lastsurname, loginid, maidenname, middlename, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contactaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactaddress (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: contactaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactaddressperiod (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: contactelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactelectronicmail (contactusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: contactinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactinternationaladdress (contactusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: contactlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactlanguage (contactusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: contactlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactlanguageuse (contactusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: contactothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactothername (contactusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: contactpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactpersonalidentificationdocument (contactusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: contacttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttelephone (contactusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
1305
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
1800
1801
1802
1803
1804
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
743
744
745
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
1409
1410
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
1828
1829
1833
1834
1835
1836
1837
1838
1839
1841
1840
1842
1843
1844
1845
1846
1848
1849
1847
1850
1851
1852
1853
1854
1855
1856
1857
1858
1859
1860
1861
1862
1863
1864
1865
1866
1867
1869
1868
1870
1871
1873
1872
1874
1875
1876
1877
1878
1879
1880
1881
1882
1883
1885
1884
1886
1887
1888
1889
1890
1891
1892
1893
1895
1894
1897
1896
1898
1899
1900
1901
1902
1904
1905
1903
1906
1907
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1926
1925
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1946
1947
1950
1949
1948
1951
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
1969
1970
1971
1972
1973
1974
1976
1975
1977
1978
1979
1980
1981
1982
1983
1984
1985
1986
1987
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1999
2000
1998
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
2022
2023
2024
2025
2026
2027
2028
2029
2030
2031
2032
2033
2034
2035
2036
2037
2038
2039
2040
2041
2042
2043
2045
2044
2046
2047
2048
2049
2050
2051
2052
2053
2054
2055
2056
2057
2064
2071
2072
2078
2058
2065
2068
2074
2077
2079
2059
2060
2062
2063
2066
2070
2073
2075
2061
2067
2069
2076
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, careerpathwaydescriptorid, coursedefinedbydescriptorid, coursedescription, coursegpaapplicabilitydescriptorid, coursetitle, datecourseadopted, highschoolcourserequirement, maxcompletionsforcredit, maximumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, minimumavailablecreditconversion, minimumavailablecredits, minimumavailablecredittypedescriptorid, numberofparts, timerequiredforcompletion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseacademicsubject (coursecode, educationorganizationid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
1758
1759
1757
1760
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (coursecode, educationorganizationid, competencyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
1135
1138
1136
1137
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
22
23
24
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, educationorganizationid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
2193
2196
2195
2194
2197
2198
2199
2200
2201
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
1411
1412
1414
1413
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, coursecode, educationorganizationid, instructionaltimeplanned, localcoursetitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
16
17
19
18
21
20
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, alternativecoursetitle, assigningorganizationidentificationcode, attemptedcreditconversion, attemptedcredits, attemptedcredittypedescriptorid, coursecatalogurl, courserepeatcodedescriptorid, coursetitle, earnedcreditconversion, earnedcredits, earnedcredittypedescriptorid, externaleducationorganizationid, externaleducationorganizationnameofinstitution, finallettergradeearned, finalnumericgradeearned, methodcreditearneddescriptorid, responsibleteacherstaffusi, whentakengradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcourseprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcourseprogram (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseprogramname, courseprogramtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptpartialcoursetranscriptawards (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate, earnedcredits, lettergradeearned, methodcreditearneddescriptorid, numericgradeearned, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptsection (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialfielddescriptorid, credentialtypedescriptorid, effectivedate, expirationdate, issuancedate, namespace, teachingcredentialbasisdescriptorid, teachingcredentialdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
641
643
646
648
649
651
654
655
642
647
652
644
645
650
653
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
1064
1066
1067
1065
1068
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
927
929
928
930
931
932
933
934
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
3148
3152
3160
3164
3150
3154
3157
3159
3162
3151
3153
3158
3161
3149
3155
3156
3163
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
2962
2966
2970
2978
2965
2967
2976
2964
2968
2972
2974
2963
2969
2971
2973
2975
2977
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
6
9
13
8
11
7
12
5
10
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
2293
2294
2295
2296
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
2	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	\N	2023-12-06 19:12:39.770882	2023-12-06 19:12:39.749459	975a9a60-e0ba-4135-a430-b8f335f79c4b	2
3	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	\N	2023-12-06 19:12:39.770887	2023-12-06 19:12:39.74946	cf9234be-5b1c-4fbb-b597-315e4008a334	3
4	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	\N	2023-12-06 19:12:39.770872	2023-12-06 19:12:39.74947	5d1c99d0-4819-4369-ac4a-2b47f1040a86	4
1	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	\N	2023-12-06 19:12:39.770859	2023-12-06 19:12:39.749462	71dd3bbd-82e8-4108-acea-c094db46a7fe	1
5	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	\N	2023-12-06 19:12:39.919072	2023-12-06 19:12:39.917959	dbefb580-8e4f-4b6b-882e-74607338e200	5
6	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	\N	2023-12-06 19:12:39.918996	2023-12-06 19:12:39.917959	353a2edd-d343-48b6-9900-5383b1931c14	6
7	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	\N	2023-12-06 19:12:39.918955	2023-12-06 19:12:39.917957	52959766-9a00-4efa-88f9-89a999747dbc	7
8	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	\N	2023-12-06 19:12:39.91907	2023-12-06 19:12:39.918019	51ca3bfb-62e8-481d-86c5-984e1a00e84c	8
9	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	\N	2023-12-06 19:12:39.929158	2023-12-06 19:12:39.929126	052c1502-d59e-4854-9340-018f616c121a	9
10	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	\N	2023-12-06 19:12:39.92996	2023-12-06 19:12:39.929354	52642172-9975-47ce-9e69-9b7e49edef15	10
11	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	\N	2023-12-06 19:12:39.933877	2023-12-06 19:12:39.933849	68ba8350-96a7-47b1-bbcf-a5c58cb33a25	11
12	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	\N	2023-12-06 19:12:39.93511	2023-12-06 19:12:39.935083	dba3ff17-623d-4ae3-90b4-60afe58b13cd	12
13	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	\N	2023-12-06 19:12:39.933661	2023-12-06 19:12:39.933628	7de9662c-cb4e-44b6-bfcf-c892dbbee7af	13
15	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	\N	2023-12-06 19:12:39.971767	2023-12-06 19:12:39.970815	cbacc743-5439-435d-a1b7-af81f95e330a	15
14	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	\N	2023-12-06 19:12:39.97176	2023-12-06 19:12:39.970723	9afc4e54-90ff-4885-bab0-4134361fe4ea	14
16	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	\N	2023-12-06 19:12:39.980676	2023-12-06 19:12:39.979557	82692d69-c93e-4c35-b0a8-6c7f268df6a2	16
17	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	\N	2023-12-06 19:12:39.981733	2023-12-06 19:12:39.981701	529394a6-f30e-4afe-bfc6-a53990ea6fe2	17
18	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	\N	2023-12-06 19:12:39.981733	2023-12-06 19:12:39.981721	96b8dab7-5ec4-4e69-a808-f93a6763cde0	18
19	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	\N	2023-12-06 19:12:39.981083	2023-12-06 19:12:39.979326	1e6efa07-7fa2-42b2-9476-28c1c74c8d6f	19
20	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	\N	2023-12-06 19:12:39.991275	2023-12-06 19:12:39.991138	b11fe3fb-9dad-4490-8ed6-10182d60d331	20
21	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	\N	2023-12-06 19:12:39.991636	2023-12-06 19:12:39.991583	679c770f-b1ba-4f45-af5b-5d8be3bda127	21
22	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	\N	2023-12-06 19:12:40.022503	2023-12-06 19:12:40.021548	89729736-082d-4024-806d-7ec1896a5242	22
23	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-12-06 19:12:40.022712	2023-12-06 19:12:40.021777	bdbe9715-ec02-4921-9437-5d1513222f9a	23
24	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-12-06 19:12:40.022837	2023-12-06 19:12:40.021798	a2fc043f-fb1d-4a02-b210-cb5aff80e758	24
25	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:40.028389	2023-12-06 19:12:40.027317	a245f725-7713-487c-ba07-dddcdd3ef209	25
26	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	\N	2023-12-06 19:12:40.036453	2023-12-06 19:12:40.036377	358a5ead-8c4a-4aff-be00-b87741263baa	26
27	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-12-06 19:12:40.036752	2023-12-06 19:12:40.036724	0c75d273-c059-468f-abaf-d38699bfaa6c	27
28	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-12-06 19:12:40.036584	2023-12-06 19:12:40.036555	2e41dc6a-53cf-4747-8015-699828b95699	28
29	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-12-06 19:12:40.0369	2023-12-06 19:12:40.036873	0501fa9c-1603-4079-9077-c6d32415796d	29
30	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	\N	2023-12-06 19:12:40.068768	2023-12-06 19:12:40.067867	a6d52836-36e1-4520-be8b-6c39f1ec1332	30
31	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	\N	2023-12-06 19:12:40.068871	2023-12-06 19:12:40.067869	93764b72-2c67-4c4e-9506-4366a3b82346	31
32	uri://ed-fi.org/IDEAPartDescriptor	IDEA Part B	IDEA Part B	IDEA Part B	\N	\N	\N	\N	2023-12-06 19:12:40.075875	2023-12-06 19:12:40.074285	8c018b7f-b642-462e-8b5b-cf2b8a97f37d	32
33	uri://ed-fi.org/IDEAPartDescriptor	IDEA Part C	IDEA Part C	IDEA Part C	\N	\N	\N	\N	2023-12-06 19:12:40.076011	2023-12-06 19:12:40.074508	067c1f3d-c09a-4865-ae90-cf02c475914a	33
34	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	\N	2023-12-06 19:12:40.076352	2023-12-06 19:12:40.076338	c32391e7-d71e-4416-ad70-18c7c8bfdc4a	34
39	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:40.11333	2023-12-06 19:12:40.112322	b10e636d-024e-4562-931f-77620341e809	39
44	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	\N	\N	\N	\N	2023-12-06 19:12:40.12233	2023-12-06 19:12:40.122299	6c1da6d7-75cf-4607-86e3-a57b18e24886	44
48	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	DEPRECATED: Mentoring Programs	DEPRECATED: Mentoring Programs	\N	\N	\N	\N	2023-12-06 19:12:40.131258	2023-12-06 19:12:40.131195	ad88d3ee-f9ad-443f-9adc-349bf8a85b02	48
53	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Residential Broadband	Residential Broadband	The type of internet service used in the student’s primary place of residence is residential broadband.	\N	\N	\N	\N	2023-12-06 19:12:40.165091	2023-12-06 19:12:40.164105	b1fe342b-2864-43fc-ada3-ea79115324aa	53
58	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	None	None	There is no internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:40.175537	2023-12-06 19:12:40.175521	854a0dc3-5aaf-47df-b071-4bd71e77d84b	58
66	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	\N	2023-12-06 19:12:40.219557	2023-12-06 19:12:40.21837	576cfddd-9c0f-4176-a899-cf5b40944453	66
70	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	\N	2023-12-06 19:12:40.256185	2023-12-06 19:12:40.255148	4ba1d97b-c488-4147-b9c6-0e517765ada9	70
75	uri://ed-fi.org/AccountTypeDescriptor	Expenditure	Expenditure	Expenditure	\N	\N	\N	\N	2023-12-06 19:12:40.297741	2023-12-06 19:12:40.296545	80fa6c3e-e1a6-4047-a567-515186b9fdbd	75
82	uri://ed-fi.org/InternetAccessDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:40.310589	2023-12-06 19:12:40.310525	7f8c0e20-2eb3-4067-86b8-a2fd788d6738	82
87	uri://ed-fi.org/InternetAccessDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:40.319723	2023-12-06 19:12:40.319664	f3b83a02-5288-4986-8b8e-fa89da8ee5fd	87
91	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:40.352705	2023-12-06 19:12:40.351853	5f2248f0-7ee2-4390-be10-a5d4966ccd56	91
95	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:40.362133	2023-12-06 19:12:40.362117	2cb508cf-1be9-4ae2-9267-2d7f26b2565e	95
99	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	\N	2023-12-06 19:12:40.396603	2023-12-06 19:12:40.396551	ec15deca-da7e-4fe2-99f2-74c9ee5c4023	99
100	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	\N	2023-12-06 19:12:40.402355	2023-12-06 19:12:40.402327	6d54f8b8-a64c-41db-b2ab-6d83610e03bd	100
102	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:40.433244	2023-12-06 19:12:40.432258	6958beca-daba-408c-9306-4055efad5a32	102
113	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	\N	2023-12-06 19:12:40.503043	2023-12-06 19:12:40.501797	f1a1a336-5cad-4f1c-a347-9792a0860116	113
118	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	\N	2023-12-06 19:12:40.513888	2023-12-06 19:12:40.512981	880ff1f4-2c0c-4426-9b1c-0e7796465744	118
119	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	\N	2023-12-06 19:12:40.521448	2023-12-06 19:12:40.521416	8fa1279d-2c1c-461d-a45a-eacf7b494d77	119
123	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	\N	2023-12-06 19:12:40.529516	2023-12-06 19:12:40.529452	7455326e-29a4-43a9-946e-973473c522ae	123
130	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	\N	2023-12-06 19:12:40.571881	2023-12-06 19:12:40.570983	f9e745f3-66ac-4146-807f-054ac7477e30	130
134	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	\N	2023-12-06 19:12:40.578601	2023-12-06 19:12:40.578557	54d32d3b-0916-49c2-8c90-92022aa64701	134
137	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	\N	2023-12-06 19:12:40.582995	2023-12-06 19:12:40.582888	4f97e690-f31a-4a18-aebc-d5a4b85be12b	137
141	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	\N	2023-12-06 19:12:40.590428	2023-12-06 19:12:40.590385	5a98ebb9-4586-4bb6-8a07-014e9557bcf0	141
145	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	\N	2023-12-06 19:12:40.600934	2023-12-06 19:12:40.600917	d105862d-809c-43a8-b366-160b1a4a94bb	145
149	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	\N	2023-12-06 19:12:40.608928	2023-12-06 19:12:40.608914	ea6942f9-571d-48b7-8970-0bd355e14dfa	149
156	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	\N	2023-12-06 19:12:40.620835	2023-12-06 19:12:40.620807	bef769e9-b901-479a-9050-c0430f16a28d	156
158	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	\N	2023-12-06 19:12:40.627775	2023-12-06 19:12:40.627739	3069acdc-8cd9-4c93-9d28-44572323d3f6	158
167	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	\N	2023-12-06 19:12:40.642899	2023-12-06 19:12:40.642869	d9a13a93-151c-469f-860f-619afa13486a	167
176	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	\N	2023-12-06 19:12:40.660178	2023-12-06 19:12:40.660151	e256da27-7f88-4db7-b2a3-f90db73e9aca	176
183	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	\N	2023-12-06 19:12:40.670882	2023-12-06 19:12:40.670854	118dec9b-2cb2-4e41-879f-d880cb501732	183
190	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	\N	2023-12-06 19:12:40.683569	2023-12-06 19:12:40.683514	0f3f8c21-8496-4df6-becc-bad3d400e0ef	190
193	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	\N	2023-12-06 19:12:40.691129	2023-12-06 19:12:40.691103	4eb80414-9f68-4532-b6ba-ac5866d6a4d6	193
198	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	\N	2023-12-06 19:12:40.699808	2023-12-06 19:12:40.699691	3f146641-2714-40bc-a717-fecfdbf3ede9	198
205	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	\N	2023-12-06 19:12:40.714241	2023-12-06 19:12:40.714213	8b5debc9-2e62-4c82-a515-f1c2b2937016	205
208	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	\N	2023-12-06 19:12:40.720363	2023-12-06 19:12:40.720335	ebeca1b2-9da6-45f9-b714-bc93a10c7ea0	208
210	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	\N	2023-12-06 19:12:40.724841	2023-12-06 19:12:40.724803	d78f5994-955c-4940-b786-e9d3e9a73b9c	210
35	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	\N	2023-12-06 19:12:40.07725	2023-12-06 19:12:40.077211	632ae2d7-c981-4a31-b9d2-600faa73df69	35
36	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	\N	2023-12-06 19:12:40.083856	2023-12-06 19:12:40.083818	7cd48726-c65d-460d-98db-b1ef9ee8a081	36
41	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Correction	Juvenile Correction	Juvenile Correction	\N	\N	\N	\N	2023-12-06 19:12:40.115097	2023-12-06 19:12:40.115039	ae72c39a-569f-47fa-a937-2d8582d5cc70	41
42	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-12-06 19:12:40.120388	2023-12-06 19:12:40.120357	42736de1-e3ba-4a65-9ff7-1e52484e34ff	42
45	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	DEPRECATED: Transition Programs	DEPRECATED: Transition Programs	\N	\N	\N	\N	2023-12-06 19:12:40.124158	2023-12-06 19:12:40.124049	50de914c-5472-4281-b2a3-abe2c85e0704	45
50	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	\N	\N	\N	\N	2023-12-06 19:12:40.136801	2023-12-06 19:12:40.136773	2ec3a279-b4f6-4574-a5d7-245cffcc9b04	50
52	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Community Provided Wi-Fi	Community Provided Wi-Fi	The type of internet service used in the student’s primary place of residence is community provided Wi-Fi.	\N	\N	\N	\N	2023-12-06 19:12:40.165084	2023-12-06 19:12:40.164128	0b38b65b-2ebe-44cf-b301-83379a7ecafe	51
55	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Other	Other	The type of internet service used in the student’s primary place of residence is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:40.17282	2023-12-06 19:12:40.172721	de0c0d99-317e-4282-9a28-437d30a87fc1	55
62	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	\N	2023-12-06 19:12:40.208551	2023-12-06 19:12:40.207416	379f350e-9acf-4a12-b6f3-b9d36338fb90	62
63	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:40.219472	2023-12-06 19:12:40.218832	117f7d5e-bde1-48d6-8668-3a8fc704bdff	63
67	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	\N	2023-12-06 19:12:40.226821	2023-12-06 19:12:40.226789	d785156a-eec8-4c7c-94c6-ea89b1533068	67
69	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	\N	2023-12-06 19:12:40.255971	2023-12-06 19:12:40.255139	03dd5c31-3ffa-44ad-a2c4-71768d9c2cca	69
77	uri://ed-fi.org/AccountTypeDescriptor	Revenue	Revenue	Revenue	\N	\N	\N	\N	2023-12-06 19:12:40.29773	2023-12-06 19:12:40.296559	eb4671cc-538c-41f4-bbc6-1fcb2cb402d1	77
79	uri://ed-fi.org/InternetAccessDescriptor	Fiber	Fiber	Fiber	\N	\N	\N	\N	2023-12-06 19:12:40.306381	2023-12-06 19:12:40.306337	1f439e08-7d02-4d28-8b35-90d7eaafc1e2	79
86	uri://ed-fi.org/InternetAccessDescriptor	High Speed	DEPRECATED: High Speed	DEPRECATED: High Speed	\N	\N	\N	\N	2023-12-06 19:12:40.319209	2023-12-06 19:12:40.319194	4d9f7672-b934-4688-94d1-18b4062dfd31	86
88	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	DEPRECATED: Less Than High Speed	DEPRECATED: Less Than High Speed	\N	\N	\N	\N	2023-12-06 19:12:40.32751	2023-12-06 19:12:40.327472	057984fd-d477-48ad-bd4d-a14d87efd6d0	88
92	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:40.352967	2023-12-06 19:12:40.351871	cfb19f0f-6652-4b1f-960e-db4c886aea63	92
97	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	\N	2023-12-06 19:12:40.3957	2023-12-06 19:12:40.395654	7cf76bc6-2051-441a-82e9-0c520da86635	97
103	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:40.433138	2023-12-06 19:12:40.432253	89342adf-c6c3-4b07-85e8-298b57165eec	103
105	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	\N	2023-12-06 19:12:40.446411	2023-12-06 19:12:40.445271	08f7aa49-e602-40b3-9dd2-de0d3c70e879	105
108	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	\N	2023-12-06 19:12:40.454094	2023-12-06 19:12:40.454064	49859535-38ba-4e87-8b79-c0d042a30707	108
114	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	\N	2023-12-06 19:12:40.505714	2023-12-06 19:12:40.505314	5f181692-0898-40cb-954f-a7611ea4ace9	114
116	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:40.513757	2023-12-06 19:12:40.513743	aabdde74-9531-4f10-8804-8ab0ee279c8c	116
122	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:40.523639	2023-12-06 19:12:40.523614	3b7a6474-617c-4ecd-9232-2fc71b9c30b9	122
126	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	\N	2023-12-06 19:12:40.532876	2023-12-06 19:12:40.532839	f7cb7247-e7bb-416e-8fb4-a275be2d2e55	126
131	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	\N	2023-12-06 19:12:40.571873	2023-12-06 19:12:40.570992	931da46c-fcc0-4718-9f39-bc52ea20aaec	131
138	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	\N	2023-12-06 19:12:40.588042	2023-12-06 19:12:40.588011	5c304f43-e146-4b8a-8441-0a6a8b80cd65	138
143	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	\N	2023-12-06 19:12:40.595292	2023-12-06 19:12:40.595266	fd6273d6-111b-46eb-8f6d-4d5cdbe76241	143
150	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	\N	2023-12-06 19:12:40.609533	2023-12-06 19:12:40.609474	bf9858c4-7da6-424a-ac0f-ebfca6529fca	150
152	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	\N	2023-12-06 19:12:40.613041	2023-12-06 19:12:40.612998	08f596c4-5cb8-4ad3-a283-cf88ff39a256	152
160	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	\N	2023-12-06 19:12:40.628852	2023-12-06 19:12:40.628825	4e18aa75-3be5-47a7-842c-8fb4f6eceeeb	160
163	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	\N	2023-12-06 19:12:40.635297	2023-12-06 19:12:40.635257	8f41addf-2688-41fe-9a23-41e3557edecb	163
169	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	\N	2023-12-06 19:12:40.646734	2023-12-06 19:12:40.646654	ef84b7d9-b65a-483c-8189-52e17ddbb242	169
172	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	\N	2023-12-06 19:12:40.652678	2023-12-06 19:12:40.652648	acd6165e-7d64-4c7d-8d06-aa1d134b063f	172
37	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	\N	2023-12-06 19:12:40.084893	2023-12-06 19:12:40.084845	d3b4eb8f-8804-44c6-b240-63351077424a	37
38	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Adult Correction	Adult Correction	Adult Correction	\N	\N	\N	\N	2023-12-06 19:12:40.113161	2023-12-06 19:12:40.112334	9f691056-20cb-48aa-9016-83ed9dd2b287	38
43	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-12-06 19:12:40.121661	2023-12-06 19:12:40.121633	9255fdb8-e9f8-41ff-a042-659dc29f82df	43
46	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	DEPRECATED: Special Programs	DEPRECATED: Special Programs	\N	\N	\N	\N	2023-12-06 19:12:40.129006	2023-12-06 19:12:40.128979	eabc59bd-4c32-4789-9195-212ec0fd0cd7	46
49	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	\N	\N	\N	\N	2023-12-06 19:12:40.13263	2023-12-06 19:12:40.132262	c007e110-4f62-4e43-bfe7-54a026e3c660	49
54	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Hot Spot	Hot Spot	The type of internet service used in the student’s primary place of residence is a standalone hot spot device that is not a cell phone that allows for additional device access.	\N	\N	\N	\N	2023-12-06 19:12:40.165091	2023-12-06 19:12:40.164095	a2dbff42-3bd3-4a9d-8748-39b361ae0dcc	54
57	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Satellite	Satellite	The type of internet service used in the student’s primary place of residence is satellite.	\N	\N	\N	\N	2023-12-06 19:12:40.173749	2023-12-06 19:12:40.173735	f14e7ad6-0141-47d6-9ea1-b6f5ee9c3986	57
59	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Unknown	Unknown	It is not known whether there is internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:40.184764	2023-12-06 19:12:40.1847	2a6f9844-8d71-4957-9844-ce0be88c9e6a	59
61	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	\N	2023-12-06 19:12:40.208549	2023-12-06 19:12:40.207436	957565fc-bb51-4759-98af-ca69460815b0	61
65	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:40.219564	2023-12-06 19:12:40.21899	6c3e962d-3a11-412f-b095-1531fc86b1b4	65
68	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	\N	2023-12-06 19:12:40.228271	2023-12-06 19:12:40.228048	940bb967-c69c-4254-91df-b22bf6866f13	68
71	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	\N	2023-12-06 19:12:40.256209	2023-12-06 19:12:40.255165	241f7b2b-1eb6-421a-a63e-5d6151392fdd	71
76	uri://ed-fi.org/AccountTypeDescriptor	Balance sheet	Balance sheet	Balance sheet	\N	\N	\N	\N	2023-12-06 19:12:40.29798	2023-12-06 19:12:40.296572	f7c27e68-a71e-4dc2-a3bb-0a8d7f2d2421	76
78	uri://ed-fi.org/InternetAccessDescriptor	DSL	DSL	DSL	\N	\N	\N	\N	2023-12-06 19:12:40.304019	2023-12-06 19:12:40.30399	e895f23f-4e2c-4814-93ca-442807c5227b	78
80	uri://ed-fi.org/InternetAccessDescriptor	Microwave	Microwave	Microwave	\N	\N	\N	\N	2023-12-06 19:12:40.30712	2023-12-06 19:12:40.307032	3caea1cc-6e86-42cc-9fc3-f45b59c7778c	80
83	uri://ed-fi.org/InternetAccessDescriptor	Personal hotspot/smartphone	Personal hotspot/smartphone	Personal hotspot/smartphone	\N	\N	\N	\N	2023-12-06 19:12:40.313031	2023-12-06 19:12:40.313016	ad2734a5-5af6-49d9-8e19-ca40347e859f	83
85	uri://ed-fi.org/InternetAccessDescriptor	School-provided hotspot	School-provided hotspot	School-provided hotspot	\N	\N	\N	\N	2023-12-06 19:12:40.317146	2023-12-06 19:12:40.317118	038fcc52-0547-4a87-9232-2f5cdfb6f9b1	85
90	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:40.352751	2023-12-06 19:12:40.351844	002f5f5c-97d1-433f-9091-d14d4e065766	89
93	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:40.361511	2023-12-06 19:12:40.361494	8af96269-f0a5-4953-879d-76962e4b672c	93
96	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	\N	2023-12-06 19:12:40.39358	2023-12-06 19:12:40.392738	3b021fc4-cdb0-47dc-91f9-21efb411fb50	96
101	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-12-06 19:12:40.433253	2023-12-06 19:12:40.432267	752bac55-8f19-49df-8939-1b287df9e6c3	101
104	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	\N	2023-12-06 19:12:40.446467	2023-12-06 19:12:40.446217	b4d122ea-04b7-4cc4-9cd0-fa082abeda72	104
109	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	\N	2023-12-06 19:12:40.455255	2023-12-06 19:12:40.455241	4800f716-96ca-48ea-89c4-f651b2b701db	109
110	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	\N	2023-12-06 19:12:40.464756	2023-12-06 19:12:40.464708	4a87e7af-6466-49d7-a56e-691b21dab8ac	110
117	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-12-06 19:12:40.513508	2023-12-06 19:12:40.509946	a5dc098f-1730-4bc7-921f-385698d77c57	117
121	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	\N	2023-12-06 19:12:40.522875	2023-12-06 19:12:40.522858	0fde056b-e455-4395-bea5-8f9e4bcdfdde	121
125	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:40.532112	2023-12-06 19:12:40.532082	5982e8c1-858c-464b-bab8-32c706cccef4	125
127	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-12-06 19:12:40.535944	2023-12-06 19:12:40.535915	e71d34c4-2a87-4015-a05c-c86f6ebc2689	127
128	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:40.540407	2023-12-06 19:12:40.540377	6a300bca-b7be-41f0-a800-a931d72b179f	128
132	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	\N	2023-12-06 19:12:40.571947	2023-12-06 19:12:40.571841	9ccac79a-7d13-41a7-8b37-2d9c7d8a508f	132
136	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	\N	2023-12-06 19:12:40.57963	2023-12-06 19:12:40.579429	ac416f70-b2bc-435a-a8ff-34189b36cc56	136
139	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	\N	2023-12-06 19:12:40.588105	2023-12-06 19:12:40.58797	2d2d7c2a-b061-4626-8d4a-55076b295e78	139
144	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	\N	2023-12-06 19:12:40.595745	2023-12-06 19:12:40.595707	5f81efa0-de7e-4099-a82b-b0464dd2e9ed	144
40	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Detention	Juvenile Detention	Juvenile Detention	\N	\N	\N	\N	2023-12-06 19:12:40.113324	2023-12-06 19:12:40.112329	68a905b8-6447-415f-aafb-40754974acf2	40
47	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	DEPRECATED: Health And Social Services	DEPRECATED: Health And Social Services	\N	\N	\N	\N	2023-12-06 19:12:40.130088	2023-12-06 19:12:40.130073	5648a96b-b8ee-43b1-addc-6d9115e0ac2b	47
51	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Cellular Network	Cellular Network	The type of internet service used in the student’s primary place of residence is a cellular network that creates a hot spot using a cell phone for additional device access or access to the internet is only available through a cellular device.	\N	\N	\N	\N	2023-12-06 19:12:40.164987	2023-12-06 19:12:40.164114	5e0c093e-d83f-4bc3-b0d2-8bee519546e8	52
56	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Dial-up	Dial-up	The type of internet service used in the student’s primary place of residence is dial-up.	\N	\N	\N	\N	2023-12-06 19:12:40.173531	2023-12-06 19:12:40.173499	ead4f7db-8729-48fd-b37e-702926eca105	56
60	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	\N	2023-12-06 19:12:40.208359	2023-12-06 19:12:40.207446	a9b21ac6-523e-4b78-8d28-4a794bf63599	60
64	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-12-06 19:12:40.219564	2023-12-06 19:12:40.218393	16bae0e8-82ad-4eeb-a69b-761a653c46e1	64
72	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	\N	2023-12-06 19:12:40.256139	2023-12-06 19:12:40.255128	23cd09d7-ab2b-4b98-b06f-1f1435aded9f	72
73	uri://ed-fi.org/InternetAccessDescriptor	Cable	Cable	Cable	\N	\N	\N	\N	2023-12-06 19:12:40.289833	2023-12-06 19:12:40.288804	f9245173-cef1-42aa-a1d8-24795c76ddf1	73
74	uri://ed-fi.org/InternetAccessDescriptor	Dial-up	Dial-up	Dial-up	\N	\N	\N	\N	2023-12-06 19:12:40.297408	2023-12-06 19:12:40.29737	75c66b91-7e02-44db-bc9b-0691fcfceed1	74
81	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	\N	2023-12-06 19:12:40.308766	2023-12-06 19:12:40.308746	bdf402f3-968b-48ee-8247-f1d5a3c8153d	81
84	uri://ed-fi.org/InternetAccessDescriptor	Satellite	Satellite	Satellite	\N	\N	\N	\N	2023-12-06 19:12:40.315954	2023-12-06 19:12:40.315927	9b7c6ef2-7979-460a-b27f-08d16f57c41b	84
89	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:40.352726	2023-12-06 19:12:40.351869	e685b6bf-7b0b-4d66-ae58-781b539dbee4	90
94	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:40.361197	2023-12-06 19:12:40.361134	23be11ee-0bd1-45d8-8b03-af1a98950833	94
98	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-12-06 19:12:40.396281	2023-12-06 19:12:40.39625	758cc168-339e-4b8d-9c62-765d09aa3af6	98
106	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:40.446699	2023-12-06 19:12:40.446315	6f853f4f-c687-4734-863b-82d01130ac6e	106
107	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	\N	2023-12-06 19:12:40.454224	2023-12-06 19:12:40.454195	f72182a6-0f20-4313-b9be-d81220544d76	107
111	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	\N	2023-12-06 19:12:40.465024	2023-12-06 19:12:40.464965	e5a63a92-ed81-4f36-916f-8ed8e4103939	111
112	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	\N	2023-12-06 19:12:40.502993	2023-12-06 19:12:40.502656	8e70486e-34b9-4eb9-86a8-8ad176f4f19e	112
115	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:40.513444	2023-12-06 19:12:40.513384	c69311a8-57bf-47e3-9adf-47f24978188d	115
120	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:40.521898	2023-12-06 19:12:40.52187	0cdef803-f3bb-4155-a1e0-88c3c840388b	120
124	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	\N	2023-12-06 19:12:40.531397	2023-12-06 19:12:40.53136	e8c78b39-004b-4fe0-9a47-7af03758178d	124
129	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	\N	2023-12-06 19:12:40.541783	2023-12-06 19:12:40.541742	5a5a21e5-d937-48b1-a696-e611e2378014	129
133	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	\N	2023-12-06 19:12:40.572145	2023-12-06 19:12:40.571855	34a41084-a0ee-43bc-9356-99e2fb4d06c7	133
135	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	\N	2023-12-06 19:12:40.579379	2023-12-06 19:12:40.579317	231198a5-de52-4b26-a530-893056783df4	135
140	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	\N	2023-12-06 19:12:40.588353	2023-12-06 19:12:40.588338	55a1e4dc-27db-467b-ace2-94230a9d5682	140
142	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	\N	2023-12-06 19:12:40.595197	2023-12-06 19:12:40.595117	118052c0-259c-4fdf-abcb-981d528b8d1d	142
147	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	\N	2023-12-06 19:12:40.601376	2023-12-06 19:12:40.601362	d6a4e306-87c7-479d-9ac1-f4780bfeb7cf	147
154	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	\N	2023-12-06 19:12:40.619146	2023-12-06 19:12:40.619116	e437fb4b-c45d-49d7-981f-b6da262d0e04	154
161	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	\N	2023-12-06 19:12:40.630016	2023-12-06 19:12:40.629914	96e8d05d-8828-4e96-a96d-f9327aca3a2a	161
162	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	\N	2023-12-06 19:12:40.634609	2023-12-06 19:12:40.634464	cdfdcad9-a9a2-4a17-be9b-6131c4830500	162
165	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	\N	2023-12-06 19:12:40.640398	2023-12-06 19:12:40.640368	55f8673b-a3e8-4066-9983-cf9ae5fc5824	165
168	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	\N	2023-12-06 19:12:40.644379	2023-12-06 19:12:40.644349	8816c26f-2814-47c3-8a9e-de27c5feed92	168
171	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	\N	2023-12-06 19:12:40.651934	2023-12-06 19:12:40.6519	79d12783-d60f-4c48-b4fc-47f5c159a890	171
174	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	\N	2023-12-06 19:12:40.654714	2023-12-06 19:12:40.654673	aebc6eca-b1a5-4c2d-b343-d6f2a25de524	174
177	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	\N	2023-12-06 19:12:40.660311	2023-12-06 19:12:40.65983	aa050864-66e4-40c0-a433-467a6b7ab8b9	177
146	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	\N	2023-12-06 19:12:40.600979	2023-12-06 19:12:40.600959	48b3b7de-3fa4-40a2-88f7-0a4a75a37902	146
148	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	\N	2023-12-06 19:12:40.606675	2023-12-06 19:12:40.606646	241871d0-2746-48aa-8870-488150f90722	148
151	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	\N	2023-12-06 19:12:40.61068	2023-12-06 19:12:40.610595	9ef67c4a-3fc2-46e4-86e8-7e0edb0f83b7	151
153	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	\N	2023-12-06 19:12:40.616275	2023-12-06 19:12:40.61623	6b093fb0-2975-4f43-a7a8-88a634357c37	153
155	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	\N	2023-12-06 19:12:40.620171	2023-12-06 19:12:40.620113	dd2b6187-d017-4455-a10e-7f4d8fbe4554	155
157	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	\N	2023-12-06 19:12:40.622649	2023-12-06 19:12:40.622621	54e672d1-eb5e-4e30-bd73-7d72a885b3eb	157
159	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	\N	2023-12-06 19:12:40.628474	2023-12-06 19:12:40.628424	32f54632-f07c-4def-b50b-c75a9c244feb	159
164	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	\N	2023-12-06 19:12:40.635738	2023-12-06 19:12:40.635724	84ec97ee-55f1-47ab-8329-4846dfd71a65	164
166	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	\N	2023-12-06 19:12:40.640507	2023-12-06 19:12:40.639535	e9320f82-6222-483f-93ba-d634555fab78	166
170	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	\N	2023-12-06 19:12:40.647684	2023-12-06 19:12:40.647655	3727eca8-8479-414b-8249-f4b74ad23c84	170
173	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	\N	2023-12-06 19:12:40.653455	2023-12-06 19:12:40.653417	48a7f1a2-0493-42cb-ac51-4decdfd57541	173
175	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	\N	2023-12-06 19:12:40.659516	2023-12-06 19:12:40.659478	2f07fd66-b8c7-4b17-bb6b-2d29b5129145	175
180	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	\N	2023-12-06 19:12:40.667022	2023-12-06 19:12:40.666994	63bc848e-5866-4ed0-81dd-c50d9e19f9e7	180
182	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	\N	2023-12-06 19:12:40.67122	2023-12-06 19:12:40.671191	b4a12367-be4f-4e93-b8f8-9992b2acb401	182
185	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	\N	2023-12-06 19:12:40.674905	2023-12-06 19:12:40.674864	4e69a5ac-ed63-468a-86ca-db4fd7bd4c01	185
188	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	\N	2023-12-06 19:12:40.682653	2023-12-06 19:12:40.682601	3a123f21-7d88-460e-a41a-efa255f14ed2	188
195	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	\N	2023-12-06 19:12:40.693946	2023-12-06 19:12:40.693736	928ebc3e-3872-4e14-b88d-0dca6b2abef5	195
197	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	\N	2023-12-06 19:12:40.699059	2023-12-06 19:12:40.698915	31b29270-3e3e-4b0e-bbe7-e0b5a237af1c	197
201	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	\N	2023-12-06 19:12:40.705798	2023-12-06 19:12:40.70577	153735e2-e26a-4fdb-a5da-d8538c51d23a	201
203	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	\N	2023-12-06 19:12:40.708691	2023-12-06 19:12:40.708654	caa518c6-5c54-4abe-8f34-8cec404cf78b	203
209	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	\N	2023-12-06 19:12:40.722649	2023-12-06 19:12:40.72262	6574ebcb-2833-479d-a014-0774f1d51d27	209
213	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	\N	2023-12-06 19:12:40.730855	2023-12-06 19:12:40.730826	cec0f27a-602e-4a19-9fdb-59f66cea05e0	213
217	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	\N	2023-12-06 19:12:40.740005	2023-12-06 19:12:40.739976	8b7dda58-2860-4f6c-9dfa-e19004705f19	217
219	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	\N	2023-12-06 19:12:40.747311	2023-12-06 19:12:40.747285	70c3cd8e-02b7-4a14-813b-926ee20e52ee	219
225	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	\N	2023-12-06 19:12:40.756525	2023-12-06 19:12:40.756131	89a1aa32-d7d5-4687-8ab8-1f22110a0532	225
232	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	\N	2023-12-06 19:12:40.77536	2023-12-06 19:12:40.775334	9ccfb324-522d-4bf3-877d-50636715a55e	232
235	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	\N	2023-12-06 19:12:40.777739	2023-12-06 19:12:40.777597	c24e0a39-b758-43e0-9f87-3e45b5ebc6fa	235
238	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	\N	2023-12-06 19:12:40.785975	2023-12-06 19:12:40.78574	aeb47804-2b53-4cea-bedd-e808c715eebd	238
241	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	\N	2023-12-06 19:12:40.792446	2023-12-06 19:12:40.792352	9dc8aeb5-35eb-403e-b95c-a57e09a743a2	241
243	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	\N	2023-12-06 19:12:40.797546	2023-12-06 19:12:40.797531	92a3ecd6-b5d1-4a98-8fb2-09c6469b03d4	243
247	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	\N	2023-12-06 19:12:40.806345	2023-12-06 19:12:40.80633	7783fdd4-dd4a-4846-aa32-308ab8738f05	247
250	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	\N	2023-12-06 19:12:40.814768	2023-12-06 19:12:40.814569	c594e4a8-eabb-42a2-9bb9-e5c06b468fee	250
256	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	\N	2023-12-06 19:12:40.825974	2023-12-06 19:12:40.825919	ad200415-ce23-42c3-9f20-ebd558dc706f	256
261	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	\N	2023-12-06 19:12:40.841079	2023-12-06 19:12:40.841038	a63f9192-d4cb-4970-b743-b907c3b16a34	261
268	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	\N	2023-12-06 19:12:40.86029	2023-12-06 19:12:40.860256	abce9e47-9462-4a5b-8494-03fd6ef895a2	268
273	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	\N	2023-12-06 19:12:40.873296	2023-12-06 19:12:40.873268	414715d5-bce0-4ae3-a232-fd35332ca8ac	273
277	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	\N	2023-12-06 19:12:40.881547	2023-12-06 19:12:40.881503	ed0e2377-28b4-4a43-9a2a-c72cb8c1f5bf	277
279	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	\N	2023-12-06 19:12:40.886858	2023-12-06 19:12:40.886822	ee86a161-a4d2-486a-84cc-48733c822236	279
291	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	\N	2023-12-06 19:12:40.917403	2023-12-06 19:12:40.917352	28ba295b-0de9-491a-87b9-29ecea6cfb4e	291
294	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	\N	2023-12-06 19:12:40.923449	2023-12-06 19:12:40.923381	04283b99-0e7d-4695-96af-5c5651645a7c	294
297	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	\N	2023-12-06 19:12:40.933726	2023-12-06 19:12:40.933698	2763c94c-4595-4947-846f-80fbfea8de63	297
302	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	\N	2023-12-06 19:12:40.947064	2023-12-06 19:12:40.947035	55f85b47-6f8a-4daa-bf7d-3a6ede4b4fb8	302
309	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	\N	2023-12-06 19:12:40.977209	2023-12-06 19:12:40.97718	7b4b14fc-b6ea-4bec-bb26-36b5d81d2d16	309
314	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	\N	2023-12-06 19:12:40.98648	2023-12-06 19:12:40.986254	0ff35f84-e04e-434a-81ce-d87168bfaae5	314
1923	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	\N	2023-12-06 19:12:47.356941	2023-12-06 19:12:47.356851	f5371c7e-223f-4be3-a257-8d17fb5b9236	1923
178	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	\N	2023-12-06 19:12:40.662577	2023-12-06 19:12:40.66254	5d8fa0bf-8558-48fe-bc5e-eff0f631d5b1	178
181	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	\N	2023-12-06 19:12:40.667347	2023-12-06 19:12:40.667333	886aa11e-b4af-425a-9f38-0519ddaed607	181
184	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	\N	2023-12-06 19:12:40.67445	2023-12-06 19:12:40.674421	21221c83-893b-48cf-a36c-b12a992082a7	184
189	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	\N	2023-12-06 19:12:40.682885	2023-12-06 19:12:40.68283	bc6f6dc7-44aa-4a7e-9878-3f3866732f5e	189
192	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	\N	2023-12-06 19:12:40.689022	2023-12-06 19:12:40.688985	c48c7a4a-4d73-40f4-974f-7dcd7be9266e	192
196	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	\N	2023-12-06 19:12:40.696326	2023-12-06 19:12:40.696311	d10d1c3c-8826-4bf0-935d-95931d37fdeb	196
200	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	\N	2023-12-06 19:12:40.705252	2023-12-06 19:12:40.705135	b72939fb-2390-4a23-82dd-245e4d266846	200
204	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	\N	2023-12-06 19:12:40.712474	2023-12-06 19:12:40.712099	63be8482-ca62-4e84-8a8b-db4338a9b4bc	204
207	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	\N	2023-12-06 19:12:40.718892	2023-12-06 19:12:40.718462	97d35f3c-df41-43b2-9d35-174e22e40486	207
211	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	\N	2023-12-06 19:12:40.729712	2023-12-06 19:12:40.729559	74dd42b2-5bf6-4154-b96f-41d896bded60	211
214	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	\N	2023-12-06 19:12:40.733278	2023-12-06 19:12:40.733246	f60a2e3d-0fbb-475b-ae77-6dc3b92b934f	214
216	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:40.739154	2023-12-06 19:12:40.739041	4bd0f377-99cb-48e4-ad43-196df5a832f8	216
222	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	\N	2023-12-06 19:12:40.749795	2023-12-06 19:12:40.749767	9b8d9f66-93f1-4051-9575-6d8f884b0966	222
223	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	\N	2023-12-06 19:12:40.75352	2023-12-06 19:12:40.753491	7da7f247-7509-49a0-a493-2af75a08e47e	223
228	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	\N	2023-12-06 19:12:40.763785	2023-12-06 19:12:40.763755	186ea6a0-6e96-4836-b414-0ac1e326ad2b	228
230	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	\N	2023-12-06 19:12:40.767694	2023-12-06 19:12:40.7676	87623ee7-5160-4174-9944-04003518be4b	230
234	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	\N	2023-12-06 19:12:40.776373	2023-12-06 19:12:40.776287	e97a55ea-8534-48bb-8bd1-32c61c0f7522	234
236	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	\N	2023-12-06 19:12:40.782157	2023-12-06 19:12:40.782104	2ec2f323-aa6d-40f9-bddb-3bb4fade70dd	236
239	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	\N	2023-12-06 19:12:40.78868	2023-12-06 19:12:40.788641	f0c1174e-37ea-4f41-9029-fbdefc6c6a17	239
242	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	\N	2023-12-06 19:12:40.797592	2023-12-06 19:12:40.797571	a00c7b9d-ee91-422f-8765-a48538d9a8cc	242
249	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	\N	2023-12-06 19:12:40.812206	2023-12-06 19:12:40.81219	5f360cb1-0f6e-487d-bcf8-4528bc2767b2	249
251	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	\N	2023-12-06 19:12:40.815533	2023-12-06 19:12:40.815501	0e5cb5db-85af-47b2-b2d6-20da35ad9c5e	251
255	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	\N	2023-12-06 19:12:40.825592	2023-12-06 19:12:40.825563	c568d5f4-5763-46f1-a3e6-dd55d8c0d1f7	255
259	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	\N	2023-12-06 19:12:40.833457	2023-12-06 19:12:40.833428	2fdd6777-5caa-4abf-9b0d-87b9065378b0	259
262	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	\N	2023-12-06 19:12:40.842748	2023-12-06 19:12:40.842731	40d14902-4b88-4bbc-be57-58a61a05db75	262
265	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	\N	2023-12-06 19:12:40.849774	2023-12-06 19:12:40.849757	de8c0b94-9b2a-4416-a773-2f76f13b8efb	265
269	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	\N	2023-12-06 19:12:40.860558	2023-12-06 19:12:40.86052	2207a2cd-9612-4e00-9ebe-fdc785f234e4	269
271	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	\N	2023-12-06 19:12:40.867454	2023-12-06 19:12:40.867425	9c1e2c85-4f78-4472-aa10-c168e26ea85c	271
276	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	\N	2023-12-06 19:12:40.880089	2023-12-06 19:12:40.880046	7a4417b0-7518-431c-b33b-9379c2397841	276
280	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	\N	2023-12-06 19:12:40.887842	2023-12-06 19:12:40.887787	324ae856-2b1a-4c23-a166-bd0656c14b43	280
283	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	\N	2023-12-06 19:12:40.896731	2023-12-06 19:12:40.896495	3bd87266-864c-4f01-8a92-9cf4c3eaef93	283
286	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	\N	2023-12-06 19:12:40.903956	2023-12-06 19:12:40.903934	045211d8-c641-42c7-b707-e9fce8700205	286
287	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	\N	2023-12-06 19:12:40.90804	2023-12-06 19:12:40.907861	475b1b36-b438-4fa9-9814-50e99ebc51ab	287
290	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	\N	2023-12-06 19:12:40.916524	2023-12-06 19:12:40.916497	ba431141-3031-4daa-91f5-abe1be3b85ac	290
292	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	\N	2023-12-06 19:12:40.919659	2023-12-06 19:12:40.91962	64a1aec6-8f9d-4d1e-9fc2-8785073edb6b	292
296	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	\N	2023-12-06 19:12:40.932305	2023-12-06 19:12:40.932277	3d85bc23-a73b-414a-be4a-a73d16eaf7eb	296
301	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	\N	2023-12-06 19:12:40.947229	2023-12-06 19:12:40.946796	302a8900-8f6a-4e72-8f34-12be96c07e5f	301
304	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	\N	2023-12-06 19:12:40.954664	2023-12-06 19:12:40.954609	053e889a-217e-47b9-a03f-ca248717cfbe	304
308	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	\N	2023-12-06 19:12:40.975103	2023-12-06 19:12:40.975062	bd9dd199-c040-4af7-9212-0f602777ba4a	308
312	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	\N	2023-12-06 19:12:40.984308	2023-12-06 19:12:40.984257	eab9847d-01e4-445e-98a5-7780f012955b	312
320	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	\N	2023-12-06 19:12:41.00008	2023-12-06 19:12:41.000066	6a19db58-c1c4-4d72-9213-26e06c33bffa	320
321	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	\N	2023-12-06 19:12:41.005224	2023-12-06 19:12:41.005195	eb68be1b-4876-44cc-84c0-03509d3fe0ca	321
323	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	\N	2023-12-06 19:12:41.01116	2023-12-06 19:12:41.011131	8d3eb410-d51f-4fee-ad0a-9b0b8bde879a	323
328	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	\N	2023-12-06 19:12:41.018869	2023-12-06 19:12:41.018854	f50a0781-1b06-4242-804d-8389a95782c2	328
1937	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	\N	2023-12-06 19:12:47.388897	2023-12-06 19:12:47.388451	7d27f216-8290-48b1-8bd0-d63563b73a32	1937
179	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	\N	2023-12-06 19:12:40.66616	2023-12-06 19:12:40.66612	5be5ca88-e29e-4abf-ae5c-1f78c943cba1	179
186	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	\N	2023-12-06 19:12:40.676562	2023-12-06 19:12:40.676533	8749aad5-3f1f-4456-a5fe-fd2c14a541b4	186
187	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	\N	2023-12-06 19:12:40.68014	2023-12-06 19:12:40.680114	5df8f0a4-6690-41e5-94f3-84c9262e2c59	187
191	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	\N	2023-12-06 19:12:40.687262	2023-12-06 19:12:40.687223	0d75339c-6746-497a-8246-edf32697a4e6	191
194	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	\N	2023-12-06 19:12:40.692323	2023-12-06 19:12:40.69183	4bd1d273-f482-470e-8700-c9282442064f	194
199	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	\N	2023-12-06 19:12:40.700172	2023-12-06 19:12:40.700145	e5ac704d-b0ec-48f6-a076-a8c0482eabbb	199
202	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	\N	2023-12-06 19:12:40.707589	2023-12-06 19:12:40.707558	41174684-c105-4c1a-8fb6-d0da2b71c702	202
206	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	\N	2023-12-06 19:12:40.718887	2023-12-06 19:12:40.718863	9279fe09-f2f0-4b2a-a3d9-adf6ac392383	206
215	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	\N	2023-12-06 19:12:40.737178	2023-12-06 19:12:40.737119	8fc30e38-5256-4a4d-a831-09219a3ff2e1	215
218	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	\N	2023-12-06 19:12:40.742629	2023-12-06 19:12:40.741523	e624fcda-ae83-4711-971d-766a3700e6c6	218
221	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	\N	2023-12-06 19:12:40.747916	2023-12-06 19:12:40.747771	19a14e63-f64d-437b-a38c-004358ddcaa9	221
224	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	\N	2023-12-06 19:12:40.756906	2023-12-06 19:12:40.756674	4a86bce6-1c76-4928-a007-00c777110bce	224
227	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	\N	2023-12-06 19:12:40.762775	2023-12-06 19:12:40.762744	56edcd85-6c59-486e-99a0-fe744155e8cb	227
231	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	\N	2023-12-06 19:12:40.769394	2023-12-06 19:12:40.769213	88a04905-0346-4d2a-9ed1-7bf505161ba1	231
233	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	\N	2023-12-06 19:12:40.775322	2023-12-06 19:12:40.775236	1d2d1bf2-8de0-4141-a41d-5b7fd10ee990	233
245	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	\N	2023-12-06 19:12:40.799502	2023-12-06 19:12:40.799456	a64313ff-cbc0-4299-a439-4c0574a74fb1	245
253	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	\N	2023-12-06 19:12:40.818602	2023-12-06 19:12:40.818575	2b3f6483-5f15-4e72-ad0d-799917e7a465	253
257	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	\N	2023-12-06 19:12:40.830288	2023-12-06 19:12:40.83025	b924a1e2-b909-4d41-99ca-659a770c0cef	257
264	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	\N	2023-12-06 19:12:40.845625	2023-12-06 19:12:40.844347	a43a7fd4-4d44-4226-8ca6-9cd51ccf67e4	264
267	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	\N	2023-12-06 19:12:40.858923	2023-12-06 19:12:40.858893	5fc1f3b2-611d-45f8-8ba0-62d41363b1c0	267
275	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	\N	2023-12-06 19:12:40.877795	2023-12-06 19:12:40.87775	03933740-9ebc-44b9-8054-760994cc0cd6	275
282	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	\N	2023-12-06 19:12:40.895498	2023-12-06 19:12:40.895176	a03a2eab-c7d0-478c-aa29-489f6e8d9d2a	282
285	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	\N	2023-12-06 19:12:40.902676	2023-12-06 19:12:40.902661	a958b866-19fc-4ba5-88c4-561dae6ccd9a	285
289	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	\N	2023-12-06 19:12:40.911635	2023-12-06 19:12:40.911593	c44f56c2-a270-462c-8948-6cdde670a2f7	289
295	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	\N	2023-12-06 19:12:40.931533	2023-12-06 19:12:40.931492	32f3b880-8bb1-4c06-840a-7f3219016481	295
298	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	\N	2023-12-06 19:12:40.935606	2023-12-06 19:12:40.935582	6976cb4d-9778-4d07-9d46-e5e5dd5978cc	298
300	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	\N	2023-12-06 19:12:40.944732	2023-12-06 19:12:40.944139	565ec2bd-994f-4cb8-8626-7fc6e90cf276	300
305	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	\N	2023-12-06 19:12:40.955775	2023-12-06 19:12:40.955746	c6fcc65d-e0da-4959-949c-db2028b5c601	305
307	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	\N	2023-12-06 19:12:40.970902	2023-12-06 19:12:40.970867	4990a015-fc2f-4496-be41-9704526fdbd3	307
310	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	\N	2023-12-06 19:12:40.978254	2023-12-06 19:12:40.97824	e68ceb9d-bb4c-4dc2-bf6b-41a8bd916eb2	310
315	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	\N	2023-12-06 19:12:40.988208	2023-12-06 19:12:40.988194	4a195214-9bae-4655-a3d1-e41d6042493e	315
318	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	\N	2023-12-06 19:12:40.996216	2023-12-06 19:12:40.996189	2e6a3d8c-63c3-4eeb-a63b-493a9e0e276f	318
322	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:41.010573	2023-12-06 19:12:41.010546	05cafd7b-7d3b-4e8f-8200-b45d2ce7b55a	322
326	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	\N	2023-12-06 19:12:41.016091	2023-12-06 19:12:41.016062	6892e758-4b65-4526-b0a7-6ca42c260f48	326
331	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	\N	2023-12-06 19:12:41.025903	2023-12-06 19:12:41.025869	7197c2c2-82ba-42f2-b0ea-d3566a64d57b	331
335	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	\N	2023-12-06 19:12:41.040165	2023-12-06 19:12:41.040137	f4779f77-cb01-4056-ae98-ffe5bf74ad49	335
339	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	\N	2023-12-06 19:12:41.046739	2023-12-06 19:12:41.046673	10620063-1abe-469e-96e4-2ce374ce8042	339
341	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	\N	2023-12-06 19:12:41.052037	2023-12-06 19:12:41.052015	81c4f713-d2ed-441a-9bbb-f697fac0812b	341
350	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	\N	2023-12-06 19:12:41.073032	2023-12-06 19:12:41.073017	bfbee95e-3d59-4274-b681-2eaa6de14985	350
357	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	\N	2023-12-06 19:12:41.090301	2023-12-06 19:12:41.090102	6c99e73c-4b5a-4f9d-b169-5a1be57a72d8	357
364	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	\N	2023-12-06 19:12:41.104646	2023-12-06 19:12:41.104452	9d0a6f41-7607-4229-9459-e274db446a69	364
369	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	\N	2023-12-06 19:12:41.113996	2023-12-06 19:12:41.113943	bc59b56e-946b-4700-a4f7-0a6470885f0f	369
375	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	\N	2023-12-06 19:12:41.126464	2023-12-06 19:12:41.126409	4ada7339-69a8-49ff-9e82-4155cb4fe726	375
380	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	\N	2023-12-06 19:12:41.136486	2023-12-06 19:12:41.136457	d5a26ed3-4286-4bab-a939-97e5b8d7b86d	380
212	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	\N	2023-12-06 19:12:40.730514	2023-12-06 19:12:40.730483	53dd3d84-c5be-4243-8b19-461d2364653e	212
220	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	\N	2023-12-06 19:12:40.7472	2023-12-06 19:12:40.747045	24acca4f-beb5-42bc-bcf7-d8cefac6cf33	220
226	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	\N	2023-12-06 19:12:40.75742	2023-12-06 19:12:40.75737	4b1c4e95-ed60-4ea3-8c2a-45c11844f130	226
229	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	\N	2023-12-06 19:12:40.766156	2023-12-06 19:12:40.766125	99bfbe43-b608-4502-9d8a-658d89f6421b	229
237	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	\N	2023-12-06 19:12:40.782469	2023-12-06 19:12:40.782443	772bdac0-3938-4dcc-9e1b-07a5cd0a85f2	237
240	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	\N	2023-12-06 19:12:40.790911	2023-12-06 19:12:40.790882	4982ccab-864b-4bf6-bcc7-f9e5f76b1c03	240
244	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	\N	2023-12-06 19:12:40.798861	2023-12-06 19:12:40.798831	0323ec3f-feb3-4044-85f1-3194aedeadc7	244
246	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	\N	2023-12-06 19:12:40.804002	2023-12-06 19:12:40.803966	86132f2e-7db0-4da7-bdb4-9852eca111b7	246
248	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	\N	2023-12-06 19:12:40.808797	2023-12-06 19:12:40.808729	c8fcaa17-ea73-4b40-a97f-43a9e9258477	248
252	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	\N	2023-12-06 19:12:40.816768	2023-12-06 19:12:40.816739	ae14870b-31fe-43db-92ff-9ba1accdd836	252
254	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	\N	2023-12-06 19:12:40.823488	2023-12-06 19:12:40.82345	0c367b18-28be-4914-834d-3476d0ce8533	254
258	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	\N	2023-12-06 19:12:40.83136	2023-12-06 19:12:40.831323	34ef31ad-92b1-4591-94b8-6aafc98bbefc	258
260	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	\N	2023-12-06 19:12:40.838647	2023-12-06 19:12:40.838562	033013f4-718d-41d1-bd43-e2d308733aa1	260
263	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	\N	2023-12-06 19:12:40.845512	2023-12-06 19:12:40.845425	1314abd6-5fa4-400b-a712-bf83593ea23b	263
266	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	\N	2023-12-06 19:12:40.853197	2023-12-06 19:12:40.853183	6be8b822-251f-4dbe-ac59-158f92ce7531	266
270	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	\N	2023-12-06 19:12:40.861047	2023-12-06 19:12:40.861009	1b94ea2c-0cf6-420f-8d23-adc9ef8c88fb	270
272	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	\N	2023-12-06 19:12:40.869081	2023-12-06 19:12:40.86905	cc6056e4-4061-4f97-93ac-2e7c170c1759	272
274	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	\N	2023-12-06 19:12:40.873692	2023-12-06 19:12:40.873641	59e0ef56-1c0b-4b06-8678-301e36bf0384	274
278	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	\N	2023-12-06 19:12:40.885669	2023-12-06 19:12:40.885641	1f035b8e-1180-4bb1-be0a-f0384cc56639	278
281	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	\N	2023-12-06 19:12:40.892596	2023-12-06 19:12:40.892536	5195192e-afc3-4c84-9fa1-d5b32a03f195	281
284	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	\N	2023-12-06 19:12:40.899325	2023-12-06 19:12:40.899288	8078578f-478f-4909-9fbc-0838584819bc	284
288	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	\N	2023-12-06 19:12:40.908117	2023-12-06 19:12:40.908088	b689cab8-c569-4fde-b032-2347c67d0d03	288
293	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	\N	2023-12-06 19:12:40.922843	2023-12-06 19:12:40.922765	4e1d8e9b-93d5-4040-b4c7-25ed336c5ce0	293
299	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	\N	2023-12-06 19:12:40.940093	2023-12-06 19:12:40.940042	ef449289-a6a2-41e0-b84e-604339d612ad	299
303	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	\N	2023-12-06 19:12:40.948248	2023-12-06 19:12:40.94821	33184622-72b1-4767-ab78-03f10d80f587	303
306	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	\N	2023-12-06 19:12:40.955636	2023-12-06 19:12:40.955619	c8e6b43c-a1f5-46b0-b003-64ff0037b190	306
311	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	\N	2023-12-06 19:12:40.9789	2023-12-06 19:12:40.978882	a4e07787-87e1-4853-bb37-2e8547277b34	311
313	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	\N	2023-12-06 19:12:40.986574	2023-12-06 19:12:40.986544	40f26aca-8861-4292-8391-28c8cbf04208	313
316	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	\N	2023-12-06 19:12:40.992674	2023-12-06 19:12:40.992605	9e764c21-d31b-4fbe-86d9-cc79511812a0	316
319	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	\N	2023-12-06 19:12:40.998668	2023-12-06 19:12:40.998623	398e59d3-8b20-41dd-8b8f-dae276ca4955	319
324	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	\N	2023-12-06 19:12:41.011597	2023-12-06 19:12:41.011253	a6c7a269-895a-46d2-88a9-c28d2bdddb1f	324
327	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	\N	2023-12-06 19:12:41.018432	2023-12-06 19:12:41.018416	3e8094b2-7992-4897-9ac5-89f1ed135a98	327
333	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	\N	2023-12-06 19:12:41.031359	2023-12-06 19:12:41.03127	36860fa6-d02c-4265-863a-5e0407abb286	333
336	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	\N	2023-12-06 19:12:41.041925	2023-12-06 19:12:41.041877	b297c7c4-8007-416a-8bad-19a275fedfb1	336
345	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	\N	2023-12-06 19:12:41.062753	2023-12-06 19:12:41.062629	eb51710e-ad4b-4981-beaf-a0997c59cf7c	345
346	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	\N	2023-12-06 19:12:41.066085	2023-12-06 19:12:41.066055	e9c8fb70-d9d1-4264-8b1b-10b594a5a00d	346
349	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	\N	2023-12-06 19:12:41.072621	2023-12-06 19:12:41.071577	43cba7b9-8fa0-44b3-bbf0-39b373f98dc5	349
352	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	\N	2023-12-06 19:12:41.079338	2023-12-06 19:12:41.079311	10eeecd7-08b2-4083-b61f-9a98e096bff6	352
358	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	\N	2023-12-06 19:12:41.090773	2023-12-06 19:12:41.090743	114bf9a1-8121-45d4-8c1f-297d506b5d49	358
361	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	\N	2023-12-06 19:12:41.098143	2023-12-06 19:12:41.098106	10859e52-3a1b-489b-8bf0-56d924197217	361
367	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	\N	2023-12-06 19:12:41.111601	2023-12-06 19:12:41.111562	dc91c055-f7d0-4308-8b6b-0a5ab5a99291	367
372	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	\N	2023-12-06 19:12:41.121668	2023-12-06 19:12:41.121641	4e5a862e-5c55-4041-a715-93fef09cfef2	372
381	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	\N	2023-12-06 19:12:41.139798	2023-12-06 19:12:41.139771	91fe2214-6ed8-44e1-8c1e-79a2b5109c68	381
383	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	\N	2023-12-06 19:12:41.143606	2023-12-06 19:12:41.143167	42aafe82-96e0-4693-a2eb-2e8b20d089f5	383
317	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	\N	2023-12-06 19:12:40.993281	2023-12-06 19:12:40.993227	a2db1466-3850-4359-af48-2093b3e4f032	317
325	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	\N	2023-12-06 19:12:41.012089	2023-12-06 19:12:41.011947	6a466bb2-b378-45ce-8fcc-dab86a622384	325
329	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	\N	2023-12-06 19:12:41.02415	2023-12-06 19:12:41.024123	9a9b42cd-a2ba-413a-bc2e-4e3ad3754b17	329
332	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	\N	2023-12-06 19:12:41.030075	2023-12-06 19:12:41.030059	d8fe9d2e-6fa7-4aa3-ae9d-e9028dff56cf	332
337	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	\N	2023-12-06 19:12:41.042387	2023-12-06 19:12:41.04237	05ed621d-91b9-45fb-b16c-2c2dd5ace931	337
342	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	\N	2023-12-06 19:12:41.052434	2023-12-06 19:12:41.052418	7c155972-c10c-4949-9734-17255eb14811	342
344	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	\N	2023-12-06 19:12:41.061054	2023-12-06 19:12:41.061016	404cee2d-8005-4f33-a448-a24d8c85c561	344
351	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	\N	2023-12-06 19:12:41.073491	2023-12-06 19:12:41.073462	68b57bdb-03f7-4475-adb2-ae9dd7af547d	351
354	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	\N	2023-12-06 19:12:41.082438	2023-12-06 19:12:41.08241	ba88ac9e-a30b-4948-abc0-c89c749ddab4	354
359	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	\N	2023-12-06 19:12:41.093832	2023-12-06 19:12:41.093802	037c532a-5a96-4c60-b622-3e96741333cc	359
362	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	\N	2023-12-06 19:12:41.104521	2023-12-06 19:12:41.104488	bb9ce66f-b05c-42e1-a9c9-8fbf224e127b	362
365	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	\N	2023-12-06 19:12:41.107469	2023-12-06 19:12:41.107432	cafb122d-dbdd-4dc0-a981-6c2bdf498e06	365
366	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	\N	2023-12-06 19:12:41.111668	2023-12-06 19:12:41.111642	a1a5a0a4-dd16-486e-98aa-8d996fd490ca	366
370	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	\N	2023-12-06 19:12:41.117783	2023-12-06 19:12:41.117753	93d535c6-be7d-4845-87d9-7a5cfd587d87	370
373	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	\N	2023-12-06 19:12:41.122241	2023-12-06 19:12:41.122142	43fefc10-dc17-48b9-bf19-132a85f8104f	373
376	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	\N	2023-12-06 19:12:41.128783	2023-12-06 19:12:41.128696	96ff3f1c-f352-4f6f-a256-0c7369d28057	376
378	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	\N	2023-12-06 19:12:41.134303	2023-12-06 19:12:41.133969	0d735aa0-c0e2-4158-b31f-21b491ce181b	378
386	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	\N	2023-12-06 19:12:41.14875	2023-12-06 19:12:41.148716	ced7af95-c562-4195-a2ab-8d1a11fe0ef0	386
389	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	\N	2023-12-06 19:12:41.154085	2023-12-06 19:12:41.153877	12bf2c0f-4c60-4b7c-b0b0-332920157569	389
392	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	\N	2023-12-06 19:12:41.163157	2023-12-06 19:12:41.163018	61227b62-cff7-4b76-bec0-1418af9ae278	392
398	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	\N	2023-12-06 19:12:41.179789	2023-12-06 19:12:41.179669	77c04949-2832-425f-b889-a3413f307eed	398
404	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	\N	2023-12-06 19:12:41.197915	2023-12-06 19:12:41.197866	e7f596d7-8c2c-4fe6-9252-fa174b1a8a57	404
411	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	\N	2023-12-06 19:12:41.215989	2023-12-06 19:12:41.214373	cb376db9-2aeb-4af0-a5ef-afec3587e9bf	411
413	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	\N	2023-12-06 19:12:41.220631	2023-12-06 19:12:41.220331	ef5ca074-9776-4966-b817-4d3128ff20ac	413
414	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	\N	2023-12-06 19:12:41.22666	2023-12-06 19:12:41.226612	3ccec945-8dc2-4826-8109-a812d7daaf44	414
416	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	\N	2023-12-06 19:12:41.232457	2023-12-06 19:12:41.232429	ccfa77f6-c547-48ad-aade-27279d6b977d	416
421	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	\N	2023-12-06 19:12:41.245708	2023-12-06 19:12:41.245626	356d820c-1699-48ec-bae5-3ae97f564616	421
423	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	\N	2023-12-06 19:12:41.250544	2023-12-06 19:12:41.250518	5ab98af8-83b0-4bf5-928a-b6cdf908d312	423
425	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	\N	2023-12-06 19:12:41.255242	2023-12-06 19:12:41.255207	8857461a-feff-4709-8132-2c6fe07eb29d	425
427	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	\N	2023-12-06 19:12:41.261865	2023-12-06 19:12:41.26181	c18f0c79-0e39-4a56-9339-0d93f29a94f6	427
430	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	\N	2023-12-06 19:12:41.267663	2023-12-06 19:12:41.267635	4f5c4082-bd85-4582-9bc4-e94a2101304d	430
432	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	\N	2023-12-06 19:12:41.275059	2023-12-06 19:12:41.275032	9e1e8f82-0745-4934-bc24-4c2ff34670a3	432
435	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	\N	2023-12-06 19:12:41.287163	2023-12-06 19:12:41.287019	2ab6cea6-3418-4055-a2d3-5c41db923910	435
441	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	\N	2023-12-06 19:12:41.302224	2023-12-06 19:12:41.302185	c9fff434-c3ab-4a80-8bac-d66c88210f8d	441
446	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	\N	2023-12-06 19:12:41.314283	2023-12-06 19:12:41.314123	d9d2ea68-34db-42e2-9c7a-3c061e0a93cb	446
448	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	\N	2023-12-06 19:12:41.317651	2023-12-06 19:12:41.317637	89d96544-48a6-4cc3-bc5b-5d28348bdad8	448
449	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	\N	2023-12-06 19:12:41.321464	2023-12-06 19:12:41.321158	513ee509-795b-45dd-8b8f-604c28a9d5df	449
453	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	\N	2023-12-06 19:12:41.329243	2023-12-06 19:12:41.329216	84c7f473-2103-4c68-865c-8985826ae78a	453
456	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	\N	2023-12-06 19:12:41.33425	2023-12-06 19:12:41.33404	844173ad-f506-4d97-bf36-f89ff88ea946	456
462	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	\N	2023-12-06 19:12:41.346258	2023-12-06 19:12:41.346187	2ce91bbe-2756-4ba0-b2cd-6caa49a3eb65	462
465	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	\N	2023-12-06 19:12:41.352801	2023-12-06 19:12:41.352773	2afa216f-a715-4191-840c-43247d578879	465
472	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	\N	2023-12-06 19:12:41.365977	2023-12-06 19:12:41.365931	d442c4cd-d50a-44e3-9cce-bb2af5d1049b	472
474	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	\N	2023-12-06 19:12:41.371176	2023-12-06 19:12:41.37114	461ed459-aefa-4041-bcc2-e10e8baea6aa	474
481	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	\N	2023-12-06 19:12:41.383246	2023-12-06 19:12:41.383189	b60252d2-9f13-4650-a833-080d6e9d7742	481
485	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	\N	2023-12-06 19:12:41.391562	2023-12-06 19:12:41.391533	ba45e87e-5d53-404e-b3ba-f644d4005383	485
330	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	\N	2023-12-06 19:12:41.027035	2023-12-06 19:12:41.027016	2fec938e-a3fa-4d7c-bcc9-98b97f9209e9	330
334	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	\N	2023-12-06 19:12:41.033456	2023-12-06 19:12:41.033428	546e8b6b-08b0-44ba-a061-14e81cd529c1	334
338	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	\N	2023-12-06 19:12:41.043025	2023-12-06 19:12:41.04295	d13fe288-ad84-4640-a921-ba9a43bd93de	338
340	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	\N	2023-12-06 19:12:41.05144	2023-12-06 19:12:41.051397	1d3c1a58-0c98-47e4-ae75-5b71026462ee	340
343	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	\N	2023-12-06 19:12:41.060744	2023-12-06 19:12:41.060715	60b8e813-f3a4-46dd-884b-fdb48a5c732a	343
347	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	\N	2023-12-06 19:12:41.066385	2023-12-06 19:12:41.066331	3f43e68e-2335-44a7-89b4-f69538d009e2	347
348	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	\N	2023-12-06 19:12:41.070243	2023-12-06 19:12:41.070203	50439067-34f7-4c41-bd49-b294033975b8	348
353	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	\N	2023-12-06 19:12:41.079616	2023-12-06 19:12:41.079567	792c6a61-7353-4a29-bb2c-5c80f09bce36	353
355	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	\N	2023-12-06 19:12:41.085683	2023-12-06 19:12:41.085646	502fe6e1-56da-43fd-b630-0986112877f1	355
356	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	\N	2023-12-06 19:12:41.089966	2023-12-06 19:12:41.089799	9991fcba-c73f-4d33-a672-178f8a6204cd	356
360	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	\N	2023-12-06 19:12:41.097923	2023-12-06 19:12:41.097767	c4b491f3-97a3-43f0-a1a3-5d989971afa3	360
363	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	\N	2023-12-06 19:12:41.104273	2023-12-06 19:12:41.103967	03fbdb1e-a336-49ed-b854-68ec7088c662	363
368	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	\N	2023-12-06 19:12:41.113857	2023-12-06 19:12:41.113827	3bbeeec0-9591-4272-90b6-e71e7cf5be34	368
371	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	\N	2023-12-06 19:12:41.119732	2023-12-06 19:12:41.119701	50346134-6aab-46fd-8f72-4d0a7ca60fea	371
374	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	\N	2023-12-06 19:12:41.124888	2023-12-06 19:12:41.124813	52764b91-95f6-46db-8b58-e928296e209a	374
377	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	\N	2023-12-06 19:12:41.132129	2023-12-06 19:12:41.132101	999b2dae-6bc1-4fc0-ac1b-dbed34db502c	377
379	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	\N	2023-12-06 19:12:41.135363	2023-12-06 19:12:41.135334	94d93023-dab6-4b5c-bdc4-8487a31c4333	379
382	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	\N	2023-12-06 19:12:41.141572	2023-12-06 19:12:41.1415	667ac8e3-e907-410e-8360-ee441004ad9e	382
385	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-12-06 19:12:41.145967	2023-12-06 19:12:41.145945	befdba00-8ec6-4dc3-be4b-b17a852b01af	385
394	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	\N	2023-12-06 19:12:41.164602	2023-12-06 19:12:41.164369	3b4012c0-b0e0-4cc9-ae3c-f0e1400168fa	394
400	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	\N	2023-12-06 19:12:41.182395	2023-12-06 19:12:41.182366	a5922757-7ea0-4d97-b564-503ca77fe0f3	400
403	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	\N	2023-12-06 19:12:41.193029	2023-12-06 19:12:41.192976	baef0875-1386-463b-b8b5-a819bf306620	403
405	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	\N	2023-12-06 19:12:41.199305	2023-12-06 19:12:41.199257	4f59e5ed-8730-47a3-989e-fb24512cb62c	405
417	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	\N	2023-12-06 19:12:41.232792	2023-12-06 19:12:41.232608	17e0ceb5-a9c6-4a4a-aa60-fbad4d34f683	417
420	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	\N	2023-12-06 19:12:41.242514	2023-12-06 19:12:41.242484	c7c0d127-5176-4f67-98fc-2b54efb36767	420
433	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	\N	2023-12-06 19:12:41.285307	2023-12-06 19:12:41.285273	82e66439-cf6d-4852-a41d-65c5e500fc83	433
438	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	\N	2023-12-06 19:12:41.294616	2023-12-06 19:12:41.294474	add9b454-4b1a-4f0c-94a1-50a44777c600	438
439	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	\N	2023-12-06 19:12:41.29984	2023-12-06 19:12:41.299518	062cccba-78b0-4fab-b98c-ba9c17d457f5	439
442	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	\N	2023-12-06 19:12:41.303048	2023-12-06 19:12:41.302993	a338cd8e-0993-4fa3-a00e-7d10fd9072ee	442
447	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	\N	2023-12-06 19:12:41.315201	2023-12-06 19:12:41.314992	ebbf2a58-73d3-41f8-aeea-547fa5abb6f9	447
450	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	\N	2023-12-06 19:12:41.322487	2023-12-06 19:12:41.322456	6dd770bd-5532-4cd4-8148-35287b78e56f	450
458	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	\N	2023-12-06 19:12:41.33721	2023-12-06 19:12:41.337148	a8d02e42-07a9-4341-b7d9-f2ddc735d3fd	458
460	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	\N	2023-12-06 19:12:41.343317	2023-12-06 19:12:41.343271	7debd2e9-e0fb-44ea-ae5f-6da1fbbd0123	460
463	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	\N	2023-12-06 19:12:41.346714	2023-12-06 19:12:41.3467	4558b969-52cd-4065-84c7-18fdfe2b206b	463
467	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	\N	2023-12-06 19:12:41.354847	2023-12-06 19:12:41.354816	8869ad03-cef5-4352-b616-332f5f77c845	467
470	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	\N	2023-12-06 19:12:41.360074	2023-12-06 19:12:41.360021	12c2e3dc-2cfa-4c01-818d-2a9c2382dccb	470
473	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	\N	2023-12-06 19:12:41.368154	2023-12-06 19:12:41.368096	edb30a9b-7f63-46f9-9fd8-0790d50e2c88	473
476	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	\N	2023-12-06 19:12:41.372605	2023-12-06 19:12:41.372568	2a3bd3ab-6265-4fb5-bef2-2be77f9f9526	476
477	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	\N	2023-12-06 19:12:41.376746	2023-12-06 19:12:41.376587	002a2f0c-fa88-4ba6-b5b6-4140fa331a96	477
480	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	\N	2023-12-06 19:12:41.379702	2023-12-06 19:12:41.379675	5d60d0e5-c3a7-4676-9ac4-5f424f2dce27	480
482	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	\N	2023-12-06 19:12:41.385925	2023-12-06 19:12:41.385703	413f4a6a-fb53-4fbf-874b-abd026903adc	482
488	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	\N	2023-12-06 19:12:41.396571	2023-12-06 19:12:41.396523	30ef6c15-b368-4caf-b38a-ba87503fe9c1	488
494	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	\N	2023-12-06 19:12:41.407644	2023-12-06 19:12:41.407622	fb0c916e-b031-4f01-a76c-0962e4c3a889	494
384	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	\N	2023-12-06 19:12:41.14457	2023-12-06 19:12:41.1445	0ac490fa-0545-4e30-a85d-f8e36591ee53	384
388	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	\N	2023-12-06 19:12:41.154279	2023-12-06 19:12:41.154196	076f399a-ac9c-449a-8e13-7e31ad95669e	388
391	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	\N	2023-12-06 19:12:41.162224	2023-12-06 19:12:41.162175	c11f10ac-e4a7-4841-be1e-4fb2b8e442ba	391
395	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	\N	2023-12-06 19:12:41.172937	2023-12-06 19:12:41.172849	87820c40-067e-4b50-85dd-ffccd18b5068	395
397	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	\N	2023-12-06 19:12:41.176626	2023-12-06 19:12:41.17659	b87d30d0-db7e-4dcd-9bb1-1aca73672994	397
399	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	\N	2023-12-06 19:12:41.181204	2023-12-06 19:12:41.181185	1ed527ef-bf67-48a4-ac44-bb4558329609	399
401	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	\N	2023-12-06 19:12:41.186155	2023-12-06 19:12:41.186012	7f3de99e-5dd1-41d6-ae26-a643079b45c6	401
407	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	\N	2023-12-06 19:12:41.205359	2023-12-06 19:12:41.20533	8cc19f09-e60e-4c43-9179-537f2ef2fd3b	407
409	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	\N	2023-12-06 19:12:41.210601	2023-12-06 19:12:41.210574	f24dd222-fa7c-4f6d-8836-697ebff3c15a	409
412	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	\N	2023-12-06 19:12:41.217674	2023-12-06 19:12:41.217646	65447d44-2d56-4a58-9086-46c926a62659	412
415	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	\N	2023-12-06 19:12:41.228724	2023-12-06 19:12:41.228619	a0b2b8c6-6227-4f05-855b-18ba3109ec02	415
418	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	\N	2023-12-06 19:12:41.235489	2023-12-06 19:12:41.23546	6021b615-e0d3-4db8-8738-746b29aa5adc	418
422	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	\N	2023-12-06 19:12:41.247366	2023-12-06 19:12:41.247338	38d94a76-5bd0-41b6-aaa6-4eaeec6a5e70	422
428	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	\N	2023-12-06 19:12:41.263579	2023-12-06 19:12:41.263453	b0754eff-8bed-4f94-8299-d5923efecff9	428
431	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	\N	2023-12-06 19:12:41.268794	2023-12-06 19:12:41.268767	8ede310a-ae5c-4946-ab21-dc3a180c4dba	431
436	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	\N	2023-12-06 19:12:41.289883	2023-12-06 19:12:41.289842	19688e3a-aa36-4c82-80d1-6d985e9d388a	436
440	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	\N	2023-12-06 19:12:41.301012	2023-12-06 19:12:41.300759	f3711aef-8731-434f-8ad7-5be2d86e82c1	440
444	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	\N	2023-12-06 19:12:41.309273	2023-12-06 19:12:41.309244	681b2730-3df3-4614-a0d0-7a1d516680cc	444
452	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	\N	2023-12-06 19:12:41.324873	2023-12-06 19:12:41.324857	d526bcce-eccc-44c6-80b5-9089cd5c4af0	452
454	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	\N	2023-12-06 19:12:41.33103	2023-12-06 19:12:41.330662	0fe9b19b-aef0-4815-8fdd-c4b826d4215c	454
457	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	\N	2023-12-06 19:12:41.336703	2023-12-06 19:12:41.336611	dce82671-4a73-4b91-9033-ee62f9a7c590	457
461	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	\N	2023-12-06 19:12:41.345557	2023-12-06 19:12:41.345509	a14c4610-df80-4528-810e-551ccfe6921d	461
466	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	\N	2023-12-06 19:12:41.352814	2023-12-06 19:12:41.352783	2354651f-3959-46bb-83e0-b6632c24977a	466
469	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	\N	2023-12-06 19:12:41.359673	2023-12-06 19:12:41.359633	aaab039b-b43e-471b-91cc-eb4e4b53f0b3	469
478	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	\N	2023-12-06 19:12:41.378849	2023-12-06 19:12:41.378793	3fb890e1-12e0-4a95-9dfa-1d7fa2922b0b	478
483	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	\N	2023-12-06 19:12:41.386292	2023-12-06 19:12:41.386272	e3ae7bdc-15f0-4c1b-acef-a5babe294ffc	483
487	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	\N	2023-12-06 19:12:41.394246	2023-12-06 19:12:41.39421	bf0ae49b-8f5d-4e66-ad1b-1b5c32c80daf	487
492	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	\N	2023-12-06 19:12:41.404728	2023-12-06 19:12:41.404666	f6742107-b1c5-40b7-8c45-54386f227865	492
496	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	\N	2023-12-06 19:12:41.411989	2023-12-06 19:12:41.411974	0fea9cec-4aab-4abf-b83c-62d5c6733028	496
498	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	\N	2023-12-06 19:12:41.416333	2023-12-06 19:12:41.416082	2ae86284-506a-4e75-bd9f-f3057ef4eaf5	498
504	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	\N	2023-12-06 19:12:41.426125	2023-12-06 19:12:41.426108	aa9b19f1-dc40-43fe-a296-0521756e8ceb	504
511	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	\N	2023-12-06 19:12:41.438122	2023-12-06 19:12:41.438091	7e29a5dd-a4f8-4774-8471-a6e66c46a8b7	511
514	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	\N	2023-12-06 19:12:41.444701	2023-12-06 19:12:41.444662	c20793a3-caab-4555-b740-2088f3b8948b	514
516	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	\N	2023-12-06 19:12:41.451026	2023-12-06 19:12:41.451001	7058ac12-3abb-4ee8-925b-b8b962735eab	516
520	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	\N	2023-12-06 19:12:41.455707	2023-12-06 19:12:41.45568	992c8518-2f76-4053-8801-83bee927f164	520
525	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	\N	2023-12-06 19:12:41.465645	2023-12-06 19:12:41.465611	9f14b126-810a-4f04-b504-bc6cc27f1adf	525
529	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	\N	2023-12-06 19:12:41.472435	2023-12-06 19:12:41.472396	0883a169-9542-40b2-8782-7a5566b54718	529
531	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	\N	2023-12-06 19:12:41.478385	2023-12-06 19:12:41.478346	36c0c5f7-33d3-4de9-96ab-76479600e8ff	531
538	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	\N	2023-12-06 19:12:41.489503	2023-12-06 19:12:41.48947	b4a06ddc-987e-4182-82e6-c4062b14ade7	538
542	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	\N	2023-12-06 19:12:41.499348	2023-12-06 19:12:41.499334	e7134fbe-2307-49a5-bf4a-cb5f0dc660b9	542
545	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	\N	2023-12-06 19:12:41.505391	2023-12-06 19:12:41.505354	c76a3484-a391-4e43-b8c3-5767dc788646	545
550	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	\N	2023-12-06 19:12:41.51475	2023-12-06 19:12:41.514736	c7f7fc1c-faa0-43cb-8a01-c089418a9b10	550
553	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	\N	2023-12-06 19:12:41.523104	2023-12-06 19:12:41.523061	a5140e18-1388-4966-b8fb-4116f2349d19	553
556	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	\N	2023-12-06 19:12:41.52962	2023-12-06 19:12:41.529277	58a492c2-decf-4542-82a5-a26fa18b3eee	556
387	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	\N	2023-12-06 19:12:41.153418	2023-12-06 19:12:41.153249	14338d60-a873-47a0-8a2b-88f8d1fbbe1a	387
390	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	\N	2023-12-06 19:12:41.156341	2023-12-06 19:12:41.156216	c024f871-a046-4800-84b3-097c9479997f	390
393	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	\N	2023-12-06 19:12:41.164293	2023-12-06 19:12:41.164149	ef1df673-b27b-4cc1-afd1-f6c3d3cc8de6	393
396	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	\N	2023-12-06 19:12:41.173815	2023-12-06 19:12:41.17352	9832c362-c303-4798-a5c8-9abcb959a2ef	396
402	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	\N	2023-12-06 19:12:41.192501	2023-12-06 19:12:41.191696	9f781cac-cdea-496d-9a07-fee1d4cb5913	402
406	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	\N	2023-12-06 19:12:41.199903	2023-12-06 19:12:41.199854	c01da643-ef51-421e-80d4-18add78a42b1	406
408	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	\N	2023-12-06 19:12:41.205988	2023-12-06 19:12:41.205912	b8b2bf7e-6105-4ef1-921d-7619a2f2af52	408
410	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	\N	2023-12-06 19:12:41.213376	2023-12-06 19:12:41.213347	164cdd82-3871-46bb-8206-88b1cefcddc7	410
419	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	\N	2023-12-06 19:12:41.238796	2023-12-06 19:12:41.23873	8b520fcb-6d87-4e96-9da9-932101d643d2	419
424	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	\N	2023-12-06 19:12:41.253039	2023-12-06 19:12:41.253005	43cee88a-b2c2-4a8b-a01c-d60588ba375c	424
426	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	\N	2023-12-06 19:12:41.259405	2023-12-06 19:12:41.259371	33138ec7-ae52-4cfb-95dd-09dc2b3af29f	426
429	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	\N	2023-12-06 19:12:41.265012	2023-12-06 19:12:41.264892	6eff2855-ae47-4a44-82f0-c700cea36969	429
434	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	\N	2023-12-06 19:12:41.285688	2023-12-06 19:12:41.285653	c8e7a801-e909-42cb-ab8e-707f562b6a95	434
437	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	\N	2023-12-06 19:12:41.293102	2023-12-06 19:12:41.293055	cf478123-12f4-4521-91b1-717fc6eb8800	437
443	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	\N	2023-12-06 19:12:41.305593	2023-12-06 19:12:41.305495	67b7ba6c-28e2-4250-9c89-335f414f8750	443
445	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	\N	2023-12-06 19:12:41.313632	2023-12-06 19:12:41.313599	86246de3-055b-4c0e-8486-f97d322c87d7	445
451	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	\N	2023-12-06 19:12:41.3226	2023-12-06 19:12:41.322161	eae1ea59-c7e4-47d6-b00d-c58cf5eed261	451
455	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	\N	2023-12-06 19:12:41.332061	2023-12-06 19:12:41.331939	d307dc9c-5d29-4c27-86fc-455373b09afc	455
459	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	\N	2023-12-06 19:12:41.339524	2023-12-06 19:12:41.339496	eeb02280-4dd8-4cd7-b2a4-804e2a6c969f	459
464	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	\N	2023-12-06 19:12:41.349859	2023-12-06 19:12:41.349832	4180aa05-e254-47f3-a20d-5768f569faae	464
468	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	\N	2023-12-06 19:12:41.357755	2023-12-06 19:12:41.357716	6fec4472-bc31-4aed-be1a-9f137dccdc34	468
471	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	\N	2023-12-06 19:12:41.364185	2023-12-06 19:12:41.364119	3a1f8d99-e9e3-4e49-83fe-f5fd712064d5	471
475	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	\N	2023-12-06 19:12:41.372144	2023-12-06 19:12:41.371781	94850f5f-5d95-4eec-bc88-81cd3be57439	475
479	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	\N	2023-12-06 19:12:41.378882	2023-12-06 19:12:41.378776	3533ec23-c926-432b-91b8-32f45cdd26db	479
484	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	\N	2023-12-06 19:12:41.38818	2023-12-06 19:12:41.38815	ea185fc3-b1e8-4dc4-923f-fcfc82031a8f	484
486	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	\N	2023-12-06 19:12:41.393373	2023-12-06 19:12:41.393134	e02fe4cf-de40-4d56-b7c0-dbf802e6707c	486
491	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	\N	2023-12-06 19:12:41.402865	2023-12-06 19:12:41.40285	070fd966-c313-49cf-b3a3-8b48c88b9e6e	491
501	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	\N	2023-12-06 19:12:41.418603	2023-12-06 19:12:41.41857	b356c0b0-0381-4aa6-acb4-70d126d518cd	501
503	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	\N	2023-12-06 19:12:41.425081	2023-12-06 19:12:41.425066	d7ad0efe-1774-4842-ac6c-80c05dbc2ccb	503
507	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	\N	2023-12-06 19:12:41.430817	2023-12-06 19:12:41.430378	7dda8b1c-55b5-43e6-a3d7-ea013d04b58c	507
509	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	\N	2023-12-06 19:12:41.437354	2023-12-06 19:12:41.437332	f6513379-fd31-46bd-8f14-da750dd7dfef	509
513	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	\N	2023-12-06 19:12:41.444319	2023-12-06 19:12:41.444283	39cf9729-2301-49ca-b282-ca124b8262da	513
519	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	\N	2023-12-06 19:12:41.452935	2023-12-06 19:12:41.452907	7fedaf27-47cf-4908-98a5-1f53a2d46353	519
524	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	\N	2023-12-06 19:12:41.463126	2023-12-06 19:12:41.463097	4f6cd6b7-7c16-4386-ba20-6c5cd73e82e2	524
528	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	\N	2023-12-06 19:12:41.471459	2023-12-06 19:12:41.471301	51924577-6ea6-4312-ae8d-3b1dbce57388	528
532	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	\N	2023-12-06 19:12:41.478429	2023-12-06 19:12:41.478399	69f79287-6e17-4912-81cb-50401bfdf654	532
539	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	\N	2023-12-06 19:12:41.492901	2023-12-06 19:12:41.492842	76ead599-7b03-455e-bbad-ca0b39f17422	539
540	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	\N	2023-12-06 19:12:41.496956	2023-12-06 19:12:41.496942	3d43a746-cbc3-490e-af43-c82793d11a61	540
546	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	\N	2023-12-06 19:12:41.506845	2023-12-06 19:12:41.506806	60712da5-dc08-4daa-96cf-f6ccdaadc9e3	546
551	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	\N	2023-12-06 19:12:41.517657	2023-12-06 19:12:41.517626	cd5ac5a7-9ed9-4652-95f6-998e2fde6fdd	551
554	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	\N	2023-12-06 19:12:41.523767	2023-12-06 19:12:41.523617	c53fec44-9d4c-4838-8021-77285d2af0b3	554
557	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	\N	2023-12-06 19:12:41.530984	2023-12-06 19:12:41.530947	5f77a832-8c83-4a3d-b018-9ffbf2111187	557
566	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	\N	2023-12-06 19:12:41.550561	2023-12-06 19:12:41.550413	22484154-2c17-4c19-9adb-8a8ecc127870	566
568	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	\N	2023-12-06 19:12:41.559227	2023-12-06 19:12:41.559193	2573e535-6ebb-4d2a-9ab8-a5a392726fb6	568
489	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	\N	2023-12-06 19:12:41.398103	2023-12-06 19:12:41.398073	8cfae10d-58dd-44fa-9bd5-c18b05ac78c4	489
490	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	\N	2023-12-06 19:12:41.401967	2023-12-06 19:12:41.401887	ebef6481-e40c-4a5a-be1d-41256b1ff84e	490
493	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	\N	2023-12-06 19:12:41.404859	2023-12-06 19:12:41.404622	43275297-2a43-4383-9e19-97b0e0d4dce5	493
495	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	\N	2023-12-06 19:12:41.409551	2023-12-06 19:12:41.409492	166f6618-7779-440f-b677-c662cbe59190	495
499	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	\N	2023-12-06 19:12:41.417336	2023-12-06 19:12:41.417223	e397cfc1-3bf0-479b-bf19-0a28935119a5	499
502	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	\N	2023-12-06 19:12:41.423834	2023-12-06 19:12:41.423806	0d2edf2f-db2a-48aa-ab18-ae2cb50ece7f	502
508	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	\N	2023-12-06 19:12:41.4371	2023-12-06 19:12:41.437085	c51e77f0-23d0-42c4-aebd-05d33f95bb52	508
515	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	\N	2023-12-06 19:12:41.445403	2023-12-06 19:12:41.445365	780076c0-cdb6-4fa9-a6d1-ac97b5172aa3	515
517	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	\N	2023-12-06 19:12:41.451621	2023-12-06 19:12:41.450956	0ce691fb-2dfc-4996-94be-c45415a8be04	517
521	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	\N	2023-12-06 19:12:41.458406	2023-12-06 19:12:41.458377	05737352-39be-4689-837d-e84a46f426f7	521
523	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	\N	2023-12-06 19:12:41.461964	2023-12-06 19:12:41.461907	07d6da75-2543-46cb-bb37-7c9b19edc8b7	523
526	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	\N	2023-12-06 19:12:41.469629	2023-12-06 19:12:41.469161	f4d1a226-08c8-4a4a-9e0e-b0cf3adaf90a	526
530	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	\N	2023-12-06 19:12:41.476835	2023-12-06 19:12:41.476809	dbbc84de-2368-450e-96d0-3f07a9faaa79	530
535	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	\N	2023-12-06 19:12:41.485046	2023-12-06 19:12:41.485013	28d00889-5929-47c3-b4cc-333954b1444f	535
536	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	\N	2023-12-06 19:12:41.489158	2023-12-06 19:12:41.488956	bc8d9367-9396-4495-9c16-bf512a11cb44	536
543	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	\N	2023-12-06 19:12:41.501203	2023-12-06 19:12:41.501153	a85f982a-cf3c-40e4-a30f-8e412b439c94	543
548	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	\N	2023-12-06 19:12:41.510628	2023-12-06 19:12:41.510574	bf529f0d-e76b-4e8f-b76f-95a5fcc49850	548
558	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	\N	2023-12-06 19:12:41.532228	2023-12-06 19:12:41.5322	0f9110f9-a699-46a3-802e-93c3516eb0cc	558
560	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	\N	2023-12-06 19:12:41.538299	2023-12-06 19:12:41.538271	e4fe3c39-be3e-4e6b-b07c-c6ec06d62971	560
565	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	\N	2023-12-06 19:12:41.549674	2023-12-06 19:12:41.549636	e9d8418a-cde7-4f3b-96aa-37536c08ac34	565
567	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	\N	2023-12-06 19:12:41.559038	2023-12-06 19:12:41.559004	bc6a1057-756e-449c-85e8-8ba70d123f9f	567
571	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	\N	2023-12-06 19:12:41.565069	2023-12-06 19:12:41.565008	df4be8de-22b5-4ea1-946d-4ea49e8f525d	571
575	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	\N	2023-12-06 19:12:41.579158	2023-12-06 19:12:41.579103	34a44a94-e1ef-4af2-a9b2-d56b011db18d	575
585	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	\N	2023-12-06 19:12:41.596476	2023-12-06 19:12:41.596207	70fe55b0-91b4-44ef-81e6-057ac187f17d	585
589	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	\N	2023-12-06 19:12:41.605142	2023-12-06 19:12:41.605119	a05dba76-d221-439c-8955-2f1af5830414	589
592	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	\N	2023-12-06 19:12:41.612305	2023-12-06 19:12:41.612278	8653b6aa-ee9f-4d1f-89bd-cfeee466b0b7	592
596	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	\N	2023-12-06 19:12:41.619328	2023-12-06 19:12:41.618872	c9a45e27-c03e-4e90-a8a4-0554daa318ec	596
601	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	\N	2023-12-06 19:12:41.628298	2023-12-06 19:12:41.628273	7079498e-df30-49bf-8561-315dba0f9d20	601
603	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	\N	2023-12-06 19:12:41.631617	2023-12-06 19:12:41.631543	32969ff6-1c6a-46cb-845f-d2189f2bcd45	603
606	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	\N	2023-12-06 19:12:41.637022	2023-12-06 19:12:41.637007	208574a7-d96b-4602-826e-594e0a506730	606
611	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	\N	2023-12-06 19:12:41.647327	2023-12-06 19:12:41.64729	67c89243-05e2-40bc-ac84-4f768d8dab93	611
617	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-12-06 19:12:41.683036	2023-12-06 19:12:41.681562	da7f1878-4745-49c1-b9b4-570d205737cf	617
620	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-12-06 19:12:41.693319	2023-12-06 19:12:41.693277	392e40f8-9c50-4c3a-ad0a-83bb597b2211	620
622	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:41.698158	2023-12-06 19:12:41.698121	ea0d8a20-ad26-4cee-9147-b154353f6427	622
629	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	\N	2023-12-06 19:12:41.736619	2023-12-06 19:12:41.735389	837b6cc0-269c-471c-a6c0-b21617f14674	629
631	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	\N	2023-12-06 19:12:41.744143	2023-12-06 19:12:41.744132	4c9cb4a7-44f0-44f2-81d9-1c8663a1d3b9	631
636	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	\N	2023-12-06 19:12:41.752512	2023-12-06 19:12:41.752482	12de06ab-fce0-45bb-991e-838e7dfcfdba	636
639	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	\N	2023-12-06 19:12:41.759357	2023-12-06 19:12:41.759328	f4c2f2aa-42c2-4f22-83bc-8f022a7a966f	639
643	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	\N	2023-12-06 19:12:41.79289	2023-12-06 19:12:41.79178	b5648bdf-cd71-4dcf-8218-b5c5b14d06b0	644
648	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-12-06 19:12:41.803112	2023-12-06 19:12:41.803087	f7393264-72e8-4479-8057-0d64860e88e4	648
497	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	\N	2023-12-06 19:12:41.4124	2023-12-06 19:12:41.412353	08fd32be-2f3c-4325-a96a-4c03b9a157f7	497
500	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	\N	2023-12-06 19:12:41.41849	2023-12-06 19:12:41.418454	12089050-f0c8-4dd4-8d53-8aba2ac10613	500
505	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	\N	2023-12-06 19:12:41.426742	2023-12-06 19:12:41.426714	f5addf0f-bf92-4299-8113-c5d97261d547	505
506	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	\N	2023-12-06 19:12:41.430715	2023-12-06 19:12:41.430682	d5213881-84e7-4954-b937-9904a3646ad5	506
510	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	\N	2023-12-06 19:12:41.437147	2023-12-06 19:12:41.437135	46d415c3-dc35-4af6-bcde-fe94efa37bb4	510
512	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	\N	2023-12-06 19:12:41.444068	2023-12-06 19:12:41.444016	0098fa16-aa84-4f63-8d03-0f5694452d21	512
518	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	\N	2023-12-06 19:12:41.452033	2023-12-06 19:12:41.451924	672711d1-e5b4-4f0b-b6b2-b5064642f520	518
522	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	\N	2023-12-06 19:12:41.460605	2023-12-06 19:12:41.460447	216d8a03-c9e7-4886-9a5e-273b5b2ace44	522
527	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	\N	2023-12-06 19:12:41.470413	2023-12-06 19:12:41.470396	35f49349-0bad-4c61-a5b9-6a3be0cc54bf	527
533	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	\N	2023-12-06 19:12:41.480487	2023-12-06 19:12:41.48044	ba2dfd15-ae35-4584-8071-5bb6072d43a6	533
534	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	\N	2023-12-06 19:12:41.48382	2023-12-06 19:12:41.483791	5d2c7f2e-ef1c-4d39-9cd8-3ea58467475e	534
537	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	\N	2023-12-06 19:12:41.489424	2023-12-06 19:12:41.489397	fe654819-2276-4d21-b086-95516da4f23f	537
541	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	\N	2023-12-06 19:12:41.496831	2023-12-06 19:12:41.496791	ac05bef0-ba2e-411a-a63b-be9edd4fb4ac	541
544	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	\N	2023-12-06 19:12:41.504602	2023-12-06 19:12:41.504562	b680171d-366f-439f-bbd9-066bf9594d84	544
547	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	\N	2023-12-06 19:12:41.508129	2023-12-06 19:12:41.508083	c3e3190e-e8d3-4c38-bc6c-1ded862a2bdf	547
549	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	\N	2023-12-06 19:12:41.514502	2023-12-06 19:12:41.514418	0e1c97ea-990d-4288-94af-cce4116a6b71	549
552	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	\N	2023-12-06 19:12:41.521132	2023-12-06 19:12:41.520726	fb11e7a4-0986-48ae-a12a-30f6699aefea	552
555	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	\N	2023-12-06 19:12:41.527443	2023-12-06 19:12:41.527419	3c42ddf1-ac77-47c7-8e95-a3ef59f6d568	555
561	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	\N	2023-12-06 19:12:41.539456	2023-12-06 19:12:41.539428	ee5e68d4-e48b-431e-9675-82a8154c17e8	561
564	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	\N	2023-12-06 19:12:41.54812	2023-12-06 19:12:41.548012	d9114494-4ee2-49df-ae56-96b10c847054	564
569	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	\N	2023-12-06 19:12:41.563133	2023-12-06 19:12:41.563096	d1a35aeb-b039-4ba3-8c1f-327157ae0f39	569
574	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	\N	2023-12-06 19:12:41.571952	2023-12-06 19:12:41.571916	37874b81-463d-4e7e-87f9-6c7e2c1d357d	574
578	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	\N	2023-12-06 19:12:41.581132	2023-12-06 19:12:41.581107	b99bfcf3-da42-4e45-ba27-7a09e39e4e5e	578
580	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	\N	2023-12-06 19:12:41.587111	2023-12-06 19:12:41.586729	0a1f6358-517d-43d2-aaba-1912874ca9a3	580
586	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	\N	2023-12-06 19:12:41.598572	2023-12-06 19:12:41.59855	2d98f642-a62e-4b02-a196-3777f00186ee	586
588	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	\N	2023-12-06 19:12:41.604995	2023-12-06 19:12:41.604723	98595f60-3dd2-49a0-b6ed-ed4d87b3f8e0	588
591	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	\N	2023-12-06 19:12:41.610861	2023-12-06 19:12:41.610839	631d9383-eed5-4bc4-b96f-8ed2f99f00b5	591
597	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	\N	2023-12-06 19:12:41.622462	2023-12-06 19:12:41.622274	3223c7ef-910e-48b1-b859-a19f156857cc	597
599	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	\N	2023-12-06 19:12:41.626226	2023-12-06 19:12:41.626198	1dbffeef-20ef-4e8d-888c-b6ec99bd53bb	599
602	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	\N	2023-12-06 19:12:41.62969	2023-12-06 19:12:41.629676	59431c9b-89cf-42d5-b827-4fde3f183833	602
604	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	\N	2023-12-06 19:12:41.635521	2023-12-06 19:12:41.635507	deb8ff0b-8ff2-4d13-b757-4f89692e336e	604
609	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	\N	2023-12-06 19:12:41.643753	2023-12-06 19:12:41.643667	5c9cf11d-0e42-4027-b43f-3c537c39bfbc	609
610	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	\N	2023-12-06 19:12:41.646463	2023-12-06 19:12:41.646428	a9a6dbc9-54ef-42fa-bfe2-66f27cce24b9	610
613	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	\N	2023-12-06 19:12:41.649338	2023-12-06 19:12:41.64931	96adaf70-d722-4ecf-8fa8-da3b45edbf33	613
615	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	\N	2023-12-06 19:12:41.683004	2023-12-06 19:12:41.681584	98758aa3-cde1-4cf5-bd47-ae78e9e26ac3	615
624	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-12-06 19:12:41.700053	2023-12-06 19:12:41.700026	2a2037de-e951-49e7-a275-75c38713c866	624
628	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	\N	2023-12-06 19:12:41.736496	2023-12-06 19:12:41.73542	7f929796-cedc-443b-876f-d59ef257681d	628
633	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:41.746124	2023-12-06 19:12:41.746088	8206bf26-f6f3-4848-96c4-5abf1a758f62	633
634	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	\N	2023-12-06 19:12:41.751489	2023-12-06 19:12:41.751433	7016e51f-159c-4e21-bc41-15cee1465d92	634
637	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	\N	2023-12-06 19:12:41.755457	2023-12-06 19:12:41.75543	f65b9b92-a9a4-4747-991a-203e453a59c2	637
638	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	\N	2023-12-06 19:12:41.758619	2023-12-06 19:12:41.75858	506359f3-908a-4156-bebd-55d62f30d7bd	638
949	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	\N	2023-12-06 19:12:43.042038	2023-12-06 19:12:43.041077	e84100d4-99dd-4f25-b622-9c1fc7e1edc1	950
559	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:41.537182	2023-12-06 19:12:41.537114	4995d6f0-96dd-426c-9d5c-a4aa972af325	559
562	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	\N	2023-12-06 19:12:41.541943	2023-12-06 19:12:41.541914	28736b10-569b-4845-929d-1a1760634663	562
563	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	\N	2023-12-06 19:12:41.546736	2023-12-06 19:12:41.546685	33a9fdc1-2e91-43ff-819d-594a13d38dd8	563
570	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	\N	2023-12-06 19:12:41.56354	2023-12-06 19:12:41.563487	3cf1882f-0f21-4488-9d72-a815fd85191c	570
572	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	\N	2023-12-06 19:12:41.569558	2023-12-06 19:12:41.569514	e75aecf6-e65f-4b07-9f2b-9e9ece8ec298	572
577	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	\N	2023-12-06 19:12:41.580961	2023-12-06 19:12:41.580931	e7269455-581f-47a6-a5a3-ee178dc54a2a	577
581	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	\N	2023-12-06 19:12:41.589298	2023-12-06 19:12:41.589218	e83e36e8-4fd9-4c89-a1d0-ba9746742ed4	581
583	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	\N	2023-12-06 19:12:41.595056	2023-12-06 19:12:41.594957	0c0ca65b-b50b-4756-b492-ff6e4e019d7b	583
587	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	\N	2023-12-06 19:12:41.602592	2023-12-06 19:12:41.602435	95d50f4c-9983-4b51-964f-114ee0f20a4c	587
593	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	\N	2023-12-06 19:12:41.613111	2023-12-06 19:12:41.613084	9b09df65-9ee9-43bd-bffb-e4aa112d205a	593
605	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	\N	2023-12-06 19:12:41.636275	2023-12-06 19:12:41.636233	fa7b04c2-c5c6-46b9-a87e-8855bce7f01c	605
607	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	\N	2023-12-06 19:12:41.640051	2023-12-06 19:12:41.640024	6850db78-30a8-4643-8eb3-5fac84382e44	607
612	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	\N	2023-12-06 19:12:41.648057	2023-12-06 19:12:41.647894	95e20979-2912-4c48-9422-bf97f89cac03	612
616	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-12-06 19:12:41.682872	2023-12-06 19:12:41.681555	054ba9f9-ab45-4f10-a48f-3e98cae111b8	616
618	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	\N	2023-12-06 19:12:41.690745	2023-12-06 19:12:41.690718	e9ee6bbf-e17a-494a-b134-8249954b6986	618
623	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	\N	2023-12-06 19:12:41.699454	2023-12-06 19:12:41.699427	97864501-9563-482f-a032-a9df44dc8235	623
626	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	\N	2023-12-06 19:12:41.736328	2023-12-06 19:12:41.735381	29a6c91e-ff5b-4279-a841-136618147a82	626
630	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	\N	2023-12-06 19:12:41.744041	2023-12-06 19:12:41.744024	e4d4db18-7e80-463d-9f57-9a5be694c0bb	630
640	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	\N	2023-12-06 19:12:41.762303	2023-12-06 19:12:41.762286	845dac4e-fae9-427b-ba37-401db1332041	640
642	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:12:41.792789	2023-12-06 19:12:41.791813	ccb71259-a91f-4b49-99dd-6faf41aea5b8	642
647	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-12-06 19:12:41.801857	2023-12-06 19:12:41.801675	6af1e514-a795-49fa-a3f0-31b4dd199625	647
652	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	\N	2023-12-06 19:12:41.810993	2023-12-06 19:12:41.810938	17ec5faf-fa00-4400-9a90-e2bf8d57f998	652
657	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.849675	2023-12-06 19:12:41.848727	82691295-182b-4bee-a94b-9106dcc15dbf	657
661	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	\N	2023-12-06 19:12:41.858046	2023-12-06 19:12:41.858006	511ce7dd-028f-4f52-804c-d19f4b0ecdfb	661
665	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:41.892383	2023-12-06 19:12:41.891545	c4a6809c-54d5-4dae-9728-8bccf5939408	665
670	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	\N	2023-12-06 19:12:41.92565	2023-12-06 19:12:41.924122	03e2cc3f-b579-4553-808b-bf4b6f0df5d4	670
674	uri://ed-fi.org/AssignmentLateStatusDescriptor	Late	Late	The assignment was submitted by the student after the due date/time and marked as late and the score may or may not be affected.	\N	\N	\N	\N	2023-12-06 19:12:41.933997	2023-12-06 19:12:41.93224	39ab18e7-6d6b-44d8-ac1f-022c027d7b1c	674
675	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:41.966039	2023-12-06 19:12:41.965155	5751ec7c-061a-4747-b140-7e47688dd389	675
679	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:41.974668	2023-12-06 19:12:41.974653	f94dc807-3b9f-4016-9367-04a83807d337	679
683	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	\N	2023-12-06 19:12:42.003315	2023-12-06 19:12:42.002049	549ab914-4b45-481e-8dcd-e12f8230b7d5	683
690	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	\N	2023-12-06 19:12:42.01742	2023-12-06 19:12:42.017405	3f18ff96-d532-4b81-90c7-63aaf5a0f139	690
694	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	\N	2023-12-06 19:12:42.024945	2023-12-06 19:12:42.024912	09d63f52-1590-4c23-a568-fdb3732d51dd	694
699	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	\N	2023-12-06 19:12:42.032696	2023-12-06 19:12:42.032675	43b9af23-22e4-46f0-8a13-98e88a7297e6	699
702	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	\N	2023-12-06 19:12:42.040656	2023-12-06 19:12:42.040629	3a37e474-4715-4c24-8ed9-487df26d331a	702
704	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	\N	2023-12-06 19:12:42.046228	2023-12-06 19:12:42.046202	54a460f4-a1ce-4626-b724-0d64e56a5b4e	704
573	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	\N	2023-12-06 19:12:41.570427	2023-12-06 19:12:41.570399	61e7d59a-97f7-4457-be66-aae10cb5377b	573
576	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	\N	2023-12-06 19:12:41.578954	2023-12-06 19:12:41.578749	45d0fae0-2a6c-4de6-856f-d5adce867f38	576
579	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	\N	2023-12-06 19:12:41.584802	2023-12-06 19:12:41.584767	7bed5fa9-1538-4600-85bf-4ed7b33f831d	579
582	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	\N	2023-12-06 19:12:41.590383	2023-12-06 19:12:41.590046	3203f2cf-b687-4533-8dc1-0205ab19134a	582
584	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	\N	2023-12-06 19:12:41.595598	2023-12-06 19:12:41.595571	b914d8ed-96d6-44e7-b8b6-c7425bd0ea24	584
590	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	\N	2023-12-06 19:12:41.60688	2023-12-06 19:12:41.606663	f9cc7874-325c-4f5c-9c81-540b760b2300	590
594	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	\N	2023-12-06 19:12:41.614473	2023-12-06 19:12:41.614446	e711f7f7-8409-4ed0-86c2-7488b5a658b5	594
595	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	\N	2023-12-06 19:12:41.618233	2023-12-06 19:12:41.618218	80836682-8da1-4dd6-8733-75ec429700cd	595
598	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	\N	2023-12-06 19:12:41.62274	2023-12-06 19:12:41.622726	3230a01d-c2a1-4391-ae6e-85a086323e1c	598
600	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	\N	2023-12-06 19:12:41.627064	2023-12-06 19:12:41.627045	8c5bd76c-f496-483f-8c47-c2084ee2f382	600
608	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	\N	2023-12-06 19:12:41.641287	2023-12-06 19:12:41.641251	74da9208-55f5-4983-b364-338abb639368	608
614	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-12-06 19:12:41.682763	2023-12-06 19:12:41.681572	1f4c72a9-35ca-4f68-b1f0-f63bafa73e88	614
619	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-12-06 19:12:41.692888	2023-12-06 19:12:41.692825	96e9ba80-81f3-464b-865d-fa6230a0a615	619
621	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-12-06 19:12:41.69678	2023-12-06 19:12:41.696754	2bcc6757-5d7d-4be8-ad3c-706e1137b438	621
625	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-12-06 19:12:41.704361	2023-12-06 19:12:41.704315	bcba5907-0fdb-40e4-ae53-f5a1ea0d48f4	625
627	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	\N	2023-12-06 19:12:41.736421	2023-12-06 19:12:41.735412	99df353a-0dcb-4161-bd74-5600fbd0dc75	627
632	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	\N	2023-12-06 19:12:41.745339	2023-12-06 19:12:41.745326	b37c9084-b2b2-46c9-a673-eb816128eeb1	632
635	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	\N	2023-12-06 19:12:41.752269	2023-12-06 19:12:41.752241	877a72c1-a4aa-4880-8a18-1bc8ff2f5daa	635
644	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	\N	2023-12-06 19:12:41.792915	2023-12-06 19:12:41.79179	ee1c25f7-e0dc-4636-9394-c4601615c8ac	643
645	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-12-06 19:12:41.800765	2023-12-06 19:12:41.800636	3d7b97ca-bfd5-4c82-ada1-b51a2c24bae7	645
650	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	\N	2023-12-06 19:12:41.808546	2023-12-06 19:12:41.808519	033041f3-fc2d-41cf-9bb4-b5419510a60e	650
653	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	\N	2023-12-06 19:12:41.814376	2023-12-06 19:12:41.814331	db766e8d-9f9f-4b80-b677-41e25ceccb62	653
658	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.849953	2023-12-06 19:12:41.848718	d09a227b-a051-4d84-909d-45cd21068c9d	658
660	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.857487	2023-12-06 19:12:41.857275	d3031515-8603-40d0-98eb-ce5de190f53f	660
666	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	\N	2023-12-06 19:12:41.892401	2023-12-06 19:12:41.891535	20d00557-6ed8-423a-93a8-13e96f3d9799	666
673	uri://ed-fi.org/AssignmentLateStatusDescriptor	Not Late	Not Late	The assignment was not submitted after the due date and/or is not marked as late.	\N	\N	\N	\N	2023-12-06 19:12:41.933696	2023-12-06 19:12:41.932304	c2c2c44f-759a-447d-9a47-76882dbdea2c	673
677	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:41.966015	2023-12-06 19:12:41.965123	e241daa7-c1da-4ef7-adf1-3054ac111ac3	677
681	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:41.975339	2023-12-06 19:12:41.97522	a00943a6-4bb4-4697-becb-ebf7fbcc8d2e	681
685	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:12:42.003086	2023-12-06 19:12:42.002014	f20aad7c-ba56-4df8-b462-28ce26570960	685
686	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	\N	2023-12-06 19:12:42.010594	2023-12-06 19:12:42.010581	43935330-0f86-45a8-9521-aced122920b5	686
689	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:42.015279	2023-12-06 19:12:42.015235	649f084a-e600-46e6-8875-e4ff98dd681a	689
692	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	\N	2023-12-06 19:12:42.019427	2023-12-06 19:12:42.019004	3f03a4a4-891b-4811-9391-a8206b28ee52	692
698	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	\N	2023-12-06 19:12:42.031622	2023-12-06 19:12:42.031586	ab8a3919-0cd9-4e86-9a23-5a03ac7572d3	698
705	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	\N	2023-12-06 19:12:42.04626	2023-12-06 19:12:42.046237	ec446fc0-34b2-4a78-876c-1ac8fac553c6	705
709	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	\N	2023-12-06 19:12:42.054767	2023-12-06 19:12:42.054469	8234f133-58b9-4d0d-81e2-1595cc251972	709
641	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-12-06 19:12:41.792682	2023-12-06 19:12:41.791797	9928c48c-56dd-4711-892c-b2cde3502246	641
646	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	\N	2023-12-06 19:12:41.800752	2023-12-06 19:12:41.800737	a967c424-143b-47d1-9af3-2c46ac98d189	646
649	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	\N	2023-12-06 19:12:41.80774	2023-12-06 19:12:41.807716	4d387bf9-03cb-49cc-917d-0583e510bbc3	649
654	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	\N	2023-12-06 19:12:41.817214	2023-12-06 19:12:41.817181	0b161b19-ccf9-4d22-b54f-90eb82466370	654
656	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.849542	2023-12-06 19:12:41.84869	68945a14-f78a-412d-a6dc-f6cc7640a3eb	656
662	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.858153	2023-12-06 19:12:41.858069	578e2b72-b5b0-428d-867d-4456fba86d38	662
664	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	\N	2023-12-06 19:12:41.866088	2023-12-06 19:12:41.866051	0c024714-e5c8-457f-a97c-e80364da6c97	664
668	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:41.892462	2023-12-06 19:12:41.89156	0b3aee9b-22ae-4e3f-b748-16271e5ddf91	668
672	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	\N	2023-12-06 19:12:41.932693	2023-12-06 19:12:41.932666	8096409b-782b-441b-8cb4-d6e61ad10b30	672
676	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:41.966025	2023-12-06 19:12:41.965135	bc7ea838-5572-4bbe-a8b5-cae9b7cb913b	676
684	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	\N	2023-12-06 19:12:42.002993	2023-12-06 19:12:42.002032	74053e80-9e33-47e5-a961-31d1b919a9e4	684
688	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	\N	2023-12-06 19:12:42.011592	2023-12-06 19:12:42.011576	6efdb00f-9acc-44c0-ab6a-0485420ed85e	688
693	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-12-06 19:12:42.022382	2023-12-06 19:12:42.022353	0a8223ad-cbde-4c74-b5b8-58aa6511391a	693
696	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	\N	2023-12-06 19:12:42.031046	2023-12-06 19:12:42.03103	6349292a-495c-4f4f-866e-ad097f6ef1c3	696
701	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	\N	2023-12-06 19:12:42.039063	2023-12-06 19:12:42.039049	0058b43d-d172-44eb-bd9c-87786e8b3407	701
708	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-12-06 19:12:42.052813	2023-12-06 19:12:42.052771	9f619ad9-16e8-4248-ac15-c39b0cd572b4	708
710	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	\N	2023-12-06 19:12:42.056073	2023-12-06 19:12:42.056026	3635afc6-6a0f-46dd-8adb-86b7bb7dfe1a	710
713	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	\N	2023-12-06 19:12:42.063508	2023-12-06 19:12:42.063491	3624d15f-fc2d-42b9-a8a2-9c8454fb0cfa	713
718	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	\N	2023-12-06 19:12:42.071581	2023-12-06 19:12:42.071517	174fea8f-1cc0-40fb-8b77-2fa411516676	718
720	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	\N	2023-12-06 19:12:42.075449	2023-12-06 19:12:42.075422	c662c0d0-dc11-4240-b118-a94471e2633a	720
723	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	\N	2023-12-06 19:12:42.082948	2023-12-06 19:12:42.082921	d15aee19-8ea0-4339-a47e-ab1551b6db76	723
725	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	\N	2023-12-06 19:12:42.085888	2023-12-06 19:12:42.085862	d6775a0a-b221-4bff-b6bd-a1a41e30df91	725
727	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-12-06 19:12:42.090449	2023-12-06 19:12:42.090404	6d89121f-cbcd-4b7d-9dd6-50d1ceddca33	727
730	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	\N	2023-12-06 19:12:42.096536	2023-12-06 19:12:42.096498	f24a1a92-803b-4f1d-b35d-14c069dde6f1	730
735	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	\N	2023-12-06 19:12:42.105541	2023-12-06 19:12:42.105515	c98611e4-0ec1-47a3-914d-cc468add9157	735
737	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	\N	2023-12-06 19:12:42.10901	2023-12-06 19:12:42.108505	61c77108-e57c-47ad-8675-edc666e51156	737
740	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	\N	2023-12-06 19:12:42.114477	2023-12-06 19:12:42.114409	67751447-111c-45be-a1b0-2357fdf040f4	740
742	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	\N	2023-12-06 19:12:42.118935	2023-12-06 19:12:42.1189	cb893352-ac6d-4996-bfb9-fc12b2286678	742
744	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	\N	2023-12-06 19:12:42.187314	2023-12-06 19:12:42.187285	0ecd9bf1-6b28-4857-a76a-7c8a078f89f4	744
748	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	\N	2023-12-06 19:12:42.197091	2023-12-06 19:12:42.196987	d42ebb11-ae5b-4523-a5f3-5061de8fc203	748
750	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.203107	2023-12-06 19:12:42.203063	96de6697-5cb8-4755-a896-5c6f8afe9d61	750
752	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	\N	2023-12-06 19:12:42.206905	2023-12-06 19:12:42.206877	a18b9461-c17e-4616-8ed0-e926d9dda973	752
1260	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	\N	2023-12-06 19:12:44.485177	2023-12-06 19:12:44.485163	7562fc49-a653-4dea-b32e-f4e31e0941e4	1260
651	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	\N	2023-12-06 19:12:41.809835	2023-12-06 19:12:41.8098	bb7765d1-7cd1-4989-b6cd-0187ff4f2318	651
655	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	\N	2023-12-06 19:12:41.817541	2023-12-06 19:12:41.81735	2b8933de-43ed-42c5-adca-87b646f06b85	655
659	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:41.849573	2023-12-06 19:12:41.848708	21b3e3ef-c91a-4105-ab47-fbf1bca7dc20	659
663	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	\N	2023-12-06 19:12:41.858782	2023-12-06 19:12:41.85865	482cc3f4-be81-4c16-8918-34eb42aa20eb	663
667	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	\N	2023-12-06 19:12:41.892518	2023-12-06 19:12:41.891565	f86d78d9-782e-4a0f-8b94-8f8f92557011	667
669	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	\N	2023-12-06 19:12:41.925619	2023-12-06 19:12:41.924117	6636fde1-a60d-4964-b22b-8e1307ff81de	669
671	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:41.932146	2023-12-06 19:12:41.932118	ed808c2e-8064-4e65-ba89-834ccb3f1af5	671
678	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:41.966124	2023-12-06 19:12:41.965149	ca058ae0-2dc2-456f-8e7e-7f98b332c5b5	678
680	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:41.975312	2023-12-06 19:12:41.975297	8f8ea6b5-0400-4088-93ab-94fc50262cc3	680
682	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	\N	2023-12-06 19:12:42.002928	2023-12-06 19:12:42.002021	842f62f7-7369-4943-83c0-50190faa3a41	682
687	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	\N	2023-12-06 19:12:42.011658	2023-12-06 19:12:42.011645	b4869d3b-068b-47ba-8372-06eb8881ff7f	687
691	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	\N	2023-12-06 19:12:42.017994	2023-12-06 19:12:42.01797	178e154b-83eb-4001-83ed-6d0b79e12af7	691
695	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	\N	2023-12-06 19:12:42.025294	2023-12-06 19:12:42.025281	d7038e26-7b89-4659-8f41-4f9be81e4667	695
697	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	\N	2023-12-06 19:12:42.031501	2023-12-06 19:12:42.031465	192e6ecb-7f77-4ea0-a778-5a467668aff5	697
700	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	\N	2023-12-06 19:12:42.038583	2023-12-06 19:12:42.038524	0c42b275-10e8-444f-8e1b-9cc352a74084	700
703	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-12-06 19:12:42.041354	2023-12-06 19:12:42.041341	8eafff5d-4196-48b8-ae0c-5ca2aa595ca8	703
706	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	\N	2023-12-06 19:12:42.047619	2023-12-06 19:12:42.047593	69f0a1d1-f679-4e77-a4f6-720df0e22985	706
711	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	\N	2023-12-06 19:12:42.057499	2023-12-06 19:12:42.057469	fd810517-770c-4347-9f4b-c22eb258adf0	711
728	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	\N	2023-12-06 19:12:42.090861	2023-12-06 19:12:42.090757	501d01d9-d618-4594-93ca-de9328ffaf66	728
732	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	\N	2023-12-06 19:12:42.099626	2023-12-06 19:12:42.099563	5d0eb4e5-8dc1-4e36-8d79-b49e50859a76	732
736	uri://ed-fi.org/ProgramTypeDescriptor	Support	Support	Support	\N	\N	\N	\N	2023-12-06 19:12:42.10718	2023-12-06 19:12:42.107044	9dea05c5-fe0b-430b-b3cb-9a46c50a54f2	736
738	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	\N	2023-12-06 19:12:42.111665	2023-12-06 19:12:42.111619	359e3243-80ba-4690-a314-1f275475ef87	738
747	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	\N	2023-12-06 19:12:42.195732	2023-12-06 19:12:42.193861	da15ab21-6941-472a-a737-cd86439d65f0	747
755	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-12-06 19:12:42.242898	2023-12-06 19:12:42.241862	50e20554-6a3c-45f8-90f2-ce747ee284f9	755
758	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.251001	2023-12-06 19:12:42.250854	50434712-689d-4191-ac35-41b1992fd9a6	758
764	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:42.258695	2023-12-06 19:12:42.258538	9ce9d49f-35d2-429d-afde-654d889e8ef5	764
769	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.268973	2023-12-06 19:12:42.268938	2f31d253-0bb5-4ec2-a344-881ba3f9df3d	769
779	uri://ed-fi.org/GradeLevelDescriptor	No grade level	DEPRECATED: No grade level	DEPRECATED: No grade level	\N	\N	\N	\N	2023-12-06 19:12:42.290671	2023-12-06 19:12:42.290585	27618b2c-2918-4791-9c7b-4999a881eaf7	779
782	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-12-06 19:12:42.321257	2023-12-06 19:12:42.320135	4473d026-16d8-4df7-8bf7-486ce92bcafd	782
785	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-12-06 19:12:42.32914	2023-12-06 19:12:42.329123	9df6cde5-a260-47b8-8b14-a3eba21831e7	785
795	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.345797	2023-12-06 19:12:42.34577	8b4d0d14-4c48-4777-80bf-d970944c199a	795
799	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	\N	2023-12-06 19:12:42.378245	2023-12-06 19:12:42.377246	27afd0e3-e991-4810-9aa0-191e1426c3ba	799
801	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.386593	2023-12-06 19:12:42.386562	44f47d0a-3589-454d-a958-a9e0371e397b	801
807	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	\N	2023-12-06 19:12:42.394313	2023-12-06 19:12:42.394259	0fa3070f-6153-442c-b92b-9fab67ce4e18	807
707	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	\N	2023-12-06 19:12:42.049739	2023-12-06 19:12:42.049663	5359a7c3-53b1-4545-81ad-b86cd2b5c96a	707
715	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:42.065683	2023-12-06 19:12:42.065655	c1e146c0-159a-40e9-8371-062e277bab53	715
716	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	\N	2023-12-06 19:12:42.069936	2023-12-06 19:12:42.069901	1cfbf5bb-83cc-43c0-baac-ed5c2e9e6f2a	716
721	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	\N	2023-12-06 19:12:42.076457	2023-12-06 19:12:42.076418	038376a6-5c80-4a21-9c1f-e8c9d4e158fe	721
731	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:42.098274	2023-12-06 19:12:42.098206	697589ad-a41f-4c07-bb19-25bb16d24e8a	731
739	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	\N	2023-12-06 19:12:42.114564	2023-12-06 19:12:42.114386	4740af73-4ff2-469c-b097-ba74e1d74c94	739
743	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	\N	2023-12-06 19:12:42.186287	2023-12-06 19:12:42.184416	5dcc7be0-e83e-4b16-96fb-a20de1483acc	743
749	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	\N	2023-12-06 19:12:42.198086	2023-12-06 19:12:42.19806	e90ba9bc-9b02-4d20-a428-4696e6c0627a	749
753	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	\N	2023-12-06 19:12:42.208344	2023-12-06 19:12:42.20816	34ee5653-8899-41c6-bd9b-3ac216f9bacc	753
756	uri://ed-fi.org/GradeLevelDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-12-06 19:12:42.242895	2023-12-06 19:12:42.241834	cd11545c-364c-4dca-b8b2-470f9276599c	756
759	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:42.251218	2023-12-06 19:12:42.251064	30211580-de90-435a-962f-a7d0d5d8e5ea	759
763	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:42.258757	2023-12-06 19:12:42.258731	d816eab5-8255-42e9-a080-b3a17369d5c5	763
766	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:42.263143	2023-12-06 19:12:42.263115	9cda1465-48ef-485c-88c2-fe61db57889d	766
767	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:42.266384	2023-12-06 19:12:42.266344	e9f07b98-1bc4-4833-98ec-b6d1ddbcfbbc	767
772	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-12-06 19:12:42.275396	2023-12-06 19:12:42.275359	4f33ce95-888d-4e23-98f8-03357493e0cf	772
775	uri://ed-fi.org/GradeLevelDescriptor	Out of School	Out of School	Out of School	\N	\N	\N	\N	2023-12-06 19:12:42.282688	2023-12-06 19:12:42.282658	9f83898a-1e91-48a8-9f5b-ab3e718b9159	775
778	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.289393	2023-12-06 19:12:42.289019	f7bc0eb4-af59-4cc4-85b0-985a59eb46c0	778
783	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-12-06 19:12:42.321193	2023-12-06 19:12:42.320115	9502ee35-0457-43d3-964b-bb6b237d3bbd	783
786	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-12-06 19:12:42.329465	2023-12-06 19:12:42.329451	164b30a9-78db-4fd6-9dd0-0f1da3f1f34e	786
788	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-12-06 19:12:42.335692	2023-12-06 19:12:42.335642	8432d33d-04c2-4600-8777-33207250cb87	788
791	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-12-06 19:12:42.338473	2023-12-06 19:12:42.33845	349ce1da-9dd5-45b2-8089-30f71fd98e99	791
792	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-12-06 19:12:42.342001	2023-12-06 19:12:42.341974	14987a36-5ec1-4944-bb58-77d80af1296c	792
796	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-12-06 19:12:42.349378	2023-12-06 19:12:42.349352	f9d68c09-c1e1-487b-9351-b70936e63227	796
800	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	\N	2023-12-06 19:12:42.378245	2023-12-06 19:12:42.377259	fde63ef7-26dd-49f2-8a09-2163477736b3	800
803	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	\N	2023-12-06 19:12:42.387058	2023-12-06 19:12:42.387042	6ecb4f2f-7fbd-4c43-8da8-f0f4e34dd9c3	803
806	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-12-06 19:12:42.394347	2023-12-06 19:12:42.394317	1130c7d4-45d5-4e7f-a1d4-6ba42e8cfda7	806
810	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	\N	2023-12-06 19:12:42.40121	2023-12-06 19:12:42.401179	0a7e454e-83eb-456e-a06f-737c337d8d5e	810
813	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	\N	2023-12-06 19:12:42.430845	2023-12-06 19:12:42.429849	d10c4ade-982b-40e7-af32-4fb75fb01001	813
818	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	\N	2023-12-06 19:12:42.438953	2023-12-06 19:12:42.43871	0a79a8bf-17cf-4437-852a-f95d6bf5b5e6	818
823	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.449717	2023-12-06 19:12:42.449689	c23e6bb7-abbc-4a70-9ec1-03fc9dc54559	823
825	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	\N	2023-12-06 19:12:42.455532	2023-12-06 19:12:42.455487	38866f4b-fcb8-4f20-98f1-0caac7733b90	825
829	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	\N	2023-12-06 19:12:42.486147	2023-12-06 19:12:42.485291	bc9e5366-6fa8-4f6e-b569-0d4f68e99fbf	829
832	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	\N	2023-12-06 19:12:42.494288	2023-12-06 19:12:42.49426	116dee16-4502-4de3-b051-5887261c5626	832
712	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	\N	2023-12-06 19:12:42.05963	2023-12-06 19:12:42.059617	1aee7cb0-cf0f-4650-9088-df462676e06f	712
714	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	\N	2023-12-06 19:12:42.064337	2023-12-06 19:12:42.064323	736ea2c4-6b11-41f6-8171-478e94f8ae71	714
717	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	\N	2023-12-06 19:12:42.070071	2023-12-06 19:12:42.069654	cf243a67-a308-4b4f-8643-7f91dc4aa44c	717
719	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	\N	2023-12-06 19:12:42.073656	2023-12-06 19:12:42.07363	587167ff-2bb1-460c-ad80-b2bb104947ab	719
722	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.079747	2023-12-06 19:12:42.07971	750c0bb8-e4b5-41a4-b90b-fb37c80fd59c	722
724	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	\N	2023-12-06 19:12:42.083662	2023-12-06 19:12:42.083511	7cbe05ae-7965-45a1-9081-1e5b9768f54b	724
726	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	\N	2023-12-06 19:12:42.088525	2023-12-06 19:12:42.088498	27054571-82ae-43b5-a710-93b19fdd1f5f	726
729	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	\N	2023-12-06 19:12:42.09275	2023-12-06 19:12:42.092729	03bbfcca-d111-4ecb-8cac-d3b03237d811	729
733	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	\N	2023-12-06 19:12:42.10014	2023-12-06 19:12:42.100112	79298935-f607-4da1-bad9-cf2015255352	733
734	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	\N	2023-12-06 19:12:42.105116	2023-12-06 19:12:42.10509	494e6cef-5462-4d0f-9f9e-d4db7943c685	734
741	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	\N	2023-12-06 19:12:42.116337	2023-12-06 19:12:42.116299	6d2964da-6200-4663-b654-035f379821e7	741
745	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	\N	2023-12-06 19:12:42.188432	2023-12-06 19:12:42.184414	992c0ce9-16d5-4261-8f50-f183115d6484	745
746	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	\N	2023-12-06 19:12:42.195386	2023-12-06 19:12:42.194943	2a9bf7f4-40db-46f3-894e-bb95e1603e37	746
751	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	\N	2023-12-06 19:12:42.203887	2023-12-06 19:12:42.20386	8a0d37cd-ef0a-469a-b527-369e714d2ef0	751
754	uri://ed-fi.org/GradeLevelDescriptor	Prekindergarten	Prekindergarten	Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.24272	2023-12-06 19:12:42.241825	b9b0c43e-1e73-4c95-a060-46e207222263	754
761	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:42.252311	2023-12-06 19:12:42.252281	02de41de-b3cc-4751-b1cc-d0096e6f1d93	761
770	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:42.27209	2023-12-06 19:12:42.271721	6ff83d22-b3cd-4e59-bc99-a872295153d9	770
773	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.279661	2023-12-06 19:12:42.279552	3548ff44-1a3b-4c73-9319-eaaaa1dc983f	773
776	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:42.284541	2023-12-06 19:12:42.284515	5bdbc701-3a41-4dea-b67b-d6941b54cd86	776
777	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	DEPRECATED: Adult Education	DEPRECATED: Adult Education	\N	\N	\N	\N	2023-12-06 19:12:42.289352	2023-12-06 19:12:42.289325	b7d1868d-754c-4be6-8a56-2a5c36cb3d27	777
781	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-12-06 19:12:42.321256	2023-12-06 19:12:42.32014	eed3c17b-b2fe-4644-958c-8d4041c0e7b8	781
784	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-12-06 19:12:42.32904	2023-12-06 19:12:42.329011	12ba765a-f5ee-4ff3-a6b2-85a5e2046f8a	784
790	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-12-06 19:12:42.337636	2023-12-06 19:12:42.337622	99896183-6a3e-477d-9496-c16ac774c120	790
794	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-12-06 19:12:42.345402	2023-12-06 19:12:42.345388	6852af46-4277-45bd-83d1-2e6164528d4c	794
797	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	\N	2023-12-06 19:12:42.378107	2023-12-06 19:12:42.377265	7c24fb4b-8611-461d-a2fd-520dc60a70ea	797
804	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	\N	2023-12-06 19:12:42.38622	2023-12-06 19:12:42.386171	c18b6475-6f6d-4a1d-a439-3c401c1f0432	804
805	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	\N	2023-12-06 19:12:42.39294	2023-12-06 19:12:42.392888	0800addb-aaa6-4985-b8dd-c5571c3e6661	805
812	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	\N	2023-12-06 19:12:42.430735	2023-12-06 19:12:42.429865	967105e4-1d4c-4de0-ae1d-178f04dee56a	812
816	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	\N	2023-12-06 19:12:42.438882	2023-12-06 19:12:42.438833	ef77afb3-ca06-4768-97ae-3e5df0be4406	816
822	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	\N	2023-12-06 19:12:42.448559	2023-12-06 19:12:42.448466	6d6f4735-de8b-406a-908a-950bacf5ce6c	822
827	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	\N	2023-12-06 19:12:42.486387	2023-12-06 19:12:42.485319	aec85af7-5369-4023-a5bc-225a35a38256	827
831	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	\N	2023-12-06 19:12:42.49459	2023-12-06 19:12:42.4945	5916c694-51b3-4e78-aeea-4832aa4f4415	831
757	uri://ed-fi.org/GradeLevelDescriptor	Transitional Kindergarten	Transitional Kindergarten	Transitional Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.242886	2023-12-06 19:12:42.241855	4e7f722c-bed2-44b8-be97-8e750dd04f3a	757
760	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:42.251602	2023-12-06 19:12:42.251542	e3c687da-1985-4e0a-b8fc-7e349b8da72b	760
762	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:42.257255	2023-12-06 19:12:42.257241	d67f36ff-0020-4943-9e23-c75957e7883a	762
765	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.260819	2023-12-06 19:12:42.260792	19931d48-13f1-4971-a8ed-82941ba7a4ce	765
768	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:42.267626	2023-12-06 19:12:42.267599	1939645d-5bbb-4748-9de5-eff77244a999	768
771	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-12-06 19:12:42.273156	2023-12-06 19:12:42.272993	ce2db495-30e2-494c-8faa-0af9b9b28c77	771
774	uri://ed-fi.org/GradeLevelDescriptor	Early Education	DEPRECATED: Early Education	DEPRECATED: Early Education	\N	\N	\N	\N	2023-12-06 19:12:42.282537	2023-12-06 19:12:42.282491	816925ab-8e0b-48d0-b831-478a388953b1	774
780	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-12-06 19:12:42.321043	2023-12-06 19:12:42.320125	97268ba2-d521-41fa-af9c-726f7f2e8114	780
787	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-12-06 19:12:42.329073	2023-12-06 19:12:42.329052	02b4c484-968a-4175-81ea-076cec3575b3	787
789	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-12-06 19:12:42.336723	2023-12-06 19:12:42.336499	7ea1cf87-1819-42d4-9da2-782cf0acb7e9	789
793	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-12-06 19:12:42.34352	2023-12-06 19:12:42.343333	47943212-50e0-45e7-acee-91f4c10bc62a	793
798	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	\N	2023-12-06 19:12:42.378229	2023-12-06 19:12:42.377236	9bfb95e5-ea34-41d9-889a-e352e8cf73a0	798
802	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	\N	2023-12-06 19:12:42.386719	2023-12-06 19:12:42.386613	629136cb-e3e0-48d3-9746-bcd175cabdb2	802
808	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	\N	2023-12-06 19:12:42.394179	2023-12-06 19:12:42.394011	e7a6f891-c292-4dbe-8d79-1b675a6eaff6	808
809	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	\N	2023-12-06 19:12:42.398519	2023-12-06 19:12:42.398492	3293451a-9c02-4886-802c-82c1a177a8a9	809
815	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	\N	2023-12-06 19:12:42.43087	2023-12-06 19:12:42.429856	c87c2593-5830-4e32-873e-a95a9c301651	815
819	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	\N	2023-12-06 19:12:42.440023	2023-12-06 19:12:42.439974	90715140-ce30-4920-b1e5-4f1e9b46ba46	819
821	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	\N	2023-12-06 19:12:42.448067	2023-12-06 19:12:42.448053	a86c7e7e-263f-474d-8e3c-6c4916adcdc6	821
824	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	\N	2023-12-06 19:12:42.454878	2023-12-06 19:12:42.454862	46d28a27-8d31-461c-8858-da93ac4c112f	824
826	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	\N	2023-12-06 19:12:42.486156	2023-12-06 19:12:42.485309	56fcdc1b-ed87-4366-8901-7432822660d4	826
833	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	\N	2023-12-06 19:12:42.497439	2023-12-06 19:12:42.4974	8e4be20c-fd31-4fc7-854a-6edb8df35780	833
837	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	\N	2023-12-06 19:12:42.505869	2023-12-06 19:12:42.505842	034db479-62dc-4475-a72f-7c446e102377	837
841	uri://ed-fi.org/SurveyCategoryDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:42.539364	2023-12-06 19:12:42.538276	fe05fe04-6b2a-4bb2-9e2a-6f2bc8ab128e	841
845	uri://ed-fi.org/SurveyCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.549127	2023-12-06 19:12:42.548968	5a9874b7-4137-4f8b-bb03-3bc69f2ee227	845
846	uri://ed-fi.org/SurveyCategoryDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:12:42.554275	2023-12-06 19:12:42.554248	0d2d9a0f-2149-43c2-a73d-00f7c86aee28	846
849	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-12-06 19:12:42.584557	2023-12-06 19:12:42.583512	1fa18d36-c46e-4bc5-93d6-1d3febf94afe	849
855	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:42.619266	2023-12-06 19:12:42.618275	d65410c6-f1ef-45b6-b144-1f306ebee15a	855
857	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual or Early-Exit Bilingual	Transitional Bilingual Education or Early-Exit Bilingual Education	Transitional Bilingual Education or Early-Exit Bilingual Education	\N	\N	\N	\N	2023-12-06 19:12:42.627026	2023-12-06 19:12:42.627011	36dbee8a-e718-4e9b-91cc-c4c839329996	857
863	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	DEPRECATED: Developmental Bilingual	DEPRECATED: Developmental Bilingual	\N	\N	\N	\N	2023-12-06 19:12:42.636188	2023-12-06 19:12:42.636159	5e0cc4a0-d896-4dc5-8b25-595bb60d7c7e	863
864	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	DEPRECATED: Structured English Immersion	DEPRECATED: Structured English Immersion	\N	\N	\N	\N	2023-12-06 19:12:42.642706	2023-12-06 19:12:42.642693	24aa3f30-4d99-4b01-9e27-c6116d5a3ee9	864
869	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:42.678259	2023-12-06 19:12:42.677412	74fbc43d-ad7c-40d3-8c5c-1406e293fce4	869
878	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	DEPRECATED: Commended Performance	DEPRECATED: Commended Performance	\N	\N	\N	\N	2023-12-06 19:12:42.693118	2023-12-06 19:12:42.693105	777550a7-c604-4238-9b8b-d363d636dfdc	878
882	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	DEPRECATED: Minimum	DEPRECATED: Minimum	\N	\N	\N	\N	2023-12-06 19:12:42.701687	2023-12-06 19:12:42.701657	cd1fa425-08f8-4e08-8742-5e3555aa0123	882
811	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-12-06 19:12:42.402946	2023-12-06 19:12:42.402795	0f948d3e-e260-403e-b4cc-adea8fbe3adb	811
814	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	\N	2023-12-06 19:12:42.430935	2023-12-06 19:12:42.429882	cfef1ebd-ba91-4c29-917d-85d2b32f209e	814
817	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	\N	2023-12-06 19:12:42.439235	2023-12-06 19:12:42.439078	c2c91876-8a9e-49aa-8b3a-97c60dba8370	817
820	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	\N	2023-12-06 19:12:42.444648	2023-12-06 19:12:42.4446	1c67951d-717b-4e08-aadf-bca1bae1933b	820
828	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	\N	2023-12-06 19:12:42.486143	2023-12-06 19:12:42.485301	7ee4052e-20c5-4617-8472-0f53e91d2a8d	828
830	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	\N	2023-12-06 19:12:42.494459	2023-12-06 19:12:42.494068	329d76ce-8711-49cb-bb0e-99bffc084c4c	830
836	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	\N	2023-12-06 19:12:42.504179	2023-12-06 19:12:42.504143	48843d24-44e3-444c-88fc-adf4a312ac66	836
839	uri://ed-fi.org/SurveyCategoryDescriptor	Applicant	Applicant	Applicant	\N	\N	\N	\N	2023-12-06 19:12:42.5393	2023-12-06 19:12:42.538252	cdffd084-973f-479d-9046-897074a8cbb2	839
842	uri://ed-fi.org/SurveyCategoryDescriptor	Exit	Exit	Exiting staff	\N	\N	\N	\N	2023-12-06 19:12:42.54781	2023-12-06 19:12:42.547775	d80af76f-09f5-4891-9b5c-3910d2838ae5	842
848	uri://ed-fi.org/SexDescriptor	Non-binary	Non-binary	Non-binary	\N	\N	\N	\N	2023-12-06 19:12:42.584361	2023-12-06 19:12:42.58353	7d35c68b-0a3f-413c-8a13-a6dcecb77a83	848
854	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content Classes with integrated ESL support	Content Classes with integrated ESL support	Content Classes with integrated ESL support	\N	\N	\N	\N	2023-12-06 19:12:42.619265	2023-12-06 19:12:42.618284	52223e98-9b04-4d71-a361-45b75bd7801e	854
856	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.626475	2023-12-06 19:12:42.626461	19a80588-3425-4ec2-b48b-4e3d0f97af9a	856
861	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	DEPRECATED: Transitional Bilingual	DEPRECATED: Transitional Bilingual	\N	\N	\N	\N	2023-12-06 19:12:42.635369	2023-12-06 19:12:42.63534	93b3896b-83a1-4714-9c3a-1b5f78c652b0	861
866	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	DEPRECATED: Specially Designed Academic Instruction Delivered In English	DEPRECATED: SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	\N	2023-12-06 19:12:42.6434	2023-12-06 19:12:42.643319	bdd54131-a924-4991-8889-bcfb6f6d1809	866
870	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:42.678405	2023-12-06 19:12:42.677404	eec5f365-789f-4b40-a52e-9d4d66188cdc	870
873	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-12-06 19:12:42.686566	2023-12-06 19:12:42.68654	70bea407-6a99-4148-ab93-b3f4f5c341e9	873
877	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	DEPRECATED: Above Benchmark	DEPRECATED: Above Benchmark	\N	\N	\N	\N	2023-12-06 19:12:42.69246	2023-12-06 19:12:42.692417	1dc323b7-b31a-4d71-8def-8662cc5615ac	877
881	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	DEPRECATED: Satisfactory	DEPRECATED: Satisfactory	\N	\N	\N	\N	2023-12-06 19:12:42.69972	2023-12-06 19:12:42.699693	2aab4ccf-d88b-41ae-a334-e75a4f5e9f25	881
886	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	\N	2023-12-06 19:12:42.729252	2023-12-06 19:12:42.728184	072cc1c9-55d1-4385-930f-cf115ba531d1	886
888	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	\N	2023-12-06 19:12:42.737911	2023-12-06 19:12:42.737518	c40b4d32-b61b-417b-8934-8c65c8144344	888
893	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	\N	2023-12-06 19:12:42.775993	2023-12-06 19:12:42.775015	892c8bc8-30ea-4f60-8cd0-c901c8e15eff	893
896	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	\N	2023-12-06 19:12:42.810689	2023-12-06 19:12:42.809715	99989ddd-52da-48e9-bf64-7e91ace47726	896
902	uri://ed-fi.org/SurveyLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.846158	2023-12-06 19:12:42.845278	4534e755-c8fe-4607-a25e-6edd3712270f	902
906	uri://ed-fi.org/SurveyLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:42.854471	2023-12-06 19:12:42.854436	f8ca148e-d367-4374-be95-71de9ae0d6c7	906
912	uri://ed-fi.org/SurveyLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.862517	2023-12-06 19:12:42.862441	ffc7ad22-97af-4d37-84c2-213d35618bb7	912
916	uri://ed-fi.org/SurveyLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:42.869663	2023-12-06 19:12:42.869643	e55130ee-cf4d-4ced-afdc-743b1f665258	916
919	uri://ed-fi.org/SurveyLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-12-06 19:12:42.877746	2023-12-06 19:12:42.877732	713d013b-da2a-49d3-a041-945ee54807d8	920
923	uri://ed-fi.org/SurveyLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-12-06 19:12:42.884621	2023-12-06 19:12:42.884594	81fa71ef-4ebb-4898-9a4e-f5efd9ea4e1d	923
928	uri://ed-fi.org/CreditCategoryDescriptor	General	General	General	\N	\N	\N	\N	2023-12-06 19:12:42.921128	2023-12-06 19:12:42.920133	04fe6954-7098-4a03-97d0-65f18b1bde62	928
931	uri://ed-fi.org/CreditCategoryDescriptor	Career and Technical Education	DEPRECATED: Career and Technical Education	DEPRECATED: Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:42.929428	2023-12-06 19:12:42.929376	2acc755a-8358-44e9-ae09-39f7806abbe3	931
938	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-12-06 19:12:42.963555	2023-12-06 19:12:42.962092	e4f74711-2967-4afd-a6fc-b4114a46e293	938
939	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	\N	2023-12-06 19:12:42.971637	2023-12-06 19:12:42.971426	aa0bb9f3-e089-4ecb-9747-737f41392d5c	939
943	uri://ed-fi.org/AssessmentPeriodDescriptor	Middle of Year	Middle of Year	Middle of Year	\N	\N	\N	\N	2023-12-06 19:12:43.003311	2023-12-06 19:12:43.002371	7cdc9dad-c01f-4ec0-b837-286fd0f48bca	942
834	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	\N	2023-12-06 19:12:42.499906	2023-12-06 19:12:42.499868	dafe41b7-8e28-4040-b25d-265f8e0a5c30	834
838	uri://ed-fi.org/SurveyCategoryDescriptor	Administrator	Administrator	Administrator	\N	\N	\N	\N	2023-12-06 19:12:42.539106	2023-12-06 19:12:42.53826	7739edff-bf6c-438f-bd4c-9a21ef2777ed	838
843	uri://ed-fi.org/SurveyCategoryDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:12:42.548109	2023-12-06 19:12:42.548088	44f102c6-fd07-4660-95b1-b4b32d8aaff3	843
850	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-12-06 19:12:42.584525	2023-12-06 19:12:42.583503	37403adf-977f-4c3e-ac62-77a5a0b1c16f	850
853	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	ESL or ELD	ESL or ELD	ESL or ELD	\N	\N	\N	\N	2023-12-06 19:12:42.619265	2023-12-06 19:12:42.618269	9be1257f-fc5d-4f36-b250-ab8e81657149	853
858	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Newcomer programs	Newcomer programs	Newcomer programs	\N	\N	\N	\N	2023-12-06 19:12:42.628018	2023-12-06 19:12:42.627951	76ec20c1-6cf6-4af1-8225-32bb952fbbfc	858
862	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	DEPRECATED: Heritage Language	DEPRECATED: Heritage Language	\N	\N	\N	\N	2023-12-06 19:12:42.635845	2023-12-06 19:12:42.63579	9442bb8e-987d-434b-a39d-a8497f5d6234	862
865	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	DEPRECATED: Content-Based ESL	DEPRECATED: Content-Based ESL	\N	\N	\N	\N	2023-12-06 19:12:42.643507	2023-12-06 19:12:42.643482	c667172c-ae1d-47c0-b2b3-201a88ba6637	865
868	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	DEPRECATED: Pull-Out ESL	DEPRECATED: Pull-Out ESL	\N	\N	\N	\N	2023-12-06 19:12:42.648969	2023-12-06 19:12:42.648848	4ae68c38-f86d-46a3-a6db-a686b19aba21	868
871	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:42.678348	2023-12-06 19:12:42.677423	8e19376b-4bc4-41bf-ab59-897fbe379c00	871
875	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:42.687416	2023-12-06 19:12:42.687375	41da9452-4cb4-4935-9682-797ccd3a3d7b	875
879	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	DEPRECATED: Proficient	DEPRECATED: Proficient	\N	\N	\N	\N	2023-12-06 19:12:42.694717	2023-12-06 19:12:42.694702	9d6b8149-3511-4c6b-bb38-6fb9983180da	879
883	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	\N	2023-12-06 19:12:42.728993	2023-12-06 19:12:42.728157	e41c7d26-d87e-4fc2-a7e8-292095d87768	883
889	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.738199	2023-12-06 19:12:42.73811	146a3e60-cf9e-4337-86bd-ade3ab487a55	889
891	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	\N	2023-12-06 19:12:42.775994	2023-12-06 19:12:42.775017	ad98686f-7a2a-48dd-afd9-095cde378c5c	891
895	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	\N	2023-12-06 19:12:42.810574	2023-12-06 19:12:42.809685	8cad3ff1-b386-4769-bdb4-1c19aa3ec899	895
899	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	\N	2023-12-06 19:12:42.818591	2023-12-06 19:12:42.818523	f45452c4-d75d-4121-914a-7c9fccd80599	899
904	uri://ed-fi.org/SurveyLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-12-06 19:12:42.846276	2023-12-06 19:12:42.845267	3bbea612-cfce-471e-bf79-44e9ee8afb5b	905
909	uri://ed-fi.org/SurveyLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:42.854535	2023-12-06 19:12:42.854507	a800f59a-2ae7-4607-b16c-320d79142e10	909
910	uri://ed-fi.org/SurveyLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:42.860762	2023-12-06 19:12:42.860695	52202050-e088-487b-a305-88a8b750d4f1	910
915	uri://ed-fi.org/SurveyLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.869659	2023-12-06 19:12:42.869611	c342c6b8-9621-4757-bd11-0d47c5e3db8e	915
918	uri://ed-fi.org/SurveyLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-12-06 19:12:42.87474	2023-12-06 19:12:42.874726	4fd9907c-7f29-4956-a78e-5b5bad92a0b1	918
921	uri://ed-fi.org/SurveyLevelDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-12-06 19:12:42.879314	2023-12-06 19:12:42.879286	be2f0f7c-d95a-478d-ad80-d2c8018b8102	921
927	uri://ed-fi.org/CreditCategoryDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	\N	2023-12-06 19:12:42.92116	2023-12-06 19:12:42.920119	70ad0607-b827-4287-9c2f-d7e65bdd854e	927
932	uri://ed-fi.org/CreditCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:42.929877	2023-12-06 19:12:42.929807	99afe429-cef5-418b-8be6-190bd7413e80	932
935	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	\N	2023-12-06 19:12:42.96291	2023-12-06 19:12:42.962069	cf511ef7-4fb6-4069-a56a-5aa16e5ceab4	935
941	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-12-06 19:12:42.974378	2023-12-06 19:12:42.974363	c7802dcb-176e-4fb2-bbe4-684dfb797a91	941
942	uri://ed-fi.org/AssessmentPeriodDescriptor	Fall	Fall	Fall	\N	\N	\N	\N	2023-12-06 19:12:43.003294	2023-12-06 19:12:43.002347	b91f1052-7052-42a6-aae4-aa7d13e7fc9f	943
947	uri://ed-fi.org/AssessmentPeriodDescriptor	Spring	Spring	Spring	\N	\N	\N	\N	2023-12-06 19:12:43.013346	2023-12-06 19:12:43.013305	901bd145-2f48-4e4f-ab02-f32880db40ed	947
951	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	\N	2023-12-06 19:12:43.042061	2023-12-06 19:12:43.041091	30c8db89-b1f7-4fd1-bb81-0e0dd1440b15	951
955	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-12-06 19:12:43.08015	2023-12-06 19:12:43.078886	286810ca-f7df-4c23-9678-0ed8ade44268	955
957	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	\N	2023-12-06 19:12:43.090059	2023-12-06 19:12:43.090032	0428b251-bf32-48b0-9ea7-228e8a8ce192	957
959	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	\N	2023-12-06 19:12:43.118209	2023-12-06 19:12:43.117153	b0c11f72-0dc7-4157-a071-142122406d4b	959
963	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	\N	2023-12-06 19:12:43.1275	2023-12-06 19:12:43.127468	3541062f-c5f1-49e3-b2ee-8e4648c0b9d1	963
966	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-12-06 19:12:43.134679	2023-12-06 19:12:43.134665	504303a3-4c12-4cfa-957a-b335b804d72b	966
835	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	\N	2023-12-06 19:12:42.503016	2023-12-06 19:12:42.502537	1d79644e-78c9-4802-a023-a7ce5f073746	835
840	uri://ed-fi.org/SurveyCategoryDescriptor	Community	Community	Community	\N	\N	\N	\N	2023-12-06 19:12:42.539274	2023-12-06 19:12:42.538243	73b03798-bfca-4952-8e11-905f9d8f27aa	840
844	uri://ed-fi.org/SurveyCategoryDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-12-06 19:12:42.547863	2023-12-06 19:12:42.547827	0bc7a5b9-012d-4dc5-96a4-63828b3df01d	844
847	uri://ed-fi.org/SurveyCategoryDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-12-06 19:12:42.555678	2023-12-06 19:12:42.555558	5717f99e-c75f-4ef4-86b2-fb629d1f2f48	847
851	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-12-06 19:12:42.584609	2023-12-06 19:12:42.583536	8e095a86-8e9d-4eed-bece-21071f878047	851
852	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	\N	\N	\N	\N	2023-12-06 19:12:42.619161	2023-12-06 19:12:42.618259	6fdd2fad-043f-4c66-8a22-1e7ba00f8316	852
859	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	DEPRECATED: Dual Language	DEPRECATED: Dual Language	\N	\N	\N	\N	2023-12-06 19:12:42.628571	2023-12-06 19:12:42.628493	ad02ef30-54de-4eb5-b2bb-b4879f56f450	859
860	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	DEPRECATED: Two-Way Immersion	DEPRECATED: Two-Way Immersion	\N	\N	\N	\N	2023-12-06 19:12:42.635209	2023-12-06 19:12:42.635128	f70319a2-1614-4159-ab6a-3ee9452d0193	860
867	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	\N	\N	\N	\N	2023-12-06 19:12:42.644953	2023-12-06 19:12:42.644927	3e35f583-2731-49f4-a411-90bf4b3e4336	867
872	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:42.678458	2023-12-06 19:12:42.67742	651e181e-8e53-44a6-9839-ab7093f4098e	872
874	uri://ed-fi.org/PerformanceLevelDescriptor	Did Not Meet Standard	Did Not Meet Standard	Did Not Meet Standard	\N	\N	\N	\N	2023-12-06 19:12:42.686419	2023-12-06 19:12:42.686389	3d491cb7-d475-4caa-94ed-90c4fecdb41e	874
876	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:42.691684	2023-12-06 19:12:42.691626	72fd251a-33f5-4bfa-a31f-7ff8774090a3	876
880	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	DEPRECATED: Unsatisfactory	DEPRECATED: Unsatisfactory	\N	\N	\N	\N	2023-12-06 19:12:42.699627	2023-12-06 19:12:42.699469	69352e3f-b427-4429-b218-f909a028b65e	880
884	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	\N	2023-12-06 19:12:42.729101	2023-12-06 19:12:42.728166	a0824d54-2fdb-4bae-b68c-5ac6a3aeca84	884
890	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	\N	2023-12-06 19:12:42.738217	2023-12-06 19:12:42.737816	b7550153-df51-4def-a94c-78a930be3266	890
894	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:12:42.775944	2023-12-06 19:12:42.775036	d2476e44-1784-4fa2-a492-a74a35796aef	894
897	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	\N	2023-12-06 19:12:42.810672	2023-12-06 19:12:42.809709	16c654d2-5e0e-4e4b-bf82-79a3c8fbac40	897
900	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.81924	2023-12-06 19:12:42.819167	12deac44-4e99-4248-8048-68be9cd06b89	900
905	uri://ed-fi.org/SurveyLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	\N	2023-12-06 19:12:42.846285	2023-12-06 19:12:42.845292	7554b3f3-379a-457b-95d9-a00319d57de4	904
908	uri://ed-fi.org/SurveyLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:42.854578	2023-12-06 19:12:42.854205	6f9c3e2d-774a-40e3-a1e0-efe4070b4d8f	908
911	uri://ed-fi.org/SurveyLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:42.86177	2023-12-06 19:12:42.861576	308d0746-c28d-46a5-920b-f5e56cce5a0a	911
922	uri://ed-fi.org/SurveyLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	\N	2023-12-06 19:12:42.883844	2023-12-06 19:12:42.883816	aec19b15-04d5-47da-a964-f50b24cedecc	922
925	uri://ed-fi.org/SurveyLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.886777	2023-12-06 19:12:42.886748	70fe30ce-3b89-430a-9152-9992b979979d	925
930	uri://ed-fi.org/CreditCategoryDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	\N	2023-12-06 19:12:42.9212	2023-12-06 19:12:42.920128	79c62532-66ec-4d3e-9f95-db098dd2517e	930
934	uri://ed-fi.org/CreditCategoryDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-12-06 19:12:42.931704	2023-12-06 19:12:42.931661	5d8f99b1-f66d-4073-a440-3d2c25f39a33	934
936	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-12-06 19:12:42.962947	2023-12-06 19:12:42.962085	0549484e-789d-4c40-a0a2-0edf2199e1c2	936
940	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-12-06 19:12:42.974033	2023-12-06 19:12:42.973947	33aff7a0-048c-4395-a16e-a24fb2273fcf	940
945	uri://ed-fi.org/AssessmentPeriodDescriptor	Beginning of Year	Beginning of Year	Beginning of Year	\N	\N	\N	\N	2023-12-06 19:12:43.003617	2023-12-06 19:12:43.002377	125c1426-13a0-48f9-9730-455573bc09c1	945
950	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:43.041978	2023-12-06 19:12:43.04105	6e87f8ac-4e46-4c2a-942c-571c23336b36	949
953	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	\N	2023-12-06 19:12:43.0799	2023-12-06 19:12:43.078877	938b61d9-4dcb-4205-95d4-05c1527c469d	953
960	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	\N	2023-12-06 19:12:43.118113	2023-12-06 19:12:43.117147	76deaec0-3aa6-4f58-91a2-547333e390a2	960
962	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	\N	2023-12-06 19:12:43.127216	2023-12-06 19:12:43.127191	1565e47f-4c30-488e-840c-e34b01242da2	962
972	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	\N	2023-12-06 19:12:43.169007	2023-12-06 19:12:43.168034	5158424a-d429-49f5-9852-30e6b3f20ac0	972
1263	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	\N	2023-12-06 19:12:44.490906	2023-12-06 19:12:44.49082	13732469-96f6-4b1a-bcfb-93a678d42798	1263
885	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.729204	2023-12-06 19:12:42.7282	a0bf69ba-52e8-421f-aee4-413c4aeae03b	885
887	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	\N	2023-12-06 19:12:42.736589	2023-12-06 19:12:42.736559	532d4f76-63dc-4336-b124-233149440ff0	887
892	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-12-06 19:12:42.775995	2023-12-06 19:12:42.77503	d3f077ae-b687-45d6-a344-b5571a9991a7	892
898	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	\N	2023-12-06 19:12:42.81077	2023-12-06 19:12:42.809693	c63c7804-e0a7-49ac-8261-5b36e0baeaa4	898
901	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	\N	2023-12-06 19:12:42.820545	2023-12-06 19:12:42.820482	2fb7aae2-08ed-45e8-aa44-4771682e6818	901
903	uri://ed-fi.org/SurveyLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.846296	2023-12-06 19:12:42.845298	13ca05fc-7a76-4521-902e-e6beeda7509f	903
907	uri://ed-fi.org/SurveyLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:42.854622	2023-12-06 19:12:42.854597	f7e016d4-7c2e-4c4a-8fec-cc7cfbcd368a	907
913	uri://ed-fi.org/SurveyLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:42.864605	2023-12-06 19:12:42.863892	48f9fb2a-6cea-471b-a2c0-2ddbba9f63cc	913
914	uri://ed-fi.org/SurveyLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:42.868	2023-12-06 19:12:42.867934	2be6932b-a78c-4212-bea7-15c62ddd54f7	914
917	uri://ed-fi.org/SurveyLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:42.872328	2023-12-06 19:12:42.872301	912dd90b-ff51-4e17-9402-7522ad21de15	917
920	uri://ed-fi.org/SurveyLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-12-06 19:12:42.877718	2023-12-06 19:12:42.877631	9c19dd6e-a2ea-446f-927b-5c06d1394e75	919
924	uri://ed-fi.org/SurveyLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	\N	2023-12-06 19:12:42.8848	2023-12-06 19:12:42.884787	10d388f2-a58f-4017-b344-4b3d3a85281c	924
926	uri://ed-fi.org/SurveyLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:42.891563	2023-12-06 19:12:42.891536	a5d48584-c8d0-450d-ae2e-2da1ce9c4dbf	926
929	uri://ed-fi.org/CreditCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:42.921179	2023-12-06 19:12:42.92011	cccf07c7-4c75-4acb-9176-50e695b76c33	929
933	uri://ed-fi.org/CreditCategoryDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-12-06 19:12:42.929918	2023-12-06 19:12:42.929899	246b9cd0-fd4a-4507-97c8-a1edaad712ae	933
937	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	\N	2023-12-06 19:12:42.963399	2023-12-06 19:12:42.962059	cccc96c5-821c-426f-bf57-cdb5a6844d48	937
944	uri://ed-fi.org/AssessmentPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-12-06 19:12:43.003497	2023-12-06 19:12:43.002356	6adb7d8b-8501-418d-bded-e3dc160b00fd	944
946	uri://ed-fi.org/AssessmentPeriodDescriptor	Summer	Summer	Summer	\N	\N	\N	\N	2023-12-06 19:12:43.012309	2023-12-06 19:12:43.012263	275d57da-8440-4121-ac0e-69ed951d71f9	946
948	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:43.041951	2023-12-06 19:12:43.04106	5b24dfb1-7411-4a07-aba8-4df628f6d74e	948
952	uri://ed-fi.org/SchoolTypeDescriptor	Reportable Program	Reportable Program	Reportable Program	\N	\N	\N	\N	2023-12-06 19:12:43.049146	2023-12-06 19:12:43.049087	52574cd1-1357-4ee9-8daf-294d5c9e488c	952
954	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	\N	2023-12-06 19:12:43.080029	2023-12-06 19:12:43.078897	0fdc8721-835b-4b40-b110-55c29d62a9ac	954
961	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-12-06 19:12:43.118141	2023-12-06 19:12:43.117132	a7ea48a2-3fa5-466e-9ef7-a2a4c0e8d0a4	961
964	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.127064	2023-12-06 19:12:43.127047	2b0fa652-af62-4c04-ba7d-70f822eec51f	964
967	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	\N	2023-12-06 19:12:43.134864	2023-12-06 19:12:43.134838	b8c351fc-5d6f-4082-8cb3-d78202798808	967
970	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	\N	2023-12-06 19:12:43.168936	2023-12-06 19:12:43.168006	2511ca1a-8e9e-4ed7-9e3f-a38429c27a34	970
975	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-12-06 19:12:43.177854	2023-12-06 19:12:43.17742	89e3b494-e095-4808-868c-e41fd9daf9a3	975
980	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.186279	2023-12-06 19:12:43.186254	e72d5b8f-5f16-422a-b9e8-9fdee68e1f86	980
983	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.192686	2023-12-06 19:12:43.192661	c047b7dd-12dc-44d6-a12d-b029595b3619	983
986	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.198586	2023-12-06 19:12:43.19857	8d4b893d-d8d0-4be7-a796-d3fc7a2028e8	986
991	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Laptop Computer	Laptop Computer	A Laptop Computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.260648	2023-12-06 19:12:43.2595	9716d773-2c41-46a6-901c-81c8798b6f18	991
996	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Smartphone	Smartphone	A Smartphone is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.273842	2023-12-06 19:12:43.273806	b9e7634f-fc42-4ec5-a53f-0bd7b5ccb2b1	996
998	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:12:43.309567	2023-12-06 19:12:43.307804	55dd8719-8a0b-4713-b2e5-f758113cf0ea	998
1003	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-12-06 19:12:43.328254	2023-12-06 19:12:43.32822	56596458-672b-49d0-93d7-182118677075	1003
1008	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-12-06 19:12:43.343061	2023-12-06 19:12:43.343023	f2b4dcad-3bc8-4cc3-b839-07bffeead40f	1008
956	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	\N	2023-12-06 19:12:43.088115	2023-12-06 19:12:43.086885	4737f392-c822-401a-9682-fc11d6bb18c1	956
958	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:43.118045	2023-12-06 19:12:43.117123	d907f72c-4107-4dad-bf97-609761100ef3	958
965	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:43.128225	2023-12-06 19:12:43.128198	ed847e2e-4f80-4f42-a219-23f0daa056e9	965
968	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	\N	2023-12-06 19:12:43.135314	2023-12-06 19:12:43.13525	28d3a06b-e520-4e52-a2cc-3261a77ce40a	968
973	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	\N	2023-12-06 19:12:43.169332	2023-12-06 19:12:43.167997	99f137f3-d28a-4d94-a11c-a06b5fd70e56	973
976	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	\N	2023-12-06 19:12:43.17817	2023-12-06 19:12:43.178155	6467a5c3-64ba-4f36-9568-1ec209217263	976
981	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.189805	2023-12-06 19:12:43.189751	01362623-e01b-48a8-932a-6e09e7583dfa	981
988	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-12-06 19:12:43.205668	2023-12-06 19:12:43.205631	a9554e47-8ce6-48ea-8b58-75247984a0c7	988
992	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Chromebook	Chromebook	A Chromebook is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.260548	2023-12-06 19:12:43.259483	76b6cfe4-bad1-45e5-ab87-8de900a10068	992
995	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Other	Other	The type of device the student uses most often to complete learning activities away from school is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:43.271555	2023-12-06 19:12:43.271526	67b164ae-af8d-4589-be1f-5fd4c9c0deb5	995
999	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-12-06 19:12:43.311752	2023-12-06 19:12:43.307813	39306414-f4d9-45f7-b784-90e1f3ddbb38	999
1002	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	\N	2023-12-06 19:12:43.32413	2023-12-06 19:12:43.324066	de7730c3-73b9-4bc9-a3a8-2de008a35206	1002
1005	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	\N	2023-12-06 19:12:43.334147	2023-12-06 19:12:43.334085	b0eeb639-21f0-44ea-b4c9-100e153be21d	1005
1007	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-12-06 19:12:43.342168	2023-12-06 19:12:43.341662	d2c697aa-fd0f-4152-bf7a-29cb5bc19f0c	1007
1011	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-12-06 19:12:43.3648	2023-12-06 19:12:43.364728	2cd49530-8b02-4d99-b681-15cf1f31e45c	1011
1014	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-12-06 19:12:43.371586	2023-12-06 19:12:43.371213	86b7b373-68e6-4744-b24b-953c003cdfa7	1014
1017	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	\N	2023-12-06 19:12:43.415263	2023-12-06 19:12:43.414589	f2568d35-f471-4e01-aeca-c7b9a141f585	1017
1021	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	\N	2023-12-06 19:12:43.426836	2023-12-06 19:12:43.424765	e59519e3-0a34-4f30-bd1b-61fa38fc5ee3	1021
1022	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	\N	2023-12-06 19:12:43.431095	2023-12-06 19:12:43.431082	78aa8c74-ca1e-4030-aaf3-25fc89b33108	1022
1027	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	\N	2023-12-06 19:12:43.493342	2023-12-06 19:12:43.491233	3b78f8b1-026c-448a-97b7-8a113d5d5dd8	1027
1032	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	\N	2023-12-06 19:12:43.504791	2023-12-06 19:12:43.504749	6f55afb3-6bee-492d-b437-1949aa35ba32	1032
1036	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:43.54517	2023-12-06 19:12:43.543533	9c5a5ebc-3b39-4dee-ac6c-53bdf3db6759	1036
1037	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:43.551978	2023-12-06 19:12:43.551939	17bf59d3-cb85-4048-aa59-4846f205b617	1037
1040	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	\N	2023-12-06 19:12:43.556884	2023-12-06 19:12:43.55687	f3cf12fb-25f7-4608-b962-ab413e65ad33	1040
1043	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:43.562845	2023-12-06 19:12:43.562785	58a1397f-4fad-4fde-be23-e00b471cd046	1043
1045	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	\N	2023-12-06 19:12:43.57153	2023-12-06 19:12:43.571491	a987feca-d736-400f-aedd-a7e259ebdaaf	1045
1051	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	\N	2023-12-06 19:12:43.617836	2023-12-06 19:12:43.616309	101c3ce2-25ca-481c-8b11-28c78c3f5185	1051
1053	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent charter district	Independent charter district	Independent charter district	\N	\N	\N	\N	2023-12-06 19:12:43.661183	2023-12-06 19:12:43.660249	b1cbb9de-010d-4561-80c7-f2cde75cc3b4	1053
1058	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Specialized public school district	Specialized public school district	Specialized public school district	\N	\N	\N	\N	2023-12-06 19:12:43.67238	2023-12-06 19:12:43.672335	37036eb6-d821-4ba5-b81c-38ea2c472ecb	1058
1063	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	DEPRECATED: Independent	DEPRECATED: Independent	\N	\N	\N	\N	2023-12-06 19:12:43.681705	2023-12-06 19:12:43.68168	50226d24-5148-4e06-a4b7-12660bcfe328	1063
1065	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	\N	2023-12-06 19:12:43.716299	2023-12-06 19:12:43.715295	aa7551ac-ef64-433d-ae49-75e45c485769	1065
969	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	\N	2023-12-06 19:12:43.136201	2023-12-06 19:12:43.136128	279535bd-8f0a-458b-9976-0e1fb1686ad1	969
971	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:12:43.168922	2023-12-06 19:12:43.168017	88ebff43-e41a-4d0a-9546-f5f5dd7b751c	971
974	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-12-06 19:12:43.177506	2023-12-06 19:12:43.17748	d5bfa3c5-2e53-419d-90f6-4d5b07174581	974
979	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-12-06 19:12:43.185494	2023-12-06 19:12:43.185482	41a47b92-1233-4295-980f-45f01094a892	979
993	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Tablet	Tablet	A Tablet is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.260666	2023-12-06 19:12:43.259518	b3b94330-7437-4e38-909c-382ae85379b8	993
997	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	\N	2023-12-06 19:12:43.309043	2023-12-06 19:12:43.307823	32144c77-6a33-4118-8fab-842543dc8046	997
1006	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	\N	2023-12-06 19:12:43.334429	2023-12-06 19:12:43.33441	b93ed310-96a2-4e22-8d08-3ab2ed4c780d	1006
1018	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	\N	2023-12-06 19:12:43.422569	2023-12-06 19:12:43.419109	d972519b-5618-4ff7-ae4e-7fc5e3f3e879	1018
1024	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.437723	2023-12-06 19:12:43.437697	43182ed6-e6b3-4a16-ba8c-6a1ab7d903e8	1024
1026	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-12-06 19:12:43.492029	2023-12-06 19:12:43.491123	3689afd6-48ce-426a-9212-099a4afcccd1	1026
1031	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.506333	2023-12-06 19:12:43.506317	307b3704-b0fb-47db-8825-11f4c0b5547a	1031
1034	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:12:43.544749	2023-12-06 19:12:43.543523	790b8a8f-0cf0-48ee-a86e-1e6542c09621	1034
1041	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	\N	2023-12-06 19:12:43.562598	2023-12-06 19:12:43.562571	080355eb-6263-4fd8-a003-991fd796fbfd	1041
1046	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	\N	2023-12-06 19:12:43.57121	2023-12-06 19:12:43.571151	7c6b34f5-a699-4237-89e8-4be3d3c46856	1046
1052	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	\N	2023-12-06 19:12:43.61771	2023-12-06 19:12:43.616302	f937b850-a803-47ec-9bc4-9ae84996ba46	1052
1056	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Federal operated agency	Federal operated agency	Federal operated agency	\N	\N	\N	\N	2023-12-06 19:12:43.661382	2023-12-06 19:12:43.660287	4171d6c6-5041-4b0b-a3e1-6383f54f7ae7	1056
1057	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	State operated agency	State operated agency	State operated agency	\N	\N	\N	\N	2023-12-06 19:12:43.672235	2023-12-06 19:12:43.672181	a65db136-97f7-4dc6-9685-580d4c86db95	1057
1062	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	DEPRECATED: Charter	DEPRECATED: Charter	\N	\N	\N	\N	2023-12-06 19:12:43.680212	2023-12-06 19:12:43.680196	52524cf9-e350-4bd5-bd16-6324dbe39ae9	1062
1066	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.716287	2023-12-06 19:12:43.715298	303defea-ec3a-4b8c-843e-3c4218c35dbd	1066
1069	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	\N	2023-12-06 19:12:43.751481	2023-12-06 19:12:43.750541	4c0dead9-d075-436b-ab5b-18258b61269d	1069
1073	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	\N	2023-12-06 19:12:43.75934	2023-12-06 19:12:43.759093	21d32f45-8489-41b0-9797-e1792b0c1a8a	1073
1079	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	\N	2023-12-06 19:12:43.769165	2023-12-06 19:12:43.76915	779a1b1d-cb88-4221-b495-476ddb8ee11f	1079
1082	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	\N	2023-12-06 19:12:43.775819	2023-12-06 19:12:43.775802	81ec6b18-9d44-482f-878a-90b5590f3a30	1082
1086	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Other	Other	The reason why a student cannot access the internet in their primary place of residence is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:43.804518	2023-12-06 19:12:43.803656	f4b2b01f-b3ed-45a3-aebc-27f18aa8294e	1086
1090	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	\N	2023-12-06 19:12:43.839781	2023-12-06 19:12:43.838733	89db0f4c-d106-4f79-8bfa-75095c40aa5d	1090
1096	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	\N	2023-12-06 19:12:43.877746	2023-12-06 19:12:43.87688	336f5c2f-0d19-4f5c-aaca-62fa2e088457	1096
1099	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:43.886037	2023-12-06 19:12:43.885972	2adef997-4416-4173-a89a-9a1c16f74bf6	1099
1102	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	\N	2023-12-06 19:12:43.891877	2023-12-06 19:12:43.891851	2699670a-7956-4a3c-aea2-fbe8ad4c2d12	1102
1109	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	\N	2023-12-06 19:12:43.903697	2023-12-06 19:12:43.903572	039acad7-7a45-4819-a97b-01d1b1affcce	1109
1113	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	\N	2023-12-06 19:12:43.911772	2023-12-06 19:12:43.911745	ffbcb7d0-3e31-4fed-a1ce-a704a5c8908f	1113
1116	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	\N	2023-12-06 19:12:43.917628	2023-12-06 19:12:43.917525	f03ac2b1-b010-4c09-9135-77b74437498c	1116
1123	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	\N	2023-12-06 19:12:43.956217	2023-12-06 19:12:43.95522	2f930195-56bd-4d49-8bb5-62307dd3bb7b	1123
977	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	\N	2023-12-06 19:12:43.177957	2023-12-06 19:12:43.17793	6e6aa911-dfbf-4387-b145-63000433f504	977
978	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.184924	2023-12-06 19:12:43.18491	8fee12d7-ee62-4b29-8533-39d4efc0d47e	978
982	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.190827	2023-12-06 19:12:43.190814	fce0c1a3-555f-484c-8529-5c3ed8de334e	982
984	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.194826	2023-12-06 19:12:43.194789	db112338-832c-4a67-8b02-37524f0d8b6b	984
985	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.197724	2023-12-06 19:12:43.197695	ee22eceb-6902-466a-846c-54dc036928a9	985
987	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.201316	2023-12-06 19:12:43.201282	ac646365-a562-41fd-8316-bc8efe49c868	987
989	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:43.205928	2023-12-06 19:12:43.205899	76a221a3-2844-4fbf-9922-07577d9499bb	989
990	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Desktop Computer	Desktop Computer	A desktop computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.260443	2023-12-06 19:12:43.259476	83dde876-3d27-4705-9534-900c86fe421f	990
994	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	None	None	There is not a device the student uses to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.268273	2023-12-06 19:12:43.268258	302d1313-d674-4db0-982e-7a346ca94669	994
1000	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-12-06 19:12:43.3129	2023-12-06 19:12:43.307956	0c999cdf-7d37-4e38-a682-a2fe448ad2c7	1000
1001	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-12-06 19:12:43.322458	2023-12-06 19:12:43.321994	725c5711-6794-47c2-904a-8ba94986c256	1001
1004	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.334027	2023-12-06 19:12:43.33399	aa415790-a17a-49db-8496-90acdefd56ff	1004
1009	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	\N	2023-12-06 19:12:43.345902	2023-12-06 19:12:43.345797	ef1ba7a7-8901-4227-8aba-6e31ca65509a	1009
1010	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-12-06 19:12:43.350314	2023-12-06 19:12:43.350251	3999dc94-c5a5-494c-84fc-0ebdb0fa4866	1010
1013	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-12-06 19:12:43.36945	2023-12-06 19:12:43.369401	4d52f35e-1ba5-42c7-8383-60f941ff7c4e	1013
1015	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	\N	2023-12-06 19:12:43.41498	2023-12-06 19:12:43.414334	4548e2b3-9591-4ca9-b468-d0cf84e9c87c	1015
1020	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-12-06 19:12:43.425749	2023-12-06 19:12:43.425722	4a6dca25-a183-4a1b-86ab-5261a0d2921a	1020
1023	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:43.435039	2023-12-06 19:12:43.435004	92fba473-07ed-4a68-9510-661c597fce38	1023
1028	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:12:43.496452	2023-12-06 19:12:43.49061	f507ac70-257c-4a7c-aa66-6e8ac8c51e33	1028
1030	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	\N	2023-12-06 19:12:43.504863	2023-12-06 19:12:43.504822	facea5bd-789d-4f80-b098-fc483851a8d9	1030
1033	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:43.544614	2023-12-06 19:12:43.543514	e7c088c5-d87b-4cd9-8c6f-82a4771db8a2	1033
1038	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	\N	2023-12-06 19:12:43.554116	2023-12-06 19:12:43.554067	3dafbbc6-9f30-443b-96ef-109f6a4bf6d8	1038
1042	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-12-06 19:12:43.562722	2023-12-06 19:12:43.562695	48b7714f-6100-42a7-8d46-9c3346820d00	1042
1048	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-12-06 19:12:43.573256	2023-12-06 19:12:43.573202	2f79840c-a548-4de4-88f2-4b2f387c8125	1048
1049	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-12-06 19:12:43.617206	2023-12-06 19:12:43.616281	0a7e21d0-35ae-4da9-ae01-5d6221fb52c7	1049
1055	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Other local education agency	Other local education agency	Other local education agency	\N	\N	\N	\N	2023-12-06 19:12:43.661532	2023-12-06 19:12:43.660277	f898e9c4-f5be-4594-b65d-241946940752	1055
1059	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Regular public school district	Regular public school district	Regular public school district that is not a component of a supervisory union	\N	\N	\N	\N	2023-12-06 19:12:43.674588	2023-12-06 19:12:43.674542	342170bb-d026-4d8c-b5bd-3804965c31be	1059
1061	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Supervisory union	Supervisory union	Supervisory union	\N	\N	\N	\N	2023-12-06 19:12:43.680021	2023-12-06 19:12:43.679977	b256eeae-0f93-4360-b4fe-7178ec9fe0d1	1061
1064	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	\N	2023-12-06 19:12:43.71612	2023-12-06 19:12:43.715278	f5315621-4a0d-4ddf-b9f0-ecff1a5a2497	1064
1070	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	\N	2023-12-06 19:12:43.751637	2023-12-06 19:12:43.750574	af8cdc64-a117-42f5-a352-21200e62cac2	1070
1076	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	\N	2023-12-06 19:12:43.761632	2023-12-06 19:12:43.761608	df624393-8099-47f3-941a-7db11d9de1c3	1076
1080	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	\N	2023-12-06 19:12:43.769322	2023-12-06 19:12:43.769308	fa6c62e3-384e-4366-8cb2-917680b6c6e5	1080
1081	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	\N	2023-12-06 19:12:43.774202	2023-12-06 19:12:43.774133	49786c62-97ea-4e49-b6c7-554df563ede7	1081
1012	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-12-06 19:12:43.366256	2023-12-06 19:12:43.366227	a92ef960-afaa-4e4b-a91b-91984d305da2	1012
1016	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.414955	2023-12-06 19:12:43.412585	a6ff0389-b549-46d6-9ad7-e282f00ec925	1016
1019	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:43.425319	2023-12-06 19:12:43.425154	669ecfda-9bd3-4748-bd67-14956d09240f	1019
1025	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	\N	2023-12-06 19:12:43.433965	2023-12-06 19:12:43.433908	b5c3c43d-5a6c-4aaa-8284-9d1065dfe6a9	1025
1029	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-12-06 19:12:43.498242	2023-12-06 19:12:43.498224	f18223af-f8ef-47a7-af41-153fc25a8cd3	1029
1035	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:43.544952	2023-12-06 19:12:43.543679	002142e8-c3c1-4a46-880a-af6de8c167fe	1035
1039	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	\N	2023-12-06 19:12:43.554216	2023-12-06 19:12:43.554026	218f727e-bcdc-4e6c-b406-567cf9dc9425	1039
1044	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-12-06 19:12:43.565273	2023-12-06 19:12:43.56514	4516b07e-91e9-492b-8f48-80572480a5d6	1044
1047	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	\N	2023-12-06 19:12:43.571974	2023-12-06 19:12:43.571948	595cb57a-de03-40e5-b5c8-291a1030f60b	1047
1050	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	\N	2023-12-06 19:12:43.617207	2023-12-06 19:12:43.616289	4c39d8ed-040f-44b8-9b98-49b610709743	1050
1054	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Public school district part of a supervisory union	Public school district part of a supervisory union	Regular public school district that is a component of a supervisory union	\N	\N	\N	\N	2023-12-06 19:12:43.661305	2023-12-06 19:12:43.660262	579934ba-0165-43af-a9bd-f1a23a587080	1054
1060	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Service agency	Service agency	Service agency	\N	\N	\N	\N	2023-12-06 19:12:43.675278	2023-12-06 19:12:43.67522	9a34f650-5816-43c1-a011-c6a08f6ed237	1060
1067	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	\N	2023-12-06 19:12:43.716282	2023-12-06 19:12:43.715271	28a69be3-9a69-4fa1-bf93-eb3d4be3fc8c	1067
1071	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	\N	2023-12-06 19:12:43.751868	2023-12-06 19:12:43.750547	38150b0b-a60a-48e0-a440-e0dde680c1ba	1071
1074	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	\N	2023-12-06 19:12:43.760119	2023-12-06 19:12:43.760092	160f1239-459c-4376-a01b-97cca4f52f05	1074
1085	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Affordable	Not Affordable	The student cannot access the internet in their primary place of residence because internet service is not affordable.	\N	\N	\N	\N	2023-12-06 19:12:43.804508	2023-12-06 19:12:43.803672	29980923-ce20-4730-8574-5c2e85c011e4	1085
1088	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	\N	2023-12-06 19:12:43.839623	2023-12-06 19:12:43.838705	c535b8b7-ae8b-4cb7-994c-f8bb2394d2bc	1088
1094	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	\N	2023-12-06 19:12:43.849764	2023-12-06 19:12:43.849751	d0361661-7bb6-4527-b525-f09cfb19dcf7	1094
1097	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	\N	2023-12-06 19:12:43.877812	2023-12-06 19:12:43.876886	348a80de-013d-490b-887e-ccf18d6260e4	1097
1100	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	\N	2023-12-06 19:12:43.886883	2023-12-06 19:12:43.88681	2afedf20-c4f8-4227-a1a7-5f943af1c9d4	1100
1104	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	\N	2023-12-06 19:12:43.893248	2023-12-06 19:12:43.893233	3f7018fd-2365-44c5-9a07-89c07091b420	1104
1106	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	\N	2023-12-06 19:12:43.899865	2023-12-06 19:12:43.899851	e6a020b8-e083-4e1f-a65e-2561ef8fd5a5	1106
1111	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	\N	2023-12-06 19:12:43.910825	2023-12-06 19:12:43.910785	d049ead5-c58b-4120-b1a7-8d92ec1107ce	1111
1115	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	\N	2023-12-06 19:12:43.917345	2023-12-06 19:12:43.917307	f2b592b2-0ad2-4a32-a9e9-554726d708dc	1115
1118	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:43.922666	2023-12-06 19:12:43.922639	b3ae59de-c26d-4215-a780-90bd33aef8fc	1118
1120	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	\N	2023-12-06 19:12:43.956154	2023-12-06 19:12:43.955253	b2fc96c6-8c2d-4a14-a065-58346eec2078	1120
1126	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	\N	2023-12-06 19:12:43.965452	2023-12-06 19:12:43.965437	6107daca-1f0c-4f9a-8506-7f970b95188b	1126
1131	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	\N	2023-12-06 19:12:43.975136	2023-12-06 19:12:43.975109	aae948b1-42c1-41b0-94cb-e787304d3216	1131
1133	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	\N	2023-12-06 19:12:43.980969	2023-12-06 19:12:43.980947	3d39b4a3-ab1a-4998-8c53-c31fa023ba46	1133
1137	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:44.012052	2023-12-06 19:12:44.011087	0aff0fa7-b01c-435f-b7db-f50bb1e7f161	1137
1142	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	\N	2023-12-06 19:12:44.046512	2023-12-06 19:12:44.045463	b40e3def-5e8f-4dbd-b843-c206f7aebd48	1142
1068	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	\N	2023-12-06 19:12:43.724472	2023-12-06 19:12:43.724441	a830d8d1-8f00-42e8-87ac-165b75c126dc	1068
1072	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	\N	2023-12-06 19:12:43.752463	2023-12-06 19:12:43.750559	feb6300f-d580-4f49-a2e9-d35a99d5389e	1072
1075	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	\N	2023-12-06 19:12:43.760754	2023-12-06 19:12:43.760635	b6fd6d6c-1416-49e8-ad16-e354e76a2d30	1075
1077	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	\N	2023-12-06 19:12:43.765559	2023-12-06 19:12:43.76552	42900620-a059-4be1-a7c6-f133fce622b5	1077
1078	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	\N	2023-12-06 19:12:43.768738	2023-12-06 19:12:43.768684	067d4519-7c50-48d5-bd37-fe9debd387b1	1078
1083	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	\N	2023-12-06 19:12:43.776021	2023-12-06 19:12:43.775992	90119afe-4c26-429e-9235-02668e501cfb	1083
1084	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Available	Not Available	The student cannot access the internet in their primary place of residence because internet service is not available.	\N	\N	\N	\N	2023-12-06 19:12:43.80451	2023-12-06 19:12:43.803678	817c7722-0afb-4f20-a68e-a5e82038268e	1084
1091	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-12-06 19:12:43.839686	2023-12-06 19:12:43.838715	244b317c-e924-4a35-9892-bf3fd0278c04	1091
1093	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	\N	2023-12-06 19:12:43.849031	2023-12-06 19:12:43.848979	c83bf5f7-7ea3-4c97-ad4e-7f5d0fb7b5ca	1093
1098	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	\N	2023-12-06 19:12:43.8792	2023-12-06 19:12:43.876853	cd22a32e-4ee4-4c38-8150-266d4dee5ee6	1098
1103	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	\N	2023-12-06 19:12:43.892879	2023-12-06 19:12:43.892816	866f507b-72c5-4c93-9ae0-99a44bb58ed4	1103
1108	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	\N	2023-12-06 19:12:43.90312	2023-12-06 19:12:43.902882	d01a45bf-a4f9-4ee3-b061-8c9afca5c86d	1108
1112	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	\N	2023-12-06 19:12:43.911429	2023-12-06 19:12:43.911398	b9808448-39c9-4eb4-9a1f-c2428fc03f9b	1112
1121	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	\N	2023-12-06 19:12:43.956217	2023-12-06 19:12:43.95521	565c4b92-ce5b-4902-8842-c683f97b32f1	1122
1125	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	\N	2023-12-06 19:12:43.965237	2023-12-06 19:12:43.965168	c5ec24d0-cb5a-4a43-8b08-eb68c0a26b37	1125
1130	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	\N	2023-12-06 19:12:43.973532	2023-12-06 19:12:43.973506	ad1c452e-18f6-47bb-9cd8-116b52fa347d	1130
1132	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.980932	2023-12-06 19:12:43.980904	76cb8ae7-65d8-45f8-b792-4190355aa568	1132
1135	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-12-06 19:12:44.011907	2023-12-06 19:12:44.011103	a680170a-5a49-4f63-ab11-07043688b786	1135
1140	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:44.046509	2023-12-06 19:12:44.04549	86c188c5-a1ec-4e4c-bb7c-fc1c946f89b5	1140
1145	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	\N	2023-12-06 19:12:44.054418	2023-12-06 19:12:44.054382	3e21e323-8d17-4197-9b22-fa033d93abb2	1145
1148	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	\N	2023-12-06 19:12:44.061932	2023-12-06 19:12:44.061439	d434eedd-fed2-4a66-aadb-d1d8d05259e5	1148
1154	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	\N	2023-12-06 19:12:44.099232	2023-12-06 19:12:44.099012	18823341-ce60-45ba-849b-ddcc9bdb1ffa	1154
1157	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.106923	2023-12-06 19:12:44.10691	93648f8d-8ce1-4320-84d6-76d757d9de9a	1157
1162	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.144586	2023-12-06 19:12:44.143703	d912537a-85d6-4a8c-a655-7440cf3c9405	1162
1167	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.152867	2023-12-06 19:12:44.15284	6b3737e8-4129-4867-8d7e-182368a91002	1167
1174	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	\N	2023-12-06 19:12:44.188891	2023-12-06 19:12:44.188004	fea1f62f-304b-4c47-8c0f-8579c9087ff2	1174
1175	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	\N	2023-12-06 19:12:44.196859	2023-12-06 19:12:44.196843	97b9327e-d100-4c4f-a619-f02ab04a4223	1175
1180	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	\N	2023-12-06 19:12:44.207148	2023-12-06 19:12:44.206778	da3c7a02-77ec-446b-acf6-a04e112cef1a	1180
1189	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	\N	2023-12-06 19:12:44.254255	2023-12-06 19:12:44.254226	db8e257f-c307-4b2e-b1ef-ead8f81b695a	1189
1195	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-12-06 19:12:44.289821	2023-12-06 19:12:44.288984	f8e125ae-6bee-45c6-8d5d-ff347aea4c4c	1195
1197	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	\N	2023-12-06 19:12:44.297975	2023-12-06 19:12:44.297646	2a5ff7b4-c521-4408-a74b-1d47609b7bfe	1197
1087	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Desired	Not Desired	The student cannot access the internet in their primary place of residence because the parent or guardian chooses not to subscribe to internet service.	\N	\N	\N	\N	2023-12-06 19:12:43.804523	2023-12-06 19:12:43.803648	5c2302e0-a1bb-4ffe-945e-6c7f67386910	1087
1089	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:43.839669	2023-12-06 19:12:43.83873	8887eea7-c981-421e-935a-80c9d32d12aa	1089
1092	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	\N	2023-12-06 19:12:43.849046	2023-12-06 19:12:43.848909	6b2a105e-7c5b-4c55-bb18-602aa4990826	1092
1095	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	\N	2023-12-06 19:12:43.877757	2023-12-06 19:12:43.876863	bfcf909c-b7a9-4eee-868a-4a3e6d8e8c02	1095
1101	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	\N	2023-12-06 19:12:43.886941	2023-12-06 19:12:43.886919	10bd8d8e-5bfe-4c1c-b644-09d9333d0822	1101
1105	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	\N	2023-12-06 19:12:43.894746	2023-12-06 19:12:43.894723	96f68894-d984-4414-b9c5-a5954b499369	1105
1107	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	\N	2023-12-06 19:12:43.902546	2023-12-06 19:12:43.902509	d3b765e5-4331-4261-9f83-c338ea763eba	1107
1110	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	\N	2023-12-06 19:12:43.906819	2023-12-06 19:12:43.906793	a87294ea-2af0-4b66-9e24-bd21504043a4	1110
1114	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	\N	2023-12-06 19:12:43.913187	2023-12-06 19:12:43.913173	9f1b5b89-5ccf-4829-9b33-4eac952cc409	1114
1117	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	\N	2023-12-06 19:12:43.919913	2023-12-06 19:12:43.919814	32bb0b6c-ef2b-43b1-9b32-5b0a9cfc7624	1117
1119	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	\N	2023-12-06 19:12:43.924315	2023-12-06 19:12:43.924289	bbde2ab5-04e8-4e5f-b9ac-8f2e117106c9	1119
1122	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	\N	2023-12-06 19:12:43.956221	2023-12-06 19:12:43.955235	6c1fbe21-1862-4ef4-be68-752f9dabab1d	1121
1124	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	\N	2023-12-06 19:12:43.964695	2023-12-06 19:12:43.964268	93cd9f3c-0b88-41c3-81fa-892c916a382f	1124
1129	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	\N	2023-12-06 19:12:43.972633	2023-12-06 19:12:43.972619	990775fe-77c2-45be-8059-afb79d62a94c	1129
1134	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	\N	2023-12-06 19:12:43.981225	2023-12-06 19:12:43.981197	d2b34be8-eb89-492a-ba2a-05810d6adc54	1134
1136	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	\N	2023-12-06 19:12:44.012053	2023-12-06 19:12:44.011077	7106e07e-7642-4c31-94a7-af8d147bfbef	1136
1141	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	\N	2023-12-06 19:12:44.046464	2023-12-06 19:12:44.045487	588d4712-7147-485f-9c16-83ca95357940	1141
1146	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.055857	2023-12-06 19:12:44.055795	ca859e41-3e2f-4d7c-9ebb-abd522e8dc0b	1146
1149	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to regular education	Transferred to regular education	Transferred to regular education	\N	\N	\N	\N	2023-12-06 19:12:44.062402	2023-12-06 19:12:44.062366	0fbf26b3-3a9d-4364-9281-75f7a7c3f1c5	1149
1152	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	\N	2023-12-06 19:12:44.099001	2023-12-06 19:12:44.098155	dd69f6e5-0177-4bc1-ae83-1febd4a353da	1152
1158	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	\N	2023-12-06 19:12:44.108125	2023-12-06 19:12:44.10809	f1a084ee-5d39-4a32-a654-69ae8bb12467	1158
1165	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.144698	2023-12-06 19:12:44.143683	fbe66ace-645f-4a40-9b6e-4e401e25fb12	1165
1166	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.152135	2023-12-06 19:12:44.152096	c097ce93-5203-42ff-9a32-3e5554898094	1166
1169	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.154482	2023-12-06 19:12:44.154467	02a0e5f5-fc41-4b33-8f8f-25b7869b3518	1169
1171	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	\N	2023-12-06 19:12:44.188865	2023-12-06 19:12:44.188021	21258b87-8452-4e00-934a-9d6728210569	1171
1176	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	\N	2023-12-06 19:12:44.197774	2023-12-06 19:12:44.197714	82051360-81c7-48da-82e7-9e709e072116	1176
1182	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	\N	2023-12-06 19:12:44.2077	2023-12-06 19:12:44.207661	a0da8760-e04d-42c7-9fcd-75c2603fe486	1182
1186	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Not Shared	Not Shared	The primary learning device is not shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:44.245449	2023-12-06 19:12:44.244407	61dfcfbd-8d8c-4a5b-b042-55a2f597853c	1186
1188	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	\N	2023-12-06 19:12:44.254197	2023-12-06 19:12:44.252562	35b02e48-a403-4e76-a5e6-1331259c25d7	1188
1193	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-12-06 19:12:44.289797	2023-12-06 19:12:44.28896	c09ebb37-8a49-4946-a69a-60d6f3306565	1193
1127	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	\N	2023-12-06 19:12:43.965727	2023-12-06 19:12:43.9656	5c32cd96-1827-4c6d-961f-7afcac1f2ccd	1127
1128	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	\N	2023-12-06 19:12:43.97076	2023-12-06 19:12:43.970706	8236701e-bf1b-416e-972d-4aac1fbfbe08	1128
1138	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-12-06 19:12:44.01205	2023-12-06 19:12:44.011066	6bcd3f00-f729-448a-b695-864d5e89252b	1138
1139	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with an alternate diploma	Graduated with an alternate diploma	Graduated with an alternate diploma	\N	\N	\N	\N	2023-12-06 19:12:44.046353	2023-12-06 19:12:44.045468	3dd536f2-1d57-41bc-8bd5-fd74a7112b47	1139
1143	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:44.054286	2023-12-06 19:12:44.054218	e552b18a-e85b-41b1-9a41-47652f21db99	1143
1151	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-12-06 19:12:44.066089	2023-12-06 19:12:44.066075	c6fe85ad-3c69-4cc5-b7ba-ff6a3ed373b2	1151
1153	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	\N	2023-12-06 19:12:44.099181	2023-12-06 19:12:44.099051	b6a1ac8f-3ac2-4559-be74-72b116963ae3	1153
1156	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	\N	2023-12-06 19:12:44.106534	2023-12-06 19:12:44.106498	80ac67d7-7855-4e78-8e82-951d490dc53d	1156
1161	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	\N	2023-12-06 19:12:44.112851	2023-12-06 19:12:44.112782	aa9ae174-1d64-454f-bb5b-73ef6e92d4b1	1161
1163	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.144701	2023-12-06 19:12:44.143694	19f08def-5c15-4506-8e2f-62613cf677c6	1163
1168	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology accommodation	Student equipment/technology	Student equipment/technology	\N	\N	\N	\N	2023-12-06 19:12:44.152801	2023-12-06 19:12:44.152726	e27efade-47c2-4257-bc33-cf414ea30a0d	1168
1170	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.159396	2023-12-06 19:12:44.159315	705c23b5-260f-4227-9856-97b846d86b60	1170
1173	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	\N	2023-12-06 19:12:44.188984	2023-12-06 19:12:44.188011	dc6c0703-c5a9-4e7b-94bb-40061532a9d2	1173
1178	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	\N	2023-12-06 19:12:44.19921	2023-12-06 19:12:44.199163	f8e85461-d7cd-43d1-8f23-a1536adc0059	1178
1181	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.207258	2023-12-06 19:12:44.207083	98a36d66-92f4-4303-85f5-94d5cee8a6cf	1181
1184	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-12-06 19:12:44.215266	2023-12-06 19:12:44.2147	2cfa588d-37dc-455a-ab42-21e64bbeb02c	1184
1185	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Shared	Shared	The primary learning device is shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:44.245431	2023-12-06 19:12:44.244413	1ec74a9e-dc94-438e-aee5-8957ea59890d	1185
1191	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	\N	2023-12-06 19:12:44.256675	2023-12-06 19:12:44.256661	4e186d20-15f1-4e74-ac35-78e30841486b	1191
1196	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	\N	2023-12-06 19:12:44.289871	2023-12-06 19:12:44.288971	dbb240ae-8b99-4c6a-a808-5b6339bfa5f8	1196
1198	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	\N	2023-12-06 19:12:44.299368	2023-12-06 19:12:44.299353	0fc04ca7-667c-4eca-be86-aed82072b0f6	1198
1205	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	\N	2023-12-06 19:12:44.345017	2023-12-06 19:12:44.341732	ef8d8ce0-464b-4512-845d-031a7cbbb91a	1205
1210	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	\N	2023-12-06 19:12:44.355186	2023-12-06 19:12:44.354656	15f9fe3c-d7fe-47cf-8e6c-bf3187bb8516	1210
1212	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	\N	2023-12-06 19:12:44.361448	2023-12-06 19:12:44.361434	4b3fd3e9-9601-4798-828f-0f76a5220d4f	1212
1214	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	\N	2023-12-06 19:12:44.366252	2023-12-06 19:12:44.365328	dac734ec-1a64-4aa6-967f-8ef6d37cc7b8	1214
1217	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	\N	2023-12-06 19:12:44.374946	2023-12-06 19:12:44.374898	57a885e2-5642-475e-9584-7d8776d26086	1217
1220	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	\N	2023-12-06 19:12:44.405866	2023-12-06 19:12:44.404929	8c93e3a2-06b5-4038-8f15-93ac8101e944	1220
1223	uri://ed-fi.org/RelationDescriptor	Emergency	DEPRECATED: Emergency	DEPRECATED: Emergency	\N	\N	\N	\N	2023-12-06 19:12:44.41395	2023-12-06 19:12:44.413901	393a5d16-c6f2-42b0-93d0-a493106c8d06	1223
1234	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	\N	2023-12-06 19:12:44.435479	2023-12-06 19:12:44.43544	2d3cf959-a29b-4e7c-b609-4cab4972212f	1234
1237	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	\N	2023-12-06 19:12:44.442712	2023-12-06 19:12:44.442669	d3a12712-fb44-46e1-a102-6c02bd2778e1	1237
1242	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	\N	2023-12-06 19:12:44.451453	2023-12-06 19:12:44.451425	2c1b62c5-10ba-4c88-9555-164b59be4ccc	1242
1246	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	\N	2023-12-06 19:12:44.458234	2023-12-06 19:12:44.457961	3e8b866b-a470-4055-b38d-3516770eb54e	1246
1250	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.466601	2023-12-06 19:12:44.466574	08e72944-782f-4e8c-be14-a9962d55c07b	1250
1255	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.474777	2023-12-06 19:12:44.474734	e0b95674-d0a2-44c4-82d7-9241ae0330dd	1255
1258	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	\N	2023-12-06 19:12:44.481574	2023-12-06 19:12:44.481519	57d9e5c7-23ce-4b79-bc18-fd92fb585e30	1258
1144	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-12-06 19:12:44.05446	2023-12-06 19:12:44.05443	3bc7b40d-ba86-47ac-a99f-9dd90522cf0f	1144
1147	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	\N	2023-12-06 19:12:44.060258	2023-12-06 19:12:44.06023	898a2a15-8084-4228-99ce-cec51164dd3b	1147
1150	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	\N	2023-12-06 19:12:44.063132	2023-12-06 19:12:44.063114	657e68ec-485b-473e-a90b-13ffc433cd2f	1150
1155	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	\N	2023-12-06 19:12:44.099304	2023-12-06 19:12:44.099022	94a9905a-431c-40d8-8179-02886bcb2535	1155
1159	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	\N	2023-12-06 19:12:44.108586	2023-12-06 19:12:44.108544	cd8f291c-e42f-4bd1-aa35-5afed6dd672a	1159
1160	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	\N	2023-12-06 19:12:44.112722	2023-12-06 19:12:44.112682	ce5ba941-e57b-42ef-a875-c227d35c0afe	1160
1164	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	\N	2023-12-06 19:12:44.144706	2023-12-06 19:12:44.143719	8265c232-0df5-4c97-bd16-2c2731bb1659	1164
1172	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-12-06 19:12:44.188881	2023-12-06 19:12:44.188038	dcdb635b-73c4-4471-801d-39b69e955786	1172
1177	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-12-06 19:12:44.198741	2023-12-06 19:12:44.198724	1eb3dea2-f826-4eb3-8635-70a5aaaa47c1	1177
1179	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	\N	2023-12-06 19:12:44.203304	2023-12-06 19:12:44.203277	cb41de99-d335-4a62-9ff2-fddb1aa2963f	1179
1183	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	\N	2023-12-06 19:12:44.214383	2023-12-06 19:12:44.214355	8ddee01d-dcaf-4ed9-a307-1b6c823a2c23	1183
1187	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Unknown	Unknown	It is not known whether the primary learning device is shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:44.245458	2023-12-06 19:12:44.244425	f1dda2da-0789-4141-b329-cdec1a0a56f8	1187
1190	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	\N	2023-12-06 19:12:44.254909	2023-12-06 19:12:44.254896	f8324e50-7480-4371-a2d3-0b7ba5c21ea3	1190
1192	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	\N	2023-12-06 19:12:44.264984	2023-12-06 19:12:44.264945	4599b113-8272-4407-b55f-30b9133e5aac	1192
1194	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-12-06 19:12:44.289934	2023-12-06 19:12:44.288993	40a70fca-1c46-4227-894c-da2c4c7d967d	1194
1200	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.301273	2023-12-06 19:12:44.301245	718f00af-67d1-4eda-bd74-2983b541b1ad	1200
1202	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Other	Other	The provider of the primary learning device is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:44.335502	2023-12-06 19:12:44.334518	17368fda-06c5-4881-a919-1792a7de90a9	1202
1204	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	\N	2023-12-06 19:12:44.345036	2023-12-06 19:12:44.343748	26156e56-8772-46ea-81ce-3be60a4083e4	1204
1208	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	\N	2023-12-06 19:12:44.351914	2023-12-06 19:12:44.351888	340683f2-48f8-46ec-a5a0-76fedcf0898d	1208
1213	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.365438	2023-12-06 19:12:44.365427	0c45fb6c-75e2-4571-a5f4-4852ab9e4014	1213
1218	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	\N	2023-12-06 19:12:44.375422	2023-12-06 19:12:44.375382	630b3e19-d4d6-4708-b09b-b32f12ff94cd	1218
1221	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	\N	2023-12-06 19:12:44.405859	2023-12-06 19:12:44.404915	1edda569-c8ea-4f9c-be4a-8190d7893793	1221
1226	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	\N	2023-12-06 19:12:44.41675	2023-12-06 19:12:44.416656	50401801-fae2-4ca9-a53c-8cc732f03915	1226
1229	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	\N	2023-12-06 19:12:44.426859	2023-12-06 19:12:44.426547	ac62f32e-b98c-4c2d-9728-65a3dc2eac91	1229
1233	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	\N	2023-12-06 19:12:44.432861	2023-12-06 19:12:44.432833	f2db8efe-e695-4024-96b2-f63e04c9a024	1233
1236	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	\N	2023-12-06 19:12:44.439264	2023-12-06 19:12:44.439218	0039115c-69c8-443e-88cd-7cded9c9ac14	1236
1239	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	\N	2023-12-06 19:12:44.445459	2023-12-06 19:12:44.444914	6093e735-b569-4c83-a31f-14c088a9343f	1239
1241	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	\N	2023-12-06 19:12:44.45055	2023-12-06 19:12:44.449737	d3e61248-e5bf-4c68-8026-2651921a156b	1241
1244	uri://ed-fi.org/RelationDescriptor	Guardian	DEPRECATED: Guardian	DEPRECATED: Guardian	\N	\N	\N	\N	2023-12-06 19:12:44.456298	2023-12-06 19:12:44.456261	2808e20e-2541-40ea-be87-08b66c8da6e8	1244
1247	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	\N	2023-12-06 19:12:44.460829	2023-12-06 19:12:44.460802	7b6e3433-8c41-421a-b32f-1a9a072cf62e	1247
1249	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	\N	2023-12-06 19:12:44.465411	2023-12-06 19:12:44.465385	0ed44469-253c-4db2-8f93-b69b9e272ddd	1249
1253	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	\N	2023-12-06 19:12:44.473192	2023-12-06 19:12:44.473165	bcb9e14c-21c6-4ac7-b7cc-1d9f5c8b75e5	1253
1257	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	\N	2023-12-06 19:12:44.480964	2023-12-06 19:12:44.480928	374166b9-5a10-4b60-a7ff-bf19040e5080	1257
1199	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	\N	2023-12-06 19:12:44.300458	2023-12-06 19:12:44.300414	0f3bef9c-00bf-441e-b52d-c6c4e2b1addd	1199
1201	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Personal	Personal	The provider of the primary learning device is the student or guardian.	\N	\N	\N	\N	2023-12-06 19:12:44.33552	2023-12-06 19:12:44.334645	f65cbce6-ae65-4e0c-9ee2-4cf8622edf96	1201
1206	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	\N	2023-12-06 19:12:44.345111	2023-12-06 19:12:44.343351	0004f001-2b80-484e-a674-8d9866b21454	1206
1211	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	\N	2023-12-06 19:12:44.358939	2023-12-06 19:12:44.358911	814a3dd2-cfbf-4d7b-9b43-1f2908105c1c	1211
1216	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	\N	2023-12-06 19:12:44.369632	2023-12-06 19:12:44.369572	60c48a24-cb3a-4262-94c2-7e27ea5b3e55	1216
1222	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.405813	2023-12-06 19:12:44.404899	e0c8e5b1-6e0f-4309-8b42-9614a5274074	1222
1224	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.415104	2023-12-06 19:12:44.415032	0d61fefa-506e-462e-81e4-1ebccc2c20fd	1224
1227	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	\N	2023-12-06 19:12:44.421482	2023-12-06 19:12:44.421195	9744548e-aca1-4b94-b83a-7ac1708962d1	1227
1230	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.42704	2023-12-06 19:12:44.426792	8e7051f8-fbce-48fa-8a7a-9deb10b18963	1230
1232	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	\N	2023-12-06 19:12:44.430582	2023-12-06 19:12:44.430522	06ac081a-96e2-4018-ad51-c547709f76d4	1232
1235	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	\N	2023-12-06 19:12:44.438435	2023-12-06 19:12:44.438371	811210fc-1de5-4b1d-9634-cc35b56f3486	1235
1243	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	\N	2023-12-06 19:12:44.453008	2023-12-06 19:12:44.452982	ed3edf58-2765-4326-b6eb-1487a1479dd1	1243
1245	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	\N	2023-12-06 19:12:44.457499	2023-12-06 19:12:44.457381	2c760530-ece1-44bc-aa44-1719f3aad63c	1245
1248	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	\N	2023-12-06 19:12:44.464525	2023-12-06 19:12:44.464497	84b3d609-e524-4a38-bd58-fc6b8606aa49	1248
1251	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	\N	2023-12-06 19:12:44.467806	2023-12-06 19:12:44.467778	17087760-38e5-45d6-a9eb-c215791d36df	1251
1252	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	\N	2023-12-06 19:12:44.472911	2023-12-06 19:12:44.472456	0d456c70-18f0-42e9-9ab4-663a815c2f7c	1252
1256	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	\N	2023-12-06 19:12:44.479185	2023-12-06 19:12:44.479116	f90f1bb9-75b5-4a11-9bd5-9760e9ab67ce	1256
1259	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	\N	2023-12-06 19:12:44.482303	2023-12-06 19:12:44.482177	0609b616-de09-4ee5-8b99-d94b370a9012	1259
1261	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.489221	2023-12-06 19:12:44.489185	b30b5d31-2c53-4a44-99cb-fe7083c6df4a	1261
1268	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	\N	2023-12-06 19:12:44.499917	2023-12-06 19:12:44.499864	dbc360fd-9c21-4508-b40d-994c71b587ed	1268
1271	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	\N	2023-12-06 19:12:44.54077	2023-12-06 19:12:44.539579	d8ea4336-9102-46a5-b6e5-f7686301051d	1271
1277	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	\N	2023-12-06 19:12:44.552009	2023-12-06 19:12:44.551505	88788ea9-dc49-4b18-87b7-370d304e994b	1277
1279	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	\N	2023-12-06 19:12:44.560253	2023-12-06 19:12:44.560238	cf4cbf1c-92d6-4871-acb3-1a63f020f245	1279
1284	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	\N	2023-12-06 19:12:44.568746	2023-12-06 19:12:44.568701	a24ba729-6e21-489f-832a-2dab56127e3f	1284
1289	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	\N	2023-12-06 19:12:44.578451	2023-12-06 19:12:44.578425	e5c030f8-e62d-42ce-a198-817a1158122f	1289
1294	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	\N	2023-12-06 19:12:44.616345	2023-12-06 19:12:44.613973	ae288b7d-7f3c-4cda-8d81-3a13db59fddb	1294
1295	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	At-Risk Programs	At-Risk Programs	At-Risk Programs	\N	\N	\N	\N	2023-12-06 19:12:44.651548	2023-12-06 19:12:44.650621	1ab660df-ce6d-4a1c-b596-9c32d0bff5b2	1295
1302	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	\N	2023-12-06 19:12:44.68888	2023-12-06 19:12:44.687979	faa081e4-51cc-4d17-8ccc-26467cfc3732	1302
1306	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-12-06 19:12:44.729989	2023-12-06 19:12:44.72874	aee49948-aa22-44d9-93bd-ada212d75527	1306
1310	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:12:44.738786	2023-12-06 19:12:44.738771	948f39c0-41f3-4625-937e-e3c9c9c73e00	1310
1316	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	\N	2023-12-06 19:12:44.774772	2023-12-06 19:12:44.77392	2874e3aa-ba82-447a-b777-a4ce76c8bc86	1316
1319	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-12-06 19:12:44.783582	2023-12-06 19:12:44.783519	788da9d4-6c47-4a88-bb24-2caa82ee988e	1319
1324	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-12-06 19:12:44.792336	2023-12-06 19:12:44.792197	c685dca1-826e-480a-90e9-eb1b3e09c2ee	1324
1329	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home	Family child care home	Family child care home	\N	\N	\N	\N	2023-12-06 19:12:44.822665	2023-12-06 19:12:44.821302	af2d3de0-414e-4b66-b6c4-e70551ab6cc2	1329
1330	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home - large	Family child care home - large	Family child care home - large	\N	\N	\N	\N	2023-12-06 19:12:44.831018	2023-12-06 19:12:44.831005	0b38774c-d52d-4acb-849d-0b718c83afa3	1330
1337	uri://ed-fi.org/ProviderCategoryDescriptor	Residential treatment care	Residential treatment care	Residential treatment care	\N	\N	\N	\N	2023-12-06 19:12:44.841931	2023-12-06 19:12:44.841803	577d2446-ee1b-4aea-b890-05e2d75261c6	1337
1203	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	School	School	The provider of the primary learning device is the school.	\N	\N	\N	\N	2023-12-06 19:12:44.335672	2023-12-06 19:12:44.334672	01364091-36c8-49d3-ba9b-8719c5c4e7f3	1203
1207	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	\N	2023-12-06 19:12:44.345499	2023-12-06 19:12:44.344698	818ad77f-5c1b-4032-af5f-77dd0c940e67	1207
1209	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	\N	2023-12-06 19:12:44.355086	2023-12-06 19:12:44.355049	54aafd62-b6ca-4aa8-bb39-3c0e97cdf791	1209
1215	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	\N	2023-12-06 19:12:44.368078	2023-12-06 19:12:44.368035	2f0d7406-b79a-4bbc-8f84-38896e217455	1215
1219	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	\N	2023-12-06 19:12:44.405866	2023-12-06 19:12:44.404891	61a76161-6a96-47a8-b8a4-ad7d6e214221	1219
1225	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	\N	2023-12-06 19:12:44.416359	2023-12-06 19:12:44.416332	fcdcfe5c-1be6-453e-907c-5de83f532a8b	1225
1228	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	\N	2023-12-06 19:12:44.423465	2023-12-06 19:12:44.423436	669c5647-b270-45a8-8b65-6673823fcbcf	1228
1231	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	\N	2023-12-06 19:12:44.430237	2023-12-06 19:12:44.430221	a48b674c-7d29-468f-90c1-b51d9723ad6f	1231
1238	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	\N	2023-12-06 19:12:44.443152	2023-12-06 19:12:44.443139	bed49cc8-18bc-4fdb-9ecf-79c19b8f0ca2	1238
1240	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	\N	2023-12-06 19:12:44.448024	2023-12-06 19:12:44.447995	1c5921c8-4bff-48a9-8858-fdd1e886471e	1240
1254	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-12-06 19:12:44.473863	2023-12-06 19:12:44.473847	6b424cfd-b693-4c37-8537-d80a3909e011	1254
1264	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	\N	2023-12-06 19:12:44.491524	2023-12-06 19:12:44.491452	0fea74e0-1922-4726-8a85-77cd1ea6ed27	1264
1265	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	\N	2023-12-06 19:12:44.495714	2023-12-06 19:12:44.495655	0fd9f5b8-7a14-4f51-8366-56e94ce5d4c3	1265
1270	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	\N	2023-12-06 19:12:44.537725	2023-12-06 19:12:44.536732	8a4a2dcf-feb8-40df-ae90-9719e896d1f0	1270
1273	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	\N	2023-12-06 19:12:44.544822	2023-12-06 19:12:44.544809	ddfcb9cc-f818-4b24-b870-0fdea4e61b17	1273
1275	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	\N	2023-12-06 19:12:44.55008	2023-12-06 19:12:44.550066	c62e5170-2953-44f0-8360-f1358840000a	1275
1278	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	\N	2023-12-06 19:12:44.55502	2023-12-06 19:12:44.554527	5c5b1dca-0edf-4adb-a9f8-3b34093dfac6	1278
1282	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	\N	2023-12-06 19:12:44.561819	2023-12-06 19:12:44.561708	12e0b626-eb9c-41a4-8cdf-26d27ba93c29	1282
1286	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	\N	2023-12-06 19:12:44.570418	2023-12-06 19:12:44.570299	7b31d455-518b-4aeb-a438-ff3df04c6529	1286
1291	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	\N	2023-12-06 19:12:44.614833	2023-12-06 19:12:44.613963	c96d8315-a52f-4e8b-abd3-b132214c859c	1291
1298	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-12-06 19:12:44.65246	2023-12-06 19:12:44.650629	12112773-3420-4f89-a2fa-755ac9d364b0	1298
1300	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-12-06 19:12:44.661385	2023-12-06 19:12:44.661347	58b830b1-a1c5-4db9-816a-410a4adf5b83	1300
1304	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	\N	2023-12-06 19:12:44.689027	2023-12-06 19:12:44.688008	29713948-3cd0-4866-804e-ab27c2948bdc	1304
1307	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:44.730017	2023-12-06 19:12:44.729014	1869d594-0f84-46ec-82a7-8ce842e5ab69	1307
1311	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:44.739342	2023-12-06 19:12:44.739326	b50ebd79-73cd-4b18-b7a9-50ccbdaab080	1311
1318	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:44.775475	2023-12-06 19:12:44.773944	caff4a10-721e-4dee-8b2c-f8e8e088a6b3	1318
1322	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	\N	2023-12-06 19:12:44.785173	2023-12-06 19:12:44.785143	599e51cc-cdaf-4803-a7bd-72a3ab2f82f2	1322
1326	uri://ed-fi.org/ProviderCategoryDescriptor	Child care center	Child care center	Child care center	\N	\N	\N	\N	2023-12-06 19:12:44.822184	2023-12-06 19:12:44.821292	d5998324-9591-4147-b772-8c60ffdaf50b	1326
1333	uri://ed-fi.org/ProviderCategoryDescriptor	Ministry care	Ministry care	Ministry care	\N	\N	\N	\N	2023-12-06 19:12:44.832843	2023-12-06 19:12:44.832828	49de5665-9cd2-4748-b79a-4e198b9d19f9	1333
1336	uri://ed-fi.org/ProviderCategoryDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-12-06 19:12:44.83826	2023-12-06 19:12:44.838207	3dd85377-4f05-4010-8b86-b0015aece9bd	1336
1339	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	DEPRECATED: Center-EC	DEPRECATED: Center-EC	\N	\N	\N	\N	2023-12-06 19:12:44.84536	2023-12-06 19:12:44.845334	12982366-9ec3-4378-86cc-b78022877090	1339
1343	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	DEPRECATED: Center-EC with SA	DEPRECATED: Center-EC with SA	\N	\N	\N	\N	2023-12-06 19:12:44.852627	2023-12-06 19:12:44.852613	e676a0db-fe70-47c9-9efe-f0aa2a2865ec	1343
1347	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	\N	2023-12-06 19:12:44.889041	2023-12-06 19:12:44.888125	4cd50063-6e6c-4335-b4c6-dab84468560b	1347
1352	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	\N	2023-12-06 19:12:44.896994	2023-12-06 19:12:44.896856	0309fde6-99e2-43ff-88d4-6dfb77056694	1352
1262	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	\N	2023-12-06 19:12:44.490177	2023-12-06 19:12:44.49015	091b5526-b6ec-44ab-b1c9-50acecead721	1262
1267	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:44.496735	2023-12-06 19:12:44.496711	05587551-9fbd-4582-bade-b456facae495	1267
1269	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	\N	2023-12-06 19:12:44.537676	2023-12-06 19:12:44.53674	14e1e7a5-f8e4-400d-be77-d473d1c8b603	1269
1274	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	\N	2023-12-06 19:12:44.545398	2023-12-06 19:12:44.545358	9509822f-a1f5-4502-be8b-c50fb5145fd2	1274
1281	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	\N	2023-12-06 19:12:44.56124	2023-12-06 19:12:44.561226	ec38f2a2-be1b-49cf-9750-ffc810567a1e	1281
1283	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	\N	2023-12-06 19:12:44.568096	2023-12-06 19:12:44.56807	3d18e633-3806-4e22-bc15-d5d5c3a226bb	1283
1288	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	\N	2023-12-06 19:12:44.575479	2023-12-06 19:12:44.575452	fc7f10c6-5131-4e12-8335-11e29a4838ad	1288
1293	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	\N	2023-12-06 19:12:44.614891	2023-12-06 19:12:44.614002	0b324f33-170c-41d0-b45a-a16839715d89	1293
1297	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	\N	2023-12-06 19:12:44.651541	2023-12-06 19:12:44.650646	1424a8ab-d294-487f-82ff-5c6b6501ba9e	1297
1303	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	\N	2023-12-06 19:12:44.688914	2023-12-06 19:12:44.687989	3bee5640-f479-4b3c-b96d-19e71e0433f8	1303
1308	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:44.730538	2023-12-06 19:12:44.729128	b8e05fca-91d6-44aa-8dbe-e6eae31a6ec1	1308
1313	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	\N	2023-12-06 19:12:44.740834	2023-12-06 19:12:44.740806	c352f691-cafd-42e4-8aeb-16898fa2b96b	1313
1315	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	\N	2023-12-06 19:12:44.774775	2023-12-06 19:12:44.773926	e66b786c-8926-4cc2-abf2-07004067ea78	1315
1321	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:44.784424	2023-12-06 19:12:44.784375	67d886ca-0fab-414f-8023-5eea993137b7	1321
1325	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	\N	2023-12-06 19:12:44.792271	2023-12-06 19:12:44.792227	5278856f-5c29-4759-a546-16b5f5a49832	1325
1327	uri://ed-fi.org/ProviderCategoryDescriptor	Care in your own home	Care in your own home	Care in your own home	\N	\N	\N	\N	2023-12-06 19:12:44.822191	2023-12-06 19:12:44.821314	a19117db-4135-4ba0-9216-ffd207866f1b	1327
1331	uri://ed-fi.org/ProviderCategoryDescriptor	On-premise child care	On-premise child care	On-premise child care	\N	\N	\N	\N	2023-12-06 19:12:44.831467	2023-12-06 19:12:44.831387	e48f1f09-6e7e-45c4-b457-a926ca75877f	1331
1334	uri://ed-fi.org/ProviderCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.837083	2023-12-06 19:12:44.837045	fa47af87-6aaf-413e-88b8-d1526835f776	1334
1340	uri://ed-fi.org/ProviderCategoryDescriptor	School-age child care	School-age child care	School-age child care	\N	\N	\N	\N	2023-12-06 19:12:44.845443	2023-12-06 19:12:44.845426	73c89b74-5b26-4a0f-afcb-98686b4cf177	1340
1344	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.852884	2023-12-06 19:12:44.852849	7e58c326-e24a-461d-9ae9-2c880c604984	1344
1348	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	\N	2023-12-06 19:12:44.889256	2023-12-06 19:12:44.888142	42fdefd5-15d6-4ea6-b3b1-34fdc23536fe	1350
1354	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	\N	2023-12-06 19:12:44.898746	2023-12-06 19:12:44.898734	733090d3-a802-4398-a12f-6b3ddc59bc83	1354
1358	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	\N	2023-12-06 19:12:44.906541	2023-12-06 19:12:44.906353	f5be8ac6-8cc5-46f9-9843-ab0e10fbc5a4	1358
1361	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	\N	2023-12-06 19:12:44.941224	2023-12-06 19:12:44.940232	1d4dc55f-6dc2-4508-aa1a-02ede34508b2	1361
1365	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	\N	2023-12-06 19:12:44.949589	2023-12-06 19:12:44.949577	eee83855-a52f-4598-b700-4d997d5c1e73	1365
1377	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	\N	2023-12-06 19:12:44.971919	2023-12-06 19:12:44.971832	8b5e5a77-b929-4006-b277-a9082dc62f77	1377
1379	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	\N	2023-12-06 19:12:45.003505	2023-12-06 19:12:45.002628	6e52a990-e94f-4eb1-a584-151313476fff	1379
1383	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	\N	2023-12-06 19:12:45.011785	2023-12-06 19:12:45.011703	1e278d84-493d-4812-a462-a013bf67d37a	1383
1387	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	\N	2023-12-06 19:12:45.039029	2023-12-06 19:12:45.038032	820c029c-155e-422e-aecd-0b752bdcaac3	1387
1389	uri://ed-fi.org/ReportingTagDescriptor	LEA	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:45.074575	2023-12-06 19:12:45.073691	2bd84d77-0a40-4b40-9aa3-b228b14d77e8	1389
1395	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	\N	2023-12-06 19:12:45.110455	2023-12-06 19:12:45.109576	47dca5f9-164c-4507-b9c3-8dd6a8c61945	1395
1400	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	\N	2023-12-06 19:12:45.119988	2023-12-06 19:12:45.119974	e987bc99-24aa-4b6e-bb00-e013b83e0cad	1400
1266	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	\N	2023-12-06 19:12:44.496096	2023-12-06 19:12:44.496039	dcb8ff6a-9ca7-4f7d-97b0-7e1c9d727c14	1266
1272	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:44.540762	2023-12-06 19:12:44.539529	18a85024-baf6-4f50-9bb3-a0b6c8d92cdd	1272
1276	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	\N	2023-12-06 19:12:44.551867	2023-12-06 19:12:44.551842	18662488-de7a-4ecf-a6b9-7ceb4e436f9f	1276
1280	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.560514	2023-12-06 19:12:44.560497	cf039a91-58eb-4416-9343-8b47c58b7715	1280
1285	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	\N	2023-12-06 19:12:44.569201	2023-12-06 19:12:44.569175	8afbd3d1-4a0a-4f80-b0ba-c50b99d612a1	1285
1287	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	\N	2023-12-06 19:12:44.574758	2023-12-06 19:12:44.574726	c3fcae6c-1712-4f58-ac09-b787b19ce6ce	1287
1290	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	\N	2023-12-06 19:12:44.578562	2023-12-06 19:12:44.578144	0ebc5089-d65a-4f99-b835-d9eeb15de2e0	1290
1292	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	\N	2023-12-06 19:12:44.614989	2023-12-06 19:12:44.613991	8e9eacb1-bbb6-46f3-9f0b-91c7f8b0865d	1292
1296	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	\N	2023-12-06 19:12:44.651552	2023-12-06 19:12:44.650649	eea0cfdf-e908-4cdc-bf43-48e179baa7f5	1296
1299	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	\N	2023-12-06 19:12:44.660933	2023-12-06 19:12:44.660893	0032f129-a2e5-4115-a984-da56581f113c	1299
1301	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	\N	2023-12-06 19:12:44.688944	2023-12-06 19:12:44.688015	bffcd85c-5d27-4431-8728-3a2e82b78b26	1301
1305	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.723749	2023-12-06 19:12:44.721648	7f395786-573c-440b-8d07-54d07bc90354	1305
1309	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	\N	2023-12-06 19:12:44.731394	2023-12-06 19:12:44.731367	ea503d11-a608-4d74-b073-58d50a537538	1309
1312	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.739578	2023-12-06 19:12:44.739565	a2f55c48-0de6-43f1-a497-b14f3f761396	1312
1314	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:12:44.744496	2023-12-06 19:12:44.744468	95387ae6-8189-4ba5-bbcd-280f6cf77825	1314
1317	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	\N	2023-12-06 19:12:44.774918	2023-12-06 19:12:44.773934	19ae3a28-73fc-4ad4-a34d-637bd93a5187	1317
1320	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.783775	2023-12-06 19:12:44.783742	d89c569f-9f49-40f5-b2d9-03100886ad32	1320
1323	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:44.791037	2023-12-06 19:12:44.790999	01125d90-1f68-4639-abf6-14c324d993ca	1323
1328	uri://ed-fi.org/ProviderCategoryDescriptor	Community care	Community care	Community care	\N	\N	\N	\N	2023-12-06 19:12:44.822341	2023-12-06 19:12:44.821324	a9e767c7-0eb0-42eb-be00-c797c6c3a21b	1328
1332	uri://ed-fi.org/ProviderCategoryDescriptor	Head Start and Early Head Start	Head Start and Early Head Start	Head Start and Early Head Start	\N	\N	\N	\N	2023-12-06 19:12:44.8315	2023-12-06 19:12:44.831457	a0da9b19-504c-484f-a28b-74a89e3e9625	1332
1335	uri://ed-fi.org/ProviderCategoryDescriptor	Resident camps	Resident camps	Resident camps	\N	\N	\N	\N	2023-12-06 19:12:44.837752	2023-12-06 19:12:44.837723	4f0a2349-e6ba-4a1e-81c4-e5dbe657af24	1335
1338	uri://ed-fi.org/ProviderCategoryDescriptor	School-based child care	School-based child care	School-based child care	\N	\N	\N	\N	2023-12-06 19:12:44.845126	2023-12-06 19:12:44.845096	8673eeb8-1cea-49ec-943f-a2b0e8e38b09	1338
1341	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	\N	\N	\N	\N	2023-12-06 19:12:44.852009	2023-12-06 19:12:44.851982	010a9e9a-13a2-40bd-a5e5-4f5e128c0601	1341
1345	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.85706	2023-12-06 19:12:44.85702	7f8147e3-e279-4a5d-acc8-6901ce1e16a5	1345
1350	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	\N	2023-12-06 19:12:44.889231	2023-12-06 19:12:44.888134	98fb6620-825b-445a-8b5b-ec3a0b27aa1f	1349
1353	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	\N	2023-12-06 19:12:44.897596	2023-12-06 19:12:44.897579	68042763-c761-4615-85df-e50105b56f74	1353
1359	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	\N	2023-12-06 19:12:44.909403	2023-12-06 19:12:44.909309	f7652509-c446-4463-b879-7857d8b69641	1359
1360	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	\N	2023-12-06 19:12:44.941116	2023-12-06 19:12:44.940258	d6e0d7af-ca66-4b32-ac1f-2fef4eaf0c68	1360
1364	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	\N	2023-12-06 19:12:44.948898	2023-12-06 19:12:44.948852	eb212a59-4118-4cbd-8e7e-5da0ed7f659d	1364
1369	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	\N	2023-12-06 19:12:44.957266	2023-12-06 19:12:44.957233	c1c69e7b-2a4e-43e5-932e-afdceb264c53	1369
1374	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	\N	2023-12-06 19:12:44.966393	2023-12-06 19:12:44.966338	e6bc5a35-1185-4dd9-a3ad-f92d37f08c13	1374
1376	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-12-06 19:12:44.970482	2023-12-06 19:12:44.970444	6a8bef01-3b77-4d9e-8e3f-e463c29a333e	1376
1378	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	\N	2023-12-06 19:12:44.973375	2023-12-06 19:12:44.973337	9872d1aa-e93b-47d4-9532-dfb380cafae2	1378
1342	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	DEPRECATED: Center-SA Only	DEPRECATED: Center-SA Only	\N	\N	\N	\N	2023-12-06 19:12:44.851984	2023-12-06 19:12:44.851941	d6d52a7c-8cf6-4d2a-8413-a13c87137d39	1342
1346	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	DEPRECATED: Not Applicable	DEPRECATED: Not Applicable	\N	\N	\N	\N	2023-12-06 19:12:44.861007	2023-12-06 19:12:44.860979	e7fabda2-1ce6-45b5-83cd-9606ccc99494	1346
1349	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	\N	2023-12-06 19:12:44.889145	2023-12-06 19:12:44.888157	4f743eb5-8f6d-492d-93a7-57e19efbbdfb	1348
1351	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	\N	2023-12-06 19:12:44.896376	2023-12-06 19:12:44.896334	e66e7f53-95fe-4c8c-81a6-7af367ca2129	1351
1355	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	\N	2023-12-06 19:12:44.903111	2023-12-06 19:12:44.903084	e9a210fe-e918-4c3a-b7dc-a6c175413519	1355
1357	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	\N	2023-12-06 19:12:44.90594	2023-12-06 19:12:44.905913	7aaf5fd9-7b83-47b6-948a-5a50a21d8744	1357
1362	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	\N	2023-12-06 19:12:44.941334	2023-12-06 19:12:44.94024	e7e9533a-c943-4c1a-9d40-44efac839376	1362
1366	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	\N	2023-12-06 19:12:44.950508	2023-12-06 19:12:44.950481	dbf48aea-413d-468e-a732-a8b3109892d1	1366
1371	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-12-06 19:12:44.959856	2023-12-06 19:12:44.959824	ca3c6666-a33e-4408-96d3-ef1541ee8878	1371
1372	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	\N	2023-12-06 19:12:44.963996	2023-12-06 19:12:44.963958	ff307ef2-d87c-4c6d-8705-35ae71ae8819	1372
1381	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	\N	2023-12-06 19:12:45.003669	2023-12-06 19:12:45.002636	3e9f363b-0955-4887-a62d-ef5b6e4c9a80	1381
1386	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	\N	2023-12-06 19:12:45.039021	2023-12-06 19:12:45.038047	09521b14-2c68-47a6-9fc3-d47503457f85	1386
1390	uri://ed-fi.org/ReportingTagDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:45.074685	2023-12-06 19:12:45.073707	994bd08f-ce44-4bed-af7b-ca5e641173de	1390
1397	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	\N	2023-12-06 19:12:45.110528	2023-12-06 19:12:45.109602	19e4616b-b8bf-4022-aae9-43e5b332ed3a	1397
1398	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	\N	2023-12-06 19:12:45.117611	2023-12-06 19:12:45.11748	8faf19c8-49aa-4691-a705-f33ab1ab861e	1398
1405	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	\N	2023-12-06 19:12:45.128331	2023-12-06 19:12:45.128261	079388bc-0589-4baa-862c-d75876a140fd	1405
1408	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:45.136229	2023-12-06 19:12:45.136215	390ea954-bdc5-4fc5-84db-bb6e216fd91c	1408
1412	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:45.174804	2023-12-06 19:12:45.174765	932f49d4-a1ee-4337-9ea2-0362b0db937e	1412
1416	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	\N	2023-12-06 19:12:45.18259	2023-12-06 19:12:45.182562	ad48d2c2-533f-4428-afc9-21ab70a78e63	1416
1419	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	\N	2023-12-06 19:12:45.189175	2023-12-06 19:12:45.188932	98d599cd-668e-487d-800c-29218cbe3b1d	1419
1427	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:45.204404	2023-12-06 19:12:45.204375	2d1a8a3b-3005-4590-8970-0f6a489b6940	1427
1432	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	\N	2023-12-06 19:12:45.214292	2023-12-06 19:12:45.21428	e4fceaf7-8bbb-46d8-bc57-e6b6b704d33b	1432
1434	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	\N	2023-12-06 19:12:45.250065	2023-12-06 19:12:45.248875	d8e15047-45c7-41ea-8609-2a286a7a714f	1434
1439	uri://ed-fi.org/SectionTypeDescriptor	Attendance Only	Attendance Only	Attendance Only	\N	\N	\N	\N	2023-12-06 19:12:45.260539	2023-12-06 19:12:45.260491	1eff58ab-53f4-4f1d-a507-413dcecea9e9	1439
1440	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	\N	2023-12-06 19:12:45.288798	2023-12-06 19:12:45.287911	118e23e0-d7da-4dff-830c-a5d485c6c73b	1440
1447	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	\N	2023-12-06 19:12:45.298082	2023-12-06 19:12:45.297962	cfe8001d-ae59-4368-90c8-a50d2f5e9fa9	1447
1453	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	\N	2023-12-06 19:12:45.338338	2023-12-06 19:12:45.337276	84c65829-4065-4903-b7bc-c274f1af1cd5	1453
1457	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-12-06 19:12:45.34722	2023-12-06 19:12:45.34717	0697aa06-e662-4f8f-9c54-025c7fa10d19	1457
1459	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	\N	2023-12-06 19:12:45.376391	2023-12-06 19:12:45.3753	d3a8b9fc-e66a-4332-84d5-23248f1d3e72	1459
1464	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	\N	2023-12-06 19:12:45.385102	2023-12-06 19:12:45.384675	c5cd0c33-d6be-4c94-b210-f871b751992b	1464
1467	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	\N	2023-12-06 19:12:45.392432	2023-12-06 19:12:45.391932	3bfacf8d-7751-4757-812c-e2ab567cd71b	1467
1471	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	\N	2023-12-06 19:12:45.399666	2023-12-06 19:12:45.399638	c61d41c8-aeb8-47d6-a2a9-c2ce7ad1d5ab	1471
1475	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	\N	2023-12-06 19:12:45.435944	2023-12-06 19:12:45.43509	923ba4b8-b69d-455d-8f2b-51e4a9fb6fa1	1475
1356	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	\N	2023-12-06 19:12:44.905007	2023-12-06 19:12:44.904963	9c9de636-098f-4d86-99f4-c9ce0803c5a7	1356
1363	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:44.94132	2023-12-06 19:12:44.940262	b11ca03f-2252-4570-919e-c37760a748fc	1363
1367	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	\N	2023-12-06 19:12:44.95064	2023-12-06 19:12:44.950628	bd33e2ea-9031-4afa-b20e-1e978d504f7f	1367
1368	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-12-06 19:12:44.954886	2023-12-06 19:12:44.954858	bbc59a1b-8292-439f-9cd3-1a5547427fa4	1368
1370	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.958937	2023-12-06 19:12:44.958909	b5036982-69e2-4931-ba22-22f20b4e32d4	1370
1373	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	\N	2023-12-06 19:12:44.964177	2023-12-06 19:12:44.964148	6036f551-09dd-49bb-a406-5571afc9a13b	1373
1375	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	\N	2023-12-06 19:12:44.96765	2023-12-06 19:12:44.966822	b9223694-4708-40d7-9679-bfd8341e9e18	1375
1380	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	\N	2023-12-06 19:12:45.003692	2023-12-06 19:12:45.002652	21c59244-3392-44c6-a31c-f17960287f3a	1380
1384	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	\N	2023-12-06 19:12:45.038868	2023-12-06 19:12:45.038025	3534cc15-ce43-4d0d-a2ff-36ffb880c0a2	1384
1392	uri://ed-fi.org/ReportingTagDescriptor	CMO	Charter Management Organization	Charter Management Organization	\N	\N	\N	\N	2023-12-06 19:12:45.074894	2023-12-06 19:12:45.073683	4ddaf1c8-5a54-4ac0-a49e-34f4d3a0558f	1392
1393	uri://ed-fi.org/ReportingTagDescriptor	SEA	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:45.082644	2023-12-06 19:12:45.082563	753009a0-a4f2-455b-8f79-9c9e2a0260d7	1393
1396	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	\N	2023-12-06 19:12:45.110466	2023-12-06 19:12:45.109606	b3ba75c5-cc5e-45e3-9ad9-8f59533bf6f7	1396
1401	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:45.120371	2023-12-06 19:12:45.120354	1abfe6dd-cea4-4036-ac28-2792007e99bd	1401
1403	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	\N	2023-12-06 19:12:45.127514	2023-12-06 19:12:45.127416	a32857e7-c714-4bd7-b0c5-5bed38a10c5d	1403
1410	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	\N	2023-12-06 19:12:45.167021	2023-12-06 19:12:45.165244	02701a89-bd75-4354-a2ad-305e9ddb0459	1410
1414	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:45.175298	2023-12-06 19:12:45.175265	78be6656-6102-4f26-8f62-41fd1c4eb15d	1414
1418	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	\N	2023-12-06 19:12:45.184915	2023-12-06 19:12:45.184848	5dfb91fe-121d-4988-9e33-256d674c0738	1418
1421	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	\N	2023-12-06 19:12:45.191613	2023-12-06 19:12:45.191444	01a26003-49e3-4a57-a195-e010321160fc	1421
1422	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-12-06 19:12:45.196413	2023-12-06 19:12:45.196385	072f9add-2ff2-426d-bf4f-54107fffe835	1422
1424	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-12-06 19:12:45.199171	2023-12-06 19:12:45.199043	d0503ea2-9123-43a4-a567-554bee74fa6c	1424
1426	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	\N	2023-12-06 19:12:45.203227	2023-12-06 19:12:45.203212	ac42517c-5482-49c4-b540-75273380030c	1426
1429	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	\N	2023-12-06 19:12:45.208313	2023-12-06 19:12:45.20821	06e4bb39-e859-4f4a-8dab-de6303497d0b	1429
1435	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	\N	2023-12-06 19:12:45.250179	2023-12-06 19:12:45.248889	c25d69c9-af75-4ae4-ba42-abc16938f942	1435
1441	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	\N	2023-12-06 19:12:45.288791	2023-12-06 19:12:45.287944	85b34a4e-f56a-4eee-8f8b-8e5b0a719c7e	1441
1445	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	\N	2023-12-06 19:12:45.297192	2023-12-06 19:12:45.297156	8d97b751-09c3-4af1-8d96-e8cabe12fa22	1445
1448	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	\N	2023-12-06 19:12:45.302503	2023-12-06 19:12:45.302453	2eb07791-e2e6-41ff-aea2-dbeb8c6eec9f	1448
1451	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	\N	2023-12-06 19:12:45.308032	2023-12-06 19:12:45.308019	96ba8a3d-796f-4404-b533-c6cf6deb1bfe	1451
1455	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	\N	2023-12-06 19:12:45.338173	2023-12-06 19:12:45.337287	0ed6d8af-73f6-461f-a81a-c351b3e8cb7d	1455
1461	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	\N	2023-12-06 19:12:45.376214	2023-12-06 19:12:45.375317	115544d5-5788-4de6-9cc8-3d2028c508e9	1461
1462	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	\N	2023-12-06 19:12:45.384345	2023-12-06 19:12:45.384271	54fb5ede-3aa0-476e-9f75-21a8f2f9d7ce	1462
1466	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	\N	2023-12-06 19:12:45.390263	2023-12-06 19:12:45.390097	df9032ad-5c55-4151-bf1d-7344255b1fba	1466
1469	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	\N	2023-12-06 19:12:45.39527	2023-12-06 19:12:45.395199	ee8d5c4a-215b-4070-a710-2678862f184d	1469
1470	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.398516	2023-12-06 19:12:45.398499	076aa50a-3193-4c0b-a6ed-e215583b3eea	1470
1473	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	\N	2023-12-06 19:12:45.40413	2023-12-06 19:12:45.404002	2d558efa-3b94-4516-9fac-77319102cb47	1473
1477	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	\N	2023-12-06 19:12:45.436012	2023-12-06 19:12:45.4351	5fa77824-cf3f-4bd5-af25-07ec0646b19f	1477
1382	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	\N	2023-12-06 19:12:45.003692	2023-12-06 19:12:45.002655	f49e235a-103a-47fa-9e08-a67965e90cff	1382
1385	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	\N	2023-12-06 19:12:45.039036	2023-12-06 19:12:45.038016	495f8038-99b3-47ff-8f97-f8bf112593c7	1385
1388	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	\N	2023-12-06 19:12:45.047346	2023-12-06 19:12:45.047318	966153e4-0e03-4e9d-bec4-a176745bef17	1388
1391	uri://ed-fi.org/ReportingTagDescriptor	ESSA	Every Student Succeeds Act	Every Student Succeeds Act	\N	\N	\N	\N	2023-12-06 19:12:45.074806	2023-12-06 19:12:45.07371	2e327271-a831-4225-ad9a-4dcda6ab619e	1391
1394	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	\N	2023-12-06 19:12:45.110432	2023-12-06 19:12:45.109585	3d148beb-98ae-45bc-bd13-d146327280fb	1394
1399	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	\N	2023-12-06 19:12:45.119231	2023-12-06 19:12:45.119117	5c75801f-efe2-4549-bb1f-43913ac9376a	1399
1402	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	\N	2023-12-06 19:12:45.125909	2023-12-06 19:12:45.125894	86bfc11c-53ba-4e1d-8654-3dcec3e82687	1402
1406	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-12-06 19:12:45.133017	2023-12-06 19:12:45.13293	13238f3d-4576-40d5-9201-afe7f5aca678	1406
1409	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	\N	2023-12-06 19:12:45.166649	2023-12-06 19:12:45.165249	c0b1ff12-4265-4a8e-8000-af8d4fd12f6e	1409
1413	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	\N	2023-12-06 19:12:45.174668	2023-12-06 19:12:45.173285	c3ae642b-2eaf-4613-a4ef-8eaf444ccb94	1413
1415	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	\N	2023-12-06 19:12:45.18202	2023-12-06 19:12:45.181975	5684c677-4f49-4f8d-9bb5-51b4c1f215ba	1415
1420	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	\N	2023-12-06 19:12:45.190162	2023-12-06 19:12:45.190135	47c59fcd-3b07-4e90-bea9-4f84b60432e2	1420
1423	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	\N	2023-12-06 19:12:45.197226	2023-12-06 19:12:45.197137	03b15588-b1f0-4c9a-9937-a0eb683cddb2	1423
1428	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.207286	2023-12-06 19:12:45.207205	09023142-198a-42e8-85e5-677e878d417a	1428
1431	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-12-06 19:12:45.213996	2023-12-06 19:12:45.213903	53d9414a-14cd-40bb-8c9d-ee28a1adf78e	1431
1437	uri://ed-fi.org/SectionTypeDescriptor	Attendance and Credit	Attendance and Credit	Attendance and Credit	\N	\N	\N	\N	2023-12-06 19:12:45.257535	2023-12-06 19:12:45.255626	83ab5fdc-4c47-468f-a36f-4db61c053a16	1437
1443	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	\N	2023-12-06 19:12:45.288807	2023-12-06 19:12:45.287928	9318b2e8-584e-4e24-a7a5-57d014058dfa	1443
1444	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	\N	2023-12-06 19:12:45.297032	2023-12-06 19:12:45.297017	5feaeba7-04b7-4983-af21-de94a94c9e26	1444
1449	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	\N	2023-12-06 19:12:45.304843	2023-12-06 19:12:45.304827	3d5fa54a-8ae0-4ed3-9ca0-c8ccb592f434	1449
1452	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	\N	2023-12-06 19:12:45.338178	2023-12-06 19:12:45.337303	ea2e1311-d571-42c1-8b0e-38b53d0d0fcd	1452
1456	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-12-06 19:12:45.344589	2023-12-06 19:12:45.344574	815625bc-b1c0-4dfc-a0c7-a4d4d1492fc1	1456
1460	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	\N	2023-12-06 19:12:45.376444	2023-12-06 19:12:45.375282	4196e856-596f-4961-b08d-2b6963e7aa62	1460
1463	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	\N	2023-12-06 19:12:45.384884	2023-12-06 19:12:45.384855	a7de2412-c294-4397-8260-e7add56b03aa	1463
1472	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	\N	2023-12-06 19:12:45.401808	2023-12-06 19:12:45.401766	12845844-ef3e-41eb-9354-e1abc986f3cb	1472
1474	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	\N	2023-12-06 19:12:45.406445	2023-12-06 19:12:45.406407	3039f7a8-d6c4-4791-87ae-4b279909795d	1474
1478	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	\N	2023-12-06 19:12:45.436445	2023-12-06 19:12:45.435108	97a17e2c-db3c-407c-9d0d-373dd2ec5660	1478
1480	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.473763	2023-12-06 19:12:45.472892	1e576cc6-6384-4f0b-b3ce-4ccb9c4a5e3a	1480
1486	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	\N	2023-12-06 19:12:45.523994	2023-12-06 19:12:45.523019	7012149e-7ab4-4dfe-b94d-83ba6d5e798c	1486
1490	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	\N	2023-12-06 19:12:45.562938	2023-12-06 19:12:45.561825	70322343-fd1a-4cf9-9b5c-bbeff46ebc7c	1490
1492	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.571262	2023-12-06 19:12:45.571227	795be9ef-3c05-4a20-b231-b1150b68e21a	1492
1498	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	\N	2023-12-06 19:12:45.606161	2023-12-06 19:12:45.60507	721bd2cf-61ad-4500-9706-e5d3cfc8fd67	1498
1500	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	\N	2023-12-06 19:12:45.614554	2023-12-06 19:12:45.614517	d00175c0-77fc-4f88-a307-4072cde66e59	1500
1504	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:45.648183	2023-12-06 19:12:45.647287	e5a9677b-9dc7-4592-ad85-c1d07634e976	1504
1404	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.128205	2023-12-06 19:12:45.128186	2b9af835-69ad-4965-8cff-03d7c95d15c2	1404
1407	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	\N	2023-12-06 19:12:45.134939	2023-12-06 19:12:45.134923	0d9653f0-0536-4cd2-ab0b-8d5a283328d3	1407
1411	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:45.174591	2023-12-06 19:12:45.173161	ec92cadf-f363-4c79-b2d1-d11ab96caf06	1411
1417	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:45.183853	2023-12-06 19:12:45.18381	2b90c8fd-7372-4a0b-b836-4b54425c9884	1417
1425	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	\N	2023-12-06 19:12:45.192852	2023-12-06 19:12:45.192711	2695d1fb-a837-4b5c-b928-6085d6df4616	1425
1430	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	\N	2023-12-06 19:12:45.209366	2023-12-06 19:12:45.209344	3e14e876-30e1-41e7-b45f-030b89a16659	1430
1433	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	\N	2023-12-06 19:12:45.217085	2023-12-06 19:12:45.217061	8408a870-7e2b-4a34-b592-3f7938fd9507	1433
1436	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	\N	2023-12-06 19:12:45.250762	2023-12-06 19:12:45.248903	7fb5032e-a6eb-44fc-864c-05a8afb7f95f	1436
1438	uri://ed-fi.org/SectionTypeDescriptor	Credit Only	Credit Only	Credit Only	\N	\N	\N	\N	2023-12-06 19:12:45.260468	2023-12-06 19:12:45.260452	0eb614aa-480a-404c-8e64-8e8a98a69b68	1438
1442	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	\N	2023-12-06 19:12:45.288885	2023-12-06 19:12:45.28792	67580708-3805-4de7-919f-9526857a53da	1442
1446	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	\N	2023-12-06 19:12:45.297565	2023-12-06 19:12:45.297526	7e97c156-43fb-4ce4-88aa-bee50b84a984	1446
1450	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	\N	2023-12-06 19:12:45.306848	2023-12-06 19:12:45.306835	8357d4f9-cc47-4346-bfe5-fcbe4c4d47f1	1450
1454	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.338111	2023-12-06 19:12:45.337271	b2ff9a8f-d016-421a-9470-1ebd8f6a3cdf	1454
1458	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	\N	2023-12-06 19:12:45.376223	2023-12-06 19:12:45.375292	aafde6ec-edd1-4a67-b8a3-81ddce32a9e5	1458
1465	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	\N	2023-12-06 19:12:45.386051	2023-12-06 19:12:45.386021	f9bed8e2-d971-48fc-8bb3-4240ad9cf85b	1465
1468	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:45.39306	2023-12-06 19:12:45.393046	ecab9de6-8740-45cf-93a0-d6a103be0f16	1468
1476	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.435951	2023-12-06 19:12:45.435124	12ad417d-ae81-4570-b9ed-601d85d18977	1476
1481	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	\N	2023-12-06 19:12:45.474503	2023-12-06 19:12:45.472902	4cc6d89a-a6d9-4f29-8f43-b17229696518	1481
1483	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	\N	2023-12-06 19:12:45.481821	2023-12-06 19:12:45.481726	b4c368df-f470-492d-b016-2d6ade269f60	1483
1484	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-12-06 19:12:45.523852	2023-12-06 19:12:45.523044	f4a457bb-15b7-4962-8227-3e0bedebaea0	1484
1491	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	\N	2023-12-06 19:12:45.562769	2023-12-06 19:12:45.561799	fea3edea-2266-4894-bfc7-0356eb7e25b2	1491
1494	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	\N	2023-12-06 19:12:45.571143	2023-12-06 19:12:45.571116	522c12ae-9d72-4074-a683-4f36788550b0	1494
1499	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	\N	2023-12-06 19:12:45.606125	2023-12-06 19:12:45.605044	0b55b401-4d30-4ca1-bf0e-e1531560f75c	1499
1502	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	\N	2023-12-06 19:12:45.614842	2023-12-06 19:12:45.614815	33a2b1e7-f8f3-4d33-8d74-1dc5e8d2da8c	1502
1505	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	\N	2023-12-06 19:12:45.648282	2023-12-06 19:12:45.647261	3e376169-4c74-4673-bb91-b0d4f9a1be98	1505
1509	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	\N	2023-12-06 19:12:45.656627	2023-12-06 19:12:45.6566	71d442bf-4236-4b70-8d65-458e10d97baa	1509
1512	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	\N	2023-12-06 19:12:45.685582	2023-12-06 19:12:45.684362	4b1da2de-a88e-4f73-9ad1-c45620336606	1512
1515	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	\N	2023-12-06 19:12:45.727628	2023-12-06 19:12:45.726602	fc8c948e-585e-4a58-a073-00fad239032c	1515
1521	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	\N	2023-12-06 19:12:45.738051	2023-12-06 19:12:45.738025	38141fea-5531-4c47-9fc3-f3a03fb806b2	1521
1524	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	\N	2023-12-06 19:12:45.745783	2023-12-06 19:12:45.745748	e55ec7a5-537c-4a20-aac4-1aa654a9e48c	1524
1527	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	\N	2023-12-06 19:12:45.751196	2023-12-06 19:12:45.751141	9affdff1-719c-4b54-9952-7f3478aef403	1527
1531	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	\N	2023-12-06 19:12:45.759822	2023-12-06 19:12:45.759762	f1b6922c-9b47-4539-afc9-6989113b6f1e	1531
1535	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	\N	2023-12-06 19:12:45.767603	2023-12-06 19:12:45.767529	2ff0e14f-ddda-4022-ac9b-ccf96031a977	1535
1537	uri://ed-fi.org/StaffClassificationDescriptor	Elementary Teacher	Elementary Teacher	Elementary Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.797408	2023-12-06 19:12:45.796466	c2dad63a-f4d0-4322-a7b4-f6b8180709d4	1537
1479	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	\N	2023-12-06 19:12:45.473737	2023-12-06 19:12:45.472867	e005c07c-5a94-45d5-9735-39417f3e3a32	1479
1485	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	\N	2023-12-06 19:12:45.524086	2023-12-06 19:12:45.523134	2ed202ea-810c-42c6-9f96-a277b413b57f	1485
1495	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.573442	2023-12-06 19:12:45.573381	93cc26a4-d60e-49bd-a3df-959891d94242	1495
1497	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	\N	2023-12-06 19:12:45.606016	2023-12-06 19:12:45.605077	f738f555-c680-49fa-943c-3de5daad6522	1497
1503	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	\N	2023-12-06 19:12:45.61514	2023-12-06 19:12:45.615061	8e1422f6-271f-4288-ae77-131ed836bf52	1503
1507	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:45.648295	2023-12-06 19:12:45.64727	d8aa873b-9208-4f1c-b59d-93afe293b121	1507
1513	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	\N	2023-12-06 19:12:45.685353	2023-12-06 19:12:45.684329	dce0712d-968a-4e9c-891d-cd9e9d5d6887	1513
1514	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	\N	2023-12-06 19:12:45.727496	2023-12-06 19:12:45.726596	0cc905f9-110a-45eb-8eda-a4de5b7947b1	1514
1519	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	\N	2023-12-06 19:12:45.736556	2023-12-06 19:12:45.736521	2db612f1-80e7-452e-bda5-ae3cc08544db	1519
1522	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	\N	2023-12-06 19:12:45.741128	2023-12-06 19:12:45.741109	c9b1dee0-b2bd-4f73-8fee-1424cdb682b5	1522
1529	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	\N	2023-12-06 19:12:45.75306	2023-12-06 19:12:45.753044	27fa9a32-c791-41b5-b3ba-63606efdf9b7	1529
1532	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	\N	2023-12-06 19:12:45.759844	2023-12-06 19:12:45.759816	f37843f7-b44a-4ae0-8302-8b5799bf304d	1532
1536	uri://ed-fi.org/StaffClassificationDescriptor	Secondary Teacher	Secondary Teacher	Secondary Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.797299	2023-12-06 19:12:45.796459	ca16b251-4fb2-4d0e-b1f8-74817c2c5cc5	1536
1541	uri://ed-fi.org/StaffClassificationDescriptor	Elementary School Counselor	Elementary School Counselor	Elementary School Counselor	\N	\N	\N	\N	2023-12-06 19:12:45.807089	2023-12-06 19:12:45.807061	a0ef87a1-9ade-4480-88eb-ae3c46690ac8	1541
1544	uri://ed-fi.org/StaffClassificationDescriptor	School Counselor	School Counselor	School Counselor	\N	\N	\N	\N	2023-12-06 19:12:45.813308	2023-12-06 19:12:45.813192	700d9cae-f4f8-4889-892f-f8f1fa0548bb	1544
1547	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	\N	2023-12-06 19:12:45.817301	2023-12-06 19:12:45.817276	dc04ec32-7bfa-4651-8385-68c992bf0f2e	1547
1550	uri://ed-fi.org/StaffClassificationDescriptor	School Administrative Support Staff	School Administrative Support Staff	School Administrative Support Staff	\N	\N	\N	\N	2023-12-06 19:12:45.824681	2023-12-06 19:12:45.824655	3051a294-c0f3-4b30-8835-d23727dda2f7	1550
1553	uri://ed-fi.org/StaffClassificationDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-12-06 19:12:45.830174	2023-12-06 19:12:45.830159	9a83ca97-1944-453e-9a5f-722b20ecd303	1553
1556	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	DEPRECATED: Assistant Principal	DEPRECATED: Assistant Principal	\N	\N	\N	\N	2023-12-06 19:12:45.837672	2023-12-06 19:12:45.837526	c8d3dd82-ac6e-4c98-b614-e93c43997978	1556
1559	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	DEPRECATED: Assistant Superintendent	DEPRECATED: Assistant Superintendent	\N	\N	\N	\N	2023-12-06 19:12:45.842435	2023-12-06 19:12:45.84238	32a1dc78-59ac-4086-8f11-4c1dfbd761d0	1559
1562	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	DEPRECATED: LEA System Administrator	DEPRECATED: LEA System Administrator	\N	\N	\N	\N	2023-12-06 19:12:45.850175	2023-12-06 19:12:45.850154	ed8b02f6-535b-470c-a98a-0b6742693eb1	1562
1567	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	DEPRECATED: State Administrator	DEPRECATED: State Administrator	\N	\N	\N	\N	2023-12-06 19:12:45.859923	2023-12-06 19:12:45.859868	3f02517e-05a2-4733-9dab-9c57674b9ce9	1567
1569	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	DEPRECATED: Superintendent	DEPRECATED: Superintendent	\N	\N	\N	\N	2023-12-06 19:12:45.864398	2023-12-06 19:12:45.864373	661c6864-e578-4eea-867f-e867435453a2	1569
1574	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	\N	2023-12-06 19:12:45.901165	2023-12-06 19:12:45.900289	f1ad34c0-eab8-48fc-95c3-172ac53a36c9	1574
1579	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	\N	2023-12-06 19:12:45.909959	2023-12-06 19:12:45.909945	cbc37152-1f1e-4c10-91bc-6574c866dc06	1579
1584	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	\N	2023-12-06 19:12:45.948529	2023-12-06 19:12:45.947633	e5fe8f43-e0f0-4076-9529-439e52f8a5ed	1584
1588	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.957979	2023-12-06 19:12:45.957774	8308c410-55a3-4198-a322-93bb10cbc442	1588
1589	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	\N	2023-12-06 19:12:45.964433	2023-12-06 19:12:45.964379	b238473c-2890-41c5-b19f-96ee2a37dbb0	1589
1593	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	\N	2023-12-06 19:12:45.994735	2023-12-06 19:12:45.993649	73b4a75b-7ace-4950-9d7a-6c457677a745	1593
1598	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	\N	2023-12-06 19:12:46.003749	2023-12-06 19:12:46.003623	a7a42eed-4b35-422a-8e24-74c9686b4be5	1598
1601	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	\N	2023-12-06 19:12:46.012902	2023-12-06 19:12:46.012851	253072a4-6848-492d-80ad-0f21b7d387ff	1601
1607	uri://ed-fi.org/RatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:12:46.060518	2023-12-06 19:12:46.059705	d90e4c5a-4e35-468c-b417-157316879d60	1607
1482	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	\N	2023-12-06 19:12:45.473751	2023-12-06 19:12:45.472876	3958c7b3-1454-40b8-a857-df582794ad24	1482
1487	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	\N	2023-12-06 19:12:45.524084	2023-12-06 19:12:45.523139	f364aedb-f806-4e63-bc55-a622a2d51660	1487
1488	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	\N	2023-12-06 19:12:45.533595	2023-12-06 19:12:45.533528	47d74830-5ebb-43c2-9a8a-25ab23657a0c	1488
1489	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	\N	2023-12-06 19:12:45.562777	2023-12-06 19:12:45.561808	019cb4ae-fff5-4872-a7f6-71da770aa10b	1489
1493	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.57124	2023-12-06 19:12:45.569133	2eb8c8c0-7094-46e8-b60f-96f9c1781230	1493
1496	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	\N	2023-12-06 19:12:45.605888	2023-12-06 19:12:45.605055	d5c01c01-6a80-441b-929e-f1b379580d52	1496
1501	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	\N	2023-12-06 19:12:45.614922	2023-12-06 19:12:45.614847	510b83a7-6533-4eac-ab9c-00e26d654f46	1501
1506	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:45.648371	2023-12-06 19:12:45.647291	e96376f6-daa9-496c-99c1-25aa734ac284	1506
1510	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	\N	2023-12-06 19:12:45.685242	2023-12-06 19:12:45.684323	823f7a1e-ba79-4399-b53e-a61d75e8d1b1	1510
1517	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	\N	2023-12-06 19:12:45.7293	2023-12-06 19:12:45.729259	61a926ec-5682-4d20-83fc-34d2a6315bd8	1517
1520	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	\N	2023-12-06 19:12:45.736412	2023-12-06 19:12:45.736383	41b2bbb4-240f-4e1b-ba25-5eea0d37cea8	1520
1525	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	\N	2023-12-06 19:12:45.745683	2023-12-06 19:12:45.745462	115df9a7-532b-4c94-809e-8f9be034fde1	1525
1526	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	\N	2023-12-06 19:12:45.750583	2023-12-06 19:12:45.750549	b287e677-37db-4dcb-813c-96da1774cb43	1526
1533	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	\N	2023-12-06 19:12:45.760192	2023-12-06 19:12:45.760166	6bfd873a-2052-43fa-b422-7102d2d54751	1533
1534	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	\N	2023-12-06 19:12:45.76541	2023-12-06 19:12:45.765382	62427dc3-72c8-4e82-83cf-2fbe4ef1ca89	1534
1539	uri://ed-fi.org/StaffClassificationDescriptor	Kindergarten Teacher	Kindergarten Teacher	Kindergarten Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.797459	2023-12-06 19:12:45.796487	f9456c03-3ad3-4e5a-b4be-774c57e57b43	1539
1540	uri://ed-fi.org/StaffClassificationDescriptor	Ungraded Teacher	Ungraded Teacher	Ungraded Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.806606	2023-12-06 19:12:45.806514	a67adb4c-7fa9-4eac-af6a-e2a1d6ba2583	1540
1549	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	\N	2023-12-06 19:12:45.823216	2023-12-06 19:12:45.823191	2f5cb366-3a0e-4213-bf44-e035f16cb9d4	1549
1551	uri://ed-fi.org/StaffClassificationDescriptor	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	\N	\N	\N	\N	2023-12-06 19:12:45.827392	2023-12-06 19:12:45.827358	b7778208-9875-41e4-a475-cc3f3236a8a5	1551
1555	uri://ed-fi.org/StaffClassificationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:45.834523	2023-12-06 19:12:45.834393	124a559b-83d7-4202-b85c-9ba010c5c72d	1555
1557	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	DEPRECATED: Counselor	DEPRECATED: Counselor	\N	\N	\N	\N	2023-12-06 19:12:45.839225	2023-12-06 19:12:45.839074	3c072adf-ba15-442b-a7cd-8c608ca934ca	1557
1560	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	DEPRECATED: Instructional Coordinator	DEPRECATED: Instructional Coordinator	\N	\N	\N	\N	2023-12-06 19:12:45.844147	2023-12-06 19:12:45.844049	cc4767d2-adf3-471a-849e-6c396e44a4dd	1560
1563	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	DEPRECATED: Operational Support	DEPRECATED: Operational Support	\N	\N	\N	\N	2023-12-06 19:12:45.851087	2023-12-06 19:12:45.851073	36052544-fe46-4ca2-8aec-b1bd8f171feb	1563
1566	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	DEPRECATED: School Specialist	DEPRECATED: School Specialist	\N	\N	\N	\N	2023-12-06 19:12:45.857727	2023-12-06 19:12:45.857645	d2487180-fa47-41d6-a93a-45a911382aa3	1566
1570	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	DEPRECATED: Substitute Teacher	DEPRECATED: Substitute Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.865336	2023-12-06 19:12:45.865285	026e4374-9ac6-4794-be8d-945fca8e0cb8	1570
1573	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	\N	2023-12-06 19:12:45.901166	2023-12-06 19:12:45.900278	8d41b9aa-fd6c-4562-8b7e-8b05530422a5	1573
1580	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	\N	2023-12-06 19:12:45.912058	2023-12-06 19:12:45.91198	68f50799-e4af-4a62-843e-2e481e760f90	1580
1582	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	\N	2023-12-06 19:12:45.948491	2023-12-06 19:12:45.947665	56ff37a9-e7ac-44d7-8fd9-463d90df62a1	1582
1587	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	\N	2023-12-06 19:12:45.95833	2023-12-06 19:12:45.958167	bbb0ba2f-3e05-495f-aa4c-06b398accc1c	1587
1594	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	\N	2023-12-06 19:12:45.99505	2023-12-06 19:12:45.993622	4c28575a-6658-4516-b488-7d4f80c37323	1594
1595	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	\N	2023-12-06 19:12:46.002922	2023-12-06 19:12:46.002885	4ee0bc46-564a-44ac-b966-2714ac2b6426	1595
1602	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	\N	2023-12-06 19:12:46.013103	2023-12-06 19:12:46.01309	6bd9c7fc-86cb-4ec0-a860-37ac7ff0b25e	1602
1508	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	\N	2023-12-06 19:12:45.655528	2023-12-06 19:12:45.655494	762f377e-1cc4-4dc6-b84d-b787b2ed9efe	1508
1511	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	\N	2023-12-06 19:12:45.685351	2023-12-06 19:12:45.684345	218f76d7-dfb6-4ee1-aeb1-69295a877c7b	1511
1516	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	\N	2023-12-06 19:12:45.727625	2023-12-06 19:12:45.726606	c931e6f0-70a1-4967-9a4c-612de23e34ef	1516
1518	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	\N	2023-12-06 19:12:45.735671	2023-12-06 19:12:45.735644	ce8118ab-ebcf-4ed7-88cc-88371a0d1fba	1518
1523	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.744135	2023-12-06 19:12:45.744033	ba8786e1-2e09-4781-ad4e-b84445abb2f1	1523
1528	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	\N	2023-12-06 19:12:45.752353	2023-12-06 19:12:45.752325	3c605128-c359-4940-990d-bfe243b5b336	1528
1530	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	\N	2023-12-06 19:12:45.757687	2023-12-06 19:12:45.75766	396030f1-d5d0-4070-8f13-17ad48420440	1530
1538	uri://ed-fi.org/StaffClassificationDescriptor	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.79747	2023-12-06 19:12:45.796484	425b1e18-ce7b-4d06-83ae-3f456c44dea2	1538
1543	uri://ed-fi.org/StaffClassificationDescriptor	Secondary School Counselor	Secondary School Counselor	Secondary School Counselor	\N	\N	\N	\N	2023-12-06 19:12:45.80743	2023-12-06 19:12:45.807416	7144f071-3592-42b0-8cc4-7dc4995d9774	1543
1546	uri://ed-fi.org/StaffClassificationDescriptor	Library/Media Support Staff	Library/Media Support Staff	Library/Media Support Staff	\N	\N	\N	\N	2023-12-06 19:12:45.816606	2023-12-06 19:12:45.816515	59439829-3743-41db-810c-434433e24db4	1546
1548	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrative Support Staff	LEA Administrative Support Staff	LEA Administrative Support Staff	\N	\N	\N	\N	2023-12-06 19:12:45.82109	2023-12-06 19:12:45.821063	589d6fcc-b025-4aa0-af27-d1f28f2971e9	1548
1554	uri://ed-fi.org/StaffClassificationDescriptor	Instr Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	\N	\N	\N	\N	2023-12-06 19:12:45.832253	2023-12-06 19:12:45.832226	0de993c7-e912-4d4b-ace2-4ca2791551ba	1554
1564	uri://ed-fi.org/StaffClassificationDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-12-06 19:12:45.85173	2023-12-06 19:12:45.85149	745d5411-bb49-45c4-9d7f-86400699b06b	1564
1572	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	DEPRECATED: Teacher	DEPRECATED: Teacher	\N	\N	\N	\N	2023-12-06 19:12:45.868117	2023-12-06 19:12:45.868089	4dcf1f68-1ce3-4224-80d1-57418b4768c5	1572
1575	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	\N	2023-12-06 19:12:45.90129	2023-12-06 19:12:45.900306	ffe2f81f-0ca4-46d1-b0d9-4b67cfbc8656	1575
1578	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	\N	2023-12-06 19:12:45.909211	2023-12-06 19:12:45.909195	e7b17358-03a6-4fe9-b334-b192cb7e5ac4	1578
1583	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	\N	2023-12-06 19:12:45.948484	2023-12-06 19:12:45.947647	86d24ad2-787c-4a24-9b4b-763ebf7d6dd6	1583
1586	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	\N	2023-12-06 19:12:45.95859	2023-12-06 19:12:45.958574	8c96093a-8219-4264-9267-1e47c32b9b33	1586
1592	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:45.994495	2023-12-06 19:12:45.993638	ea095a89-1b75-4eaf-b092-489479c48c7a	1592
1597	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	\N	2023-12-06 19:12:46.004282	2023-12-06 19:12:46.004241	7bd16401-e836-459a-891b-89f7034c7732	1597
1599	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	\N	2023-12-06 19:12:46.010803	2023-12-06 19:12:46.010788	6d4068e5-1a50-4554-9037-339ec4bb5041	1599
1606	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	\N	2023-12-06 19:12:46.050302	2023-12-06 19:12:46.048639	43d9b832-6409-4df3-922f-9e03075c28ca	1606
1610	uri://ed-fi.org/RatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:12:46.060735	2023-12-06 19:12:46.059712	167cf9c7-8fce-4b24-bbb5-64640860e4f5	1610
1613	uri://ed-fi.org/RatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:12:46.069343	2023-12-06 19:12:46.069283	0baf6b1f-29a1-4245-bc3a-4841bf887100	1613
1617	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	\N	2023-12-06 19:12:46.106068	2023-12-06 19:12:46.104785	2d6ab391-3d12-4cda-8b34-bd31f3706db2	1617
1620	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	\N	2023-12-06 19:12:46.116042	2023-12-06 19:12:46.116013	36a1dd8c-9a95-4a2b-875f-932a6733553b	1620
1625	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:46.15192	2023-12-06 19:12:46.151072	5d0f82c7-5957-4d8d-ba1b-ce318a474e41	1625
1629	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	\N	2023-12-06 19:12:46.188116	2023-12-06 19:12:46.187243	eccb9b30-8ee6-459b-9cf6-391ba1f037e4	1629
1634	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	\N	2023-12-06 19:12:46.195946	2023-12-06 19:12:46.195893	b18cbfdd-599c-4d7d-9b5a-33aa48da3cc2	1634
1639	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	\N	2023-12-06 19:12:46.206537	2023-12-06 19:12:46.206519	bf81199b-c5b1-4d77-b2a6-dec8c513642c	1639
1643	uri://ed-fi.org/SchoolChoiceBasisDescriptor	NCLB choice	NCLB choice	NCLB choice	\N	\N	\N	\N	2023-12-06 19:12:46.241413	2023-12-06 19:12:46.240486	0aab16a1-d01b-4d7b-bf9c-01f0def51544	1643
1647	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	\N	2023-12-06 19:12:46.277454	2023-12-06 19:12:46.276615	cd42b7b4-7cbd-43ae-9463-26ce72f080fa	1647
1651	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	\N	2023-12-06 19:12:46.286649	2023-12-06 19:12:46.286622	719b9556-ba95-45cc-93c5-016e37df618f	1651
1542	uri://ed-fi.org/StaffClassificationDescriptor	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	\N	\N	\N	\N	2023-12-06 19:12:45.807068	2023-12-06 19:12:45.806995	853481aa-d6c7-4652-9833-da82c3ebf611	1542
1545	uri://ed-fi.org/StaffClassificationDescriptor	Librarian/Media Specialist	Librarian/Media Specialist	Librarian/Media Specialist	\N	\N	\N	\N	2023-12-06 19:12:45.815196	2023-12-06 19:12:45.815174	8f895e2d-da89-4fc4-a8a0-19b5eb9dbac1	1545
1552	uri://ed-fi.org/StaffClassificationDescriptor	All Other Support Staff	All Other Support Staff	All Other Support Staff	\N	\N	\N	\N	2023-12-06 19:12:45.830062	2023-12-06 19:12:45.829767	550d9126-b700-4cf5-9b48-47fe23950208	1552
1558	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	DEPRECATED: Instructional Aide	DEPRECATED: Instructional Aide	\N	\N	\N	\N	2023-12-06 19:12:45.842113	2023-12-06 19:12:45.842077	099128a5-64b0-4e98-80f7-59c9fec665f0	1558
1561	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	DEPRECATED: LEA Specialist	DEPRECATED: LEA Specialist	\N	\N	\N	\N	2023-12-06 19:12:45.847686	2023-12-06 19:12:45.847658	8bb1705f-210b-4dd6-a4bc-5dae716b79d6	1561
1565	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	DEPRECATED: School Leader	DEPRECATED: School Leader	\N	\N	\N	\N	2023-12-06 19:12:45.856909	2023-12-06 19:12:45.856881	e7e608b8-78d5-4fb0-bbbb-6c96d10a7dde	1565
1568	uri://ed-fi.org/StaffClassificationDescriptor	Principal	DEPRECATED: Principal	DEPRECATED: Principal	\N	\N	\N	\N	2023-12-06 19:12:45.860332	2023-12-06 19:12:45.860315	0fe154dc-fa9e-4e25-b5a0-798c5cd2ce46	1568
1571	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	DEPRECATED: Support Services Staff	DEPRECATED: Support Services Staff	\N	\N	\N	\N	2023-12-06 19:12:45.867552	2023-12-06 19:12:45.867516	9cb74a69-dc13-4575-9fb7-bd5400049c65	1571
1576	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	\N	2023-12-06 19:12:45.901176	2023-12-06 19:12:45.900295	6a12875e-2701-4ae9-9348-1a6094234aed	1576
1577	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	\N	2023-12-06 19:12:45.908307	2023-12-06 19:12:45.908267	a20c8aa0-21e0-4191-85a8-aa985d4b74bd	1577
1581	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	\N	2023-12-06 19:12:45.9485	2023-12-06 19:12:45.94764	1b87f6b1-c149-4c55-af2e-001280af3a9d	1581
1585	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	\N	2023-12-06 19:12:45.957903	2023-12-06 19:12:45.957863	e65b6651-44e4-4ab7-b281-ae3f9a55f030	1585
1590	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	\N	2023-12-06 19:12:45.968007	2023-12-06 19:12:45.967969	cd47cea3-9437-4a5f-9a49-f44261d70b15	1590
1591	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-12-06 19:12:45.994465	2023-12-06 19:12:45.993615	9a089af4-8001-483c-bd25-73d9999a0167	1591
1596	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	\N	2023-12-06 19:12:46.003833	2023-12-06 19:12:46.003807	e1507465-bf2f-4339-a9a6-6d35c937b252	1596
1600	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	\N	2023-12-06 19:12:46.012719	2023-12-06 19:12:46.012495	982bdb4c-56d7-470c-888d-2475c22c9705	1600
1605	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	\N	2023-12-06 19:12:46.050164	2023-12-06 19:12:46.048634	dbadb63a-697d-4584-942a-00b9a8a07b46	1605
1608	uri://ed-fi.org/RatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:12:46.060634	2023-12-06 19:12:46.059681	5d6dd188-c7e1-47df-83ac-60efd40eecf3	1608
1612	uri://ed-fi.org/RatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:12:46.069085	2023-12-06 19:12:46.069059	326fdf58-8a27-4889-a53b-1b9d7e33e6fd	1612
1618	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	\N	2023-12-06 19:12:46.110108	2023-12-06 19:12:46.109279	6dd81639-a664-423b-a441-1b8dbbc2657a	1619
1622	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	\N	2023-12-06 19:12:46.118755	2023-12-06 19:12:46.118733	b2d307da-f221-4c72-aa5d-06bb9e56e227	1622
1624	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	\N	2023-12-06 19:12:46.151988	2023-12-06 19:12:46.1511	66d4d672-2630-4f0c-bb7c-0bdc1d0b4839	1624
1628	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-12-06 19:12:46.160585	2023-12-06 19:12:46.160539	223ca2a7-3f03-4c6c-95b1-3e422e6d789a	1628
1631	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	\N	2023-12-06 19:12:46.188127	2023-12-06 19:12:46.187259	a0211ffc-47f0-4aac-b14c-80a0be9fcfd1	1631
1636	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	\N	2023-12-06 19:12:46.200371	2023-12-06 19:12:46.200296	0b22df46-5955-4e68-ab86-ddca0f5b2b02	1636
1638	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	\N	2023-12-06 19:12:46.20368	2023-12-06 19:12:46.203642	166d0c75-80e0-4aa1-ae5b-3a36b53cdae7	1638
1641	uri://ed-fi.org/SchoolChoiceBasisDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:46.24139	2023-12-06 19:12:46.240492	662f2131-dcff-4d2a-b422-1173754f6402	1641
1645	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Victim of a Violent Felony	Victim of a Violent Felony	Victim of a Violent Felony	\N	\N	\N	\N	2023-12-06 19:12:46.251119	2023-12-06 19:12:46.251047	7bc52255-828d-4c55-9d55-1b8fafcfdca6	1645
1646	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	\N	2023-12-06 19:12:46.277465	2023-12-06 19:12:46.276606	a157fec7-0ba6-46f2-9b98-a758470c9b46	1646
1653	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	\N	2023-12-06 19:12:46.288112	2023-12-06 19:12:46.288076	df63cf6a-d659-470a-a0ad-5b67e97e9aaa	1653
1658	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	\N	2023-12-06 19:12:46.324717	2023-12-06 19:12:46.32381	dc48d19c-7b1b-4b16-a86d-9495ccb512ee	1658
1662	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-12-06 19:12:46.333574	2023-12-06 19:12:46.333537	f71ff958-f4ce-43d2-9291-80748c47aa54	1662
1670	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.35151	2023-12-06 19:12:46.351482	0281e33f-c415-4005-9132-678325dcbcc1	1670
1603	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	\N	2023-12-06 19:12:46.018649	2023-12-06 19:12:46.017761	01e7c602-db7d-4bfc-a8a8-d034b7d16a61	1603
1604	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	\N	2023-12-06 19:12:46.049978	2023-12-06 19:12:46.048649	0d929af4-8f42-4277-b51e-3b9a9cf50a7d	1604
1609	uri://ed-fi.org/RatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:12:46.060738	2023-12-06 19:12:46.059695	2d1a561a-202b-41b7-ab08-1b04f6a052b7	1609
1611	uri://ed-fi.org/RatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:12:46.067915	2023-12-06 19:12:46.067771	9eaad4a9-cca1-4e33-96b4-3eea49622eca	1611
1619	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	\N	2023-12-06 19:12:46.110101	2023-12-06 19:12:46.109281	773292ca-b234-4733-8b0d-71cf4c52385e	1618
1621	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-12-06 19:12:46.118169	2023-12-06 19:12:46.118151	6c46a7a8-d5a3-4f91-9626-b2a3dad232c6	1621
1626	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	\N	2023-12-06 19:12:46.151963	2023-12-06 19:12:46.151082	c05b203d-13cd-4eaa-be2a-431cd11e89cd	1626
1632	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	\N	2023-12-06 19:12:46.188127	2023-12-06 19:12:46.187236	514a2ca2-f06b-411d-b3e0-42b3d2827324	1632
1635	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	\N	2023-12-06 19:12:46.199158	2023-12-06 19:12:46.198884	92f1c631-26e9-46a9-bc02-852db5a65c7a	1635
1640	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	\N	2023-12-06 19:12:46.20773	2023-12-06 19:12:46.207705	403df4c2-ee37-40b7-bac6-8794452c0ada	1640
1644	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Local	Local	Local	\N	\N	\N	\N	2023-12-06 19:12:46.241401	2023-12-06 19:12:46.240515	a65efead-a4c7-42c6-8672-fd38904b6733	1644
1649	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	\N	2023-12-06 19:12:46.277699	2023-12-06 19:12:46.276633	9f9104ef-f086-4619-9527-29064eded1aa	1649
1650	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	\N	2023-12-06 19:12:46.286172	2023-12-06 19:12:46.286143	f41ee1af-788e-4d78-92fb-0534f5432988	1650
1659	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-12-06 19:12:46.32519	2023-12-06 19:12:46.323827	7edd675c-9549-44e8-b12c-d27f1072e414	1659
1663	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	\N	2023-12-06 19:12:46.336413	2023-12-06 19:12:46.336348	108ae8f2-0770-4e04-b9f1-1a2c64e54709	1663
1666	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	\N	2023-12-06 19:12:46.341266	2023-12-06 19:12:46.341234	0d8db1a7-07e4-4d55-888c-2facf7ebed1b	1666
1669	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-12-06 19:12:46.346955	2023-12-06 19:12:46.346929	dc4fb710-ba9d-4ca9-92eb-2bce12549ce6	1669
1675	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:46.382835	2023-12-06 19:12:46.381933	2efdd5d2-b231-4a63-ba58-d17a25d16833	1675
1679	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:46.392245	2023-12-06 19:12:46.392209	b75feaa8-5e7e-4736-b2b5-cb8dfcd8353a	1679
1682	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:46.400094	2023-12-06 19:12:46.399865	aca80d77-6822-4adc-9f29-e3278f429bf0	1682
1685	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	\N	2023-12-06 19:12:46.43532	2023-12-06 19:12:46.434248	123bff9d-b7d9-4169-8b23-af0ae89dbf27	1685
1689	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	\N	2023-12-06 19:12:46.44371	2023-12-06 19:12:46.443647	795a4a3f-59be-45f9-83fa-405f6b7cefa8	1689
1697	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	\N	2023-12-06 19:12:46.457611	2023-12-06 19:12:46.457539	5b3b7729-9e40-4ae9-9be1-21f3d769a79d	1697
1701	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	\N	2023-12-06 19:12:46.467146	2023-12-06 19:12:46.467119	04207896-e574-4a22-b17e-5046704eb08a	1701
1704	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	\N	2023-12-06 19:12:46.470717	2023-12-06 19:12:46.470648	61b01005-eabf-480b-b7fd-1c6fd0610652	1704
1706	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	\N	2023-12-06 19:12:46.474357	2023-12-06 19:12:46.474318	1c6daec6-9529-4d2e-8ca0-18aacfeab002	1706
1708	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	\N	2023-12-06 19:12:46.479104	2023-12-06 19:12:46.478695	5a79724d-ab3f-4e4a-abaf-ad211e1b211d	1708
1718	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	\N	2023-12-06 19:12:46.497669	2023-12-06 19:12:46.497646	4e07e5ba-349d-4e6c-856a-e241e857a1b9	1718
1721	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	\N	2023-12-06 19:12:46.504631	2023-12-06 19:12:46.504481	8096a89e-e2f3-4b88-8d6d-dd8eff50ba7d	1721
1724	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	\N	2023-12-06 19:12:46.509088	2023-12-06 19:12:46.508976	253e2707-ee97-4908-9707-973aabd47f9e	1724
1725	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	\N	2023-12-06 19:12:46.512892	2023-12-06 19:12:46.512756	1045ef66-065d-42c0-a8e4-edc72dc661a5	1725
1730	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	\N	2023-12-06 19:12:46.549923	2023-12-06 19:12:46.549435	3106595f-dca6-4a0a-a37c-e2d064f6146a	1730
1614	uri://ed-fi.org/RatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:12:46.069389	2023-12-06 19:12:46.069249	e0902ee8-0cef-45a7-8cb5-a1809db1acfb	1614
1615	uri://ed-fi.org/RatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:12:46.074394	2023-12-06 19:12:46.074357	80b60e45-858c-4feb-95b7-583741353fe5	1615
1616	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	\N	2023-12-06 19:12:46.105941	2023-12-06 19:12:46.104791	c61296fd-e8a9-45a4-b619-34b89870f8b6	1616
1623	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	\N	2023-12-06 19:12:46.120369	2023-12-06 19:12:46.120331	a4e5b5b0-acfd-4de4-9a76-b2e9da01302e	1623
1627	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	\N	2023-12-06 19:12:46.152317	2023-12-06 19:12:46.151104	f07fb1ac-fb69-46dc-ba7a-855382f58f2c	1627
1630	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	\N	2023-12-06 19:12:46.188116	2023-12-06 19:12:46.187226	fd30df7a-aa1c-4f73-b4c3-ee5e5879bbb2	1630
1633	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	\N	2023-12-06 19:12:46.196163	2023-12-06 19:12:46.195646	87f7991a-858a-48af-b767-b849eaa512e1	1633
1637	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	\N	2023-12-06 19:12:46.201517	2023-12-06 19:12:46.201504	7be8aed9-a1b3-4fb2-80f1-abaa9ceabc17	1637
1642	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:46.241538	2023-12-06 19:12:46.240513	93707f04-924d-4de1-930f-56cc30ade408	1642
1648	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.277455	2023-12-06 19:12:46.276599	19063087-7c1d-4e42-9697-b0c8106f2711	1648
1652	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	\N	2023-12-06 19:12:46.286586	2023-12-06 19:12:46.286547	024d622b-d914-4465-b53a-3c9613788a20	1652
1654	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	\N	2023-12-06 19:12:46.29447	2023-12-06 19:12:46.294399	24775c48-5579-4e0b-91bc-714bd40e19ce	1654
1656	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-12-06 19:12:46.32473	2023-12-06 19:12:46.323802	a9e163c5-d0cf-4335-b337-824d25608b98	1656
1661	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-12-06 19:12:46.333546	2023-12-06 19:12:46.333457	1e11b510-e55b-4ad0-9117-ef6abd9c5817	1661
1665	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-12-06 19:12:46.339039	2023-12-06 19:12:46.339023	7a56e869-dbb7-4848-b156-2df2f430b54f	1665
1668	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	\N	2023-12-06 19:12:46.346717	2023-12-06 19:12:46.34669	306b65f5-683c-409f-9791-436b3b478313	1668
1673	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:46.382849	2023-12-06 19:12:46.381962	f942d3bd-16bb-4418-b9f8-50f6738955fe	1673
1677	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:46.391156	2023-12-06 19:12:46.39112	306f603d-fe9d-425e-9e49-fccd65770280	1677
1681	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:46.397263	2023-12-06 19:12:46.397239	67ea3b43-60d1-4475-9c41-ac903e02edb7	1681
1683	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:46.401223	2023-12-06 19:12:46.401196	d37fb951-edc2-440a-a3a3-232ec3d2a2b2	1683
1687	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	\N	2023-12-06 19:12:46.435336	2023-12-06 19:12:46.434245	7af7180b-2f37-4d6b-9b1c-25c970dc5a21	1687
1690	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	\N	2023-12-06 19:12:46.445101	2023-12-06 19:12:46.445087	aba9c673-a998-4cfd-8bc2-bde0d6ac5690	1690
1693	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	\N	2023-12-06 19:12:46.449872	2023-12-06 19:12:46.449822	21342623-9afc-4ca3-9b4e-ae6f58cc159e	1693
1695	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	\N	2023-12-06 19:12:46.454193	2023-12-06 19:12:46.454162	d4782278-efb4-449a-b141-9320dd1e28da	1695
1699	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:46.462432	2023-12-06 19:12:46.462379	cbe9b986-001b-4b48-92d4-335567bd22d8	1699
1702	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	\N	2023-12-06 19:12:46.466879	2023-12-06 19:12:46.465395	85a95b69-a6ad-4f26-90b3-14cdd6a017b2	1702
1707	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	\N	2023-12-06 19:12:46.478008	2023-12-06 19:12:46.477981	72d30212-98d0-41bb-abba-4a2b30f537f9	1707
1710	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	\N	2023-12-06 19:12:46.48163	2023-12-06 19:12:46.481273	b1361d94-10ce-4d5b-8f0c-b64408dd9f24	1710
1713	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	\N	2023-12-06 19:12:46.489132	2023-12-06 19:12:46.489072	cd914477-50cb-4e5f-91f4-caf5e2e69414	1713
1717	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	\N	2023-12-06 19:12:46.497659	2023-12-06 19:12:46.497575	5a0a1a96-cf58-4e76-a609-31efc3ad2165	1717
1727	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.514862	2023-12-06 19:12:46.514781	6a7fe1be-0a05-4f20-81fb-d95b50a1004f	1727
1729	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	\N	2023-12-06 19:12:46.549873	2023-12-06 19:12:46.54856	30a08959-0674-4b86-9239-83c9b300f572	1729
1655	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:46.295841	2023-12-06 19:12:46.295806	698749dd-2cda-4db3-88dd-e0d4e439fe60	1655
1657	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:12:46.324723	2023-12-06 19:12:46.323833	86b7ce09-a90e-469d-bfe6-d9a8c3037d84	1657
1660	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-12-06 19:12:46.332526	2023-12-06 19:12:46.332486	862646c7-44fc-4d6c-a642-655c8d8a0e4f	1660
1664	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-12-06 19:12:46.338953	2023-12-06 19:12:46.338926	3212da87-f67c-491f-bbfe-dd5c7029f0d4	1664
1667	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-12-06 19:12:46.343884	2023-12-06 19:12:46.343625	6a8aabac-1ac9-4d20-b293-e099ea6daad0	1667
1671	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	\N	2023-12-06 19:12:46.352565	2023-12-06 19:12:46.35226	79c6f7d4-06de-4b67-a8d1-50db7b6ecbe4	1671
1674	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:46.383198	2023-12-06 19:12:46.381968	5e91e4f3-6e77-4345-a7e5-658c76ab71ca	1674
1678	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:46.391846	2023-12-06 19:12:46.391804	35aa1e9b-8be7-4efe-b7b3-777f26d433a7	1678
1686	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	\N	2023-12-06 19:12:46.435227	2023-12-06 19:12:46.434271	a31378cf-faee-49ef-9bda-d30555f6d289	1686
1688	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	\N	2023-12-06 19:12:46.443846	2023-12-06 19:12:46.44379	3c6c53de-2d03-4d17-9f65-d5cc6a9121b2	1688
1692	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	\N	2023-12-06 19:12:46.449277	2023-12-06 19:12:46.44925	4444e27c-bde0-448e-a7e2-27cddd168c4b	1692
1694	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	\N	2023-12-06 19:12:46.452761	2023-12-06 19:12:46.452723	dd04b5b2-004c-4c48-83f2-eb1019eed70f	1694
1696	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	\N	2023-12-06 19:12:46.457023	2023-12-06 19:12:46.456746	256308d9-db86-4427-b53b-140a6e98b98f	1696
1705	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	\N	2023-12-06 19:12:46.473832	2023-12-06 19:12:46.473818	5af97937-5434-48c9-a80f-c5928500d57d	1705
1709	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	\N	2023-12-06 19:12:46.481544	2023-12-06 19:12:46.481516	c2fb081a-f846-4166-9a73-e57afe8c7fa3	1709
1715	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	\N	2023-12-06 19:12:46.491256	2023-12-06 19:12:46.49118	dc599b12-9493-48e8-af1f-69aa5ea47c0d	1715
1720	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	\N	2023-12-06 19:12:46.501673	2023-12-06 19:12:46.501646	5d2a431f-0dd0-4f55-b479-42ec3b098390	1720
1723	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	\N	2023-12-06 19:12:46.507313	2023-12-06 19:12:46.507197	4e3d593a-4bc9-4d20-96dc-4c20914ce2b9	1723
1728	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	\N	2023-12-06 19:12:46.549724	2023-12-06 19:12:46.54856	9c0493b8-4f03-4ca0-af2b-bc251f6e0f37	1728
1735	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	\N	2023-12-06 19:12:46.588165	2023-12-06 19:12:46.586275	65c634f4-84f0-4722-bd71-a01967527f1b	1735
1737	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	\N	2023-12-06 19:12:46.596497	2023-12-06 19:12:46.596482	1ed02f4e-84cb-4eef-8643-ff6b99907c93	1737
1742	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	\N	2023-12-06 19:12:46.604538	2023-12-06 19:12:46.604503	89f09af6-dc17-4fc7-b9e7-98737e40a189	1742
1744	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	\N	2023-12-06 19:12:46.638313	2023-12-06 19:12:46.63742	b11acbac-d4c4-479e-b345-bfb048952043	1744
1756	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	\N	2023-12-06 19:12:46.675047	2023-12-06 19:12:46.675013	41bfc505-ac46-47b2-bc95-9bffeece36f0	1756
1759	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:46.704905	2023-12-06 19:12:46.703757	10417b8c-f626-4eb1-8fd8-63dea23b2e38	1759
1762	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	\N	2023-12-06 19:12:46.740471	2023-12-06 19:12:46.739626	53848c2b-baca-4a2c-8a16-0ceb464e24da	1762
1767	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	\N	2023-12-06 19:12:46.750281	2023-12-06 19:12:46.75027	7b3b28b8-2b2a-40c8-a2a7-08740ee70fbf	1767
1771	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.758149	2023-12-06 19:12:46.758123	71009f53-5e03-4d04-9967-d195c0fcf622	1771
1773	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	\N	2023-12-06 19:12:46.792308	2023-12-06 19:12:46.791112	1fd6788b-b222-47dc-98e5-f56810c7da9c	1773
1777	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	\N	2023-12-06 19:12:46.802677	2023-12-06 19:12:46.801325	c2eacbbc-fe8d-4ab8-bd83-008d6dfd3fa7	1777
1780	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-12-06 19:12:46.834427	2023-12-06 19:12:46.833302	4fb41e64-8832-4f9d-a19f-69f2d7b83ee4	1780
1672	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:46.382838	2023-12-06 19:12:46.381944	c9aaabba-af3c-497b-a530-d1db63dceca8	1672
1676	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:46.390743	2023-12-06 19:12:46.390696	4b02668e-1b93-4843-b644-98f2ffd5202b	1676
1680	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:46.397085	2023-12-06 19:12:46.397023	176e7f07-2c42-4a14-8a80-dce30a3a59c8	1680
1684	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:46.43511	2023-12-06 19:12:46.434268	92c85772-6371-4f17-8449-7d3ac5a5e875	1684
1691	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	\N	2023-12-06 19:12:46.445316	2023-12-06 19:12:46.445289	05d4929d-f4e8-4a69-b158-7e12c708aed2	1691
1698	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	\N	2023-12-06 19:12:46.459741	2023-12-06 19:12:46.45971	206d0ca5-5902-49bf-b407-54703d704018	1698
1700	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	\N	2023-12-06 19:12:46.464147	2023-12-06 19:12:46.463962	cbc05681-0b4c-463f-893b-3e7941ef9f9a	1700
1703	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	\N	2023-12-06 19:12:46.469452	2023-12-06 19:12:46.469415	ab65546a-9a5c-4345-b051-d05cbd6939c7	1703
1711	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	\N	2023-12-06 19:12:46.484428	2023-12-06 19:12:46.484401	f480a0e0-1fde-40c2-b99b-e0974c98568c	1711
1712	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	\N	2023-12-06 19:12:46.487824	2023-12-06 19:12:46.48779	5388c299-f319-44ad-8474-b8efface83ba	1712
1714	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	\N	2023-12-06 19:12:46.490612	2023-12-06 19:12:46.490585	4e8123c0-0f1c-4f5f-8a27-4665b1cc843a	1714
1716	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	\N	2023-12-06 19:12:46.494883	2023-12-06 19:12:46.494857	c21dbbc4-c9bb-445e-bfd8-a6402048877c	1716
1719	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	\N	2023-12-06 19:12:46.498571	2023-12-06 19:12:46.498557	89dbc107-ad3f-449d-833c-acde374e2ccb	1719
1722	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	\N	2023-12-06 19:12:46.505989	2023-12-06 19:12:46.505953	acb5d7c1-d07e-4c46-b21b-1edcdfa11759	1722
1726	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	\N	2023-12-06 19:12:46.511358	2023-12-06 19:12:46.511344	2788faf0-71a5-4b4d-892c-b8995bcd5491	1726
1731	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	\N	2023-12-06 19:12:46.550819	2023-12-06 19:12:46.549445	ffcd33a0-277a-4472-9549-d7c46e8939d6	1731
1734	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	\N	2023-12-06 19:12:46.58723	2023-12-06 19:12:46.586291	8efc0afb-3ad2-4932-bac1-285cace3888c	1734
1736	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	\N	2023-12-06 19:12:46.595632	2023-12-06 19:12:46.595615	72611c1a-7e48-4a69-ac23-727e1abd9a54	1736
1741	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	\N	2023-12-06 19:12:46.603368	2023-12-06 19:12:46.603333	8a1b0b77-fadf-45ba-baec-744b94671538	1741
1747	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	\N	2023-12-06 19:12:46.638888	2023-12-06 19:12:46.63744	16875956-9bf2-446b-b872-e0239b080bb1	1747
1748	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	\N	2023-12-06 19:12:46.64618	2023-12-06 19:12:46.646146	d31576d2-b029-4984-bd4a-3bec5a40b761	1748
1751	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.66181	2023-12-06 19:12:46.661786	bbb68f26-aca6-48b9-a321-c4dc5aa2fd38	1751
1754	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	\N	2023-12-06 19:12:46.669187	2023-12-06 19:12:46.669131	105db555-56f1-4c82-9271-ceb60586c6f9	1754
1758	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:12:46.704674	2023-12-06 19:12:46.703747	e9dae4c6-02d0-4b7e-8ba1-bf7b22b5895f	1758
1764	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	\N	2023-12-06 19:12:46.740491	2023-12-06 19:12:46.739594	61d008da-cace-4d77-9d24-ec76f391132d	1764
1768	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	\N	2023-12-06 19:12:46.751008	2023-12-06 19:12:46.750992	085b0c63-df87-43ec-867d-020b77d8d1be	1768
1775	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	\N	2023-12-06 19:12:46.796484	2023-12-06 19:12:46.795445	74b6170f-97fa-403b-8cd4-d1e6fb2d4aa0	1775
1778	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	\N	2023-12-06 19:12:46.834158	2023-12-06 19:12:46.833274	f6f4ba29-aeb1-425e-8f2a-1f9369935087	1778
1783	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-12-06 19:12:46.84282	2023-12-06 19:12:46.842733	7fa92daa-69a5-4e01-94b1-77136130ed2a	1783
1732	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.587203	2023-12-06 19:12:46.586303	fe5df1f7-16d0-4dcb-bef2-5f1f3df08f2f	1732
1739	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	\N	2023-12-06 19:12:46.597856	2023-12-06 19:12:46.597843	c7132618-7a24-429a-9cf5-4d878e0f1b9d	1739
1740	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	\N	2023-12-06 19:12:46.603398	2023-12-06 19:12:46.603386	cde42257-4766-4042-aa47-bf16f5e0231a	1740
1745	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	\N	2023-12-06 19:12:46.638334	2023-12-06 19:12:46.637427	92406397-3ae8-4e82-80bf-2cd39a2e285a	1745
1750	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-12-06 19:12:46.661751	2023-12-06 19:12:46.661737	b3a1d854-2ef2-4ffa-aa08-d7a6ea5bf97b	1750
1752	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	\N	2023-12-06 19:12:46.665798	2023-12-06 19:12:46.665734	45fdb1d8-4666-499e-91ff-4ede3d0d43e1	1752
1757	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:46.704652	2023-12-06 19:12:46.703753	57badbf0-b97c-4a3a-bf20-de2e0ad77f11	1757
1761	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	\N	2023-12-06 19:12:46.740431	2023-12-06 19:12:46.739584	10229ebb-1a31-4db6-8793-91fb2c688be6	1761
1765	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	\N	2023-12-06 19:12:46.748598	2023-12-06 19:12:46.748582	01587539-27cf-40bd-b813-037e7460abea	1765
1770	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	\N	2023-12-06 19:12:46.757857	2023-12-06 19:12:46.757841	33d6f35a-7dd0-4146-a766-8c13885ad5c9	1770
1772	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	\N	2023-12-06 19:12:46.792193	2023-12-06 19:12:46.79111	0668ff67-cfba-4fdd-a171-ccd4d727f901	1772
1776	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	\N	2023-12-06 19:12:46.801401	2023-12-06 19:12:46.801355	e15f3f26-c0c9-40f5-9cee-b6a69dec3511	1776
1779	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-12-06 19:12:46.834446	2023-12-06 19:12:46.833281	1d846238-0ec4-4c2f-bc17-91c71261b41c	1779
1784	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	\N	2023-12-06 19:12:46.84332	2023-12-06 19:12:46.84328	24189a2f-460b-4687-a260-4260d311c1ec	1784
1793	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	\N	2023-12-06 19:12:46.862434	2023-12-06 19:12:46.862103	cf75a411-c03c-4431-8d3a-42e2429095e9	1793
1796	uri://ed-fi.org/SourceSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:46.896532	2023-12-06 19:12:46.895629	e5dec6f6-0a4e-4a8d-be92-57c3aa1e5952	1796
1803	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	\N	2023-12-06 19:12:46.933275	2023-12-06 19:12:46.931819	2ccae15a-4a29-437f-9677-00a84e0e8c9c	1803
1808	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.971905	2023-12-06 19:12:46.969148	402004aa-096f-4ba0-9366-f1e46e2d6810	1808
1811	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:47.011158	2023-12-06 19:12:47.010245	3bc79179-86c9-47c6-9d73-f4bf547840b1	1811
1819	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Graduated with Certificate	Graduated with Certificate of Completion	Student exited the Special Education program and related services because of graduating with a certificate of completion.	\N	\N	\N	\N	2023-12-06 19:12:47.060427	2023-12-06 19:12:47.05922	0ef1f4ae-218a-42e6-967b-f8c00b485869	1819
1823	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Dropped out	Dropped out of school	Student exited the Special Education program and related services because of dropping out of school.	\N	\N	\N	\N	2023-12-06 19:12:47.071372	2023-12-06 19:12:47.07132	d43e1623-9140-43cc-98a7-3213ac8874c2	1823
1825	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	\N	2023-12-06 19:12:47.10015	2023-12-06 19:12:47.099184	7856a893-3c03-4057-84ee-9c580dcdc216	1825
1832	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Administration	Administration	Indicates the education organization (typically a school) that administered the assessment.	\N	\N	\N	\N	2023-12-06 19:12:47.145923	2023-12-06 19:12:47.144459	63ea0d2e-813e-4d21-b8e6-9cc0e4eb8a20	1832
1833	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	\N	2023-12-06 19:12:47.152496	2023-12-06 19:12:47.151773	c05ea3fb-e086-4189-84f0-b614ac6e33f6	1833
1834	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	\N	2023-12-06 19:12:47.15629	2023-12-06 19:12:47.156209	d4b4cb23-158c-4b32-83d8-d7deecf935f7	1834
1841	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	\N	2023-12-06 19:12:47.16776	2023-12-06 19:12:47.167547	a737dd84-7040-4456-9841-9f6f10f47cb0	1841
1844	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	\N	2023-12-06 19:12:47.175543	2023-12-06 19:12:47.175322	2cb9e8fe-b14a-4ecc-a472-2f1a863ab376	1844
1854	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	\N	2023-12-06 19:12:47.196781	2023-12-06 19:12:47.196768	0850fbe3-a76c-4802-bc76-2670f1d8ec4d	1854
1858	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	\N	2023-12-06 19:12:47.204855	2023-12-06 19:12:47.204689	d6e883ba-09cc-413d-a70e-dfe9ad1bd089	1858
1863	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	\N	2023-12-06 19:12:47.212972	2023-12-06 19:12:47.212932	a30fe29a-4a11-4176-affc-fb4a9a1444dc	1863
1865	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	\N	2023-12-06 19:12:47.220404	2023-12-06 19:12:47.219229	6420b545-fa57-4f87-a5c9-f40b435dccf9	1865
1870	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	\N	2023-12-06 19:12:47.228007	2023-12-06 19:12:47.227978	91d8989d-e6e9-4eda-9822-acdbe41e59b3	1870
1872	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	\N	2023-12-06 19:12:47.237502	2023-12-06 19:12:47.23745	f479ba75-8682-4a9b-9cd9-161ad86fe55f	1872
1785	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	\N	2023-12-06 19:12:46.844762	2023-12-06 19:12:46.844735	aa698015-89b2-4849-ae22-52cf75dc8b11	1785
1786	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	\N	2023-12-06 19:12:46.849405	2023-12-06 19:12:46.849392	959a392c-8e54-449a-bacb-4d09472036b4	1786
1789	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-12-06 19:12:46.853838	2023-12-06 19:12:46.853803	5138794b-6a53-4605-bb90-18f63be92ff9	1789
1791	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.857017	2023-12-06 19:12:46.856966	ef82347e-382b-4384-b0a0-db979b2240ea	1791
1798	uri://ed-fi.org/SourceSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:46.896917	2023-12-06 19:12:46.895636	32b67b1d-7c23-49b1-9dee-87785f1e73de	1798
1802	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	\N	2023-12-06 19:12:46.932873	2023-12-06 19:12:46.93181	cf3532ef-361c-48d3-b1e3-ae45dcce6fbc	1802
1805	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	\N	2023-12-06 19:12:46.970013	2023-12-06 19:12:46.969132	04e4bcaa-ca34-42cd-821b-3edc46d9da10	1805
1812	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:47.012135	2023-12-06 19:12:47.010265	b7a2e006-359d-4c7a-a81d-860777e91316	1812
1815	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	National	National	National	\N	\N	\N	\N	2023-12-06 19:12:47.023817	2023-12-06 19:12:47.023797	5709ec1b-41ae-42d1-b302-c7798bd53bac	1815
1820	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Graduated with Diploma	Graduated with Diploma	Student exited the Special Education program and related services because of graduating with a diploma.	\N	\N	\N	\N	2023-12-06 19:12:47.061219	2023-12-06 19:12:47.059247	821c57a6-482c-4544-85bf-3b174caca46c	1820
1822	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Other	Other	Student exited the Special Education program and related services for any reason other than listed in the descriptor.	\N	\N	\N	\N	2023-12-06 19:12:47.069993	2023-12-06 19:12:47.069954	5b2647f9-bc77-4fc6-85d8-e17e3c19a705	1822
1824	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.100016	2023-12-06 19:12:47.099167	d193ae8c-bdc8-4c0d-a5b6-8cc927c83101	1824
1828	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	\N	2023-12-06 19:12:47.137625	2023-12-06 19:12:47.136068	0d0ddb1f-c0c9-460d-94d7-177dd4f31ea1	1828
1829	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	\N	2023-12-06 19:12:47.145425	2023-12-06 19:12:47.145395	16c48ee1-c2a8-459f-b2e8-f5dc1fd2ce53	1829
1836	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	\N	2023-12-06 19:12:47.158467	2023-12-06 19:12:47.158434	c222e516-b3a6-497c-bd13-70b603334697	1836
1839	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	\N	2023-12-06 19:12:47.166958	2023-12-06 19:12:47.16693	e64ccfd0-9fc1-428c-87dc-62dd65314196	1839
1846	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	\N	2023-12-06 19:12:47.180537	2023-12-06 19:12:47.180508	bb688d76-8002-4de3-8dd7-8b795b8ab351	1846
1849	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	\N	2023-12-06 19:12:47.18422	2023-12-06 19:12:47.184192	53d975d5-6a5b-4844-8b1b-8997a3062d44	1849
1851	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	\N	2023-12-06 19:12:47.190652	2023-12-06 19:12:47.190623	58cc855a-5d5e-4cfb-b977-284a7c3c3e7c	1851
1855	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	\N	2023-12-06 19:12:47.197206	2023-12-06 19:12:47.197193	e297f66b-7fea-4d79-971f-3675207b80bb	1855
1856	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	\N	2023-12-06 19:12:47.201991	2023-12-06 19:12:47.201929	2e3d5dd7-bfbf-4dab-9094-f4297c51f3e5	1856
1860	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	\N	2023-12-06 19:12:47.210756	2023-12-06 19:12:47.210688	82f32bf0-cd60-4aff-8668-104e78839bcd	1860
1866	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	\N	2023-12-06 19:12:47.220542	2023-12-06 19:12:47.220073	9eb05104-c981-454c-b1c5-bd8d8329294d	1866
1871	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	\N	2023-12-06 19:12:47.230499	2023-12-06 19:12:47.230466	a621ebf9-32b6-494e-9331-73df7a03e2c8	1871
1873	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	\N	2023-12-06 19:12:47.237699	2023-12-06 19:12:47.237669	3a281cef-e4ee-43d9-8819-9a489bfbaac9	1873
1877	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	\N	2023-12-06 19:12:47.245738	2023-12-06 19:12:47.245713	79eca478-d3c0-4c9d-a96b-7a1f9a10d747	1877
1882	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	\N	2023-12-06 19:12:47.255628	2023-12-06 19:12:47.255435	a6f376cd-bb65-4bf2-81ed-f6cc8763f2e2	1882
1888	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	\N	2023-12-06 19:12:47.268487	2023-12-06 19:12:47.268475	b44950d8-7cc5-4564-93d1-d0b96d12d61e	1888
1891	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	\N	2023-12-06 19:12:47.277219	2023-12-06 19:12:47.276058	f3e7efa6-7531-47ba-b7cf-820740a18249	1891
1895	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	\N	2023-12-06 19:12:47.291464	2023-12-06 19:12:47.291408	d245094f-a2fa-4dcd-ac67-23fc3cc43663	1895
1900	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	\N	2023-12-06 19:12:47.300639	2023-12-06 19:12:47.300613	e8e2c2ee-b9ca-40d6-850f-ceaa0e402f3e	1900
1902	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	\N	2023-12-06 19:12:47.308105	2023-12-06 19:12:47.308083	ae3487e4-84f0-433f-80e3-1366e95e2d32	1902
1906	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	\N	2023-12-06 19:12:47.316636	2023-12-06 19:12:47.316608	b97bd7d4-8442-4e20-a7c0-31cbaa1f738f	1906
2467	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.159887	2023-12-06 19:12:49.159851	b5a487d9-08bf-4d7c-a2f2-520a7fadcdf1	2467
2471	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.170487	2023-12-06 19:12:49.170364	b20765f4-2ec1-491b-959f-9a64b61412f7	2471
2477	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.183045	2023-12-06 19:12:49.182928	7ea856c0-1be0-4808-95ed-fe412cbd8fa8	2477
2478	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.186435	2023-12-06 19:12:49.186408	bb2d93a2-bfc4-49ac-bfbd-76e22e5bf931	2478
1788	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	\N	2023-12-06 19:12:46.851462	2023-12-06 19:12:46.851421	c5b3dd04-e6d7-4a18-be91-fd3d59729325	1788
1792	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-12-06 19:12:46.859219	2023-12-06 19:12:46.859183	bc135602-76f5-4644-aab1-e129fbda66f2	1792
1795	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	\N	2023-12-06 19:12:46.865724	2023-12-06 19:12:46.86565	72fdcda8-c935-4bce-b4b6-9f56e6c1266a	1795
1799	uri://ed-fi.org/SourceSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:46.896927	2023-12-06 19:12:46.895654	c3f80a04-8e07-4786-9faa-1b4b37ffd7b4	1799
1800	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	\N	2023-12-06 19:12:46.932719	2023-12-06 19:12:46.931797	adc3806c-9ddf-462c-939a-33b237f747b8	1800
1806	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	\N	2023-12-06 19:12:46.970062	2023-12-06 19:12:46.969125	435ec0fc-61cf-4c20-ac72-019a944f47ba	1806
1810	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.011169	2023-12-06 19:12:47.010258	9df9eb16-b42f-4fac-b472-65a82fc0b129	1810
1813	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	\N	2023-12-06 19:12:47.02156	2023-12-06 19:12:47.021491	77371361-c3b5-4203-940b-879afa244c54	1813
1816	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:47.024946	2023-12-06 19:12:47.024719	04ac5a45-8d93-4e5c-a17f-c3fe9b5e99c1	1816
1818	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Transferred out	Transferred to another educational organization	Student exited the Special Education program and related services because of transfering out another educational organization	\N	\N	\N	\N	2023-12-06 19:12:47.060729	2023-12-06 19:12:47.059235	d339b8fe-aad8-42c2-b53d-b1815e5ec226	1818
1826	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	\N	2023-12-06 19:12:47.100415	2023-12-06 19:12:47.099199	241b75f4-b369-428f-a22f-01099946cceb	1826
1830	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Attribution	Attribution	Indicates the education organization (state, district, and/or school) to which the student's results are attributed to; often used for accountability reporting.	\N	\N	\N	\N	2023-12-06 19:12:47.145731	2023-12-06 19:12:47.144452	cc7cb4c5-27b9-4428-b582-5c3706887f1b	1830
1837	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	\N	2023-12-06 19:12:47.160766	2023-12-06 19:12:47.16074	29daa4b5-f829-4d02-bc58-6a3669ccec77	1837
1838	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	\N	2023-12-06 19:12:47.164534	2023-12-06 19:12:47.164477	af67fe1f-9700-465e-a262-92f9faeb1253	1838
1842	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	\N	2023-12-06 19:12:47.172303	2023-12-06 19:12:47.172115	b216682f-ee7c-4215-8308-ead548e3dd0c	1842
1845	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	\N	2023-12-06 19:12:47.175653	2023-12-06 19:12:47.175626	91450917-e8f5-4641-a4a6-3b6616b6053a	1845
1847	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	\N	2023-12-06 19:12:47.181773	2023-12-06 19:12:47.181279	4e99c56f-2c9c-495f-99ca-53d37c2ea3da	1847
1853	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	\N	2023-12-06 19:12:47.196387	2023-12-06 19:12:47.196287	0afec4eb-4692-4b9b-85c5-d2768c3ede66	1853
1857	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	\N	2023-12-06 19:12:47.204725	2023-12-06 19:12:47.204414	973ff711-d4e2-4594-83d2-8d7118404b33	1857
1862	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	\N	2023-12-06 19:12:47.212425	2023-12-06 19:12:47.212409	47c04e92-0a67-457c-9701-52730e5a75f9	1862
1867	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	\N	2023-12-06 19:12:47.223469	2023-12-06 19:12:47.223456	f3aab893-b78c-4794-92ee-7507346c9a9c	1867
1869	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	\N	2023-12-06 19:12:47.227683	2023-12-06 19:12:47.227653	d85c98af-ff82-4650-b356-64049b53619e	1869
1874	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	\N	2023-12-06 19:12:47.238073	2023-12-06 19:12:47.237997	42449e16-bfdf-4c69-abbe-277a091f9553	1874
1879	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	\N	2023-12-06 19:12:47.247987	2023-12-06 19:12:47.247954	abc8a82c-d588-44f2-a549-add465391d7c	1879
1880	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	\N	2023-12-06 19:12:47.254512	2023-12-06 19:12:47.254471	a74e1c56-7604-4df4-9dfd-585b6799548f	1880
1886	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	\N	2023-12-06 19:12:47.263973	2023-12-06 19:12:47.263923	370082fc-ed5d-470f-a8fb-6efedc99ff0b	1886
1890	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	\N	2023-12-06 19:12:47.27427	2023-12-06 19:12:47.274242	08d766ba-68bf-4e93-bfbf-b8c0ff7e51b0	1890
1897	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	\N	2023-12-06 19:12:47.292796	2023-12-06 19:12:47.292758	16a98c2e-a182-4911-a524-53c09aeefebc	1897
1903	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	\N	2023-12-06 19:12:47.307925	2023-12-06 19:12:47.307907	66a4aba5-0866-4ccf-8412-d31f572b1470	1903
1907	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	\N	2023-12-06 19:12:47.31721	2023-12-06 19:12:47.317143	6a071910-3aa2-4233-ae56-f0be58aa88dc	1907
1912	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	\N	2023-12-06 19:12:47.33334	2023-12-06 19:12:47.333176	873ccc52-d61e-4443-948b-fdade9b9f608	1912
1914	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	\N	2023-12-06 19:12:47.338602	2023-12-06 19:12:47.338586	54bf4146-8dc8-4219-ac71-f580b7b6b8b7	1914
1916	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	\N	2023-12-06 19:12:47.34477	2023-12-06 19:12:47.344744	64e3b250-8bae-41d8-8905-c6f15a031ef9	1916
2482	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	\N	2023-12-06 19:12:49.194329	2023-12-06 19:12:49.194301	d3f84079-2c51-492d-9d17-2b95255e11a3	2482
2485	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	\N	2023-12-06 19:12:49.202865	2023-12-06 19:12:49.202831	25face38-7ee2-47bc-a828-b2b82a5368ac	2485
2488	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.208041	2023-12-06 19:12:49.208005	62ff0853-9b39-449c-8a28-13e77e10b0d1	2488
2489	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	\N	2023-12-06 19:12:49.211869	2023-12-06 19:12:49.211413	1698b22e-4569-45e6-9bb4-da8f283e6c10	2489
1843	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	\N	2023-12-06 19:12:47.173942	2023-12-06 19:12:47.173929	f257459b-a1f7-4396-b983-59ed5c1f81e9	1843
1848	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	\N	2023-12-06 19:12:47.183422	2023-12-06 19:12:47.183005	06315be3-fc9b-4cc6-9419-c3e8960c0d04	1848
1850	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	\N	2023-12-06 19:12:47.187196	2023-12-06 19:12:47.187121	8d95887d-fc77-4a3f-ab52-3f6de2a90ad3	1850
1852	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	\N	2023-12-06 19:12:47.195705	2023-12-06 19:12:47.195683	3e905afb-d9ef-4682-992c-a3aa9316a464	1852
1859	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	\N	2023-12-06 19:12:47.205056	2023-12-06 19:12:47.205032	dfc08039-5ad3-435b-bf22-4cc022da56c5	1859
1861	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	\N	2023-12-06 19:12:47.211335	2023-12-06 19:12:47.211283	5f56f31a-1f46-4c11-b275-890d55d80d5c	1861
1864	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	\N	2023-12-06 19:12:47.21765	2023-12-06 19:12:47.217621	d5232e1f-e230-4b5a-a5be-f7ee150c6a92	1864
1868	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	\N	2023-12-06 19:12:47.227472	2023-12-06 19:12:47.22746	a88851db-b7d9-4e34-9573-8b229d39bab1	1868
1875	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	\N	2023-12-06 19:12:47.240402	2023-12-06 19:12:47.240358	a6c84016-0054-4429-963d-b677c67f4e3f	1875
1878	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	\N	2023-12-06 19:12:47.24715	2023-12-06 19:12:47.247137	b8f8d119-b14b-48c5-a330-71cf049ce670	1878
1883	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	\N	2023-12-06 19:12:47.255598	2023-12-06 19:12:47.255464	c8db03d4-0ed3-4e47-a301-e97a0fefb931	1883
1884	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	\N	2023-12-06 19:12:47.26316	2023-12-06 19:12:47.263102	17c25bbd-9e6a-4788-80f2-d13352089b39	1884
1887	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	\N	2023-12-06 19:12:47.267139	2023-12-06 19:12:47.2671	2e7d9c75-e00b-4d0f-ad0d-609786b6e093	1887
1893	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	\N	2023-12-06 19:12:47.279029	2023-12-06 19:12:47.278766	e50367de-f1bb-44b3-b584-63929751cf4e	1893
1894	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	\N	2023-12-06 19:12:47.285507	2023-12-06 19:12:47.285494	7178aa2a-8c19-4251-96ac-9c295248a4de	1894
1898	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	\N	2023-12-06 19:12:47.297032	2023-12-06 19:12:47.297004	e9ddb8de-5a50-47d9-975f-17c320da79ad	1898
1904	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	\N	2023-12-06 19:12:47.309178	2023-12-06 19:12:47.309149	2393ffbc-848b-4817-8f0b-91f872b81cca	1904
1908	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	\N	2023-12-06 19:12:47.320735	2023-12-06 19:12:47.320722	b1d53a99-c213-47bb-bdc3-043b946d98e0	1908
1910	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	\N	2023-12-06 19:12:47.328948	2023-12-06 19:12:47.328912	f93c4522-f635-4edf-afc1-1e91ae65c1d3	1910
1911	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	\N	2023-12-06 19:12:47.331667	2023-12-06 19:12:47.33161	89c13d3c-275e-49d1-97c2-f09228bd22a4	1911
1915	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	\N	2023-12-06 19:12:47.340323	2023-12-06 19:12:47.340299	e82605b8-06e3-4103-8853-936f31854bc1	1915
2486	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	\N	2023-12-06 19:12:49.203623	2023-12-06 19:12:49.203593	56a3d457-fa82-4c45-ab93-e36a30dff984	2486
2490	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa and Chippewa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.213119	2023-12-06 19:12:49.212856	b79fff9e-5e4d-4f3f-a64d-e1e0e0df0b3d	2490
2502	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.238209	2023-12-06 19:12:49.238103	ab4eae63-7dfb-42ed-903a-68fdd122d847	2502
2503	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.243324	2023-12-06 19:12:49.243289	6d3eccc5-0b7a-4cc5-8a51-822307ef4194	2503
2505	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	\N	2023-12-06 19:12:49.246335	2023-12-06 19:12:49.246228	abe49747-b56c-4be2-b10d-d2ef71dad198	2505
2508	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.251916	2023-12-06 19:12:49.251839	416ce061-bfb9-4b38-a691-71e26a5d603f	2508
2515	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	\N	2023-12-06 19:12:49.26872	2023-12-06 19:12:49.2687	ec6b343a-c459-4556-9b45-a38d4951ecda	2515
2517	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	\N	2023-12-06 19:12:49.273594	2023-12-06 19:12:49.273581	58932f49-19a1-42d3-bff9-89a20a8c0f2a	2517
2518	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.275119	2023-12-06 19:12:49.275092	c980f7de-30da-4414-9696-934a0bb618dd	2518
2519	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.279182	2023-12-06 19:12:49.278866	0b04d908-76fe-4893-97fa-fbba10cc6f7a	2519
2521	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.283997	2023-12-06 19:12:49.283931	e4a3f93d-33f2-4bd4-a651-f391ff7c7865	2521
2523	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:49.286202	2023-12-06 19:12:49.286175	2462756c-6b16-4931-99f0-b12e75646c82	2523
2525	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.292167	2023-12-06 19:12:49.29214	205768c1-6940-4a09-ad75-74a84e138eef	2525
2527	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	\N	2023-12-06 19:12:49.293639	2023-12-06 19:12:49.293605	8d8c001f-1ab0-436d-972a-779716233ca6	2527
2529	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.298343	2023-12-06 19:12:49.298308	019828c3-6ab4-41fb-bf70-09d6c9ce4ada	2529
2530	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	\N	2023-12-06 19:12:49.301675	2023-12-06 19:12:49.301648	bf706ee7-c065-465d-8e74-ade20c013a95	2530
2535	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	\N	2023-12-06 19:12:49.311092	2023-12-06 19:12:49.311063	df213d64-76d0-42c1-b7e0-263e306a3153	2535
2536	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	\N	2023-12-06 19:12:49.311851	2023-12-06 19:12:49.311798	62d42cfe-e108-49fa-9f2b-9f4ee7273363	2536
2537	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	\N	2023-12-06 19:12:49.316834	2023-12-06 19:12:49.316771	0af29a51-7563-4a09-9d07-527710d69bfd	2537
1876	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	\N	2023-12-06 19:12:47.245535	2023-12-06 19:12:47.245327	53896bb7-8995-4f37-8b21-4771cc8ce4f6	1876
1881	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	\N	2023-12-06 19:12:47.25504	2023-12-06 19:12:47.254656	04501838-d863-4ad0-93e2-f1c3a3399f87	1881
1885	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	\N	2023-12-06 19:12:47.263323	2023-12-06 19:12:47.26331	10f1caf8-ec48-4b9e-bf3f-8e20d59ece75	1885
1889	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	\N	2023-12-06 19:12:47.2702	2023-12-06 19:12:47.270151	ca044a77-302b-4b66-90ce-6ed150321785	1889
1892	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	\N	2023-12-06 19:12:47.277348	2023-12-06 19:12:47.276326	4ca3af1c-b9e5-4c6c-b55e-16207520d79b	1892
1896	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	\N	2023-12-06 19:12:47.292015	2023-12-06 19:12:47.291994	46f1f2d8-9050-4e6e-b5f6-49ed19b214bc	1896
1899	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	\N	2023-12-06 19:12:47.300339	2023-12-06 19:12:47.300292	41a47e33-7c6c-4c59-9af9-e7f70dd7aac3	1899
1905	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	\N	2023-12-06 19:12:47.309644	2023-12-06 19:12:47.309618	9ec29740-181e-4392-bf1c-65e3316d8677	1905
1909	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	\N	2023-12-06 19:12:47.328287	2023-12-06 19:12:47.328215	6283a98d-bcd5-40b7-95ce-15bd1f08e77a	1909
1913	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	\N	2023-12-06 19:12:47.335843	2023-12-06 19:12:47.335323	54f2758c-ea2e-441d-90c5-f33946d92fdd	1913
2492	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	\N	2023-12-06 19:12:49.217092	2023-12-06 19:12:49.217078	834567ad-af99-4627-b912-d1fbee551c7f	2492
2495	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:49.223225	2023-12-06 19:12:49.223106	6d74d318-8f5b-4a3f-9ee9-3ca260764572	2495
2498	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.230743	2023-12-06 19:12:49.230714	2f145afa-c10a-4726-bb9a-774a7c28becd	2498
2500	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.235787	2023-12-06 19:12:49.234767	43e2676c-6412-4040-8632-fe6f4753a3ad	2500
2504	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.243426	2023-12-06 19:12:49.24303	8c678d16-bfeb-4d50-874f-260d3bff1be3	2504
2507	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	\N	2023-12-06 19:12:49.251447	2023-12-06 19:12:49.251431	453d7ea4-c822-4549-bd5c-e7918e5079b8	2507
2509	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	\N	2023-12-06 19:12:49.255633	2023-12-06 19:12:49.255586	b0294849-fa82-4ce7-9ea8-2c5ed9a016e0	2509
2512	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	\N	2023-12-06 19:12:49.260919	2023-12-06 19:12:49.260714	1336a676-9b12-48a9-907e-16297b57d7ed	2512
2514	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:49.266085	2023-12-06 19:12:49.266047	6ed76b18-b4c1-4fc6-95d6-b9d886d4fbc2	2514
2520	uri://ed-fi.org/TribalAffiliationDescriptor	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-12-06 19:12:49.279839	2023-12-06 19:12:49.279771	5b47c2d6-f75d-4aa5-bec4-030ad71bc504	2520
2522	uri://ed-fi.org/TribalAffiliationDescriptor	Iqugmiut	Iqugmiut	Iqugmiut Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:49.285522	2023-12-06 19:12:49.285509	a349aa6a-c0ac-40bf-81c5-79bb6db1b5c6	2522
2524	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.287288	2023-12-06 19:12:49.287227	7bbad343-15d1-4b1b-a881-711982301489	2524
2526	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	\N	2023-12-06 19:12:49.292472	2023-12-06 19:12:49.292411	2bb2d116-6821-42a5-a5e2-f04191c74c60	2526
2528	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	\N	2023-12-06 19:12:49.294936	2023-12-06 19:12:49.294901	b32cf841-b96d-41f6-9fe0-292c0533ceb9	2528
2531	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.301861	2023-12-06 19:12:49.301826	6d4393c8-f50a-4b61-b4fc-ee9478aa26d8	2531
2532	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	\N	2023-12-06 19:12:49.305032	2023-12-06 19:12:49.30502	aed30fe6-bd60-40a3-9457-2a89550883ce	2532
2533	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	\N	2023-12-06 19:12:49.308457	2023-12-06 19:12:49.308423	50abc45d-4a00-4fab-a0cd-eb3437795245	2533
2534	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.309103	2023-12-06 19:12:49.309068	2a41015d-ef82-4e24-868b-a6c8aae78654	2534
2538	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	\N	2023-12-06 19:12:49.31849	2023-12-06 19:12:49.31846	3078ffdc-7db8-4f6d-85a7-d72357a42714	2538
2540	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	\N	2023-12-06 19:12:49.320537	2023-12-06 19:12:49.32052	d838b4e3-3cf6-4d44-a891-9b1def61edb4	2540
2541	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.325968	2023-12-06 19:12:49.324901	6056cbf3-2447-4048-97fd-e087328a281d	2541
2542	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	\N	2023-12-06 19:12:49.326288	2023-12-06 19:12:49.326253	f2bf12b4-26f2-429f-bcdb-aea9eb07beee	2542
2543	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.327597	2023-12-06 19:12:49.327541	637a4cef-e700-4dda-b56a-2d5302badbc4	2543
2544	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.330126	2023-12-06 19:12:49.330099	29e529eb-58ba-4e4f-ada3-6d76e1257d37	2544
2545	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Community	\N	\N	\N	\N	2023-12-06 19:12:49.333211	2023-12-06 19:12:49.333185	fdd859bf-75be-4f4f-818b-8f0fc16709bb	2545
2546	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.336091	2023-12-06 19:12:49.336063	1da22d8c-174a-44ec-b046-878c5bdddaeb	2546
2547	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	\N	2023-12-06 19:12:49.338752	2023-12-06 19:12:49.338725	8176e9d0-8006-49f7-a447-17b009bc0ed8	2547
1901	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	\N	2023-12-06 19:12:47.300717	2023-12-06 19:12:47.30069	9125dc99-bad8-4fbe-af62-3f5bec106e94	1901
1917	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	\N	2023-12-06 19:12:47.349636	2023-12-06 19:12:47.3496	eee92e83-0447-45a7-914c-a1ba03a741f6	1917
1924	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	\N	2023-12-06 19:12:47.361715	2023-12-06 19:12:47.361686	b4944384-95b5-406c-8222-132e1abb071b	1924
1930	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	\N	2023-12-06 19:12:47.373742	2023-12-06 19:12:47.373705	1a50d1f9-026b-4dfe-afce-46232a6ffb70	1930
1932	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	\N	2023-12-06 19:12:47.378131	2023-12-06 19:12:47.378067	e1fb9cbf-9aaf-4a22-96a6-984be0edabb2	1932
1935	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	\N	2023-12-06 19:12:47.386559	2023-12-06 19:12:47.386438	4dfddede-708a-4c28-bb2a-960d4a01209f	1935
1940	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	\N	2023-12-06 19:12:47.394138	2023-12-06 19:12:47.393638	e72c47c9-3772-404b-b9fe-c79ed3be7fc4	1940
1944	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	\N	2023-12-06 19:12:47.404006	2023-12-06 19:12:47.403993	7268e951-8bbb-4e16-a8b4-2582c7fc3283	1944
1948	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	\N	2023-12-06 19:12:47.412415	2023-12-06 19:12:47.412369	0c023673-0894-40d5-8ac4-e6ef30f17aa4	1948
1952	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.420464	2023-12-06 19:12:47.420287	7291de3e-7135-4e6b-a1ee-a217dd32f769	1952
1956	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	\N	2023-12-06 19:12:47.428555	2023-12-06 19:12:47.428516	6c0d225f-6787-49e0-ad53-0a9c6b14dd78	1956
1961	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	\N	2023-12-06 19:12:47.439075	2023-12-06 19:12:47.439044	68a114a6-df18-43ac-a2d8-2c86549c7d58	1962
1965	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	\N	2023-12-06 19:12:47.447026	2023-12-06 19:12:47.447012	7cb4f8e0-604c-406f-822b-d03bafe6bf80	1965
1969	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.454753	2023-12-06 19:12:47.454739	7e5fa2ac-fb8b-4b72-a9a8-7315d6b2ffe5	1969
1971	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	\N	2023-12-06 19:12:47.461524	2023-12-06 19:12:47.461482	2dd4156a-66b5-4d02-a35a-e00c9b1be7ed	1971
1979	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	\N	2023-12-06 19:12:47.476881	2023-12-06 19:12:47.476866	bd4b4492-eef3-4ef5-a8cb-a73d1fcea2e2	1979
1987	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	\N	2023-12-06 19:12:47.496129	2023-12-06 19:12:47.496114	9bfb72fe-ea2c-44c2-bb53-ce437431acbc	1987
1994	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	\N	2023-12-06 19:12:47.509563	2023-12-06 19:12:47.50955	f8771c9e-9c33-437b-b545-1b6a7a46e87a	1994
1996	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	\N	2023-12-06 19:12:47.513613	2023-12-06 19:12:47.513573	8e5e421c-0679-4ac7-99bf-fd47d030ed77	1996
2001	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	\N	2023-12-06 19:12:47.523671	2023-12-06 19:12:47.523629	391860ab-9510-46c7-8cae-ff9f8dbc3dd0	2001
2004	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	\N	2023-12-06 19:12:47.530403	2023-12-06 19:12:47.530359	5b428e1e-003a-493f-8f8a-75b5a3128cd2	2004
2008	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	\N	2023-12-06 19:12:47.536978	2023-12-06 19:12:47.536952	9d9d60fe-ebfc-405d-ae41-c5df90cbc2ca	2008
2011	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	\N	2023-12-06 19:12:47.5452	2023-12-06 19:12:47.544702	c229b507-7a11-43f7-9ac9-4743c69ba88d	2011
2014	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	\N	2023-12-06 19:12:47.55141	2023-12-06 19:12:47.551295	caeb85f7-1705-4783-9774-7aba8afa687e	2014
2018	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	\N	2023-12-06 19:12:47.559531	2023-12-06 19:12:47.559515	f4b3234f-ef84-42a8-bd13-b21e13093da8	2018
2023	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	\N	2023-12-06 19:12:47.566807	2023-12-06 19:12:47.566628	2f0de87a-56cf-4394-ab45-8a0bb305661b	2023
2026	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	\N	2023-12-06 19:12:47.573402	2023-12-06 19:12:47.573341	7e8af626-285e-4acd-be00-057450697092	2026
2029	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	\N	2023-12-06 19:12:47.579996	2023-12-06 19:12:47.579673	8f04bc44-da6e-455f-a028-e7d33a306d2e	2029
2035	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	\N	2023-12-06 19:12:47.589709	2023-12-06 19:12:47.589614	00e9d479-c72e-4919-898a-f7182dd4cc78	2035
2040	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	\N	2023-12-06 19:12:47.630129	2023-12-06 19:12:47.630007	93b18f3a-838f-4b00-a98f-66323ed0364a	2040
2043	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	\N	2023-12-06 19:12:47.636068	2023-12-06 19:12:47.636043	9c2647fe-fb28-46c1-93aa-be6e2fffd974	2043
2045	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	\N	2023-12-06 19:12:47.642105	2023-12-06 19:12:47.641819	782a77e2-e409-42a6-863c-b71bd386abcc	2045
2052	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	\N	2023-12-06 19:12:47.657161	2023-12-06 19:12:47.657125	f98edf57-04ad-4a71-9da9-dae5b6723f21	2052
2056	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	\N	2023-12-06 19:12:47.674029	2023-12-06 19:12:47.67392	53a96b9f-8cf8-4976-b390-a2a92a0a160a	2056
2061	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	\N	2023-12-06 19:12:47.68435	2023-12-06 19:12:47.684309	d46524cd-337d-4338-881e-f2a5207067ae	2061
2067	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	\N	2023-12-06 19:12:47.696394	2023-12-06 19:12:47.69636	98bd8c07-dfca-43a8-b337-fc0cb191fafa	2067
2069	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	\N	2023-12-06 19:12:47.701226	2023-12-06 19:12:47.701164	26e236fb-2f56-40fc-a321-d4347f26d79e	2069
2076	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	\N	2023-12-06 19:12:47.720669	2023-12-06 19:12:47.720634	25176fd9-43ec-44d3-8e78-927ae1c9cf70	2076
2083	uri://ed-fi.org/SubmissionStatusDescriptor	Exempt	Exempt	The student is exempted from the assignment and the assignment's score will not affect the student's grade calculations.	\N	\N	\N	\N	2023-12-06 19:12:47.76399	2023-12-06 19:12:47.762643	53edaa79-853c-49c9-a176-739bda2d9a46	2083
2088	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	\N	2023-12-06 19:12:47.804044	2023-12-06 19:12:47.803222	b4c358f5-dfa7-486a-8c70-354869db836f	2088
2093	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	\N	2023-12-06 19:12:47.812869	2023-12-06 19:12:47.812459	c1f44620-fddc-4a4d-8f03-e43b93c716e3	2093
2097	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	\N	2023-12-06 19:12:47.846417	2023-12-06 19:12:47.844917	c921bc35-c1b9-484b-8d47-0f2a9688d1e1	2097
1918	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	\N	2023-12-06 19:12:47.350166	2023-12-06 19:12:47.350152	9011c5bd-72d1-492c-aa53-f265826052b6	1918
1921	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	\N	2023-12-06 19:12:47.356493	2023-12-06 19:12:47.356475	87938e0f-4280-41b1-a7bd-6869a2261c2e	1921
1927	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	\N	2023-12-06 19:12:47.366803	2023-12-06 19:12:47.366778	cef5c4f0-0440-4c2b-8555-ee0b8ae70534	1927
1931	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	\N	2023-12-06 19:12:47.375409	2023-12-06 19:12:47.375382	93182a89-efd2-44d6-90a9-bc91c6d26b0f	1931
1933	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	\N	2023-12-06 19:12:47.381397	2023-12-06 19:12:47.381365	0f81de75-33c0-4739-a699-007b75ef4dd9	1933
1934	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	\N	2023-12-06 19:12:47.385642	2023-12-06 19:12:47.385628	a9609411-c459-4661-8ff4-83d9a6377b04	1934
1938	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.39202	2023-12-06 19:12:47.391946	1a348f67-62c1-4752-9e88-fdc05f16bd13	1938
1942	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	\N	2023-12-06 19:12:47.400633	2023-12-06 19:12:47.400611	b8202db1-fe42-4e84-9d7a-8a82b4fe41c1	1942
1947	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	\N	2023-12-06 19:12:47.411659	2023-12-06 19:12:47.411631	c75597f1-3485-46b0-9896-9f6598ea8854	1947
1949	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	\N	2023-12-06 19:12:47.414399	2023-12-06 19:12:47.414363	6ecf3dfa-4a90-4aac-8567-e51ccda3cf24	1949
1955	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	\N	2023-12-06 19:12:47.427328	2023-12-06 19:12:47.427301	9b412f84-c512-4650-bbd9-b61ebf942ab5	1955
1958	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	\N	2023-12-06 19:12:47.4317	2023-12-06 19:12:47.431686	b1279807-3267-48e8-9df7-171b0f63e997	1958
1960	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	\N	2023-12-06 19:12:47.437801	2023-12-06 19:12:47.437757	61902eba-41bb-409e-a4b8-e1e9d757b32b	1960
1966	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	\N	2023-12-06 19:12:47.448698	2023-12-06 19:12:47.448668	83ae009a-60fd-4f26-8fa7-e343af9aa73b	1966
1972	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	\N	2023-12-06 19:12:47.462511	2023-12-06 19:12:47.462334	1f872eaa-e29a-4b73-afb3-aef4def8653d	1972
1975	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.468833	2023-12-06 19:12:47.468805	b9f2328a-f077-4918-8b7e-59070c020826	1975
1978	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	\N	2023-12-06 19:12:47.47641	2023-12-06 19:12:47.476358	be3c0916-5c02-409d-9854-1c84ef37d12f	1978
1981	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	\N	2023-12-06 19:12:47.481354	2023-12-06 19:12:47.481308	23dcc347-5158-4b56-b8bd-7622539cdf50	1981
1982	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	\N	2023-12-06 19:12:47.484888	2023-12-06 19:12:47.484873	4c6be1cd-1f0c-46a6-abf1-051c6e6a0b7d	1982
1985	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	\N	2023-12-06 19:12:47.492149	2023-12-06 19:12:47.492134	c6e609e3-90d0-4b2e-af29-c4eec215b235	1985
1988	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	\N	2023-12-06 19:12:47.49703	2023-12-06 19:12:47.497004	a0a817b0-1f47-4cbc-944e-84a0a44a5550	1988
1992	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	\N	2023-12-06 19:12:47.505148	2023-12-06 19:12:47.505119	a409e737-a74d-473a-b52c-686621d2a199	1992
1995	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	\N	2023-12-06 19:12:47.512216	2023-12-06 19:12:47.51219	df5b9b8e-4c88-4259-93c8-cf5e865dd197	1995
2000	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	\N	2023-12-06 19:12:47.519556	2023-12-06 19:12:47.519537	38aec9b5-3f33-4fe9-833d-83d30ba7f0c1	2000
2003	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	\N	2023-12-06 19:12:47.5298	2023-12-06 19:12:47.529787	a9aecc96-99a0-4486-bee2-0655ebf8fd01	2003
2007	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	\N	2023-12-06 19:12:47.536054	2023-12-06 19:12:47.535896	720f086c-46c3-4025-bc5e-f34435371c59	2007
2015	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	\N	2023-12-06 19:12:47.551368	2023-12-06 19:12:47.55133	72950137-b6b1-4602-adcb-2f0e524a886f	2015
2020	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	\N	2023-12-06 19:12:47.560246	2023-12-06 19:12:47.560232	53748a0d-f47a-42c9-a9bc-be433f8d906b	2020
2027	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	\N	2023-12-06 19:12:47.574181	2023-12-06 19:12:47.574154	29daccc4-decf-4bce-a492-d7cd9d9e5c6c	2027
2030	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	\N	2023-12-06 19:12:47.580885	2023-12-06 19:12:47.580822	301beaa5-8bd9-4a63-a1cc-60cb63cc1037	2030
2032	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	\N	2023-12-06 19:12:47.586567	2023-12-06 19:12:47.586538	e649b1ca-c90d-4d03-9d90-42c24e380e40	2032
2036	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	\N	2023-12-06 19:12:47.597162	2023-12-06 19:12:47.597127	c1c337b0-1a14-4744-aa99-3fe8c99cfdff	2036
2037	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	\N	2023-12-06 19:12:47.620682	2023-12-06 19:12:47.620637	b2585953-f856-46bf-864a-2b3d7c13b600	2037
2046	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	\N	2023-12-06 19:12:47.64437	2023-12-06 19:12:47.644356	93c84e1b-b6ad-461e-81b3-d6359025728d	2046
2050	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	\N	2023-12-06 19:12:47.656353	2023-12-06 19:12:47.656326	274fe869-5bf4-4ad3-bbe4-32251a2ed88a	2050
2054	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	\N	2023-12-06 19:12:47.666111	2023-12-06 19:12:47.666078	89d8d81e-fba4-4124-a4fe-2940a252d22e	2054
2059	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	\N	2023-12-06 19:12:47.680478	2023-12-06 19:12:47.680464	8126f0dd-ae85-453c-b2c3-294dc6af4349	2059
2060	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	\N	2023-12-06 19:12:47.683062	2023-12-06 19:12:47.683031	b2d83bfc-d8ce-4d36-a112-cf4ba7ae3895	2060
2062	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	\N	2023-12-06 19:12:47.685251	2023-12-06 19:12:47.685213	fc2e0c1d-47fb-4417-974d-8cb23ee70f5d	2062
2063	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	\N	2023-12-06 19:12:47.689181	2023-12-06 19:12:47.689168	adbad77a-b93c-4e78-91ca-7ba14fd5b1c7	2063
2066	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	\N	2023-12-06 19:12:47.695504	2023-12-06 19:12:47.695477	12eeecdd-ea22-4ca7-8686-b1ebd3dace91	2066
2070	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	\N	2023-12-06 19:12:47.703008	2023-12-06 19:12:47.702951	5186cdda-e4a5-46f5-bc2e-e30e855b3063	2070
2073	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	\N	2023-12-06 19:12:47.71086	2023-12-06 19:12:47.710801	5145e6b8-02e6-4395-b1a3-aa0562d094d1	2073
2075	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	\N	2023-12-06 19:12:47.71473	2023-12-06 19:12:47.714709	6595f4a3-41e6-40ec-aad1-c4eb431777e0	2075
1919	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	\N	2023-12-06 19:12:47.351026	2023-12-06 19:12:47.35084	a48c6101-01f8-4d1b-b67a-5a03823f54e8	1919
1920	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	\N	2023-12-06 19:12:47.355511	2023-12-06 19:12:47.355454	b997cc69-1ba6-4f50-9b84-61769a4f7ef4	1920
1926	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	\N	2023-12-06 19:12:47.364944	2023-12-06 19:12:47.364919	1d65b9fd-9522-4e22-b418-ed967f849704	1926
1928	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	\N	2023-12-06 19:12:47.372877	2023-12-06 19:12:47.372862	8a73d4ce-cf15-4655-b1f7-eed05b20e75a	1928
1936	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	\N	2023-12-06 19:12:47.386515	2023-12-06 19:12:47.386481	af03629d-8127-49f8-83f1-fed3435ff85f	1936
1939	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	\N	2023-12-06 19:12:47.394014	2023-12-06 19:12:47.393988	9e851b90-b450-4d66-8004-4d5771e37c48	1939
1946	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	\N	2023-12-06 19:12:47.407378	2023-12-06 19:12:47.407363	ecae6059-9f17-4aa4-88a0-e1ca19852cf0	1946
1950	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	\N	2023-12-06 19:12:47.415056	2023-12-06 19:12:47.415041	fee7f68b-46b3-4f4c-913a-ca620c2a1132	1950
1951	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.417852	2023-12-06 19:12:47.417826	23b46ed5-3f0f-4d77-b8e7-175c8c20f547	1951
1953	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	\N	2023-12-06 19:12:47.421752	2023-12-06 19:12:47.421717	70f5bd60-dca9-4009-9ac5-98fd105bfee5	1953
1959	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	\N	2023-12-06 19:12:47.433813	2023-12-06 19:12:47.433762	23f5c920-c41d-49b2-a0fd-3a428ff0b7ac	1959
1962	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	\N	2023-12-06 19:12:47.438984	2023-12-06 19:12:47.43895	aba7fb3e-9590-458a-aec1-d43dde8c1a30	1961
1963	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	\N	2023-12-06 19:12:47.443243	2023-12-06 19:12:47.443228	863d7fcb-3d40-4b3d-8430-a1f450cf14b0	1963
1964	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	\N	2023-12-06 19:12:47.446668	2023-12-06 19:12:47.445851	12d95d17-fd91-419e-bd8c-6330cf97cc08	1964
1970	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	\N	2023-12-06 19:12:47.455623	2023-12-06 19:12:47.455515	a0b9b7a9-5020-4eae-8b03-06c750393ab1	1970
1974	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	\N	2023-12-06 19:12:47.467417	2023-12-06 19:12:47.467356	da8b1129-e2e8-4073-8cc9-d89004d6ac5a	1974
1977	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	\N	2023-12-06 19:12:47.471925	2023-12-06 19:12:47.471914	fb7ca66d-f5da-4add-88f4-d3535f847cbc	1977
1980	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	\N	2023-12-06 19:12:47.478471	2023-12-06 19:12:47.478442	26268204-d30f-4264-a68c-88b785b472fa	1980
1984	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	\N	2023-12-06 19:12:47.490055	2023-12-06 19:12:47.490041	a7839be7-7a86-4574-a176-54189a5a3c2c	1984
1989	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	\N	2023-12-06 19:12:47.500004	2023-12-06 19:12:47.499947	a44741e6-5189-40d1-9834-60c10fef3c3f	1989
1991	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	\N	2023-12-06 19:12:47.504965	2023-12-06 19:12:47.504847	d9c7b31d-ff3c-4e11-aa7e-a79d1ec824df	1991
1997	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	\N	2023-12-06 19:12:47.516631	2023-12-06 19:12:47.516584	70660cd5-02c4-4186-ad2b-8ab9ac8e37de	1997
1999	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	\N	2023-12-06 19:12:47.519919	2023-12-06 19:12:47.519886	596b6c07-7357-4ef4-978a-26e91a0fcca8	1999
2002	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	\N	2023-12-06 19:12:47.527001	2023-12-06 19:12:47.52693	f2d40d15-f5c6-4189-b138-5a3553509ccd	2002
2006	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	\N	2023-12-06 19:12:47.534848	2023-12-06 19:12:47.53474	6a90aa06-13cd-4bb4-a38b-c208c848b882	2006
2012	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	\N	2023-12-06 19:12:47.545463	2023-12-06 19:12:47.545445	57765f70-dc46-4d95-a4cd-d2bb98b06096	2012
2016	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	\N	2023-12-06 19:12:47.552029	2023-12-06 19:12:47.551959	d80243fc-313e-40cc-bdcf-17588481711c	2016
2019	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	\N	2023-12-06 19:12:47.56	2023-12-06 19:12:47.55995	a613201e-73d5-45ea-b0fa-54465b8b8614	2019
2022	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	\N	2023-12-06 19:12:47.566742	2023-12-06 19:12:47.566715	b55f0e4e-eba7-4e44-85a0-21aa5ee98c90	2022
2025	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	\N	2023-12-06 19:12:47.572504	2023-12-06 19:12:47.572471	396b7ed2-658d-4121-b50a-d2637f2bfc9e	2025
2031	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	\N	2023-12-06 19:12:47.581828	2023-12-06 19:12:47.581776	da0aa3f3-fd53-4875-9c66-0f2aa69af0a7	2031
2034	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	\N	2023-12-06 19:12:47.588677	2023-12-06 19:12:47.588659	4b0b7ae2-22be-4764-995f-1bc75b0ce17e	2034
2042	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	\N	2023-12-06 19:12:47.634054	2023-12-06 19:12:47.634041	8804d3af-0c71-4e7a-8430-6957a4a33eb7	2042
2044	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	\N	2023-12-06 19:12:47.639601	2023-12-06 19:12:47.639557	e640114d-9ae2-44d1-a2b1-22a2c2cedc04	2044
2048	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	\N	2023-12-06 19:12:47.65074	2023-12-06 19:12:47.650711	6aae1d9a-1d82-46fb-b991-07f13862d36c	2048
2051	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	\N	2023-12-06 19:12:47.656944	2023-12-06 19:12:47.656861	a8ad666b-4ab2-4182-8188-d96ff384b7df	2051
2053	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	\N	2023-12-06 19:12:47.664725	2023-12-06 19:12:47.664709	b6f19b91-3131-415a-aadf-2b88a766b353	2053
2058	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.67753	2023-12-06 19:12:47.676706	0d1ea000-cf96-4e3d-b7a0-f2a75073833a	2058
2065	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	\N	2023-12-06 19:12:47.69318	2023-12-06 19:12:47.693154	b317cab8-bd5e-4cdd-8508-aafbd9bc6762	2065
2068	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	\N	2023-12-06 19:12:47.700213	2023-12-06 19:12:47.700186	7dbd7c36-def1-4376-a0ae-cb76473cea7b	2068
2074	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	\N	2023-12-06 19:12:47.711582	2023-12-06 19:12:47.711569	6185cc32-b691-40f4-980d-47e15c3d8e79	2074
2077	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	\N	2023-12-06 19:12:47.720817	2023-12-06 19:12:47.720799	831970a9-f4ef-4e16-9efb-56d3c9d5bc3b	2077
2079	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	\N	2023-12-06 19:12:47.72339	2023-12-06 19:12:47.723358	93accd98-50ad-4014-8d35-ade1054a34bc	2079
1922	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	\N	2023-12-06 19:12:47.358301	2023-12-06 19:12:47.358203	9a9ab48f-8550-4cb3-bd43-c21717788529	1922
1925	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	\N	2023-12-06 19:12:47.364798	2023-12-06 19:12:47.364772	8cd254e8-f567-4fff-bb19-d3385313badf	1925
1929	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	\N	2023-12-06 19:12:47.373206	2023-12-06 19:12:47.373184	56f3cf40-1ddc-4edc-85e4-05df9b2bdf6d	1929
1941	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	\N	2023-12-06 19:12:47.397317	2023-12-06 19:12:47.397282	d4faa1e0-7fd0-40cf-bfb2-013582bc08d5	1941
1943	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	\N	2023-12-06 19:12:47.401814	2023-12-06 19:12:47.401755	47ec6a73-c487-45c7-aaef-eb4cc46b9615	1943
1945	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	\N	2023-12-06 19:12:47.407005	2023-12-06 19:12:47.406935	9db91103-0629-4abb-aeaf-500da174813a	1945
1954	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	\N	2023-12-06 19:12:47.4242	2023-12-06 19:12:47.424057	fea6ca61-ca79-4b5c-b950-2afce4757b7c	1954
1957	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	\N	2023-12-06 19:12:47.431309	2023-12-06 19:12:47.43127	087123f3-456d-47a8-81aa-4f8b67c4654e	1957
1967	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	\N	2023-12-06 19:12:47.449002	2023-12-06 19:12:47.448945	eeec1ca7-1c0a-48e5-b924-de12a18934be	1967
1968	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	\N	2023-12-06 19:12:47.454197	2023-12-06 19:12:47.454168	d9f4b41c-246b-4746-8f75-0e1621d54ae7	1968
1973	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	\N	2023-12-06 19:12:47.464408	2023-12-06 19:12:47.464023	826c05b2-0c2b-45e1-8de9-cd5696e037a5	1973
1976	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	\N	2023-12-06 19:12:47.469965	2023-12-06 19:12:47.469929	ea497943-93a1-4f27-aed2-3eae1342a467	1976
1983	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	\N	2023-12-06 19:12:47.488191	2023-12-06 19:12:47.488177	33fb4ede-1e34-4f11-b469-f507b7d307ef	1983
1986	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	\N	2023-12-06 19:12:47.49427	2023-12-06 19:12:47.494256	c4334e5b-7fb3-4033-bbe3-3701845d4e51	1986
1990	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	\N	2023-12-06 19:12:47.500393	2023-12-06 19:12:47.500366	2f663e06-89ec-4f15-bb52-68df01acf773	1990
1993	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	\N	2023-12-06 19:12:47.506817	2023-12-06 19:12:47.506788	9fc26bcf-2186-47b9-88fb-225a19b7798b	1993
1998	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	\N	2023-12-06 19:12:47.518125	2023-12-06 19:12:47.518076	67a8d7d5-c224-497e-a380-44d1a9d21b2e	1998
2005	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	\N	2023-12-06 19:12:47.532467	2023-12-06 19:12:47.532417	baf5515f-bed9-45e3-94ac-0c1fe5f32b63	2005
2009	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	\N	2023-12-06 19:12:47.540893	2023-12-06 19:12:47.540879	d5e8205e-f404-48a3-a727-d7e1cad8f00d	2009
2010	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	\N	2023-12-06 19:12:47.543731	2023-12-06 19:12:47.543718	7fef7d09-44cc-44a9-8d83-be539461a5c2	2010
2013	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	\N	2023-12-06 19:12:47.550097	2023-12-06 19:12:47.549282	f6f6ca3c-7568-4861-bf87-e1bf5f411de2	2013
2017	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	\N	2023-12-06 19:12:47.559263	2023-12-06 19:12:47.559234	6cb0034d-57a4-4283-ae8d-3981fd8a7a9f	2017
2021	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	\N	2023-12-06 19:12:47.566099	2023-12-06 19:12:47.566073	8c79c969-d3f7-4775-ab83-4e6130437791	2021
2024	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	\N	2023-12-06 19:12:47.571998	2023-12-06 19:12:47.571971	541ecaf6-9a48-412f-a0db-cfee8f839a12	2024
2028	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	\N	2023-12-06 19:12:47.578455	2023-12-06 19:12:47.578417	2325f7ec-d7ea-423e-ac6a-2bc1ced9d709	2028
2033	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	\N	2023-12-06 19:12:47.588215	2023-12-06 19:12:47.588202	be91f145-3093-4ab3-bf26-800809d95514	2033
2038	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	\N	2023-12-06 19:12:47.616637	2023-12-06 19:12:47.616605	9d28c6bf-06cd-477f-86bb-a9d206166f5f	2038
2039	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	\N	2023-12-06 19:12:47.62682	2023-12-06 19:12:47.626806	4e6b25de-af72-4431-ad9b-c4aeb7452f55	2039
2041	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	\N	2023-12-06 19:12:47.633708	2023-12-06 19:12:47.633679	d24994c1-a677-4631-bf19-41d080cf8f4e	2041
2047	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	\N	2023-12-06 19:12:47.647596	2023-12-06 19:12:47.647436	62744a2e-2e83-4e19-963a-f2daaf610235	2047
2049	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	\N	2023-12-06 19:12:47.65554	2023-12-06 19:12:47.655512	5ec9961f-3460-4921-842c-f8023319fe83	2049
2055	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	\N	2023-12-06 19:12:47.667379	2023-12-06 19:12:47.667354	e111680b-6a02-4605-84e9-96d0dab3eb0c	2055
2057	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-12-06 19:12:47.677062	2023-12-06 19:12:47.67705	c39a974a-3f26-44c5-8112-82439128efc0	2057
2064	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	\N	2023-12-06 19:12:47.693141	2023-12-06 19:12:47.693115	e256085f-1a34-45e6-98cd-f5b761510550	2064
2071	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	\N	2023-12-06 19:12:47.704308	2023-12-06 19:12:47.704294	6cf380e1-a6f9-445a-97d9-012a836667e0	2071
2072	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	\N	2023-12-06 19:12:47.709868	2023-12-06 19:12:47.709852	6d4e1be2-4bb5-4838-9224-bd42aa61654b	2072
2078	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	\N	2023-12-06 19:12:47.721994	2023-12-06 19:12:47.721959	e8c441b0-50d0-444f-8c92-5f10e9205f25	2078
2080	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Yes	Yes	The student experiences very few or no interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:47.759434	2023-12-06 19:12:47.758478	e34214d0-eea0-472d-a6c4-272bd777abca	2080
2084	uri://ed-fi.org/SubmissionStatusDescriptor	Graded	Graded	Assignment has been graded by the teacher.	\N	\N	\N	\N	2023-12-06 19:12:47.768491	2023-12-06 19:12:47.768478	94751df6-f280-4b78-acdb-6ac2974e6e67	2084
2091	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	\N	2023-12-06 19:12:47.804172	2023-12-06 19:12:47.803238	37a2caa0-145d-487f-b152-3e9deb1e6eef	2091
2094	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	\N	2023-12-06 19:12:47.814014	2023-12-06 19:12:47.813987	15156a33-fd07-4f16-a540-609b8b9c463f	2094
2096	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-12-06 19:12:47.846245	2023-12-06 19:12:47.844929	31b0a67c-a163-4f9d-bc19-f9bd6057f67e	2096
2081	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Sometimes	Sometimes	The student regularly experiences interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:47.759595	2023-12-06 19:12:47.758422	82f017ea-4955-4a62-904f-383a80f642cd	2081
2085	uri://ed-fi.org/SubmissionStatusDescriptor	Not Submitted	Not Submitted	The assignment has not been submitted by the student/received by the teacher.	\N	\N	\N	\N	2023-12-06 19:12:47.769298	2023-12-06 19:12:47.76927	b730bd6c-48fd-4c47-b20d-b9e753073da8	2085
2089	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	\N	2023-12-06 19:12:47.804231	2023-12-06 19:12:47.803231	bc3e1d8b-900f-4148-a3e3-d7e754acd054	2090
2098	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.846339	2023-12-06 19:12:47.844897	1da9da7a-0d8f-40be-9451-56530375cd6f	2098
2102	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Organization Department	Organization Department	An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.	\N	\N	\N	\N	2023-12-06 19:12:47.856008	2023-12-06 19:12:47.855903	b5f237b1-746f-4b28-a0d5-ab50173f1220	2102
2105	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	\N	2023-12-06 19:12:47.88892	2023-12-06 19:12:47.887829	f90168c8-f527-43df-8c36-3e6842188cbc	2105
2107	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	\N	2023-12-06 19:12:47.897673	2023-12-06 19:12:47.897643	6b7e9090-a121-40ea-8bbc-1b320abbfdcd	2107
2111	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:47.904299	2023-12-06 19:12:47.904255	9cf6458e-4b12-4bb1-82f0-f3dd45b55495	2111
2114	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.907876	2023-12-06 19:12:47.907814	9a2395b6-79fa-4aca-a4d3-19f9a492a346	2114
2117	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional facilities	Correctional facilities	Correctional facilities	\N	\N	\N	\N	2023-12-06 19:12:47.939306	2023-12-06 19:12:47.938166	339a67e6-a876-4bb8-8a44-1018d0bb5e4a	2117
2121	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	\N	\N	\N	\N	2023-12-06 19:12:47.94862	2023-12-06 19:12:47.948591	1c54a96c-68f3-4239-97b4-ecdbbb4a6c73	2121
2124	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in private schools	Parentally-placed in private schools	Parentally-placed in private schools	\N	\N	\N	\N	2023-12-06 19:12:47.952865	2023-12-06 19:12:47.952764	e82bca50-6b10-4b5c-903e-bad4a4f12605	2124
2128	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (less than 10 hrs)	Regular early childhood program (less than 10 hrs)	Services in regular early childhood program (less than 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:47.962758	2023-12-06 19:12:47.962712	9683b4cc-a638-4750-8f84-170059c91832	2128
2131	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-12-06 19:12:47.997331	2023-12-06 19:12:47.996435	982244b2-7b9f-450d-a52b-af33b81bbf1e	2131
2138	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	\N	2023-12-06 19:12:48.034636	2023-12-06 19:12:48.033563	0ab3ef9f-7b3c-450f-8da5-552495ec6652	2138
2141	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	\N	2023-12-06 19:12:48.044063	2023-12-06 19:12:48.04401	0af784c5-2198-45d7-a914-7c316714bac2	2141
2144	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.049501	2023-12-06 19:12:48.049475	d58294fc-317a-40dc-b419-b105639d46f2	2144
2147	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-12-06 19:12:48.086614	2023-12-06 19:12:48.085768	6b3367a5-0957-41f7-9b67-2253a9302d22	2147
2153	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.125699	2023-12-06 19:12:48.124225	1f4d5f47-5b93-47e8-8172-454af7ace95e	2153
2156	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:12:48.135809	2023-12-06 19:12:48.135214	7c3b10c1-c7e6-4854-8f1f-5c45bacf3802	2156
2159	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	\N	2023-12-06 19:12:48.144025	2023-12-06 19:12:48.143944	6772a19d-03ed-4005-99d9-b4bd6271bc90	2159
2161	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	\N	2023-12-06 19:12:48.14646	2023-12-06 19:12:48.146432	523e7bdc-b4b2-4a80-9ee5-b45e9798a92d	2161
2163	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	\N	2023-12-06 19:12:48.151856	2023-12-06 19:12:48.151816	137d5226-51a4-442d-ba85-616bb1014590	2163
2167	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.15787	2023-12-06 19:12:48.157834	b5d8160a-ac51-4d2e-8e34-6c91d1bc1815	2167
2172	uri://ed-fi.org/EligibilityDelayReasonDescriptor	No Detailed Records by LEA	No Detailed Records by LEA	LEA agreement with parent to timeframe. No detailed records maintained by LEA.	\N	\N	\N	\N	2023-12-06 19:12:48.195404	2023-12-06 19:12:48.194329	6f7e0584-2667-4f8d-8721-1b11f0035df8	2172
2176	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Parent/Guardian Delay - No Detailed Records	Parent Delay - No Detailed Records	Delay due to parent or guardian. No detailed records maintained by LEA regarding a parent or guardian of a child who repeatedly fails or refuses to produce the child for the evaluation or eligibility determination.	\N	\N	\N	\N	2023-12-06 19:12:48.205514	2023-12-06 19:12:48.205477	80954335-1d86-428c-92e3-0081415ea117	2176
2178	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Scheduling	LEA Delay Due to Scheduling	LEA delay due to scheduling.	\N	\N	\N	\N	2023-12-06 19:12:48.212331	2023-12-06 19:12:48.212315	b0755330-b769-4b65-af27-76a042111999	2178
2179	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	\N	2023-12-06 19:12:48.241172	2023-12-06 19:12:48.240287	f90a568d-890f-4208-906d-b12a6feb2d78	2179
2186	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	\N	2023-12-06 19:12:48.253343	2023-12-06 19:12:48.25333	2b9cfe5f-40d4-4337-8e34-0152e625f679	2186
2082	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	No	No	The student is unable to complete learning activities due to poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:47.759607	2023-12-06 19:12:47.758462	f6d7037a-6692-4288-8d0e-3b61bd13fe70	2082
2086	uri://ed-fi.org/SubmissionStatusDescriptor	Returned	Returned	Assignment is returned by the teacher or reclaimed by the student for revision. Assignment needs to be submitted again after revisions have been made.	\N	\N	\N	\N	2023-12-06 19:12:47.769776	2023-12-06 19:12:47.769738	0685a678-96c0-4f64-a109-7a1d1e8e5104	2086
2087	uri://ed-fi.org/SubmissionStatusDescriptor	Submitted	Submitted	The assignment has been submitted by the student but has not been graded.	\N	\N	\N	\N	2023-12-06 19:12:47.776877	2023-12-06 19:12:47.774514	c3756bf8-8e44-4132-a2e3-5b437814a30e	2087
2090	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	\N	2023-12-06 19:12:47.804267	2023-12-06 19:12:47.804241	ad679e2f-080f-4bde-afad-091eafc315bf	2089
2092	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-12-06 19:12:47.812836	2023-12-06 19:12:47.812796	c0a328e0-06d2-4181-a57f-f60ef1878171	2092
2095	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.846135	2023-12-06 19:12:47.844907	4dfeec77-4be4-48d8-bd8b-da3c5113d858	2095
2099	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.853619	2023-12-06 19:12:47.853591	bc497beb-16d5-42be-8a2f-0252367c2a0d	2099
2106	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-12-06 19:12:47.888868	2023-12-06 19:12:47.887846	31d1f4cc-c606-4700-8f1f-938ca046212b	2106
2108	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.897987	2023-12-06 19:12:47.897974	16f3a312-a751-4395-9b13-0e9614437220	2108
2113	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	\N	2023-12-06 19:12:47.905502	2023-12-06 19:12:47.905457	6ec0f8b3-7191-460b-9c99-481f2a186e42	2113
2116	uri://ed-fi.org/SpecialEducationSettingDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:47.939309	2023-12-06 19:12:47.938156	69e30895-3393-4513-b51a-5558d152124d	2116
2119	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:47.947111	2023-12-06 19:12:47.947099	adb139d5-9eb2-4d48-96c9-3bdab3d5e4d1	2119
2126	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate school	Separate school	Separate school	\N	\N	\N	\N	2023-12-06 19:12:47.957464	2023-12-06 19:12:47.957381	9d71b729-3237-4f49-9a37-1f3c29e1a55b	2126
2129	uri://ed-fi.org/SpecialEducationSettingDescriptor	Service provider location	Service provider location	Service provider location	\N	\N	\N	\N	2023-12-06 19:12:47.964048	2023-12-06 19:12:47.963887	3c4b5cda-3188-4218-bc27-75035118b328	2129
2132	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-12-06 19:12:47.997436	2023-12-06 19:12:47.996409	3b703533-b7ff-40ca-a35d-490777e4e693	2132
2135	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	\N	2023-12-06 19:12:48.0344	2023-12-06 19:12:48.033572	3af95f4b-1b72-4ed6-825e-a600c243a7f5	2135
2139	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	\N	2023-12-06 19:12:48.042942	2023-12-06 19:12:48.042814	807ef7d7-a2c7-4d7c-8e34-5f5708dc1f6f	2139
2146	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	\N	2023-12-06 19:12:48.05341	2023-12-06 19:12:48.053383	0d77d817-ac0c-4be5-8429-8361c5a32132	2146
2150	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	\N	2023-12-06 19:12:48.087189	2023-12-06 19:12:48.085774	3911f532-c522-46b9-a308-9ac29802c5fe	2150
2155	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:48.135624	2023-12-06 19:12:48.134486	cf5ddf55-5963-42b2-8ec8-b48064662ed2	2155
2166	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:48.159024	2023-12-06 19:12:48.158986	5f2b31fa-0b25-49dc-90b3-b9ed422e8e11	2166
2170	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Late Report from Contracted Personnel	Late Report from Contracted Personnel	LEA delay due to late report from contracted personnel.	\N	\N	\N	\N	2023-12-06 19:12:48.195228	2023-12-06 19:12:48.194344	c4666ab8-28c5-41cd-bad4-6360dd79d570	2170
2174	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.204139	2023-12-06 19:12:48.204124	d8682fc1-a932-4c7d-bdac-b79b1fe56832	2174
2180	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	\N	2023-12-06 19:12:48.241189	2023-12-06 19:12:48.240275	9cee8272-0960-4c1c-a4fc-e28740c214d9	2180
2183	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-12-06 19:12:48.2496	2023-12-06 19:12:48.249586	ac53b1a1-cfb4-40e4-8f34-0710022792ac	2183
2188	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	\N	2023-12-06 19:12:48.283226	2023-12-06 19:12:48.282174	f287de21-b4e4-40ad-a3ea-6669d93ba054	2188
2194	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	\N	2023-12-06 19:12:48.321167	2023-12-06 19:12:48.320174	e91d27bb-5298-44ad-b65f-668dfbc0d46f	2194
2200	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	\N	2023-12-06 19:12:48.33567	2023-12-06 19:12:48.335641	d420f833-65ec-4813-9b9f-9dd2d990f31a	2200
2202	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	\N	2023-12-06 19:12:48.364636	2023-12-06 19:12:48.363813	cad9f643-094f-4afc-a45d-d56b9d0ce9b3	2202
2208	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	\N	2023-12-06 19:12:48.374478	2023-12-06 19:12:48.374353	a6cf7bf4-343c-45e5-87b8-dfa916a532f9	2208
2212	uri://ed-fi.org/SchoolCategoryDescriptor	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	\N	\N	\N	\N	2023-12-06 19:12:48.38234	2023-12-06 19:12:48.382262	c594d45a-5d8a-4978-a453-51f0cdea5c79	2212
2100	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:47.854085	2023-12-06 19:12:47.854057	a6b4abfb-d63d-4fe2-a18f-85c3d7949983	2100
2103	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	\N	2023-12-06 19:12:47.888706	2023-12-06 19:12:47.887819	bf1d66be-278f-444f-85ff-19b63b44579b	2103
2110	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	\N	2023-12-06 19:12:47.898222	2023-12-06 19:12:47.898132	d53c82ae-6c85-4e8e-a1a5-15966af404ff	2110
2118	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	\N	2023-12-06 19:12:47.93927	2023-12-06 19:12:47.938182	066c0ee8-3b80-4af8-8a26-dcc3d8a95ce6	2118
2122	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	\N	2023-12-06 19:12:47.949461	2023-12-06 19:12:47.949419	d9b42e94-b6b0-4683-bcab-a68efda364f0	2122
2125	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate class	Separate class	Separate class	\N	\N	\N	\N	2023-12-06 19:12:47.956275	2023-12-06 19:12:47.956241	a8c27bc1-f860-4785-9edc-7f2e090b53e8	2125
2127	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (10+ hrs)	Regular early childhood program (10+ hrs)	Services in regular early childhood program (at least 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:47.961132	2023-12-06 19:12:47.961096	e61fbf78-ed64-4916-911c-7bce0911cd66	2127
2130	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	\N	\N	\N	\N	2023-12-06 19:12:47.965282	2023-12-06 19:12:47.965267	4c760b24-d5a5-4111-bd80-2d47a60ae22f	2130
2134	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-12-06 19:12:47.997511	2023-12-06 19:12:47.996428	c618d27e-648a-4c49-bb0f-014278ac1796	2134
2137	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	\N	2023-12-06 19:12:48.034512	2023-12-06 19:12:48.033588	c50ef0d1-a5c3-4956-8668-8c07958e2086	2137
2140	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	\N	2023-12-06 19:12:48.043729	2023-12-06 19:12:48.043713	a5274f3d-6bca-4ec8-933f-7d18b6ad2d08	2140
2145	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	\N	2023-12-06 19:12:48.051011	2023-12-06 19:12:48.050194	bb997cf6-64e3-465d-bae6-6631844b7cd3	2145
2149	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	\N	2023-12-06 19:12:48.086718	2023-12-06 19:12:48.0858	a36db675-cbff-48f9-8316-5003bc31b779	2149
2152	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	\N	2023-12-06 19:12:48.125491	2023-12-06 19:12:48.124211	429a84f3-79e3-4056-b2bc-b85f7c9266a0	2152
2157	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	\N	2023-12-06 19:12:48.13786	2023-12-06 19:12:48.137818	34fc3f65-d6a8-4521-ac7d-815ce8e0b13d	2157
2164	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	\N	2023-12-06 19:12:48.152807	2023-12-06 19:12:48.152753	38c3f003-8c46-4d07-bd19-001bcbe5a8b0	2164
2168	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	\N	2023-12-06 19:12:48.16092	2023-12-06 19:12:48.160858	6ae3d463-044a-4ddd-a28b-12339a119d83	2168
2173	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Detailed Records Maintained by LEA	Detailed Records Maintained by LEA	LEA agreement with parent or guardian to timeframe. Detailed records maintained by LEA.	\N	\N	\N	\N	2023-12-06 19:12:48.195328	2023-12-06 19:12:48.194338	a038eefd-b3e5-4059-83a9-eff06be9066b	2173
2177	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Part C (ECI)	Part C (ECI)	Part C (ECI) did not notify or refer the child to Part B at least 90 days prior to the child's third birthday.	\N	\N	\N	\N	2023-12-06 19:12:48.206484	2023-12-06 19:12:48.20647	3b75ca6c-7052-4fb2-86ae-e3a595bdccc5	2177
2181	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	\N	2023-12-06 19:12:48.241431	2023-12-06 19:12:48.240299	caa397f2-4ed8-4239-b936-3a2b5fd0d5a4	2181
2185	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	\N	2023-12-06 19:12:48.251684	2023-12-06 19:12:48.25166	a6cb47f0-3816-4daf-a9bf-744582cd4431	2185
2190	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	\N	2023-12-06 19:12:48.283293	2023-12-06 19:12:48.282193	c5ce0696-5fba-4c43-9706-3c0c38f8c78d	2190
2193	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	\N	2023-12-06 19:12:48.321012	2023-12-06 19:12:48.32016	b8924dd2-b27c-4f04-9ab2-8c9df85ab21f	2193
2198	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	\N	2023-12-06 19:12:48.329591	2023-12-06 19:12:48.329576	18ec73ef-09ec-4421-9e62-9df0d9bd7e6e	2198
2203	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	\N	2023-12-06 19:12:48.364753	2023-12-06 19:12:48.363803	3880f469-48b5-44ce-91cf-bb5689959a2f	2203
2207	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	\N	2023-12-06 19:12:48.374	2023-12-06 19:12:48.373659	0fc93f42-7683-44e8-a2f3-3c095bd73a59	2207
2210	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	\N	2023-12-06 19:12:48.381945	2023-12-06 19:12:48.381844	ccedb012-9b1d-4b7a-beaf-ed818cb65877	2210
2217	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:48.390479	2023-12-06 19:12:48.390455	ac520348-82a1-4ec0-b8f9-6208b1eccbca	2217
2219	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:48.430505	2023-12-06 19:12:48.429436	b6aaa14f-ae04-4919-839c-d2fd93bed9f8	2219
2225	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	\N	2023-12-06 19:12:48.441263	2023-12-06 19:12:48.441247	2c45dbd2-36c0-4532-8441-7d05dc358822	2225
2227	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	\N	2023-12-06 19:12:48.445606	2023-12-06 19:12:48.445558	bf2b077c-2bb4-466a-a859-426e2778e20d	2227
2101	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	\N	2023-12-06 19:12:47.856008	2023-12-06 19:12:47.855856	44b9dd0a-1610-48ec-ba91-6f8e91e63170	2101
2104	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	\N	2023-12-06 19:12:47.888926	2023-12-06 19:12:47.887852	e9cc530f-24e3-4ba2-a4d1-570dac588686	2104
2109	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.89821	2023-12-06 19:12:47.898182	5c5ef43a-2a21-4f62-b338-f344687702ad	2109
2112	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	\N	2023-12-06 19:12:47.9052	2023-12-06 19:12:47.905057	439a769f-b952-4034-b1e4-be0d3f20ef69	2112
2115	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	\N	2023-12-06 19:12:47.939103	2023-12-06 19:12:47.938186	17b41562-c3e5-4e61-9d8a-3be2c8c1a6c1	2115
2120	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class between 40-79% of the day	Inside regular class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	\N	2023-12-06 19:12:47.947279	2023-12-06 19:12:47.947225	16264391-37eb-46e7-88d3-3962c3c1e9a9	2120
2123	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential facility	Residential facility	Residential facility	\N	\N	\N	\N	2023-12-06 19:12:47.954758	2023-12-06 19:12:47.954538	0517af10-d8d6-4e61-9b0f-9c636281d693	2123
2133	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-12-06 19:12:47.997521	2023-12-06 19:12:47.9964	e957559d-424b-472b-bd5b-45b3b921177e	2133
2136	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	\N	2023-12-06 19:12:48.034607	2023-12-06 19:12:48.033591	9607c936-cc23-47e9-8fb2-7c3be9b008b4	2136
2142	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	\N	2023-12-06 19:12:48.043465	2023-12-06 19:12:48.043436	6e9729bf-e42a-45ec-81bc-7a31f2a2c3fe	2142
2143	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	\N	2023-12-06 19:12:48.049391	2023-12-06 19:12:48.049364	41a1ad59-b892-444c-81f1-e845f95cf646	2143
2148	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-12-06 19:12:48.08681	2023-12-06 19:12:48.085789	6b63044a-776d-4362-a693-97f647fd67bc	2148
2151	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:48.096059	2023-12-06 19:12:48.096031	136d96cb-93d8-4bda-8d2d-0b3c40f54f3b	2151
2154	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	\N	2023-12-06 19:12:48.125484	2023-12-06 19:12:48.124219	e745ed2c-4814-4d84-b901-b335fcaaf6ba	2154
2158	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	\N	2023-12-06 19:12:48.138421	2023-12-06 19:12:48.138344	fb63162f-393b-4e4a-a852-8e0a26ffa121	2158
2160	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	\N	2023-12-06 19:12:48.14519	2023-12-06 19:12:48.145176	0c657bf4-1ec7-4e19-bf80-d0a54cd55720	2160
2162	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	\N	2023-12-06 19:12:48.148846	2023-12-06 19:12:48.148834	44e92f1a-aede-4ab3-83dd-931a58bc8aa9	2162
2165	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	\N	2023-12-06 19:12:48.153911	2023-12-06 19:12:48.153875	accc4803-a309-451a-bad9-4e5673adb817	2165
2169	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:48.161987	2023-12-06 19:12:48.161889	0df02bf0-16f3-44c0-836d-626284ac01b2	2169
2171	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Lack of Available Assessment Personnel	Lack of Available Assessment Personnel	LEA delay due to lack of available assessment personnel.	\N	\N	\N	\N	2023-12-06 19:12:48.19522	2023-12-06 19:12:48.194313	58a18cbd-fb6c-4c3f-8b42-6ce2829b6598	2171
2175	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Parent/Guardian Delay - Detailed Records	Parent Delay - Detailed Records	Delay due to parent or guardian. Detailed records maintained by LEA regarding a parent or guardian of a child who repeatedly fails or refuses to produce the child for the evaluation or eligibility determination.	\N	\N	\N	\N	2023-12-06 19:12:48.204799	2023-12-06 19:12:48.204729	80db838e-f154-410a-a58c-07a210c77987	2175
2182	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:48.241637	2023-12-06 19:12:48.240305	5eed23e4-ff91-4e86-8a1f-5bb9d96005c3	2182
2184	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	\N	2023-12-06 19:12:48.249959	2023-12-06 19:12:48.249925	43ef78c2-b8d1-42ad-8bbd-ec770675f614	2184
2187	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	\N	2023-12-06 19:12:48.283061	2023-12-06 19:12:48.282182	c895bb24-5bca-4649-bf0d-e414723e8181	2187
2191	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-12-06 19:12:48.291402	2023-12-06 19:12:48.291375	3c23bbe5-d196-4f0c-ac1b-c63e2e3bd39d	2191
2195	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	\N	2023-12-06 19:12:48.321173	2023-12-06 19:12:48.320151	bf6ff667-889a-4bfd-ae9a-0938c958ce17	2195
2199	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.33002	2023-12-06 19:12:48.330007	bfe466c0-4c4b-43a5-8498-a9d00efcadb6	2199
2205	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	\N	2023-12-06 19:12:48.364862	2023-12-06 19:12:48.363827	8e51b827-dd42-4e39-bb52-aec5393e8d95	2205
2206	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	\N	2023-12-06 19:12:48.373742	2023-12-06 19:12:48.373705	d5bad850-ae41-4b29-958e-658ab29b545a	2206
2213	uri://ed-fi.org/SchoolCategoryDescriptor	Secondary School	Secondary School	Secondary School	\N	\N	\N	\N	2023-12-06 19:12:48.382939	2023-12-06 19:12:48.382687	d8f86191-25c4-4a9d-9455-97a2a0c94538	2213
2216	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	\N	\N	\N	\N	2023-12-06 19:12:48.390042	2023-12-06 19:12:48.390015	facf29b6-123a-4cc8-ba2a-2e62ecab08d3	2216
2220	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	\N	2023-12-06 19:12:48.430633	2023-12-06 19:12:48.429419	b2f396b0-3502-4bb1-a678-b9ce0c6dc03d	2220
2189	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	\N	2023-12-06 19:12:48.283291	2023-12-06 19:12:48.282209	82744b0c-95a3-4409-bc82-98b26570c9e2	2189
2192	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	\N	2023-12-06 19:12:48.291713	2023-12-06 19:12:48.291678	435ffa1c-ee1f-47d7-b74e-f89814727696	2192
2196	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	\N	2023-12-06 19:12:48.321168	2023-12-06 19:12:48.32018	46de56c7-aa3e-4094-9bf6-d19d4e900496	2196
2197	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	\N	2023-12-06 19:12:48.32922	2023-12-06 19:12:48.329183	bb4fb3c3-c982-4c8d-9355-709d8b0f36b6	2197
2201	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	\N	2023-12-06 19:12:48.335731	2023-12-06 19:12:48.335678	a22daeb7-0bd8-4af1-be09-f87e81cdba44	2201
2204	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	\N	2023-12-06 19:12:48.364792	2023-12-06 19:12:48.363833	e038a16a-7954-40eb-af5b-ab0348f52842	2204
2209	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	\N	2023-12-06 19:12:48.374732	2023-12-06 19:12:48.374718	9cf5116b-68d6-4a93-bb94-f6a76f69a32f	2209
2211	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	\N	2023-12-06 19:12:48.382205	2023-12-06 19:12:48.382135	9a893459-ba53-4975-b84b-d3d2e9fcf1e0	2211
2214	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	\N	2023-12-06 19:12:48.388707	2023-12-06 19:12:48.388693	c3f99980-259e-4e8e-a653-006039d16ff8	2214
2221	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	\N	2023-12-06 19:12:48.430619	2023-12-06 19:12:48.429431	e71beaad-fdbe-424a-a227-5adac718e916	2221
2224	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	\N	2023-12-06 19:12:48.440802	2023-12-06 19:12:48.440762	618b0cef-62a7-46ff-a801-9c8e28e86dea	2224
2228	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	\N	2023-12-06 19:12:48.478478	2023-12-06 19:12:48.477631	b139c1b9-94b7-4f9a-940e-caecbb7d220d	2228
2233	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	\N	2023-12-06 19:12:48.487682	2023-12-06 19:12:48.487654	410983de-5b1c-461a-9767-91f41783e4cf	2233
2240	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	\N	2023-12-06 19:12:48.503166	2023-12-06 19:12:48.503152	40ed80c6-0aae-4679-a61e-b2a8b6ae8704	2240
2249	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	\N	2023-12-06 19:12:48.517893	2023-12-06 19:12:48.51773	abd064cc-4c5c-4513-bba8-ecf3dcb5a5fa	2249
2261	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	\N	2023-12-06 19:12:48.541724	2023-12-06 19:12:48.541478	7aa1de42-a6ec-48a0-8d2f-8abca1244172	2261
2267	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	\N	2023-12-06 19:12:48.554764	2023-12-06 19:12:48.554067	b8e4a900-73a1-4924-8e18-4c764390edba	2267
2271	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	\N	2023-12-06 19:12:48.563318	2023-12-06 19:12:48.56327	a2b38515-8c6b-48f4-855f-df58d25ee13d	2271
2276	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	\N	2023-12-06 19:12:48.573331	2023-12-06 19:12:48.573253	1717e86c-e251-41e6-80eb-7eda4769121f	2276
2278	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	\N	2023-12-06 19:12:48.578463	2023-12-06 19:12:48.578436	86fcc7df-1362-45da-966d-53c2f1cf7350	2278
2280	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	\N	2023-12-06 19:12:48.584673	2023-12-06 19:12:48.584645	fb4de8c2-5a72-448a-8f7b-56f873de1c89	2280
2283	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	\N	2023-12-06 19:12:48.590832	2023-12-06 19:12:48.590804	2b393cc2-c239-4ac4-a7e0-3575543229d6	2283
2286	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	\N	2023-12-06 19:12:48.599792	2023-12-06 19:12:48.599728	c2babedc-1671-4f87-a10b-986d07e2bd43	2286
2292	uri://ed-fi.org/EnrollmentTypeDescriptor	Current	Current	Current	\N	\N	\N	\N	2023-12-06 19:12:48.639045	2023-12-06 19:12:48.637386	5691bc76-304b-4c37-96c7-ab17074bcf4f	2292
2294	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	\N	2023-12-06 19:12:48.647382	2023-12-06 19:12:48.64736	5320cb30-ca57-4fc1-86ad-278961a7fc8c	2294
2300	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	\N	2023-12-06 19:12:48.684812	2023-12-06 19:12:48.683707	57e63e2d-2df2-4cb6-8e60-668b17fe8e1c	2300
2304	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	\N	2023-12-06 19:12:48.696136	2023-12-06 19:12:48.696108	88f300cb-15ec-42b7-94f9-4ea14d4f5205	2304
2305	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	\N	2023-12-06 19:12:48.699903	2023-12-06 19:12:48.699365	32b38c14-fefb-448d-83e0-4dd88cc52c8a	2305
2308	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-12-06 19:12:48.736571	2023-12-06 19:12:48.735703	8529e9d9-eae2-4771-ab35-59f305183791	2308
2313	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	\N	2023-12-06 19:12:48.747388	2023-12-06 19:12:48.747007	ef558b43-6492-431e-884e-085fe8af7d65	2313
2319	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	\N	2023-12-06 19:12:48.785988	2023-12-06 19:12:48.784926	58ca39f5-26f7-434f-ba4b-666c60a20c69	2319
2326	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:48.847185	2023-12-06 19:12:48.846167	9fbd7c7a-e004-429c-9573-80ab136eb0ef	2326
2329	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	\N	2023-12-06 19:12:48.856667	2023-12-06 19:12:48.856639	17c3afbb-62cf-4de2-951e-c5a87c68c310	2329
2331	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	\N	2023-12-06 19:12:48.861458	2023-12-06 19:12:48.861441	5b8cb9ba-3537-412f-ace9-2fa9f1596499	2331
2332	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	\N	2023-12-06 19:12:48.864213	2023-12-06 19:12:48.864185	c6890e67-b5b9-4d44-90ce-f949f35a2855	2332
2343	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	\N	2023-12-06 19:12:48.883453	2023-12-06 19:12:48.88295	d635288e-2a41-4300-85fa-701c1ebd6587	2343
2345	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:48.890361	2023-12-06 19:12:48.890333	817d7b72-2954-4745-b850-64e8d7fe9909	2345
2215	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	\N	2023-12-06 19:12:48.389563	2023-12-06 19:12:48.389551	4a2c9663-cc8c-473a-b078-de5f4720d3d3	2215
2218	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	\N	2023-12-06 19:12:48.425295	2023-12-06 19:12:48.424297	21cec1de-211c-454d-82cd-bce4fed275a9	2218
2222	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	\N	2023-12-06 19:12:48.433479	2023-12-06 19:12:48.433453	e6f9197d-6615-4567-a5e4-56f007b785d4	2222
2223	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	\N	2023-12-06 19:12:48.438627	2023-12-06 19:12:48.438599	18ea0359-f9ab-44b3-9a85-5c566d7826f3	2223
2226	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	\N	2023-12-06 19:12:48.442161	2023-12-06 19:12:48.442101	fada38c7-140c-4115-bed0-63b0a68ed483	2226
2231	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	\N	2023-12-06 19:12:48.47847	2023-12-06 19:12:48.477626	1c470328-aaab-4afd-8921-eb36baa704b3	2231
2232	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	\N	2023-12-06 19:12:48.487708	2023-12-06 19:12:48.487695	11e331ec-20b1-4a88-b6cc-7967c5c174ad	2232
2238	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	\N	2023-12-06 19:12:48.495192	2023-12-06 19:12:48.495165	2aef8530-3ccf-4efe-9619-59d63c85fa30	2238
2243	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	\N	2023-12-06 19:12:48.504211	2023-12-06 19:12:48.504189	3c2e9d9b-3b8b-4030-a41a-585d1be55996	2243
2245	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	\N	2023-12-06 19:12:48.510501	2023-12-06 19:12:48.510487	60b0b30c-6603-4700-ab90-6ebe4ee93505	2245
2247	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	\N	2023-12-06 19:12:48.513421	2023-12-06 19:12:48.513382	c6c6c45c-9b82-43ab-b0ca-2c73ef2c6710	2247
2252	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	\N	2023-12-06 19:12:48.525702	2023-12-06 19:12:48.525672	caa9d302-9f46-461f-b022-dbdcee91e3e5	2252
2255	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	\N	2023-12-06 19:12:48.529172	2023-12-06 19:12:48.529146	cec51687-f617-4ddb-b293-a5711a0903c7	2255
2259	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	\N	2023-12-06 19:12:48.536815	2023-12-06 19:12:48.536556	488084cf-65b5-41bd-940e-4ba402a80cb4	2259
2264	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	\N	2023-12-06 19:12:48.548866	2023-12-06 19:12:48.548851	7de8682a-01c9-4ae2-b45e-a24bb4c43f45	2264
2268	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	\N	2023-12-06 19:12:48.558532	2023-12-06 19:12:48.558506	ecceeb62-c951-48af-9a70-d1708db34522	2268
2275	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	\N	2023-12-06 19:12:48.573014	2023-12-06 19:12:48.572691	ce7f0824-40dc-46e1-a721-d42f61d4c1d5	2275
2281	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	\N	2023-12-06 19:12:48.586541	2023-12-06 19:12:48.586506	434e1f17-73e1-46a2-8800-911fb2414f42	2281
2284	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	\N	2023-12-06 19:12:48.593038	2023-12-06 19:12:48.592802	ae5d3df7-0601-41ac-90ee-b5a45437a3c4	2284
2289	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	\N	2023-12-06 19:12:48.603871	2023-12-06 19:12:48.603845	ab99ab0b-6b2f-481b-af90-f3adb0714586	2289
2291	uri://ed-fi.org/EnrollmentTypeDescriptor	Preregistered	Preregistered	Preregistered	\N	\N	\N	\N	2023-12-06 19:12:48.638649	2023-12-06 19:12:48.637374	7539495d-aa52-4565-afcf-b33da0e4dd80	2291
2295	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	\N	2023-12-06 19:12:48.649704	2023-12-06 19:12:48.649683	36c78ca3-a31d-4c85-b443-32ecf6b3e48f	2295
2298	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	\N	2023-12-06 19:12:48.684691	2023-12-06 19:12:48.683713	0b171e62-3627-4066-8d7b-034c265d5d09	2298
2301	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	\N	2023-12-06 19:12:48.693424	2023-12-06 19:12:48.693409	47a4ea0d-6a73-48e2-8740-002632e0d77d	2301
2306	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:48.701577	2023-12-06 19:12:48.701543	7c773fb5-5ab9-4a8e-9ec4-34bee4b811f3	2306
2309	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	\N	2023-12-06 19:12:48.736559	2023-12-06 19:12:48.735708	d9b2b141-f143-4169-a682-04a96cc80d3b	2309
2312	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	\N	2023-12-06 19:12:48.744463	2023-12-06 19:12:48.744448	88fb119c-8a47-4f7f-8381-060f94edcde9	2312
2315	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	\N	2023-12-06 19:12:48.749569	2023-12-06 19:12:48.74941	eff33e12-7fdb-44f6-8ea7-6fdb3a4cfa3a	2315
2317	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	\N	2023-12-06 19:12:48.785891	2023-12-06 19:12:48.784955	761ea517-66b1-44fd-aa69-0c9eaa927779	2317
2325	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	\N	2023-12-06 19:12:48.847244	2023-12-06 19:12:48.846203	b1d41220-378a-4942-aa51-25d0dadfa544	2325
2327	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community	\N	\N	\N	\N	2023-12-06 19:12:48.855878	2023-12-06 19:12:48.855854	874b022e-bd07-4b91-b36f-53c77946496b	2327
2336	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	\N	2023-12-06 19:12:48.870521	2023-12-06 19:12:48.87022	ad30187d-80ed-49a3-abbf-25cfb2f9a662	2336
2339	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	\N	2023-12-06 19:12:48.877578	2023-12-06 19:12:48.87754	1ec3bb47-a71e-4942-9071-45693376a33f	2339
2342	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	\N	2023-12-06 19:12:48.883284	2023-12-06 19:12:48.883247	da11f4d8-a2ab-486b-b431-405bb65ee9a5	2342
2346	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	\N	2023-12-06 19:12:48.89648	2023-12-06 19:12:48.896393	74adeb50-021a-4bf0-b048-9d2863ae9f8c	2346
2352	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:48.90738	2023-12-06 19:12:48.907319	be1cd122-5768-40a2-96fc-69ad12c66c49	2352
2354	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:48.91144	2023-12-06 19:12:48.911383	5f065af0-824a-45a3-8b8b-54a2087ff074	2354
2229	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	\N	2023-12-06 19:12:48.478601	2023-12-06 19:12:48.477655	0a15b4a8-88b4-4bb2-96d4-6d6edcd65dbd	2229
2234	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	\N	2023-12-06 19:12:48.488105	2023-12-06 19:12:48.488068	d8a329ec-f141-4c29-a2d8-0f85d38581db	2234
2236	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	\N	2023-12-06 19:12:48.493863	2023-12-06 19:12:48.493837	58480e45-1ac9-4bf1-8edd-9a30bbc3b990	2236
2242	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	\N	2023-12-06 19:12:48.504176	2023-12-06 19:12:48.504144	a0c944b4-9183-4a52-b044-5c157e8eed9d	2242
2244	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	\N	2023-12-06 19:12:48.510199	2023-12-06 19:12:48.510184	1dcbbd58-c039-457e-80b1-cae82bd4fc6a	2244
2248	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	\N	2023-12-06 19:12:48.516779	2023-12-06 19:12:48.516737	784a052d-46a7-484f-918a-2e7dcf9b0ec0	2248
2251	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	\N	2023-12-06 19:12:48.521085	2023-12-06 19:12:48.521059	de8e0231-88da-4d4a-9aaa-9576978136b1	2251
2254	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	\N	2023-12-06 19:12:48.527021	2023-12-06 19:12:48.527002	0bb213c2-8391-4b88-94bc-150ebafb172c	2254
2257	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	\N	2023-12-06 19:12:48.532827	2023-12-06 19:12:48.532674	1855135b-8dcb-40a3-846d-c40034bcc516	2257
2262	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	\N	2023-12-06 19:12:48.542154	2023-12-06 19:12:48.542128	295d1a08-75c0-4cd4-bb4a-145be906eebb	2262
2265	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	\N	2023-12-06 19:12:48.549104	2023-12-06 19:12:48.549087	fa933441-eb38-40ca-97b9-b0b0d56cfa87	2265
2270	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	\N	2023-12-06 19:12:48.55991	2023-12-06 19:12:48.559895	a87e75aa-3766-4edd-8fd1-555fd60b3db0	2270
2274	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	\N	2023-12-06 19:12:48.570726	2023-12-06 19:12:48.57052	d0767f37-97c1-4675-b584-f07f264b7db8	2274
2279	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	\N	2023-12-06 19:12:48.582585	2023-12-06 19:12:48.582522	3fe2a092-0209-4988-afaa-9a9167d2faec	2279
2285	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	\N	2023-12-06 19:12:48.594	2023-12-06 19:12:48.59394	1f76216c-2afa-4bab-93bc-8491c89e0008	2285
2288	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	\N	2023-12-06 19:12:48.601261	2023-12-06 19:12:48.601246	3da14893-7389-41c0-8a90-e59dc83aad1e	2288
2296	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	\N	2023-12-06 19:12:48.650121	2023-12-06 19:12:48.650073	46d0bf01-72f3-40a6-b22c-f5c71c72d29d	2296
2297	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	\N	2023-12-06 19:12:48.684531	2023-12-06 19:12:48.683692	90cde7d4-e061-40a5-afbf-41d4f943768c	2297
2302	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	\N	2023-12-06 19:12:48.693461	2023-12-06 19:12:48.693434	5d4eef46-c0a1-46bf-b313-742895cc5bdb	2302
2307	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	\N	2023-12-06 19:12:48.702998	2023-12-06 19:12:48.702985	c7e05427-9800-43e4-8307-8f52a45c3341	2307
2311	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	\N	2023-12-06 19:12:48.737362	2023-12-06 19:12:48.735727	6fa32215-1321-4440-a7c6-2076589b4f9f	2311
2316	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	\N	2023-12-06 19:12:48.785775	2023-12-06 19:12:48.784949	b8817026-02d4-49b4-a982-c5b3dd87fde0	2316
2320	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	\N	2023-12-06 19:12:48.796772	2023-12-06 19:12:48.796736	cbcaebfa-d5c3-4ac0-a8c9-23e9c924150a	2320
2322	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	\N	2023-12-06 19:12:48.817494	2023-12-06 19:12:48.817463	7f5c1b19-aa99-4335-8eef-7ee562add9f3	2322
2324	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	\N	2023-12-06 19:12:48.847232	2023-12-06 19:12:48.846195	f1f0092a-86c1-4c73-865b-3eead45a54ca	2324
2328	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	\N	2023-12-06 19:12:48.855793	2023-12-06 19:12:48.855779	cb1c7d37-62a3-40d7-92ae-22f1cef3c134	2328
2334	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	\N	2023-12-06 19:12:48.865582	2023-12-06 19:12:48.865424	a1fdafe6-6497-46c8-b4b8-2c48fefc39e0	2334
2337	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	\N	2023-12-06 19:12:48.871919	2023-12-06 19:12:48.871891	3133c17d-4087-4a03-8118-6a26beeb13b2	2337
2341	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	\N	2023-12-06 19:12:48.880195	2023-12-06 19:12:48.880179	46931287-e6e7-49fc-84a3-d4bb0e38c057	2341
2347	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	\N	2023-12-06 19:12:48.897595	2023-12-06 19:12:48.897486	74888137-b634-481c-a07c-7ff1be407795	2347
2353	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	\N	2023-12-06 19:12:48.907378	2023-12-06 19:12:48.90734	46fa8749-01dd-45f5-b577-86f231766369	2353
2359	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	\N	2023-12-06 19:12:48.920202	2023-12-06 19:12:48.920111	e4d655d7-a46f-48cb-92f6-de20d0151047	2359
2363	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	\N	2023-12-06 19:12:48.928762	2023-12-06 19:12:48.928734	8b2e5959-7607-4c2f-939a-3d09e731adb1	2363
2365	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:48.933387	2023-12-06 19:12:48.93334	c92827df-9a6c-467e-a39b-2a39a1a06153	2365
2368	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	\N	2023-12-06 19:12:48.942619	2023-12-06 19:12:48.942558	3eccd475-6f5c-4231-b124-5facaf2db1e5	2368
2372	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	\N	2023-12-06 19:12:48.950024	2023-12-06 19:12:48.949794	e51ff23a-73e8-4493-be5b-96b1b9583f1d	2372
2375	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	\N	2023-12-06 19:12:48.956177	2023-12-06 19:12:48.95614	8bec7a1a-6430-44b0-8d7d-d03ef8e6db12	2375
2377	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	\N	2023-12-06 19:12:48.959681	2023-12-06 19:12:48.959666	a0bac6e8-712d-4be0-900e-b9660ebf4eb9	2377
2230	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	\N	2023-12-06 19:12:48.478602	2023-12-06 19:12:48.477639	bff59105-c1cb-4b9e-8307-1732dc6b18ea	2230
2235	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	\N	2023-12-06 19:12:48.488394	2023-12-06 19:12:48.48838	b3411acc-68fa-4ce7-8c20-b04f2442d728	2235
2237	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	\N	2023-12-06 19:12:48.493951	2023-12-06 19:12:48.493634	cf727c06-bc03-4a8d-8f59-f2c4d9221017	2237
2239	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	\N	2023-12-06 19:12:48.497442	2023-12-06 19:12:48.497414	ec6da3f7-c71a-40ee-a0b5-91c82b12a6db	2239
2241	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	\N	2023-12-06 19:12:48.503557	2023-12-06 19:12:48.503521	f13f123f-d415-46bf-a5d9-1deac210fcb6	2241
2246	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	\N	2023-12-06 19:12:48.51129	2023-12-06 19:12:48.511226	0344b8d3-646d-4b5f-b975-2a0bfd4f4dfa	2246
2250	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	\N	2023-12-06 19:12:48.520595	2023-12-06 19:12:48.520549	986dc2f5-db54-4bb3-810b-0430ecf5787e	2250
2253	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	\N	2023-12-06 19:12:48.525747	2023-12-06 19:12:48.52572	352d9bc5-492b-4281-92d0-24e526a3fdf3	2253
2256	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	\N	2023-12-06 19:12:48.531808	2023-12-06 19:12:48.531529	e972dd24-4d26-4361-8dd2-2933f7817fb7	2256
2258	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	\N	2023-12-06 19:12:48.535353	2023-12-06 19:12:48.535259	75952c0d-268c-4257-b37e-cdce2a437bb6	2258
2260	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	\N	2023-12-06 19:12:48.539154	2023-12-06 19:12:48.539127	56600561-7c7b-4a0d-b072-892b69d699f5	2260
2263	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	\N	2023-12-06 19:12:48.545021	2023-12-06 19:12:48.544941	7f4d075d-f36e-4691-abf4-1f62d7d978a9	2263
2266	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	\N	2023-12-06 19:12:48.551009	2023-12-06 19:12:48.550915	98f73d0d-5935-4478-9339-4881d781384a	2266
2269	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	\N	2023-12-06 19:12:48.558667	2023-12-06 19:12:48.558652	838863ea-f226-46a3-8088-e88378cf620f	2269
2272	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	\N	2023-12-06 19:12:48.565991	2023-12-06 19:12:48.565929	564360ac-799d-4d6c-850a-de617fc21d57	2272
2273	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	\N	2023-12-06 19:12:48.569116	2023-12-06 19:12:48.569102	6672991d-8b16-44ba-af3b-9e2cfdebfa45	2273
2277	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	\N	2023-12-06 19:12:48.57634	2023-12-06 19:12:48.57629	fb15570c-4494-409b-817a-99471db4bba9	2277
2282	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	\N	2023-12-06 19:12:48.586504	2023-12-06 19:12:48.586412	adc131d1-1684-4e4c-b8d0-c0fbccf75183	2282
2287	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	\N	2023-12-06 19:12:48.600862	2023-12-06 19:12:48.600762	eae3ed4e-9f8f-4467-9892-d4f9cb00ced4	2287
2290	uri://ed-fi.org/EnrollmentTypeDescriptor	Summer	Summer	Summer	\N	\N	\N	\N	2023-12-06 19:12:48.638328	2023-12-06 19:12:48.63736	9801d45d-58c0-4860-b875-dae54e3b9b58	2290
2293	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	\N	2023-12-06 19:12:48.646948	2023-12-06 19:12:48.645817	454626fe-6146-43ce-90f1-d797b9b72033	2293
2299	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	\N	2023-12-06 19:12:48.684531	2023-12-06 19:12:48.683682	c0d75e1a-11ec-420f-a9c3-a45c90f9cb79	2299
2303	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.695367	2023-12-06 19:12:48.69534	29e652fb-e042-447c-bcf9-f0ae11d508b8	2303
2310	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	\N	2023-12-06 19:12:48.737114	2023-12-06 19:12:48.73572	db1f5f9e-5a90-48d3-9b0d-22663a346298	2310
2314	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-12-06 19:12:48.748478	2023-12-06 19:12:48.748464	9195d60a-b0b7-44a3-864f-a2d5ce782662	2314
2318	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.785937	2023-12-06 19:12:48.784934	45c04f13-f69e-4759-a8cd-1ef7d802126a	2318
2321	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	\N	2023-12-06 19:12:48.813306	2023-12-06 19:12:48.81326	651ace21-b341-415f-86e2-aff73efbff18	2321
2323	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:48.847026	2023-12-06 19:12:48.846176	94de5af0-1653-447e-927c-fc78088019a2	2323
2330	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	\N	2023-12-06 19:12:48.856706	2023-12-06 19:12:48.856597	ec9a1c35-fd1a-415c-9a63-cd5d3230bb8f	2330
2333	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:48.865508	2023-12-06 19:12:48.865364	d3077829-c5d0-41bd-9764-b8e18f982f09	2333
2335	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	\N	2023-12-06 19:12:48.870606	2023-12-06 19:12:48.869982	5149fe85-75c0-41b6-ac56-7c3d5d1c107f	2335
2338	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	\N	2023-12-06 19:12:48.874659	2023-12-06 19:12:48.874631	e78214f5-6b4a-4023-84c6-712fc60484fa	2338
2340	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.878937	2023-12-06 19:12:48.878901	3d8c2d45-131e-4762-968e-64684d3f52d6	2340
2344	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	\N	2023-12-06 19:12:48.886217	2023-12-06 19:12:48.886189	39edeb28-a8d5-42eb-9203-97e18536f3da	2344
2349	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	\N	2023-12-06 19:12:48.899558	2023-12-06 19:12:48.899545	8e3c0767-2eca-4bc1-ab8e-7323e140f1f9	2349
2351	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	\N	2023-12-06 19:12:48.906922	2023-12-06 19:12:48.906889	709e77c8-e708-4528-b5f5-063f630c1065	2351
2356	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of the Lake Superior Tribe of Chippewa Indians of the Bad River Reservation, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:48.914925	2023-12-06 19:12:48.914877	4dc2511a-cd7c-4443-a12b-af53a238dbaa	2356
2358	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.918719	2023-12-06 19:12:48.918685	bd5bf961-8644-4824-aa2e-bbcd74eaa607	2358
2360	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	\N	2023-12-06 19:12:48.922338	2023-12-06 19:12:48.922313	a5e2671b-5ac7-4f2a-b22d-228e8b702b76	2360
2348	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	\N	2023-12-06 19:12:48.898939	2023-12-06 19:12:48.898921	aaec7a11-b4fd-4a6f-b2a4-90cdafbd35b8	2348
2350	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community of the Fort Belknap Reservation of Montana	\N	\N	\N	\N	2023-12-06 19:12:48.904747	2023-12-06 19:12:48.903916	86740946-e380-4cf3-87bd-0d8227f024fb	2350
2362	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:48.928628	2023-12-06 19:12:48.928501	684b7993-2e35-4edb-a913-d28160fe269d	2362
2367	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.936397	2023-12-06 19:12:48.936278	4206d661-2b7b-4c73-a9ca-28dbd3fa24a8	2367
2371	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	\N	2023-12-06 19:12:48.945364	2023-12-06 19:12:48.945317	90c9e331-97a2-4113-ad83-5c1830d88bc0	2371
2381	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	\N	2023-12-06 19:12:48.96848	2023-12-06 19:12:48.968466	f0247e73-10af-4f87-b6de-f3576aa02457	2381
2384	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:48.972898	2023-12-06 19:12:48.97286	2723005f-dba0-43a8-842c-5bac085e0da7	2384
2387	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande Band	Capitan Grande Band	Capitan Grande Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:48.979301	2023-12-06 19:12:48.979253	ef2a78b7-e2b9-419a-8cf5-82d2807d0b77	2387
2390	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.986777	2023-12-06 19:12:48.986762	c4746853-968c-46f8-a216-480cb00480f8	2390
2396	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:48.99661	2023-12-06 19:12:48.996541	54706b25-880d-4a7c-8a50-606ebfa7e78d	2396
2397	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	\N	2023-12-06 19:12:49.003401	2023-12-06 19:12:49.003365	650ceebc-d40b-4847-af2e-3d4174e4d6c8	2397
2401	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.010397	2023-12-06 19:12:49.010383	8fc6b886-8345-4aa8-8986-00cffa32c7fc	2401
2406	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	\N	2023-12-06 19:12:49.021007	2023-12-06 19:12:49.02097	1d41b85f-12eb-43be-a86b-488df6f139ef	2406
2410	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	\N	2023-12-06 19:12:49.030043	2023-12-06 19:12:49.030025	9e79ea00-447b-4f7e-bb9d-5f479ce4f145	2410
2415	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	\N	2023-12-06 19:12:49.044048	2023-12-06 19:12:49.044013	eb091083-f974-412b-9db1-169d9dffad0e	2415
2418	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	\N	2023-12-06 19:12:49.049999	2023-12-06 19:12:49.049953	cc255425-bd87-412c-b122-687244d14186	2418
2424	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.065341	2023-12-06 19:12:49.065305	3f781813-3031-4ccf-8222-cef741791478	2424
2431	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish and Kootenai Tribes of the Flathead Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.077449	2023-12-06 19:12:49.077259	dd40430b-a424-4679-9f48-2705164d6ef8	2431
2436	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	\N	2023-12-06 19:12:49.08957	2023-12-06 19:12:49.089555	445918e9-ed46-4e42-9c00-212cc351abd0	2436
2437	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.094408	2023-12-06 19:12:49.09438	33253078-6122-4451-851c-33fd6c9dcbff	2437
2443	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	\N	2023-12-06 19:12:49.10619	2023-12-06 19:12:49.106142	24ad599d-c94d-46c1-9253-bd30c6f5cd74	2443
2453	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	\N	2023-12-06 19:12:49.131245	2023-12-06 19:12:49.131115	67843dcd-34dd-4f04-a0da-7bbc38db94b6	2453
2457	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	\N	2023-12-06 19:12:49.138918	2023-12-06 19:12:49.138882	9673a1b7-45b3-4fff-b12a-85543164f21a	2457
2460	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	\N	2023-12-06 19:12:49.145999	2023-12-06 19:12:49.145949	df4b6e6c-c210-4c9b-a7ad-36f17c948bf7	2460
2464	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.154343	2023-12-06 19:12:49.154316	e3550f31-916c-4c91-b91b-1a6f80142a78	2464
2473	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	\N	2023-12-06 19:12:49.173568	2023-12-06 19:12:49.173555	e3f57008-a4e3-4805-9ca9-ca8d7cf9c926	2473
2475	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.180113	2023-12-06 19:12:49.180088	ee77e4f8-b5c5-41db-8466-b2b6ca956fe5	2475
2481	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.189967	2023-12-06 19:12:49.18994	fdf5d471-4f55-4779-a306-3aa85589c3e5	2481
2487	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	\N	2023-12-06 19:12:49.205536	2023-12-06 19:12:49.205501	0859bd4f-6847-4d63-a4f3-6f9b4ca4a4dc	2487
2491	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	\N	2023-12-06 19:12:49.213635	2023-12-06 19:12:49.213467	2d36899d-6e11-433a-bb55-0fbbcd7deae0	2491
2494	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	\N	2023-12-06 19:12:49.222509	2023-12-06 19:12:49.222464	d88400a0-b460-48e1-a9cd-acc7cb5aa9e1	2494
2497	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	\N	2023-12-06 19:12:49.229393	2023-12-06 19:12:49.229356	df5a0ac2-caf6-4379-a0e8-11b8604166e6	2497
2539	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.320138	2023-12-06 19:12:49.320111	fffa0b49-b0c4-4506-9b2b-a2c704486239	2539
2355	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:48.91443	2023-12-06 19:12:48.914394	8a8fed16-f8be-48c0-a15c-19a3edf4a44c	2355
2357	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	\N	2023-12-06 19:12:48.917956	2023-12-06 19:12:48.917918	17a04f02-b8c6-445d-9fbb-328c00807752	2357
2361	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:48.926714	2023-12-06 19:12:48.926686	b75b0879-2c79-4d34-b29d-1be4ea4f7ed9	2361
2364	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.932108	2023-12-06 19:12:48.932079	74acd8fe-321d-4f2c-92a7-ed7d134edb6b	2364
2369	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of Montana	\N	\N	\N	\N	2023-12-06 19:12:48.943358	2023-12-06 19:12:48.943321	703efa70-acbc-403c-ae9a-3d3cf21cf9b7	2369
2373	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	\N	2023-12-06 19:12:48.952114	2023-12-06 19:12:48.952085	f8a61b2c-5a7d-4a87-8f4d-3736270ca812	2373
2376	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-12-06 19:12:48.957379	2023-12-06 19:12:48.95735	f8935e3d-6b3a-4fd9-88bf-0ae75a432c83	2376
2380	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.965421	2023-12-06 19:12:48.965297	a79b6c20-2dcf-4c64-90b9-063fe9c7d300	2380
2385	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	\N	2023-12-06 19:12:48.975724	2023-12-06 19:12:48.975693	8ee80aea-0b41-4d4e-b2bb-0f6470b6853c	2385
2388	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation (aka Catawba Indian Tribe of South Carolina)	\N	\N	\N	\N	2023-12-06 19:12:48.981856	2023-12-06 19:12:48.981832	e405ad42-dc06-499c-aa1e-3d26e37fad03	2388
2391	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	\N	2023-12-06 19:12:48.98757	2023-12-06 19:12:48.987517	500db9a8-492d-4bbf-838c-62adf13bd53b	2391
2393	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	\N	2023-12-06 19:12:48.995384	2023-12-06 19:12:48.995371	04849fce-8328-4423-b69a-589e07111f97	2393
2399	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.004567	2023-12-06 19:12:49.004258	d1341480-03c0-4abf-9298-e1f95e2059d3	2399
2404	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indians-Eastern Division	Chickahominy Indians-Eastern Division	Chickahominy Indian Tribe - Eastern Division	\N	\N	\N	\N	2023-12-06 19:12:49.014803	2023-12-06 19:12:49.014789	3db4b267-612d-4eb2-804a-57095d80ec59	2404
2407	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	\N	2023-12-06 19:12:49.02114	2023-12-06 19:12:49.021089	3c9f3a1d-ead3-4923-9926-9d2a41b5f519	2407
2413	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	\N	2023-12-06 19:12:49.035835	2023-12-06 19:12:49.03582	1c93b31f-4ba5-417a-96b0-c20718f90db3	2413
2417	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.046447	2023-12-06 19:12:49.046411	574cc784-db3f-4693-8a97-9086e635d760	2417
2421	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	\N	2023-12-06 19:12:49.055155	2023-12-06 19:12:49.055121	d2aa9054-83d8-4fe6-87a2-0e51fa45ac3e	2421
2423	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.062573	2023-12-06 19:12:49.062492	73a1afbf-ad0d-41b7-a2a9-4a5273fef657	2423
2427	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado River Indian Reservation, Arizona and California	\N	\N	\N	\N	2023-12-06 19:12:49.068593	2023-12-06 19:12:49.068558	3a35c99a-d2ee-4af7-b24f-f31409e65ebe	2427
2429	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	\N	2023-12-06 19:12:49.075018	2023-12-06 19:12:49.074947	e48e9e05-36ff-45f2-9331-ce8e15cc274c	2429
2430	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.077924	2023-12-06 19:12:49.077891	8baf4468-963d-4819-a9a2-29a6faf6a9e2	2430
2435	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	\N	2023-12-06 19:12:49.088914	2023-12-06 19:12:49.088873	8cf217c9-80e1-4255-a3bf-29b11cd4b9d4	2435
2440	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:49.098712	2023-12-06 19:12:49.098568	41f5dc5e-df43-415e-85f9-a4e69e7a4218	2440
2442	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	\N	2023-12-06 19:12:49.105327	2023-12-06 19:12:49.105301	2f52253b-cf52-406d-9a4f-e2e06d454f44	2442
2447	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	\N	2023-12-06 19:12:49.115403	2023-12-06 19:12:49.114828	789841c1-07e9-4718-8a0b-0ae224d26590	2447
2449	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.123008	2023-12-06 19:12:49.122936	0af30aac-c51f-4561-be52-e228a39cc105	2449
2451	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	\N	2023-12-06 19:12:49.126261	2023-12-06 19:12:49.126234	513ad0d7-23f2-4d8b-a2a3-edb1fd9aecd8	2451
2455	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-12-06 19:12:49.136559	2023-12-06 19:12:49.136511	378d533d-dc34-4b4e-9e22-9a6b96a29fea	2455
2458	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	\N	2023-12-06 19:12:49.139793	2023-12-06 19:12:49.139757	bff99ec4-861b-49fc-854a-58af2c63a77b	2458
2462	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	\N	2023-12-06 19:12:49.149015	2023-12-06 19:12:49.148953	6c2c09e9-160e-4dbb-9e35-6c2127ca7ce5	2462
2463	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	\N	2023-12-06 19:12:49.152073	2023-12-06 19:12:49.152046	e696b37d-376a-4836-9659-49c6e5ae39c1	2463
2366	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	\N	2023-12-06 19:12:48.936039	2023-12-06 19:12:48.936003	fbcaada8-0466-4e08-beba-addf12f1d546	2366
2370	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:48.943975	2023-12-06 19:12:48.943939	e45c5200-59dc-4729-ba52-46efe7eb7c8e	2370
2374	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	\N	2023-12-06 19:12:48.952372	2023-12-06 19:12:48.952344	6da3aa8a-ffdb-44b0-ae2e-3e8102cc6522	2374
2378	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:48.959929	2023-12-06 19:12:48.959874	2a10e537-a66b-4758-8ae0-7eff9f0bde49	2378
2379	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:48.964392	2023-12-06 19:12:48.964365	fdc871f3-069d-41c7-8cac-2789f3f7d43d	2379
2383	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:48.970463	2023-12-06 19:12:48.970437	4ca3a48b-2611-41af-a450-e02c46b4e2fc	2383
2386	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	\N	2023-12-06 19:12:48.977289	2023-12-06 19:12:48.977276	7f15cb25-1cfd-41e7-b683-0c7985d0de9c	2386
2389	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	\N	2023-12-06 19:12:48.986248	2023-12-06 19:12:48.986219	5e347cfa-04ea-460e-956e-c84cbe4999ec	2389
2394	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	\N	2023-12-06 19:12:48.995459	2023-12-06 19:12:48.995432	89c3d24c-4d35-4ade-8848-68257428d273	2394
2400	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.005425	2023-12-06 19:12:49.005402	ca3d61cf-ee63-4c93-8eb1-f906baa2cfb0	2400
2403	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.013848	2023-12-06 19:12:49.013834	2a6bcd5b-a0ce-4f40-bf78-405bb94ec060	2403
2408	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	\N	2023-12-06 19:12:49.024098	2023-12-06 19:12:49.024084	132bbf12-7f63-43d1-b164-38a41f236f6c	2408
2409	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	\N	2023-12-06 19:12:49.029417	2023-12-06 19:12:49.029401	1ea435ef-0e5a-4d18-9bb3-329fbfaea7ed	2409
2411	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	\N	2023-12-06 19:12:49.033131	2023-12-06 19:12:49.033109	d1b04fec-30a4-44b6-a64d-463d739dad22	2411
2414	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	\N	2023-12-06 19:12:49.039286	2023-12-06 19:12:49.039259	93c01928-9c7c-47ec-b671-1beb0198d1c4	2414
2416	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.045239	2023-12-06 19:12:49.045207	d54db37f-eb86-4032-9c5d-f133ad15620e	2416
2420	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.054554	2023-12-06 19:12:49.054478	04d1f980-5cf2-42ed-8e52-ab1d18d26cf4	2420
2426	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.0679	2023-12-06 19:12:49.067839	95c4151d-1c6b-49c7-a381-a29208d3ca41	2426
2432	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	\N	2023-12-06 19:12:49.080713	2023-12-06 19:12:49.080557	63c50953-e8d4-478d-904d-0d19432821dc	2432
2434	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	\N	2023-12-06 19:12:49.088197	2023-12-06 19:12:49.088155	02bf46d3-2ba0-4ae8-a388-bb1944727294	2434
2438	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	\N	2023-12-06 19:12:49.097103	2023-12-06 19:12:49.097078	227923f8-e9f7-4152-9deb-fa7e49d3d216	2438
2441	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.103845	2023-12-06 19:12:49.103801	cb6ca0dc-d932-48e6-8a92-6566b9913adf	2441
2446	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	\N	2023-12-06 19:12:49.115279	2023-12-06 19:12:49.115253	165b9f69-01ae-4f02-9730-2bc4f419f963	2446
2448	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:49.120302	2023-12-06 19:12:49.119543	3d6a0d21-b7d5-4e58-8827-a937b459790e	2448
2450	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	\N	2023-12-06 19:12:49.125418	2023-12-06 19:12:49.123923	7df26c27-264a-41fd-8c15-b62a0594e071	2450
2454	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	\N	2023-12-06 19:12:49.132311	2023-12-06 19:12:49.132276	280283a5-ed8e-4d6d-a185-a242bd1fb3aa	2454
2459	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.143407	2023-12-06 19:12:49.143307	cc983f4c-b456-4662-b496-a0577610f917	2459
2466	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	\N	2023-12-06 19:12:49.158442	2023-12-06 19:12:49.158407	c95d312e-b875-412b-bfd3-6173739edd8c	2466
2469	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	\N	2023-12-06 19:12:49.167365	2023-12-06 19:12:49.167321	edcab6d6-c6c6-4c73-b629-48a1b92b853e	2469
2472	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.173064	2023-12-06 19:12:49.173027	051c3423-b3f5-40cf-8e3f-c9b3f705f864	2472
2476	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	\N	2023-12-06 19:12:49.180238	2023-12-06 19:12:49.180007	7003fffd-d2db-4a8f-83be-f859df640eae	2476
2479	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	\N	2023-12-06 19:12:49.186011	2023-12-06 19:12:49.185977	9ea3cffd-3ad0-4bdd-b37a-3bcf77b0dcdf	2479
2484	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	\N	2023-12-06 19:12:49.198501	2023-12-06 19:12:49.198464	9c72d7d5-1b48-4f47-aefb-cf11cd5a71bc	2484
2382	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Indians	\N	\N	\N	\N	2023-12-06 19:12:48.969926	2023-12-06 19:12:48.969748	5a8804ce-1a0e-4205-8af1-07f5a90c6425	2382
2392	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:48.988771	2023-12-06 19:12:48.988758	20967782-3921-40d7-8858-14b0e45d5cff	2392
2395	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	\N	2023-12-06 19:12:48.996187	2023-12-06 19:12:48.996171	403a34c1-b841-479f-826a-e5294995dc3c	2395
2398	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.004449	2023-12-06 19:12:49.004413	09e74102-6f0c-449e-b2de-db114916d082	2398
2402	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.012263	2023-12-06 19:12:49.012235	44c26460-6aec-474e-b069-10f28e392b4c	2402
2405	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.020691	2023-12-06 19:12:49.020664	71135af7-287d-4894-b4dd-1c7c2da9a4ec	2405
2412	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:49.03568	2023-12-06 19:12:49.035498	7eea0001-2769-476c-934a-078895d055b1	2412
2419	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	\N	2023-12-06 19:12:49.051265	2023-12-06 19:12:49.051228	3face0e7-f4f0-48d6-b53f-2a0f694cf83d	2419
2422	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.06098	2023-12-06 19:12:49.060853	60a38556-92c8-4fb4-9771-40d5a4195964	2422
2425	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.066083	2023-12-06 19:12:49.066056	727e7c8d-5465-494f-bafa-8479cf6092a9	2425
2428	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of the Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	\N	2023-12-06 19:12:49.074785	2023-12-06 19:12:49.074743	de69c213-0c73-4429-b8b4-d4b23941769f	2428
2433	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.084836	2023-12-06 19:12:49.084808	e443830d-1794-445f-aad4-3b8c71b97b32	2433
2439	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.097511	2023-12-06 19:12:49.097485	6cb10982-dd78-4392-8fb7-8010ae8eba89	2439
2444	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	\N	2023-12-06 19:12:49.108416	2023-12-06 19:12:49.108263	00e4b320-e207-4da5-950b-ab5dd0d524f2	2444
2445	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.112843	2023-12-06 19:12:49.112511	f409e969-1e14-42cf-8317-17879db77321	2445
2452	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.128043	2023-12-06 19:12:49.128012	28878b53-cc86-4d6a-98cb-81890471a8ac	2452
2456	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.137981	2023-12-06 19:12:49.137951	9951b9d9-b08a-4b58-8f32-332c4317bc8b	2456
2461	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.148734	2023-12-06 19:12:49.148708	2361863f-6ae6-489a-bd1d-1f82fa391e18	2461
2465	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.158091	2023-12-06 19:12:49.158059	6067aef1-7515-45d4-a6b3-28365ae05a7d	2465
2468	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	\N	2023-12-06 19:12:49.161567	2023-12-06 19:12:49.161541	e960065c-63aa-40a6-a00f-0b95cd37c764	2468
2470	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.168162	2023-12-06 19:12:49.168056	d56b9fea-e391-4109-9155-00779b7af5ac	2470
2474	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	\N	2023-12-06 19:12:49.17678	2023-12-06 19:12:49.176745	c4445a81-2346-48e6-87cc-627414ac6ca3	2474
2480	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.188773	2023-12-06 19:12:49.188746	bec028f6-3098-46a7-8fea-213061c84f60	2480
2483	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	\N	2023-12-06 19:12:49.195737	2023-12-06 19:12:49.195711	7848177b-c58d-4214-b2d8-7fd349080c51	2483
2493	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.220454	2023-12-06 19:12:49.220427	06c99217-0035-4606-96bf-5be655077a48	2493
2496	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village Council	\N	\N	\N	\N	2023-12-06 19:12:49.22575	2023-12-06 19:12:49.225714	ceed72fd-e196-4898-a054-1bfc943aa74a	2496
2499	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	\N	2023-12-06 19:12:49.233274	2023-12-06 19:12:49.233247	65827abc-0568-4518-8e35-93b4664537a9	2499
2501	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	\N	2023-12-06 19:12:49.236222	2023-12-06 19:12:49.236151	6c6f04f9-d769-4faf-9b81-d3783168c96d	2501
2506	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:49.248157	2023-12-06 19:12:49.248009	e398b247-716d-4fb9-a1c8-79f436663645	2506
2510	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.258703	2023-12-06 19:12:49.258667	a87120da-09c3-4335-9ff9-05e8fa955d19	2510
2511	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.258803	2023-12-06 19:12:49.258775	8e75aaa1-5bbc-4900-8948-27477078e715	2511
2513	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	\N	2023-12-06 19:12:49.263028	2023-12-06 19:12:49.262934	c58f69b2-6cc1-4773-a913-23a9a9833afe	2513
2516	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	\N	2023-12-06 19:12:49.269569	2023-12-06 19:12:49.269507	da1d8963-47b2-415b-896b-55c23be7dd91	2516
1733	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	\N	2023-12-06 19:12:46.587243	2023-12-06 19:12:46.586313	7f7cad5d-f229-43e7-a578-70e6f34d7fee	1733
1738	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	\N	2023-12-06 19:12:46.597057	2023-12-06 19:12:46.597044	253f8916-10df-4da1-b1d8-1c8c75867bd0	1738
1743	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	\N	2023-12-06 19:12:46.606124	2023-12-06 19:12:46.60611	25389791-bf44-4e2a-9b95-bfae1be51d2c	1743
1746	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	\N	2023-12-06 19:12:46.638359	2023-12-06 19:12:46.637432	944e0642-54bb-4e51-bd55-b20936bdff2d	1746
1749	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	\N	2023-12-06 19:12:46.66117	2023-12-06 19:12:46.661152	fb5a5e75-eb13-41d0-a0df-1f552ac435f3	1749
1753	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	\N	2023-12-06 19:12:46.668781	2023-12-06 19:12:46.668675	5cf5555f-520d-4c8f-8ea0-40210780e685	1753
1755	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	\N	2023-12-06 19:12:46.673076	2023-12-06 19:12:46.673023	570519b5-a9dd-412c-8251-e2bfb5d9ba13	1755
1760	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:46.707224	2023-12-06 19:12:46.707181	9418156d-fec3-4077-b872-efc5bfae9df5	1760
1763	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	\N	2023-12-06 19:12:46.740508	2023-12-06 19:12:46.739611	3337df7d-c7d8-488b-8deb-768f3bacfb0e	1763
1766	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	\N	2023-12-06 19:12:46.750246	2023-12-06 19:12:46.750212	029c961e-7b19-42c9-a8da-8e6a6954a3af	1766
1769	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	\N	2023-12-06 19:12:46.757677	2023-12-06 19:12:46.757663	15fc5456-03dd-404a-9842-d4e1c2a6fff3	1769
1774	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	\N	2023-12-06 19:12:46.796326	2023-12-06 19:12:46.795446	047ee381-df71-49b3-8534-994a442585da	1774
1781	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-12-06 19:12:46.834462	2023-12-06 19:12:46.833299	1a54db45-8e4c-45f5-9a1c-7c8c182b3204	1781
1782	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-12-06 19:12:46.842508	2023-12-06 19:12:46.842461	ca171a8a-693b-4464-a518-c4a4cb711616	1782
1787	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	\N	2023-12-06 19:12:46.850677	2023-12-06 19:12:46.850637	ae09d709-4556-4b82-ac94-81bf87b73298	1787
1790	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	\N	2023-12-06 19:12:46.856864	2023-12-06 19:12:46.856822	9972ba5b-6b39-4bf6-b275-48182cc6a90d	1790
1794	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-12-06 19:12:46.863604	2023-12-06 19:12:46.86354	23446239-6b9a-4c13-b078-c54c3ef7323d	1794
1797	uri://ed-fi.org/SourceSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:46.896665	2023-12-06 19:12:46.895622	3e75ac81-375c-41fb-9f0f-7c51a1ba4c92	1797
1801	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	\N	2023-12-06 19:12:46.93267	2023-12-06 19:12:46.931786	58d18af3-20af-47a7-b138-98c5d0d2f8c2	1801
1804	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	\N	2023-12-06 19:12:46.941596	2023-12-06 19:12:46.941582	cc9bb40c-e78f-47a6-bfe1-a46363f51454	1804
1807	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	\N	2023-12-06 19:12:46.970158	2023-12-06 19:12:46.969117	a4740066-1fc6-41e0-a0c5-59ec21cd4f0a	1807
1809	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:47.011114	2023-12-06 19:12:47.010235	17302c7e-b5bf-40f9-8a99-17e1562bd39a	1809
1814	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:47.023397	2023-12-06 19:12:47.023216	32fb9b4f-1f27-4830-88f6-f924ab96451a	1814
1817	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	Reached the age limit	Reached the maximum age limit for services	Student exited the Special Education program and related services because of an ineligibility other than reaching the maximum age limit.	\N	\N	\N	\N	2023-12-06 19:12:47.060436	2023-12-06 19:12:47.059214	e5c59612-cf62-410e-b05a-353706ddf4c9	1817
1821	uri://ed-fi.org/SpecialEducationExitReasonDescriptor	No longer eligible for Special Education	No longer eligible for Special Education	Student exited the Special Education program and related services because of an ineligibility other than reaching age limit	\N	\N	\N	\N	2023-12-06 19:12:47.069513	2023-12-06 19:12:47.069482	466dcb78-da8b-4e94-a69f-1ffb7ded31f6	1821
1827	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	\N	2023-12-06 19:12:47.100157	2023-12-06 19:12:47.099175	8dac93fd-9f22-4f46-96a0-6efd7991b22a	1827
1831	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Enrollment	Enrollment	Indicates the education organization (typically a school) where the student was enrolled at the time the assessment was taken by the student. If dual-enrolled, what the school of record.	\N	\N	\N	\N	2023-12-06 19:12:47.14596	2023-12-06 19:12:47.144475	7dd02cbd-de18-4f84-b76b-69e74aca53c7	1831
1835	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	\N	2023-12-06 19:12:47.157871	2023-12-06 19:12:47.157846	43b6748d-027c-4403-b07d-4ead71cbe3a4	1835
1840	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	\N	2023-12-06 19:12:47.167373	2023-12-06 19:12:47.167313	19f071d0-812e-41b6-b5d9-a9e96e10f609	1840
2548	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:49.338872	2023-12-06 19:12:49.338847	f7b18db2-ec28-4097-9284-c2cae0952e8a	2548
2553	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.352086	2023-12-06 19:12:49.352058	6a268e9e-bb31-4567-a1e3-1c65c30392e0	2553
2558	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti Kaah	Kluti Kaah	Native Village of Kluti Kaah (aka Copper Center)	\N	\N	\N	\N	2023-12-06 19:12:49.364013	2023-12-06 19:12:49.363924	1486345e-b076-4214-888a-f087496d8794	2558
2562	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	\N	2023-12-06 19:12:49.37328	2023-12-06 19:12:49.373243	fb768acb-1c42-42ff-abf4-450004709963	2562
2575	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.401456	2023-12-06 19:12:49.401435	c6153adf-7ac6-476e-9b62-157af9361892	2575
2577	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of the Lac du Flambeau Reservation of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.407037	2023-12-06 19:12:49.406854	8c099706-3cbd-48c1-9e43-69e804cbd053	2577
2582	uri://ed-fi.org/TribalAffiliationDescriptor	Little Shell Tribe 	Little Shell Tribe 	Little Shell Tribe of Chippewa Indians of Montana	\N	\N	\N	\N	2023-12-06 19:12:49.415453	2023-12-06 19:12:49.415436	c93ef1a6-ee87-4861-bc53-f6cc4dd5c7b5	2582
2586	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.423897	2023-12-06 19:12:49.423804	3536e5e3-1fa8-4cf4-8e9b-4cac8b3b5136	2586
2591	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	\N	2023-12-06 19:12:49.432718	2023-12-06 19:12:49.432703	702d608a-5e1e-4d7c-9795-7d14b1f78916	2591
2593	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.436602	2023-12-06 19:12:49.436589	a9f09a32-1836-4a79-ac75-6ca4c2110dfc	2593
2596	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.443822	2023-12-06 19:12:49.443637	833825cf-e5c9-4367-8601-e9857ee4c6b0	2596
2600	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	\N	2023-12-06 19:12:49.452374	2023-12-06 19:12:49.45236	acebc1d7-d8b7-44a0-ac1e-42e25c79e047	2600
2607	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.466668	2023-12-06 19:12:49.466643	90bef4d4-5574-4e51-934a-3bbadd982c2f	2607
2612	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	\N	2023-12-06 19:12:49.476826	2023-12-06 19:12:49.476814	8c69d838-ceba-48b5-9258-74a5cd89a064	2612
2615	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.48457	2023-12-06 19:12:49.484532	0ca59e66-edac-4d18-aec3-e952a3e94fc3	2615
2619	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:49.493541	2023-12-06 19:12:49.492521	4ed548d4-37a3-4b58-9213-a794f5585399	2619
2624	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.50529	2023-12-06 19:12:49.50525	e3fe27a3-e7a3-4e9c-ad63-ab6d2f6b38cd	2624
2630	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	\N	2023-12-06 19:12:49.515552	2023-12-06 19:12:49.515523	53d7c94e-5732-419b-bc9d-7771dd9a5e60	2630
2638	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	\N	2023-12-06 19:12:49.535693	2023-12-06 19:12:49.53564	51d3631b-9ef1-4fb7-bbf8-9d383bd057dc	2638
2641	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	\N	2023-12-06 19:12:49.538801	2023-12-06 19:12:49.538787	b79a9ae5-e7b4-4da9-bfb7-7a31bd086c0d	2641
2646	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	\N	2023-12-06 19:12:49.551554	2023-12-06 19:12:49.551519	2b1dcd13-47ee-4e09-a9d0-edcbd61e192b	2646
2650	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	\N	2023-12-06 19:12:49.559467	2023-12-06 19:12:49.559454	8a9c8a33-e321-48fc-be3d-c8568178397c	2650
2653	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	\N	2023-12-06 19:12:49.568592	2023-12-06 19:12:49.568476	efdf7347-c12c-48fd-87be-a5397c146f2c	2653
2656	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.571582	2023-12-06 19:12:49.571554	43846046-84ce-41de-888d-2b7ca65bf538	2656
2658	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	\N	2023-12-06 19:12:49.575129	2023-12-06 19:12:49.57509	d83ca793-032e-4c1b-a6db-7a41768b55e4	2658
2663	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.58629	2023-12-06 19:12:49.586226	fb708737-0255-4ca0-aa09-044bcf85c887	2663
2665	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.59029	2023-12-06 19:12:49.590276	8bbc7105-70bb-434d-895d-34e2b97bfb97	2665
2667	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay Owingeh	Ohkay Owingeh	Ohkay Owingeh, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.595252	2023-12-06 19:12:49.595224	a17777ea-4bda-45f3-971a-ea4cae67358a	2667
2670	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:49.599187	2023-12-06 19:12:49.599145	f5873208-b695-490e-b9e5-3d04f8ac40e9	2670
2673	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	\N	2023-12-06 19:12:49.605316	2023-12-06 19:12:49.605206	c1fd0efb-4695-4277-90d5-d586acbe6266	2673
2684	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.628733	2023-12-06 19:12:49.628676	51a2330f-9444-49b6-80ef-de0d624b5b31	2684
2686	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.631589	2023-12-06 19:12:49.63156	f67b68af-af17-4b08-b7ed-3127caeae25d	2686
2691	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga Band of Indians 	Pechanga Band of Indians 	Pechanga Band of Indians	\N	\N	\N	\N	2023-12-06 19:12:49.642272	2023-12-06 19:12:49.642211	a120a73e-341c-4096-97e6-eb77761538fa	2691
2549	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe of Indians of the Kickapoo Reservation in Kansas	\N	\N	\N	\N	2023-12-06 19:12:49.343105	2023-12-06 19:12:49.34309	cb413d65-da1b-4954-991c-256dadf4f971	2549
2551	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	\N	2023-12-06 19:12:49.346403	2023-12-06 19:12:49.346374	48e57c35-8dc5-4723-8fee-16ffc568b23b	2551
2554	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Indian Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.352485	2023-12-06 19:12:49.352438	8599c6b4-7b54-4fc8-95ff-2db8b69761ba	2554
2556	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	\N	2023-12-06 19:12:49.356555	2023-12-06 19:12:49.356541	a43ce620-652e-4737-9030-48391065d6e3	2556
2559	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:49.364092	2023-12-06 19:12:49.364067	302e8f4e-1b6d-45e9-ac2c-010874af0bcb	2559
2561	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	\N	2023-12-06 19:12:49.368597	2023-12-06 19:12:49.368572	25d9306b-edae-4037-abc9-97a3825b2b65	2561
2564	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	\N	2023-12-06 19:12:49.37505	2023-12-06 19:12:49.37502	90fab1a0-ff96-491e-89d0-d77999bf723a	2564
2565	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	\N	2023-12-06 19:12:49.378525	2023-12-06 19:12:49.37851	a4267984-0d5d-464f-9dab-c56a375ae923	2565
2570	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.389439	2023-12-06 19:12:49.389423	6166dcbc-1f12-40d5-9c45-30a89f46a4ef	2570
2573	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.396507	2023-12-06 19:12:49.396481	8cc8aa54-0604-40cc-b373-99bcda62478a	2573
2578	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	\N	2023-12-06 19:12:49.407436	2023-12-06 19:12:49.407385	cf7302b0-3630-4132-9ead-5d570e3c0df9	2578
2588	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla and Cupeno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.425131	2023-12-06 19:12:49.424984	9c920158-59fa-40b8-ab2c-2f22c449c2bb	2588
2595	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.441993	2023-12-06 19:12:49.441966	fc46a5eb-889d-4f01-81a6-55168b44ef84	2595
2599	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.447765	2023-12-06 19:12:49.447742	aa926aa0-1e99-4207-8037-ce254fe84d45	2599
2603	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.45907	2023-12-06 19:12:49.459057	f96f3086-c9ac-450b-b445-2113bccdaaa2	2603
2605	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.466539	2023-12-06 19:12:49.466511	920624fc-9cb3-486b-946f-eae20b42e2f8	2605
2610	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero Apache	Mescalero Apache	Mescalero Apache Tribe of the Mescalero Reservation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.47358	2023-12-06 19:12:49.47353	e483a319-7903-45cb-ae91-912660f268d0	2610
2616	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.485795	2023-12-06 19:12:49.485773	32df459d-03e3-451f-bf00-7f76747a777b	2616
2618	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	\N	2023-12-06 19:12:49.492857	2023-12-06 19:12:49.492831	4a7f1c8e-5bec-48be-8c24-ba79627eee8c	2618
2623	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.503775	2023-12-06 19:12:49.503759	c6005e53-8cfb-4707-83cb-233424bdfb53	2623
2626	uri://ed-fi.org/TribalAffiliationDescriptor	Monacan Indian Nation	Monacan Indian Nation	Monacan Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.508355	2023-12-06 19:12:49.508254	ece21cba-892a-496f-a280-5bbb22699460	2626
2628	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee (Creek) Nation	Muscogee (Creek) Nation	The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-12-06 19:12:49.512561	2023-12-06 19:12:49.512535	4f270f86-8ead-43c9-9292-fb42c5142236	2628
2631	uri://ed-fi.org/TribalAffiliationDescriptor	Nansemond Indian Tribe	Nansemond Indian Tribe	Nansemond Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.518599	2023-12-06 19:12:49.518555	36c45bb8-8ed3-4450-8d23-de43ddcc30a2	2631
2634	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	\N	2023-12-06 19:12:49.52376	2023-12-06 19:12:49.522671	66ae55c8-bc82-477c-8e69-93aea160f889	2634
2637	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	\N	2023-12-06 19:12:49.530586	2023-12-06 19:12:49.53057	2050d9d1-076f-4a42-9125-85cc98d59157	2637
2640	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	\N	2023-12-06 19:12:49.537918	2023-12-06 19:12:49.537845	17568f5b-b888-4e6d-b4ba-b11288764cf6	2640
2645	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	\N	2023-12-06 19:12:49.549259	2023-12-06 19:12:49.54922	524d6a48-c7ce-4c3c-8f6a-bda9bac63466	2645
2649	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	\N	2023-12-06 19:12:49.556713	2023-12-06 19:12:49.556528	08ac47d3-62f8-4ba2-9d97-746640b41e10	2649
2652	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	\N	2023-12-06 19:12:49.563584	2023-12-06 19:12:49.563551	48df8247-2d12-4639-8153-bec79d314346	2652
2657	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe of the Northern Cheyenne Indian Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:49.574445	2023-12-06 19:12:49.5744	06f45607-b414-4bcb-9240-460b57e2b791	2657
2659	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.579156	2023-12-06 19:12:49.579101	4337d292-6f79-4a1b-b692-9fb1983bc966	2659
2662	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	\N	2023-12-06 19:12:49.583446	2023-12-06 19:12:49.583216	3db9de13-7179-4864-b21c-9bc7c37efb42	2662
2664	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	\N	2023-12-06 19:12:49.587443	2023-12-06 19:12:49.587197	5fe4abaa-7df7-4eeb-b92c-b33f5de9de91	2664
2550	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.34588	2023-12-06 19:12:49.345852	a0899437-c672-49e4-80c3-42bff3c7e05c	2550
2555	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	\N	2023-12-06 19:12:49.353884	2023-12-06 19:12:49.353857	20282073-3ed2-45dc-9152-706352aa833b	2555
2563	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	\N	2023-12-06 19:12:49.374033	2023-12-06 19:12:49.373965	7ac3b95b-d412-46f8-bb8d-492100ed86f7	2563
2566	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	\N	2023-12-06 19:12:49.381014	2023-12-06 19:12:49.380995	542a7726-5ff4-4529-8287-43d338d2af3e	2566
2568	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	\N	2023-12-06 19:12:49.38888	2023-12-06 19:12:49.388825	1d19f4ec-cf6b-4b4e-a1d7-6be59539b867	2568
2571	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	\N	2023-12-06 19:12:49.39516	2023-12-06 19:12:49.395146	308f7b66-294c-41aa-bcc9-022156e34746	2571
2574	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.39959	2023-12-06 19:12:49.399395	37621b4b-26d6-4fea-955c-7f11097495a3	2574
2576	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.403329	2023-12-06 19:12:49.403172	2749dd9f-8c0f-463b-9885-5f8399164086	2576
2580	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.409551	2023-12-06 19:12:49.409533	6cfeb3af-9e5e-4823-add2-eb1763baea47	2580
2581	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	\N	2023-12-06 19:12:49.414019	2023-12-06 19:12:49.413958	2c19d8f8-281e-425c-aa3c-654cb2cf2895	2581
2584	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	\N	2023-12-06 19:12:49.418008	2023-12-06 19:12:49.417993	29912f09-e269-4723-a116-d4263f19c934	2584
2585	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.421904	2023-12-06 19:12:49.421876	84d22147-5c61-48da-a98f-a57961dcb5b7	2585
2590	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	\N	2023-12-06 19:12:49.431991	2023-12-06 19:12:49.431976	fa23bad1-ab60-46cb-b7ee-171c62ab009d	2590
2594	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:49.439045	2023-12-06 19:12:49.439031	0e6ae813-e88f-48e5-96b0-00bfa194e8a2	2594
2597	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	\N	2023-12-06 19:12:49.44548	2023-12-06 19:12:49.445463	bb24b9c6-aac1-468a-a08a-0f6d55f916a2	2597
2602	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.458645	2023-12-06 19:12:49.458632	379cb526-0e93-4c4b-b37c-e13a0588a5c9	2602
2606	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	\N	2023-12-06 19:12:49.466836	2023-12-06 19:12:49.466441	ab6abc93-083c-4edd-b1ad-400cb4118a10	2606
2611	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.474899	2023-12-06 19:12:49.474882	dd845da8-2455-4e0f-a4ae-0b7f3eacd42e	2611
2614	uri://ed-fi.org/TribalAffiliationDescriptor	Mi'kmaq Nation	Mi'kmaq Nation	Mi'kmaq Nation	\N	\N	\N	\N	2023-12-06 19:12:49.48276	2023-12-06 19:12:49.482715	04bfc4fc-6b93-4264-8974-fbdab6540070	2614
2617	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	\N	2023-12-06 19:12:49.489597	2023-12-06 19:12:49.489518	7d744634-04ed-4f85-a521-788cb38573ff	2617
2621	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.496245	2023-12-06 19:12:49.496232	65cda029-da0c-48d4-a082-4f7412e366e7	2621
2629	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.514591	2023-12-06 19:12:49.514564	562ff146-ce8b-44d7-bb87-42d637e28824	2629
2633	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	\N	2023-12-06 19:12:49.52281	2023-12-06 19:12:49.522796	9882a3f2-2ee6-4d7c-a13a-5db75cf5c39c	2633
2636	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.529475	2023-12-06 19:12:49.529462	da2ebe16-6fb0-47d3-8ed8-ca70603191b3	2636
2642	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	\N	2023-12-06 19:12:49.54201	2023-12-06 19:12:49.541994	0315ef25-7f3e-4820-969b-514b1ae813e9	2642
2648	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.556363	2023-12-06 19:12:49.556346	67a0c4f8-5329-4e5f-a8a8-72558bd2c00c	2648
2654	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-12-06 19:12:49.568899	2023-12-06 19:12:49.56888	27c37f68-a094-40f9-813c-afe92a5ebbbe	2654
2661	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of the Shoshone Nation	\N	\N	\N	\N	2023-12-06 19:12:49.582077	2023-12-06 19:12:49.582052	0b7c55dd-1473-4828-b82a-c92396384082	2661
2666	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	\N	2023-12-06 19:12:49.59173	2023-12-06 19:12:49.591716	8e9cdf72-d065-4b3a-8267-13de58923553	2666
2672	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	\N	2023-12-06 19:12:49.605253	2023-12-06 19:12:49.605048	bd8c8d6c-010e-47bb-8d4b-893992d57d27	2672
2676	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.613048	2023-12-06 19:12:49.613036	0c9a7994-8781-4798-acd4-f13a202ba2ef	2676
2680	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.6195	2023-12-06 19:12:49.619464	ae32a575-3480-4430-87f0-477ccb2afa7d	2680
2682	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	\N	2023-12-06 19:12:49.622764	2023-12-06 19:12:49.622748	e4399585-a4f4-48ee-9288-83dc14cee1b6	2682
2552	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	\N	2023-12-06 19:12:49.348205	2023-12-06 19:12:49.347538	e526c712-d78b-4426-805d-67f1288be40b	2552
2557	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	\N	2023-12-06 19:12:49.359867	2023-12-06 19:12:49.359813	f923d913-f019-4318-afa2-c65c5b80e99c	2557
2560	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.36495	2023-12-06 19:12:49.364916	f90d5c98-8c0d-48b6-8ffa-7b9a7c657195	2560
2567	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	\N	2023-12-06 19:12:49.382686	2023-12-06 19:12:49.382649	5a7317c5-3e13-4d9a-9c74-52692810d8e9	2567
2569	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	\N	2023-12-06 19:12:49.389167	2023-12-06 19:12:49.3891	9408d33e-41b4-4fa2-ab31-9391b4469fd9	2569
2572	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	\N	2023-12-06 19:12:49.39564	2023-12-06 19:12:49.39549	6d773d78-b3a7-4b8f-91e7-bb6e8b8a5c29	2572
2579	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	\N	2023-12-06 19:12:49.408679	2023-12-06 19:12:49.408665	e67b29c3-3c2b-494a-a5fa-84f9d8156144	2579
2583	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.417289	2023-12-06 19:12:49.417272	e92a6008-7cd2-4035-bc84-69e96955014f	2583
2587	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.424712	2023-12-06 19:12:49.424664	ed784fe4-af1f-4ef9-972a-10f089297bc2	2587
2589	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.430395	2023-12-06 19:12:49.430381	4ae6f698-9e14-4028-b4f6-e902a253ffc3	2589
2592	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:49.433922	2023-12-06 19:12:49.433895	42e3744b-73d8-4062-8440-d895861d6390	2592
2598	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	\N	2023-12-06 19:12:49.446944	2023-12-06 19:12:49.446929	fbebb9c1-8089-4ddb-8e68-2836c4b0cda9	2598
2601	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	\N	2023-12-06 19:12:49.45532	2023-12-06 19:12:49.455278	d1dc363b-ba26-48a6-8178-394c8a4b655f	2601
2604	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.459283	2023-12-06 19:12:49.459257	d39b0046-f4a1-41d0-8cfc-b28afe6616e0	2604
2608	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.466635	2023-12-06 19:12:49.466594	7139d551-828d-48f2-892d-fd42eb2f29aa	2608
2609	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:49.472572	2023-12-06 19:12:49.472557	592a82c0-c7cd-4991-8d7d-5f59f5fa597e	2609
2613	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:49.479722	2023-12-06 19:12:49.479702	b9aae82f-05ca-42b0-9938-f3c4f74b11b9	2613
2620	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	\N	2023-12-06 19:12:49.493587	2023-12-06 19:12:49.493537	75df77f8-bea6-417b-88ee-382ea9452dfa	2620
2622	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	Modoc Nation	\N	\N	\N	\N	2023-12-06 19:12:49.499247	2023-12-06 19:12:49.499213	63b310be-91e7-4956-9900-7da13fdc26ec	2622
2625	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	\N	2023-12-06 19:12:49.505277	2023-12-06 19:12:49.505237	b456b7ab-8b6a-4f62-bb05-16ea59d8a07f	2625
2627	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.509396	2023-12-06 19:12:49.509368	23703251-60b2-44a1-9be7-ee25aeed0f9d	2627
2632	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	\N	2023-12-06 19:12:49.520366	2023-12-06 19:12:49.52033	77f7dcda-de47-41ce-b357-8e54590a6821	2632
2635	uri://ed-fi.org/TribalAffiliationDescriptor	Native Village of Atqasuk	Native Village of Atqasuk	Native Village of Atqasuk	\N	\N	\N	\N	2023-12-06 19:12:49.529047	2023-12-06 19:12:49.529022	4a47c20c-a5cd-4af6-89c1-6d8a02ea2662	2635
2639	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	\N	2023-12-06 19:12:49.537583	2023-12-06 19:12:49.53754	144b8847-c46d-4303-8d98-3b13a8ef62bd	2639
2643	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	\N	2023-12-06 19:12:49.543284	2023-12-06 19:12:49.543191	45b4e92c-1b40-4ab4-94f0-b59f060268a3	2643
2644	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.546837	2023-12-06 19:12:49.546797	01b02e50-0b47-490a-9c88-e39a1e496e46	2644
2647	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	\N	2023-12-06 19:12:49.551958	2023-12-06 19:12:49.551942	7b84f348-94d1-43cd-9bde-b178c4d3b4d3	2647
2651	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	\N	2023-12-06 19:12:49.561505	2023-12-06 19:12:49.56149	e9ce4f0e-fd86-4aca-8576-09d773fdc30e	2651
2655	uri://ed-fi.org/TribalAffiliationDescriptor	North Fork	North Fork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.570749	2023-12-06 19:12:49.570699	50da6fd5-25c2-4b61-8637-c1b648f81185	2655
2660	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	\N	2023-12-06 19:12:49.581368	2023-12-06 19:12:49.581355	d5b53724-0665-4039-a4cc-58512d2dc5d9	2660
2668	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamiut	Ohogamiut	Village of Ohogamiut	\N	\N	\N	\N	2023-12-06 19:12:49.596829	2023-12-06 19:12:49.596788	51e7bc2a-1455-4fbe-a4f3-05901467529b	2668
2671	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	\N	2023-12-06 19:12:49.603659	2023-12-06 19:12:49.60358	b5ae7655-951a-4ebe-9064-24c1c4ea251f	2671
2678	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	\N	2023-12-06 19:12:49.614049	2023-12-06 19:12:49.61393	e975339d-779e-486d-9c4f-63116f38b8b9	2678
2688	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Tribe	Passamaquoddy Tribe	Passamaquoddy Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.634997	2023-12-06 19:12:49.634921	f1a01103-9ea4-4bf9-bd94-8ecfacbd52eb	2688
2669	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida	Oneida	Oneida Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.598222	2023-12-06 19:12:49.598209	2d0d3da2-bdc3-4301-a69d-7d6dc7d1d040	2669
2674	uri://ed-fi.org/TribalAffiliationDescriptor	Osage Nation	Osage Nation	The Osage Nation	\N	\N	\N	\N	2023-12-06 19:12:49.605871	2023-12-06 19:12:49.605856	749f4143-8a42-4f4b-ab5e-4570701b0759	2674
2675	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:49.609871	2023-12-06 19:12:49.609846	21bf0d8a-f56a-459e-a663-d6738e16b9fa	2675
2677	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.613146	2023-12-06 19:12:49.612948	8f41023a-6a61-4332-900e-38249a36d88b	2677
2679	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	\N	2023-12-06 19:12:49.617424	2023-12-06 19:12:49.617409	291d1149-0a61-441e-bc6f-fd4f34b1a1ec	2679
2681	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	\N	2023-12-06 19:12:49.621111	2023-12-06 19:12:49.621097	48ed4f26-dc93-4963-8d58-801fa1271f6f	2681
2683	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.625868	2023-12-06 19:12:49.625832	1c28ae51-a351-4638-ba9e-2583e9f2d79e	2683
2685	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	\N	2023-12-06 19:12:49.629123	2023-12-06 19:12:49.62907	847ee9c9-26de-48ef-9fbc-73f015a15bec	2685
2689	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	\N	2023-12-06 19:12:49.636114	2023-12-06 19:12:49.635925	1bd36da3-bdfe-4be2-9d80-95db8e66fd27	2689
2693	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.643863	2023-12-06 19:12:49.643834	7777b0a9-178f-41ef-9030-b4a37d9ffd0e	2693
2695	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria Tribe of Oklahoma	Peoria Tribe of Oklahoma	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.649486	2023-12-06 19:12:49.649442	719b70b6-1dde-439d-8ca9-ec4d552850e9	2695
2699	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:49.65801	2023-12-06 19:12:49.657993	34d07de0-7569-46b4-a0ff-4b6fd9be00df	2699
2702	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Pitka's Point Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:49.663733	2023-12-06 19:12:49.663707	3b11e15b-3a81-4cbc-8a0d-bad0d03e163f	2702
2705	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:49.66903	2023-12-06 19:12:49.668981	ad045eff-fddf-4f73-a880-a0cae3c64640	2705
2706	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	\N	2023-12-06 19:12:49.673008	2023-12-06 19:12:49.672954	ea8abdb5-09a8-4703-abda-c58cd2b15b7a	2706
2711	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	\N	2023-12-06 19:12:49.681838	2023-12-06 19:12:49.681804	cc2db72c-faad-41cd-8a66-310865d41faa	2711
2716	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:49.691206	2023-12-06 19:12:49.691143	94d3ead2-2455-46dd-a487-bf5c3f7cb7cd	2716
2719	uri://ed-fi.org/TribalAffiliationDescriptor	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	\N	\N	\N	\N	2023-12-06 19:12:49.699229	2023-12-06 19:12:49.699194	7b70af20-a9a6-43fa-bd2d-248f1d6b90fb	2719
2726	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.714537	2023-12-06 19:12:49.714498	55793d45-779b-46e6-9bcf-405329955b44	2726
2730	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.723143	2023-12-06 19:12:49.723127	a711fbac-26dd-4f9b-bc10-359862a83f22	2730
2732	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.729115	2023-12-06 19:12:49.728983	40b9d8fb-b4df-4128-ad9c-a3ed1c9bd92a	2732
2738	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.740289	2023-12-06 19:12:49.740256	63cb900c-8b70-448e-86d1-705ddbe464d9	2738
2744	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.752469	2023-12-06 19:12:49.75225	c6d5ea63-a0dc-4b3a-a60f-6efa7a7c0a7f	2744
2746	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah Navajo Chapter	Ramah Navajo Chapter	Ramah Navajo Chapter of the Navajo Nation	\N	\N	\N	\N	2023-12-06 19:12:49.758007	2023-12-06 19:12:49.757979	931f77d3-f604-407a-9bd1-d3f1c84ff409	2746
2753	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:49.77376	2023-12-06 19:12:49.773734	cadc5602-2ee6-4eb2-9e5d-6aa4748f5563	2753
2756	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.779747	2023-12-06 19:12:49.779722	e850a5bb-1631-41a2-b4da-b6f82a3532b3	2756
2760	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	\N	2023-12-06 19:12:49.786843	2023-12-06 19:12:49.786816	69dac2b2-28e4-4a65-9d18-941cfbf9659c	2760
2763	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.794174	2023-12-06 19:12:49.794121	93f90e6e-d53d-453c-bafd-9a68bfa779b6	2763
2766	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	\N	2023-12-06 19:12:49.798492	2023-12-06 19:12:49.798443	766af73f-6236-4ecc-8a6e-6491018f5b9d	2766
2770	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.806298	2023-12-06 19:12:49.806271	cf9f4de0-0d9e-4fc2-9361-f32576f6e76b	2770
2774	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.81186	2023-12-06 19:12:49.811823	13ade0c2-f1e3-47b3-9db5-9cd89939b730	2774
2778	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	\N	2023-12-06 19:12:49.820909	2023-12-06 19:12:49.820894	42b6d922-90cf-42a9-b19a-c0892f3418a5	2778
2687	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Pleasant Point	Passamaquoddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-12-06 19:12:49.635066	2023-12-06 19:12:49.635053	b8d9d45e-3f7d-4955-b66c-64cfc805cecb	2687
2690	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.639244	2023-12-06 19:12:49.639228	651120f7-975c-4a4b-8299-8c5b41a2090f	2690
2696	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	\N	2023-12-06 19:12:49.650877	2023-12-06 19:12:49.650851	3a97b1dd-db24-4ed7-ae03-70ec6f30cef2	2696
2701	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	\N	2023-12-06 19:12:49.660302	2023-12-06 19:12:49.66027	0f0bf7f7-3dfb-4b43-af2b-dff42e00684b	2701
2708	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:49.676163	2023-12-06 19:12:49.675971	963eaa00-869d-4935-b6d1-e7ea255bbe85	2708
2712	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.682729	2023-12-06 19:12:49.682701	34372be5-3ad7-4595-a0c1-6c78f4ecdb7d	2712
2714	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	\N	2023-12-06 19:12:49.687093	2023-12-06 19:12:49.687057	a9415c7c-589b-4826-80f9-4af906ee986a	2714
2721	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.701987	2023-12-06 19:12:49.701931	76c153ae-9785-48fd-9765-1e3ea403cafb	2721
2725	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.714093	2023-12-06 19:12:49.714066	d2ed80b4-7d4f-487c-a6a4-95a07344a3b2	2725
2731	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.723072	2023-12-06 19:12:49.723046	50ffc0be-cd79-4ec5-96f6-b41fc706fd65	2731
2734	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.731986	2023-12-06 19:12:49.73196	22c8093d-c0ca-47ec-b96a-5bedf9275c59	2734
2736	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.737164	2023-12-06 19:12:49.737137	282b6968-d1f0-4924-9a96-e799e63014b5	2736
2740	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	\N	2023-12-06 19:12:49.744857	2023-12-06 19:12:49.744831	df445c3d-b5c2-4ba7-9b49-71fd798acb23	2740
2747	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	\N	2023-12-06 19:12:49.759961	2023-12-06 19:12:49.75993	4da73dde-55a0-465c-899a-1210d49bd1cc	2747
2750	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	\N	2023-12-06 19:12:49.76733	2023-12-06 19:12:49.767297	d2625b02-6a36-4e5e-9e6f-d49a2e27603f	2750
2762	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation of Missouri in KS & NE	Sac & Fox Nation of Missouri in Kansas and Nebraska	Sac & Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:49.791766	2023-12-06 19:12:49.791739	3d65685f-7f40-4488-a25b-08e3c99c2f1e	2762
2768	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.802007	2023-12-06 19:12:49.801973	fa29ad20-755b-41e1-a206-69ca4e6881b8	2768
2771	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.808074	2023-12-06 19:12:49.808035	b3c93b38-3cdc-42c7-857e-794cdcf18b8c	2771
2775	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.814403	2023-12-06 19:12:49.814376	7cec0cab-3317-401a-98fa-62c15b21098c	2775
2780	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.821716	2023-12-06 19:12:49.821689	269a777f-5217-4d94-a969-9a7e2334ffa2	2780
2782	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.828464	2023-12-06 19:12:49.828427	2d415169-5144-469d-af4d-1fe4b24b7da9	2782
2787	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	\N	2023-12-06 19:12:49.83626	2023-12-06 19:12:49.836186	f90f307f-96bf-4514-b2dd-672ed94ae02f	2787
2789	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	\N	2023-12-06 19:12:49.841238	2023-12-06 19:12:49.841086	6c3ca0cb-0855-4bf9-aac2-48198a40859d	2789
2794	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	\N	2023-12-06 19:12:49.854322	2023-12-06 19:12:49.854272	2e69905b-766a-45bb-ab6c-ac07d180219e	2794
2797	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe of the Shoalwater Bay Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.860748	2023-12-06 19:12:49.860619	07c6c0d7-1ee4-4e27-b1e0-9566d2dbdbeb	2797
2800	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	\N	2023-12-06 19:12:49.866088	2023-12-06 19:12:49.865977	41eeb368-ea68-4ac4-81aa-ff17515a5c66	2800
2803	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.875871	2023-12-06 19:12:49.875845	0b42fe02-da58-4ce2-87c5-7b28a0f4995c	2803
2806	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.883348	2023-12-06 19:12:49.883273	cab88b3a-eed5-436a-a818-3fc4a3316938	2806
2811	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	\N	2023-12-06 19:12:49.89508	2023-12-06 19:12:49.895053	29528c42-a4f4-48b3-a798-a59c1f16cd68	2811
2816	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	\N	2023-12-06 19:12:49.903639	2023-12-06 19:12:49.903613	44d6798f-cd03-4a75-9553-78f2a034f536	2816
2818	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.909671	2023-12-06 19:12:49.90952	a4d1822b-180f-4720-8e8b-6193c3acac09	2818
2821	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	\N	2023-12-06 19:12:49.919988	2023-12-06 19:12:49.919864	c2c55391-1da3-4652-a92c-8082dd55be45	2821
2692	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	\N	2023-12-06 19:12:49.643282	2023-12-06 19:12:49.643269	46a32688-547a-452b-bf2c-4399a03fe415	2692
2697	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	\N	2023-12-06 19:12:49.651042	2023-12-06 19:12:49.651016	1e5d09ec-0275-453d-a04b-c67274a3a89b	2697
2698	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	\N	2023-12-06 19:12:49.657533	2023-12-06 19:12:49.657507	dba11348-0eb7-4dd0-a297-6cf65ddb0149	2698
2704	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creek Indians	\N	\N	\N	\N	2023-12-06 19:12:49.667146	2023-12-06 19:12:49.667133	e458ffd0-90b5-4236-8411-086af219e0ef	2704
2707	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan and Indiana	\N	\N	\N	\N	2023-12-06 19:12:49.675179	2023-12-06 19:12:49.675148	baf30041-9fb6-4285-9abb-2f94a1fd7704	2707
2710	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.679354	2023-12-06 19:12:49.679319	7b7ecf7e-4419-4a3e-854e-97952e5c6d67	2710
2713	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	\N	2023-12-06 19:12:49.685249	2023-12-06 19:12:49.685226	f7f07fa1-f7d4-4776-9797-bd89ad5acb68	2713
2718	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band Potawatomi Nation	\N	\N	\N	\N	2023-12-06 19:12:49.696718	2023-12-06 19:12:49.69662	d35c6f7a-7666-4a62-ad25-96de0355cda0	2718
2722	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.707164	2023-12-06 19:12:49.707133	7df317a5-fd75-49eb-857d-48f562d55e74	2722
2724	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.711082	2023-12-06 19:12:49.711045	1bc2a5bb-47aa-40a3-af61-8956fdb1ee5c	2724
2728	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.718759	2023-12-06 19:12:49.718732	65a28923-3bf7-4d06-912c-30bb64fc5f21	2728
2733	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.729914	2023-12-06 19:12:49.729878	7eb3837a-6db2-4854-a788-ce328c414c41	2733
2737	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zuni	Pueblo of Zuni	Zuni Tribe of the Zuni Reservation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.737201	2023-12-06 19:12:49.737163	56915c3e-3451-485f-92ab-0d001d272ccb	2737
2741	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw Tribe	Quapaw Tribe	Quapaw Nation	\N	\N	\N	\N	2023-12-06 19:12:49.747023	2023-12-06 19:12:49.746957	028d857e-732f-4287-966f-05a2559559b2	2741
2743	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.751706	2023-12-06 19:12:49.751691	bdf188c0-3930-46a8-9cce-58d9f2046524	2743
2749	uri://ed-fi.org/TribalAffiliationDescriptor	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	\N	\N	\N	\N	2023-12-06 19:12:49.764999	2023-12-06 19:12:49.764977	4397d681-136f-4717-8066-1f7b6fe942b3	2749
2752	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.773389	2023-12-06 19:12:49.773362	4ab7866d-d92a-4872-b250-6baf7b39eb64	2752
2755	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.778849	2023-12-06 19:12:49.778823	0c5860d2-580e-466e-89f2-7e38c9bf1c70	2755
2758	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria	\N	\N	\N	\N	2023-12-06 19:12:49.784932	2023-12-06 19:12:49.784896	bfa245c3-ab91-486f-bf96-2cbcbcf2cf47	2758
2761	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.787551	2023-12-06 19:12:49.787528	7adc6b65-52d6-42e5-9c20-8485c0d7715e	2761
2764	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.794633	2023-12-06 19:12:49.794606	b65a0fb2-e3f4-4fe6-b03b-ae24bb66224a	2764
2769	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.802405	2023-12-06 19:12:49.802373	a74ff043-fd08-44cd-a52b-40a20d5e69e1	2769
2772	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.808363	2023-12-06 19:12:49.808329	d1fe532f-4fa4-4295-8420-ef8162b6e81e	2772
2779	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:49.821792	2023-12-06 19:12:49.821765	384de710-9229-4f27-8dc0-c5fbb79de4cb	2779
2781	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	\N	2023-12-06 19:12:49.827464	2023-12-06 19:12:49.827441	9319c81c-977d-424b-8413-dce355cbc2c6	2781
2788	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole Nation of Oklahoma	Seminole Nation of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:49.839085	2023-12-06 19:12:49.839057	b25d0258-e317-4bd0-b470-565d4378b5ef	2788
2790	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga Nation	Seneca-Cayuga Nation	Seneca-Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:49.846025	2023-12-06 19:12:49.845896	7d3fa393-0337-4fe4-804c-b673dc03cb19	2790
2796	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.854415	2023-12-06 19:12:49.854243	8caa2721-4acf-4922-9a4c-2e7f45a48cbc	2796
2802	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	\N	2023-12-06 19:12:49.873064	2023-12-06 19:12:49.873002	6943b0ec-9a23-4ca0-9b3e-d4a20e516ee4	2802
2804	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.877885	2023-12-06 19:12:49.877839	4c230d45-06dd-4649-8f2f-ae8a4e127246	2804
2805	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	\N	2023-12-06 19:12:49.882107	2023-12-06 19:12:49.88207	93b68c98-e796-4a25-a6bd-fdce24f2e005	2805
2809	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.88988	2023-12-06 19:12:49.889859	0076d11a-f85a-4c99-a028-4c7eba6e1dad	2809
2694	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	\N	2023-12-06 19:12:49.648765	2023-12-06 19:12:49.648701	8156c461-b4ea-4505-a31c-3ac7a7e054e1	2694
2700	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	\N	2023-12-06 19:12:49.656925	2023-12-06 19:12:49.656881	6c398820-fc6a-4d3b-8e83-8640d961e4b7	2700
2703	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:49.666296	2023-12-06 19:12:49.666283	c1713ed3-108d-4e4a-beb9-cac9d8d1f948	2703
2709	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	\N	2023-12-06 19:12:49.676587	2023-12-06 19:12:49.676574	67184522-afb4-418b-aee3-cad885e225ce	2709
2715	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	\N	2023-12-06 19:12:49.689426	2023-12-06 19:12:49.689391	cd5fcc03-116e-4123-9132-9fb13023b044	2715
2717	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:49.695272	2023-12-06 19:12:49.695222	d2462047-d64a-47cb-a5f8-ded048473fc9	2717
2720	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.699882	2023-12-06 19:12:49.699802	691b3693-c56e-497e-ba52-211c504a7516	2720
2723	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.707682	2023-12-06 19:12:49.707544	912bcfef-3f4b-4ccf-af1a-fe915da92d0c	2723
2727	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.715222	2023-12-06 19:12:49.715136	0882485c-d2e2-4e4a-b813-39d6cf1ce94d	2727
2729	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.722492	2023-12-06 19:12:49.722464	5217620e-a386-46e6-b3af-f16023b7a8ac	2729
2735	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:49.732297	2023-12-06 19:12:49.732278	fc03a3bb-ae56-4010-846d-8a1a712f51aa	2735
2739	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point	\N	\N	\N	\N	2023-12-06 19:12:49.743809	2023-12-06 19:12:49.743782	f5a01cec-a13f-4b2e-96ad-b8ce44653cc4	2739
2742	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	\N	2023-12-06 19:12:49.750761	2023-12-06 19:12:49.750735	f7e133c7-2269-4f92-a675-c8d8693f2d95	2742
2745	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.757486	2023-12-06 19:12:49.757429	2392627d-b049-4463-9fc8-7e09a38ef7cc	2745
2748	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	\N	2023-12-06 19:12:49.764966	2023-12-06 19:12:49.764932	a0f27f84-432f-482a-be1c-a50046454886	2748
2751	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.768585	2023-12-06 19:12:49.76855	a1e298b6-780a-4b28-b521-41422313ea85	2751
2754	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	\N	2023-12-06 19:12:49.776116	2023-12-06 19:12:49.775841	1e487cbe-42d1-4db6-84e2-0c3599c4616e	2754
2757	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:49.780233	2023-12-06 19:12:49.780208	bb6375df-b0d9-4a1d-b671-81ad83ed80ee	2757
2759	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.785832	2023-12-06 19:12:49.785796	3194b6f1-7a33-438d-97c4-41123897b5ae	2759
2765	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	\N	2023-12-06 19:12:49.794854	2023-12-06 19:12:49.794788	8e091eb8-d55d-40fd-9e6c-cf24c3d79a39	2765
2767	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatof	Salamatof	Salamatof Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.800196	2023-12-06 19:12:49.800167	50fce80e-5334-4fa7-a040-d827aff486f9	2767
2773	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.808952	2023-12-06 19:12:49.808931	08c16d4f-6b0e-46f4-960c-deee39fb6a12	2773
2776	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Cahuilla	Santa Rosa of Cahuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.815417	2023-12-06 19:12:49.81539	639708cd-5fef-414d-a16f-a51105bdec5c	2776
2777	uri://ed-fi.org/TribalAffiliationDescriptor	Santo Domingo	Santo Domingo	Santo Domingo Pueblo	\N	\N	\N	\N	2023-12-06 19:12:49.819207	2023-12-06 19:12:49.819037	0d0ea5da-7cad-4b57-a83c-a835fcdde510	2777
2783	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	\N	2023-12-06 19:12:49.828519	2023-12-06 19:12:49.828467	0911bd26-0107-4de7-a331-f616be431ec3	2783
2786	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.835492	2023-12-06 19:12:49.835466	4cb9e3db-2438-4395-967d-349474de26ee	2786
2791	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	\N	2023-12-06 19:12:49.846519	2023-12-06 19:12:49.846493	18f39876-6a95-44fe-b7e3-0ce85551c826	2791
2793	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	\N	2023-12-06 19:12:49.853626	2023-12-06 19:12:49.853596	1a91cd14-d0a0-428f-be13-c92a6b3d6ae7	2793
2798	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.862286	2023-12-06 19:12:49.862116	26fead12-7243-4744-8fdf-9cec4f875033	2798
2807	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	\N	2023-12-06 19:12:49.884894	2023-12-06 19:12:49.884846	7677df98-b8ce-45ab-bc89-f43b48f85df4	2807
2812	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	\N	2023-12-06 19:12:49.896662	2023-12-06 19:12:49.896582	a453219e-70f1-48c4-8deb-cb2e6ee063f1	2812
2819	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.910864	2023-12-06 19:12:49.91059	95ee8011-0e56-4d81-9313-88b45025c30c	2819
2784	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	\N	2023-12-06 19:12:49.829047	2023-12-06 19:12:49.829006	b5ba049e-2786-4ab1-9550-895a07be87ae	2784
2785	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	\N	2023-12-06 19:12:49.833005	2023-12-06 19:12:49.832969	bde3e176-d38c-4996-b825-5dbf4cbe7ae8	2785
2792	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:49.846631	2023-12-06 19:12:49.846587	43888d0d-b3b3-4392-bab9-0209a9563a59	2792
2795	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee Tribe	Shawnee Tribe	Shawnee Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.854542	2023-12-06 19:12:49.854529	5b92fba7-a6e5-4754-82be-de69931ea9c7	2795
2799	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:49.861201	2023-12-06 19:12:49.861166	6790b5fd-be22-4ccb-9677-33b95df46f22	2799
2801	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	\N	2023-12-06 19:12:49.869398	2023-12-06 19:12:49.869036	9103cf4a-867c-4358-b7da-93f84330ba4c	2801
2808	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	\N	2023-12-06 19:12:49.888068	2023-12-06 19:12:49.887988	bc778682-20e2-49c3-ae26-f0815382242b	2808
2810	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:49.894857	2023-12-06 19:12:49.894802	f3769e28-2e3e-43d4-9780-81c1453fd287	2810
2814	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.902554	2023-12-06 19:12:49.902524	fd5c0c75-169c-4c21-afa8-e1a1b744b738	2814
2823	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.922714	2023-12-06 19:12:49.922687	69e3bf88-6d5c-471c-85dc-5e81b5070de3	2823
2826	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	\N	2023-12-06 19:12:49.930615	2023-12-06 19:12:49.930552	a5422d2e-aee4-4502-b38c-68fea96b523b	2826
2828	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	\N	2023-12-06 19:12:49.936935	2023-12-06 19:12:49.936861	d9453712-0690-4a72-91e3-dd53339f58e1	2828
2831	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.947004	2023-12-06 19:12:49.946952	41351642-c694-46c3-9161-328131d4b05b	2831
2833	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	\N	2023-12-06 19:12:49.950712	2023-12-06 19:12:49.950685	f7ad512d-6479-4330-8c5a-61394928444a	2833
2834	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	\N	2023-12-06 19:12:49.955882	2023-12-06 19:12:49.955855	f5b0786b-20ea-42c0-8045-516f4b17547a	2834
2838	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village 	\N	\N	\N	\N	2023-12-06 19:12:49.962793	2023-12-06 19:12:49.962719	b0803185-3ad9-4b86-abeb-d05e00f3fc38	2838
2842	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	\N	2023-12-06 19:12:49.973479	2023-12-06 19:12:49.973433	64979624-1299-414e-a44e-4d5758674951	2842
2846	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Timbisha Shoshone Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.982474	2023-12-06 19:12:49.982452	8efab817-8919-4e6d-bc6d-4e1f28be88d4	2846
2850	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	\N	2023-12-06 19:12:49.991774	2023-12-06 19:12:49.991714	7d70d106-28ce-4a75-8553-be476996d8b4	2850
2853	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-ni'	Tolowa Dee-ni'	Tolowa Dee-ni' Nation	\N	\N	\N	\N	2023-12-06 19:12:50.000794	2023-12-06 19:12:50.000748	a08d887a-a774-459a-b679-079828de6e86	2853
2857	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	\N	2023-12-06 19:12:50.007532	2023-12-06 19:12:50.007518	19eadca2-1ba3-497b-9031-59af04268ae3	2857
2859	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	\N	2023-12-06 19:12:50.012067	2023-12-06 19:12:50.012024	0c10ab5d-39e2-4912-8545-76235b2ca1b7	2859
2865	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:50.024561	2023-12-06 19:12:50.024525	f230c1d3-6e67-4173-bd71-a9512a9f8611	2865
2866	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	\N	2023-12-06 19:12:50.028394	2023-12-06 19:12:50.028379	ec88f75d-7ade-4087-965d-5a638e569c18	2866
2868	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	\N	2023-12-06 19:12:50.034643	2023-12-06 19:12:50.034629	dc8cfca8-c2ef-4351-a1c6-c06040781eb5	2868
2877	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:50.050759	2023-12-06 19:12:50.050732	6deb0f66-58de-40d7-8c76-ef719862593a	2877
2882	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government (Arctic Village and Village of Venetie)	\N	\N	\N	\N	2023-12-06 19:12:50.05967	2023-12-06 19:12:50.059639	af4529a3-61e8-4cfa-b0fe-d2495a1db673	2882
2890	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	\N	2023-12-06 19:12:50.077055	2023-12-06 19:12:50.077041	ceeba5ac-1542-479b-8042-fa6699104d40	2890
2892	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	\N	2023-12-06 19:12:50.081007	2023-12-06 19:12:50.08093	7094412c-a4a0-40f4-8106-9f3e25ad870b	2892
2895	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes (Wichita, Keechi, Waco & Tawakonie), Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.086761	2023-12-06 19:12:50.086748	e9d13313-daa1-468f-8c41-8c286ce6db7c	2895
2898	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	\N	2023-12-06 19:12:50.092765	2023-12-06 19:12:50.092752	ba791f8a-9e50-4f3c-9d7d-c64adcc49206	2898
2901	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-12-06 19:12:50.098794	2023-12-06 19:12:50.098768	ba2a24b8-1382-4da0-9313-7d7aca66ab2b	2901
2906	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:50.112865	2023-12-06 19:12:50.112827	1d7baf8f-6474-4651-8338-8d983bd9f459	2906
2813	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.896642	2023-12-06 19:12:49.896309	ef1b3def-e42f-4302-9483-cd9bfcbc4f55	2813
2815	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe of the Southern Ute Reservation, Colorado	\N	\N	\N	\N	2023-12-06 19:12:49.902745	2023-12-06 19:12:49.902149	6eb59a54-dd32-4708-ae3c-d982fe5e5b8a	2815
2817	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	\N	2023-12-06 19:12:49.908037	2023-12-06 19:12:49.908001	671fc586-8b1b-439b-961a-c1b32e8fd9fa	2817
2820	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	\N	2023-12-06 19:12:49.915909	2023-12-06 19:12:49.915857	1ee47ab5-b1b8-49ec-8406-f51677bf99b6	2820
2827	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:49.931035	2023-12-06 19:12:49.930993	d42e969d-6ef4-4419-9177-dde7e2ff2663	2827
2829	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	\N	2023-12-06 19:12:49.938274	2023-12-06 19:12:49.93815	d7c513cb-0932-4a30-b68e-3b8601341e31	2829
2832	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	\N	2023-12-06 19:12:49.948958	2023-12-06 19:12:49.948938	cbb2bc2d-e7e8-41d4-9a8c-d51330c02d64	2832
2836	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	\N	2023-12-06 19:12:49.959093	2023-12-06 19:12:49.959035	9c86bc00-0527-4b8c-afab-3a4bdf02da23	2836
2839	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	\N	2023-12-06 19:12:49.965373	2023-12-06 19:12:49.965319	dd7ea363-a0cf-4fc9-acca-332001043d19	2839
2843	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band, Elko Band, South Fork Band and Wells Band)	\N	\N	\N	\N	2023-12-06 19:12:49.973814	2023-12-06 19:12:49.973766	143330fc-e33d-4289-aa14-0efade8ae56c	2843
2848	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, North Dakota	\N	\N	\N	\N	2023-12-06 19:12:49.984291	2023-12-06 19:12:49.984275	317397ee-26be-485e-a2e2-4bf451848c67	2848
2852	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	\N	2023-12-06 19:12:49.996507	2023-12-06 19:12:49.996479	89491818-2540-48ce-bd85-7a94b63d8acd	2852
2856	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:50.006823	2023-12-06 19:12:50.006442	1e076d21-7505-4ff7-a65c-57505eb030a1	2856
2861	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.015427	2023-12-06 19:12:50.015411	fe8f807b-4a10-4a37-9084-f2af8ebd0b39	2861
2864	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	\N	2023-12-06 19:12:50.022836	2023-12-06 19:12:50.022823	c754bbda-529a-4ddc-87d9-8e47e2e496b7	2864
2867	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	\N	2023-12-06 19:12:50.02963	2023-12-06 19:12:50.029603	27930e9d-f0dc-443e-bc23-bb529e0e9378	2867
2869	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	\N	2023-12-06 19:12:50.035318	2023-12-06 19:12:50.035168	f62f3935-2ef5-4eaf-98fb-ca22434e6ebf	2869
2872	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	\N	2023-12-06 19:12:50.04256	2023-12-06 19:12:50.042544	1da10e2a-d874-4834-b3cc-b7f68f1418c2	2872
2880	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain Ute	Ute Mountain Ute	Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.057877	2023-12-06 19:12:50.057721	ea4feeb6-23b9-4c75-8d78-b5e6c63b7869	2880
2885	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	\N	2023-12-06 19:12:50.066288	2023-12-06 19:12:50.066254	77c154fb-21a6-4a18-9ce1-fe486088975a	2885
2886	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:50.070268	2023-12-06 19:12:50.070255	9867cf7d-f31b-4c8f-bec1-a13897406ec9	2886
2889	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	\N	2023-12-06 19:12:50.076318	2023-12-06 19:12:50.07629	7544d0b8-7131-4084-b6ea-59fefe41f86f	2889
2894	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:50.085655	2023-12-06 19:12:50.085628	d4374ee7-0247-49d9-89e4-3893b886adff	2894
2896	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:50.090352	2023-12-06 19:12:50.09034	0b1ef3e6-1815-4201-bf09-e9d811ca2110	2896
2902	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:50.100564	2023-12-06 19:12:50.100537	40eb4e0e-64cc-401e-bd51-74b9becde98e	2902
2904	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony and Campbell Ranch, Nevada	\N	\N	\N	\N	2023-12-06 19:12:50.111615	2023-12-06 19:12:50.111541	2d950ab7-ac1d-4a30-95d9-0840c0c151dc	2904
2910	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	DEPRECATED: Arctic Slope	DEPRECATED: Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-12-06 19:12:50.120623	2023-12-06 19:12:50.120608	2cf23528-61c6-41fb-9c40-fdbaf3865b4a	2910
2912	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	DEPRECATED: Atqasuk	DEPRECATED: Atqasuk Village (Atkasook)	\N	\N	\N	\N	2023-12-06 19:12:50.125973	2023-12-06 19:12:50.125913	55c981ba-daa6-4b97-84e2-d2f9bc7555e0	2912
2915	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	DEPRECATED: Iqurmuit	DEPRECATED: Iqurmuit Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:50.129444	2023-12-06 19:12:50.129431	cf9112f1-b9cc-47da-aeaf-6037d68264a8	2915
2918	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	DEPRECATED: Muscogee	DEPRECATED: The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-12-06 19:12:50.136591	2023-12-06 19:12:50.136558	b8a42283-93a7-4e99-a738-0d2455755b5d	2918
2920	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	DEPRECATED: Northfork	DEPRECATED: Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:50.140358	2023-12-06 19:12:50.14033	0a84245b-9b1b-4cce-ae3b-2b24a3ae70c2	2920
2922	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	DEPRECATED: Ohogamuit	DEPRECATED: Village of Ohogamiut	\N	\N	\N	\N	2023-12-06 19:12:50.143801	2023-12-06 19:12:50.143728	357e36cb-9b19-4e3e-91ce-be7631830a02	2922
2969	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-12-06 19:12:50.322564	2023-12-06 19:12:50.322505	b2716a80-d684-4c83-82d4-5fb78c2a6578	2969
2822	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	\N	2023-12-06 19:12:49.921884	2023-12-06 19:12:49.921773	1ec7b9e8-341f-4a5e-b5c4-f94d8977b316	2822
2825	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	\N	2023-12-06 19:12:49.929764	2023-12-06 19:12:49.929738	b5399d64-5084-43fb-ba5a-56b3a96047b7	2825
2835	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	\N	2023-12-06 19:12:49.958023	2023-12-06 19:12:49.957996	1345a65d-6b38-4dd3-bf38-4a650ffca62d	2835
2840	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	\N	2023-12-06 19:12:49.965693	2023-12-06 19:12:49.965674	96527a82-24a8-4c7b-9d49-649250ade04d	2840
2844	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:49.973648	2023-12-06 19:12:49.973623	41d01df1-94b5-42e1-825d-6ab6ed5745a9	2844
2845	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	\N	2023-12-06 19:12:49.980267	2023-12-06 19:12:49.980253	dc080ef3-179a-4b43-a1b1-47d08919111b	2845
2851	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	\N	2023-12-06 19:12:49.99291	2023-12-06 19:12:49.992872	806ff626-b940-496c-b6f6-f892cdc83a38	2851
2854	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.001797	2023-12-06 19:12:50.001678	7f75bc42-4aee-4749-b60f-23f1a76fceb9	2854
2858	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:50.008606	2023-12-06 19:12:50.008574	d10b0ea2-4110-40d5-a4b9-ae3cb79c82dd	2858
2860	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	\N	2023-12-06 19:12:50.014215	2023-12-06 19:12:50.014186	113dfada-efd2-4783-aee1-7135bc09c7a5	2860
2862	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	\N	2023-12-06 19:12:50.017458	2023-12-06 19:12:50.017433	6cde8b93-4f44-40be-97dc-576acbfe5b5e	2862
2870	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:50.037061	2023-12-06 19:12:50.037033	818e6920-f6d1-4334-afa9-f99fb5ce3bb0	2870
2874	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:50.044545	2023-12-06 19:12:50.04453	73ddf71d-79db-4ce0-830e-1d691930156a	2874
2875	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah Band	United Keetoowah Band	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.048808	2023-12-06 19:12:50.048787	8cf081c6-b37b-4a70-b802-584b05357d52	2875
2878	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.05269	2023-12-06 19:12:50.052662	c7b372ea-fe6e-4799-b48b-b748e174b1dc	2878
2879	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	\N	2023-12-06 19:12:50.056985	2023-12-06 19:12:50.056942	d3b7a0d5-70f0-427f-a4cd-6b9e2dfd3196	2879
2883	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Baron Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:50.063086	2023-12-06 19:12:50.063038	fdf1c2c5-670d-4df6-ac37-4903598f6415	2883
2887	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	\N	2023-12-06 19:12:50.071302	2023-12-06 19:12:50.071275	e556a020-0892-4f6b-a844-a8920e50694e	2887
2888	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	\N	2023-12-06 19:12:50.075431	2023-12-06 19:12:50.075418	893d3bd6-0d11-487a-acbf-b0dd34498860	2888
2891	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:50.078038	2023-12-06 19:12:50.078009	9801a4e3-1f82-41db-a748-bf671878d33e	2891
2893	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:50.083393	2023-12-06 19:12:50.083344	6de372fe-56b7-4fe9-8bc3-bc1d918cc6a1	2893
2897	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	\N	2023-12-06 19:12:50.090184	2023-12-06 19:12:50.090156	d73deaa6-a6b6-4eab-b38e-e4c020cb7aa1	2897
2905	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	\N	2023-12-06 19:12:50.112879	2023-12-06 19:12:50.112852	fb996aa4-d4fd-4c65-bd60-c1921ede9589	2905
2909	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:50.120388	2023-12-06 19:12:50.120319	2d8e4e79-79c3-400b-871a-45dcb61592bc	2909
2923	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	\N	\N	\N	\N	2023-12-06 19:12:50.144437	2023-12-06 19:12:50.144401	a26ebcf7-c1c7-4faa-9b07-a7f9cc66fad6	2923
2924	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	DEPRECATED: Osage	DEPRECATED: The Osage Nation	\N	\N	\N	\N	2023-12-06 19:12:50.148272	2023-12-06 19:12:50.148235	d06f5d9a-1ce0-4dc2-b779-4d1b21c06052	2924
2928	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	DEPRECATED: Peoria	DEPRECATED: Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.154275	2023-12-06 19:12:50.154238	a63003cb-6ecb-448a-8eb1-7ff7dd0fb595	2928
2934	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	DEPRECATED: San Manuel	DEPRECATED: San Manuel Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:50.164726	2023-12-06 19:12:50.164703	68f6ae2c-c642-4558-a8ef-9780234fc1fc	2934
2937	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	DEPRECATED: Seneca-Cayuga	DEPRECATED: Seneca-Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:50.171961	2023-12-06 19:12:50.171931	8b79a7dc-c161-41da-a2b0-fdc7208d6361	2937
2938	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	DEPRECATED: Thlopthlocco	DEPRECATED: Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:50.176565	2023-12-06 19:12:50.176551	e780e88a-6c14-4956-9713-02c18b820275	2938
2945	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	\N	2023-12-06 19:12:50.219861	2023-12-06 19:12:50.21977	882d2e95-1f43-4139-b0cb-2f2675ad3c75	2945
2824	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	\N	2023-12-06 19:12:49.928228	2023-12-06 19:12:49.928203	63b397f0-644d-432e-91a1-a8a512cabb95	2824
2830	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:49.946883	2023-12-06 19:12:49.946841	a0ab5cd0-ae66-40a0-a1df-403f1bbdfc31	2830
2837	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria 	\N	\N	\N	\N	2023-12-06 19:12:49.956561	2023-12-06 19:12:49.956548	c665d0d1-4e9d-4404-8bf7-83ed49fe1ed1	2837
2841	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	\N	2023-12-06 19:12:49.972419	2023-12-06 19:12:49.972384	a5c94132-8fa3-4969-ad6e-d8b43fa7b0d7	2841
2847	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:49.983788	2023-12-06 19:12:49.983694	1d84b91c-30f3-49b8-b612-ef0e0a658c97	2847
2849	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes	\N	\N	\N	\N	2023-12-06 19:12:49.988643	2023-12-06 19:12:49.988615	76d3e1a8-7aba-4d9f-bf4f-2a075ecd6be3	2849
2855	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:50.002157	2023-12-06 19:12:50.002129	a01a117f-71a2-4cec-99a8-90c58f9b6a11	2855
2863	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:50.020689	2023-12-06 19:12:50.020662	e6ebcfdd-ff5a-4529-a2ac-d4c431fee423	2863
2871	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	\N	2023-12-06 19:12:50.040449	2023-12-06 19:12:50.040432	95bf3f95-0a6c-4402-8dd7-bac14cedc13a	2871
2873	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	\N	2023-12-06 19:12:50.04408	2023-12-06 19:12:50.044051	ec6da586-beed-4d1b-9d40-c09c954391ac	2873
2876	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Mattaponi Tribe	Upper Mattaponi Tribe	Upper Mattaponi Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.049588	2023-12-06 19:12:50.049548	11ade8c6-1dc1-441b-b258-30fcebc1fd61	2876
2881	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	\N	2023-12-06 19:12:50.059323	2023-12-06 19:12:50.059286	c2cd395f-cf40-4997-8ed6-4039ee8a535d	2881
2884	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	\N	2023-12-06 19:12:50.064882	2023-12-06 19:12:50.064547	4e8417e5-ef6c-43f8-a12a-bb1914ce5caa	2884
2899	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:50.093163	2023-12-06 19:12:50.092852	b1120475-2571-47d3-8dc6-a55ed82f5e9d	2899
2900	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.09803	2023-12-06 19:12:50.097967	998d94e5-732f-4f85-994b-27cc95c57fe0	2900
2903	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.101649	2023-12-06 19:12:50.101612	2c5ca450-4b37-4bbc-882b-184184217544	2903
2907	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	\N	2023-12-06 19:12:50.113189	2023-12-06 19:12:50.113163	7b2e41c4-a7af-4f8d-9b7c-14e1eb3ad91f	2907
2908	uri://ed-fi.org/TribalAffiliationDescriptor	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	\N	\N	\N	\N	2023-12-06 19:12:50.119853	2023-12-06 19:12:50.119789	5f566053-2e93-4025-be7d-a8a24ef215ee	2908
2914	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	DEPRECATED: Inc.	DEPRECATED: Chickahominy Indian Tribe, Inc.	\N	\N	\N	\N	2023-12-06 19:12:50.128589	2023-12-06 19:12:50.128562	f7ddee38-24d4-4b13-980b-771f262c9855	2914
2916	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	DEPRECATED: Kewa Pueblo	DEPRECATED: Kewa Pueblo	\N	\N	\N	\N	2023-12-06 19:12:50.133037	2023-12-06 19:12:50.133011	8f5cc62c-0b8b-4260-ac4e-89c905de3197	2916
2919	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	DEPRECATED: Mescalero	DEPRECATED: Mescalero Apache Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.137887	2023-12-06 19:12:50.137848	1c055bdd-edf1-4fa1-82f7-b72ea8192e1c	2919
2927	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	DEPRECATED: Pechanga	DEPRECATED: Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:50.151383	2023-12-06 19:12:50.151344	59fb946f-dca5-4d8f-9d56-2ac1b04aea9a	2927
2930	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	DEPRECATED: Oklahoma	DEPRECATED: Sac and Fox Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.158573	2023-12-06 19:12:50.158552	f6455e1c-893c-4d8d-864e-1949bcfa07ad	2930
2940	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	DEPRECATED: Shawnee	DEPRECATED: Shawnee Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.178799	2023-12-06 19:12:50.178784	ca10f1c2-2e41-4b7c-a174-a9d5e2592df9	2940
2942	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	DEPRECATED: Zuni	DEPRECATED: Zuni Tribe of the Zuni Reservation	\N	\N	\N	\N	2023-12-06 19:12:50.183249	2023-12-06 19:12:50.183222	6c553018-8fbb-46c8-8299-8478b3b684d5	2942
2944	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	\N	2023-12-06 19:12:50.218156	2023-12-06 19:12:50.217194	0c6febdb-c53b-4479-8099-614e19a57c23	2944
2948	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:50.228281	2023-12-06 19:12:50.228251	f455f579-fa8a-410f-a09c-c0599d7d1347	2948
2954	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	\N	2023-12-06 19:12:50.26304	2023-12-06 19:12:50.261988	6c656029-dee8-4547-805c-9d7e5336b48c	2954
2957	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	\N	2023-12-06 19:12:50.272179	2023-12-06 19:12:50.272095	1d0231cc-15dc-4c10-a99f-f02770c0989d	2957
2959	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	\N	2023-12-06 19:12:50.278037	2023-12-06 19:12:50.277956	d31f6b56-4464-4b42-8a3d-250037db27db	2959
2963	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-12-06 19:12:50.311579	2023-12-06 19:12:50.310535	a9fdb985-942c-4e9f-8fa8-0b6edf691e4d	2963
2911	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	DEPRECATED: Aroostok	DEPRECATED: Aroostook Band of Micmacs	\N	\N	\N	\N	2023-12-06 19:12:50.120854	2023-12-06 19:12:50.120837	9386d330-17bf-4817-83e9-9740321fa56c	2911
2913	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	DEPRECATED: Cheyenne-Arapaho	DEPRECATED: Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	\N	2023-12-06 19:12:50.12704	2023-12-06 19:12:50.126987	aabac0c0-fa2a-497e-aa57-177b0df9048c	2913
2917	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	DEPRECATED: Kluti-Kaah	DEPRECATED: Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	\N	2023-12-06 19:12:50.133451	2023-12-06 19:12:50.133424	a6472e50-330e-46a8-b543-fcd903558530	2917
2921	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	DEPRECATED: Ohkay	DEPRECATED: Ohkay Owingeh	\N	\N	\N	\N	2023-12-06 19:12:50.140756	2023-12-06 19:12:50.140701	713ca34e-bc2a-408c-bbf4-813bd8ee4cf2	2921
2925	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	DEPRECATED: Ottawa of Oklahoma	DEPRECATED: Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.148317	2023-12-06 19:12:50.14799	b3a4da10-2cfb-4069-a118-65cf86cfe694	2925
2929	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	DEPRECATED: Quapaw	DEPRECATED: The Quapaw Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:50.157039	2023-12-06 19:12:50.156924	8bde48c8-767a-4a08-b5ee-21bdfa25fdab	2929
2932	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:50.164632	2023-12-06 19:12:50.164618	53128ea5-2777-452b-ac07-e6c2d04dea29	2932
2935	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	DEPRECATED: Santa Rosa of Chuilla	DEPRECATED: Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:50.167747	2023-12-06 19:12:50.167724	82beef39-3267-4ba5-8744-f76a2afd5b18	2935
2939	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	DEPRECATED: United Keetoowah	DEPRECATED: United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.177727	2023-12-06 19:12:50.177584	484ebd36-a1e8-4bde-bae1-2025fbb48114	2939
2946	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:50.223239	2023-12-06 19:12:50.222113	d1572471-75c7-4a9a-b351-0919fcab384c	2946
2947	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:50.228014	2023-12-06 19:12:50.227972	1607a6bc-7295-4105-a466-bd02d61d912e	2947
2950	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.233319	2023-12-06 19:12:50.233292	c5bd7067-e91d-4522-9d27-505c4f4ed155	2950
2953	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	\N	2023-12-06 19:12:50.263112	2023-12-06 19:12:50.262012	f6df0155-c117-4bf4-bd9a-606ba95b1c50	2953
2958	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-12-06 19:12:50.272393	2023-12-06 19:12:50.272366	de2a74c5-a3b4-41d8-99e9-03d9b270ff9b	2958
2965	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-12-06 19:12:50.311499	2023-12-06 19:12:50.310498	6b9afb7a-4a98-4238-9489-ab49c74a138e	2965
2967	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-12-06 19:12:50.320493	2023-12-06 19:12:50.320458	4cf833dd-1399-423f-8268-2eafb873ef05	2967
2976	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.336645	2023-12-06 19:12:50.336619	76e59433-4133-4255-b8b5-926bd7f266f4	2976
2980	uri://ed-fi.org/FinancialCollectionDescriptor	46 to 60 days	46 to 60 days	46 to 60 days	\N	\N	\N	\N	2023-12-06 19:12:50.374502	2023-12-06 19:12:50.373514	bd93facd-8ad3-4073-80c6-7b41534ad1eb	2980
2983	uri://ed-fi.org/FinancialCollectionDescriptor	76 to 90 days	76 to 90 days	76 to 90 days	\N	\N	\N	\N	2023-12-06 19:12:50.383152	2023-12-06 19:12:50.383089	9737ca32-f929-4f9f-b30d-ef28ca1ecf5f	2983
2984	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	\N	2023-12-06 19:12:50.412719	2023-12-06 19:12:50.411838	aff277bc-6e9d-4879-a643-5baf0c0b8134	2984
2990	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	\N	2023-12-06 19:12:50.422107	2023-12-06 19:12:50.422094	42a9ca34-d88b-4029-912d-436f29e8a470	2990
2994	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	\N	2023-12-06 19:12:50.43393	2023-12-06 19:12:50.432434	e2b10e78-fcb9-420a-b154-73ed3ff9ea87	2994
2998	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-12-06 19:12:50.462752	2023-12-06 19:12:50.461715	406f66d6-9c5f-4bd2-80ac-a560e0e2af04	2998
2999	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	\N	2023-12-06 19:12:50.498196	2023-12-06 19:12:50.497369	3c4734db-580d-418f-9fa1-71ba5e4af6d6	2999
3006	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	\N	2023-12-06 19:12:50.508089	2023-12-06 19:12:50.508063	4e5a6f75-714a-4666-b54a-f7bcda37d8ec	3006
3010	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	\N	2023-12-06 19:12:50.515089	2023-12-06 19:12:50.515052	0490732b-646f-49b0-8714-5c35ebd724a9	3010
3014	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	\N	2023-12-06 19:12:50.522743	2023-12-06 19:12:50.522728	76564890-a1bf-46de-8852-397e90047299	3014
3016	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-12-06 19:12:50.528737	2023-12-06 19:12:50.528709	cc81c0a4-e674-4cf2-9cf4-9bccf0804222	3016
3021	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	\N	2023-12-06 19:12:50.535666	2023-12-06 19:12:50.535633	1ca13068-123b-4c26-9338-25327efe3855	3021
3022	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-12-06 19:12:50.540451	2023-12-06 19:12:50.540264	8bfe2f7d-57df-4bd3-a2e0-fced54c9ae30	3022
3027	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	\N	2023-12-06 19:12:50.549692	2023-12-06 19:12:50.549667	2e08d390-0a57-4f8f-936e-0d3dccdfe3b4	3027
2926	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	DEPRECATED: Passamaquaddy Pleasant Point	DEPRECATED: Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-12-06 19:12:50.151029	2023-12-06 19:12:50.151004	4d4ba5c9-fe52-414f-8cce-bbf9abd0ccaf	2926
2931	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	DEPRECATED: Ramah	DEPRECATED: Ramah Navajo Chapter	\N	\N	\N	\N	2023-12-06 19:12:50.159624	2023-12-06 19:12:50.159596	9417c7c8-c9c7-4317-940f-ac187c381819	2931
2933	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	DEPRECATED: Salamatoff	DEPRECATED: Village of Salamatoff	\N	\N	\N	\N	2023-12-06 19:12:50.16494	2023-12-06 19:12:50.164927	05221640-4003-42b7-9791-5d75a50fbcd9	2933
2936	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	DEPRECATED: Seminole of Oklahoma	DEPRECATED: The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:50.171337	2023-12-06 19:12:50.171313	51cfb1bf-eb0a-4ddb-b299-9ed1f2200004	2936
2941	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	DEPRECATED: Ute Mountain	DEPRECATED: Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-12-06 19:12:50.179972	2023-12-06 19:12:50.179938	6a2a60dc-1a98-4939-b474-5f3de4843f8e	2941
2943	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	\N	2023-12-06 19:12:50.218321	2023-12-06 19:12:50.217205	9d8639e5-6282-4d7d-aa5c-2cfc1dddaf88	2943
2949	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	\N	2023-12-06 19:12:50.229095	2023-12-06 19:12:50.229055	f3a03951-ee9d-4686-a0df-3ce9abc9ce28	2949
2952	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	\N	2023-12-06 19:12:50.263112	2023-12-06 19:12:50.261997	024d073f-290d-4db1-9cf8-81e433f94214	2952
2955	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	\N	2023-12-06 19:12:50.271617	2023-12-06 19:12:50.271485	bd669b64-d419-4f64-89e5-9e96e512100c	2955
2960	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	\N	2023-12-06 19:12:50.278291	2023-12-06 19:12:50.277972	2c12d595-a6cb-4f04-8825-65fb6df1b12b	2960
2962	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-12-06 19:12:50.311384	2023-12-06 19:12:50.31053	e49e6174-a658-447a-ab84-4b9a4b8f8092	2962
2966	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-12-06 19:12:50.320471	2023-12-06 19:12:50.320427	e8ff2ed7-45be-459f-ae73-c90355ef8420	2966
2970	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-12-06 19:12:50.32725	2023-12-06 19:12:50.327223	13af83de-c395-4687-85c5-c3dbe45481d6	2970
2978	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-12-06 19:12:50.341232	2023-12-06 19:12:50.341118	06ea1332-5e0a-41c7-8e12-c01a7462acc3	2978
2981	uri://ed-fi.org/FinancialCollectionDescriptor	61 to 75 days	61 to 75 days	61 to 75 days	\N	\N	\N	\N	2023-12-06 19:12:50.374834	2023-12-06 19:12:50.373543	0296851b-3872-4f58-97b9-097d65e7a1b5	2981
2986	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	\N	2023-12-06 19:12:50.412801	2023-12-06 19:12:50.411869	92eded06-b953-41c6-be45-4d22c6efc843	2986
2989	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	\N	2023-12-06 19:12:50.421318	2023-12-06 19:12:50.421298	3c48461b-3626-49a7-bcba-da4aa0ac851d	2989
2993	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	\N	2023-12-06 19:12:50.430621	2023-12-06 19:12:50.430455	082c1fa1-89c3-44e2-88f3-36adb17cae53	2993
2997	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-12-06 19:12:50.462642	2023-12-06 19:12:50.461718	a294a979-0a4d-489a-a637-647868c5f9c3	2996
3002	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	\N	2023-12-06 19:12:50.49831	2023-12-06 19:12:50.49739	d7f4cbcd-fe90-418f-b020-5777e7cae011	3002
3005	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	\N	2023-12-06 19:12:50.507901	2023-12-06 19:12:50.507887	836c0caf-c705-4ab4-bdf0-496067bb4d67	3005
3007	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	\N	2023-12-06 19:12:50.512548	2023-12-06 19:12:50.512519	b4e395eb-5b92-45c2-b8c4-e5c17b6beabc	3007
3012	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	\N	2023-12-06 19:12:50.521711	2023-12-06 19:12:50.521684	9e72ac5c-8196-49ff-bd70-62ad32c4b7b4	3012
3015	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	\N	2023-12-06 19:12:50.528295	2023-12-06 19:12:50.528176	db27a44e-1fcd-495e-9c84-df24267d5d83	3015
3020	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	\N	2023-12-06 19:12:50.535567	2023-12-06 19:12:50.535512	bab882cd-e2d3-4734-b752-30880e1437a8	3020
3024	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	\N	2023-12-06 19:12:50.543566	2023-12-06 19:12:50.543539	a720e972-8b3d-4e8e-bd37-1a7365c9aad4	3024
3026	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	\N	2023-12-06 19:12:50.548923	2023-12-06 19:12:50.548894	01feb69c-ef3d-4d16-adbc-9cea1e3344c7	3026
3029	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	\N	2023-12-06 19:12:50.552194	2023-12-06 19:12:50.552116	e395375e-0749-4061-a67a-8f4995e85d27	3029
3033	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	\N	2023-12-06 19:12:50.55866	2023-12-06 19:12:50.558637	e45dd346-4b60-4734-baa8-72038b72a9dd	3033
2951	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	\N	2023-12-06 19:12:50.262909	2023-12-06 19:12:50.261979	3efef8a9-fa7f-46e0-ade3-81662fe2409f	2951
2956	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	\N	2023-12-06 19:12:50.271734	2023-12-06 19:12:50.271709	1431a83a-f147-420b-bae8-3419ef613b0b	2956
2961	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	\N	2023-12-06 19:12:50.279723	2023-12-06 19:12:50.279699	3445c7c0-34d2-4eb7-bf1e-6e4e4999847c	2961
2964	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-12-06 19:12:50.311592	2023-12-06 19:12:50.310504	29c19ed1-4308-447d-9b39-b6e255b84beb	2964
2968	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-12-06 19:12:50.321371	2023-12-06 19:12:50.321343	03bd5a53-f8ab-4bf7-943b-48e95ebe6cab	2968
2972	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-12-06 19:12:50.328984	2023-12-06 19:12:50.328971	992b4f67-6f7f-4b6c-98ea-334ce8f9f6f7	2972
2974	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-12-06 19:12:50.334912	2023-12-06 19:12:50.334693	ffa6c4ce-8c1f-48d1-b75b-69a949df9644	2974
2979	uri://ed-fi.org/FinancialCollectionDescriptor	0 to 30 days	0 to 30 days	0 to 30 days	\N	\N	\N	\N	2023-12-06 19:12:50.374499	2023-12-06 19:12:50.373519	386b0be1-eba4-45e7-b8c4-61340cf1d311	2979
2987	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	\N	2023-12-06 19:12:50.413645	2023-12-06 19:12:50.411863	c7362a0c-9eb3-4d5b-809a-8eecd899952b	2987
2988	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	\N	2023-12-06 19:12:50.421048	2023-12-06 19:12:50.420999	7c04e0f7-9b12-4c03-8562-93c80e50b41d	2988
2995	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-12-06 19:12:50.462554	2023-12-06 19:12:50.461686	5f3849e7-24ac-400e-9602-b7d7c3a6464e	2995
3001	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	\N	2023-12-06 19:12:50.498412	2023-12-06 19:12:50.497384	21a4228c-978e-4ed3-beb8-742da943bd52	3001
3004	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	\N	2023-12-06 19:12:50.507329	2023-12-06 19:12:50.507315	02289f49-958a-471c-ac07-4d1bbd2e1338	3004
3008	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	\N	2023-12-06 19:12:50.514857	2023-12-06 19:12:50.514828	133ed5a2-6321-44f3-a038-ddc7eb120b9c	3008
3011	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	\N	2023-12-06 19:12:50.521506	2023-12-06 19:12:50.521463	632806eb-b91f-4cef-9248-7311bd43e361	3011
3017	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	\N	2023-12-06 19:12:50.529593	2023-12-06 19:12:50.529578	a5b9c88c-76af-4d54-87d5-9dfa2bb9b274	3017
3019	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	\N	2023-12-06 19:12:50.535199	2023-12-06 19:12:50.535186	e0ff3e8f-913d-4de0-9871-5858aea6c416	3019
3023	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	\N	2023-12-06 19:12:50.541892	2023-12-06 19:12:50.541847	2a7c80ff-c4a5-4f30-b415-527e7f0f827d	3023
3031	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	\N	2023-12-06 19:12:50.5565	2023-12-06 19:12:50.556453	56031945-9905-42ab-afde-73c8b1f0b8a1	3031
3036	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	\N	2023-12-06 19:12:50.565048	2023-12-06 19:12:50.565009	32999afa-0e90-4312-a40a-29f7e9c9dba5	3036
3038	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	\N	2023-12-06 19:12:50.571695	2023-12-06 19:12:50.571663	ff12d13e-dc52-4e37-9fc5-b2d1b3fd2401	3038
3046	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	\N	2023-12-06 19:12:50.611203	2023-12-06 19:12:50.60994	f891aa9c-73ff-483c-a6f2-fca46a7810df	3046
3049	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Master's College or University	Master's College or University	Generally includes institutions that awarded at least 50 master's degrees and fewer than 20 doctoral degrees during the update year (with occasional exceptions). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.647961	2023-12-06 19:12:50.646904	e006d766-5676-45e2-867a-8d1a17a2dc27	3049
3051	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Four-Year	Special Focus Institution/Four-Year	Four-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.655574	2023-12-06 19:12:50.65556	92d77377-c6ba-4d9a-b0f4-f3f4ff763008	3051
3057	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	DEPRECATED: Four or more years	DEPRECATED: Four or more years	\N	\N	\N	\N	2023-12-06 19:12:50.6638	2023-12-06 19:12:50.663767	df79690d-ae0e-470a-b011-a66a27f2efea	3057
3059	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	\N	2023-12-06 19:12:50.695612	2023-12-06 19:12:50.694594	4229f77c-7597-4540-add1-8d3de3b4f5f7	3059
3063	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.704025	2023-12-06 19:12:50.703972	7cb275a0-2dc2-4ddb-b34d-4faa53f275e8	3063
3066	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	\N	2023-12-06 19:12:50.710146	2023-12-06 19:12:50.710118	5515eef9-37d2-4efe-8dd5-5ff8e0666ff8	3066
3068	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	\N	2023-12-06 19:12:50.745082	2023-12-06 19:12:50.744215	b6406fb3-2b13-42d9-9687-eae0f7830734	3068
2971	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-12-06 19:12:50.327982	2023-12-06 19:12:50.327925	d384cea5-9384-40b4-ac4f-59ccd555efd4	2971
2973	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-12-06 19:12:50.331105	2023-12-06 19:12:50.331078	4c165a68-192c-4e96-a249-f0afc87363d3	2973
2975	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-12-06 19:12:50.335209	2023-12-06 19:12:50.335059	a3dc51f5-60aa-4e14-9a59-1703349844fc	2975
2977	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-12-06 19:12:50.338705	2023-12-06 19:12:50.338255	fc1b5629-2217-419a-b78a-f83d454e549e	2977
2982	uri://ed-fi.org/FinancialCollectionDescriptor	31 to 45 days	31 to 45 days	31 to 45 days	\N	\N	\N	\N	2023-12-06 19:12:50.374487	2023-12-06 19:12:50.373534	102b8cda-5a5b-4e31-9c31-edea6cafeb90	2982
2985	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	\N	2023-12-06 19:12:50.412794	2023-12-06 19:12:50.411848	7120735f-84e1-491d-ba6e-a273342dea8a	2985
2991	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	\N	2023-12-06 19:12:50.426148	2023-12-06 19:12:50.42612	cfc4ee9e-1ced-40b3-baa0-343c4198108c	2991
2992	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	\N	2023-12-06 19:12:50.428797	2023-12-06 19:12:50.428782	ec65d5da-a2dd-4f2d-88ef-0322253b80ee	2992
2996	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-12-06 19:12:50.46293	2023-12-06 19:12:50.461696	929d7e02-7b72-4c40-a185-c370d6ebc3a5	2997
3000	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	\N	2023-12-06 19:12:50.498407	2023-12-06 19:12:50.497358	393d686d-ebeb-4410-a6c2-ab78b4a5662c	3000
3003	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	\N	2023-12-06 19:12:50.506202	2023-12-06 19:12:50.506177	ad5a839c-25c4-441d-9938-0b2680edf83d	3003
3009	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	\N	2023-12-06 19:12:50.515212	2023-12-06 19:12:50.515198	7e8c2afc-b205-465f-9caa-b4a2bb14d7df	3009
3013	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	\N	2023-12-06 19:12:50.522607	2023-12-06 19:12:50.522591	d0f0255c-0e66-4cb2-82ed-83ee83d84c82	3013
3018	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	\N	2023-12-06 19:12:50.533841	2023-12-06 19:12:50.533793	e19cadb9-48aa-44b2-bc90-56d41b409b24	3018
3025	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	\N	2023-12-06 19:12:50.54385	2023-12-06 19:12:50.543799	4755a6c1-aa75-41ee-b4da-79cc84fbf33a	3025
3028	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	\N	2023-12-06 19:12:50.550132	2023-12-06 19:12:50.55012	3b1b7411-5a14-43ce-8a30-16b1a0d98f33	3028
3032	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	\N	2023-12-06 19:12:50.557762	2023-12-06 19:12:50.557602	bc234767-c7b8-4531-8587-bd29ba603078	3032
3039	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	\N	2023-12-06 19:12:50.571825	2023-12-06 19:12:50.571601	a9ea339f-61b0-491e-b7ee-3cbbcee73895	3039
3042	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	\N	2023-12-06 19:12:50.578856	2023-12-06 19:12:50.578826	ea7e10c7-3ef8-4fd1-9a82-9f3cfabfee7e	3042
3043	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	\N	2023-12-06 19:12:50.610787	2023-12-06 19:12:50.609916	28f16f14-d79e-4215-b83f-6ee68c7f7bc1	3043
3047	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Doctoral University	Doctoral University	Includes institutions that awarded at least 20 research/scholarship doctoral degrees during the update year and also institutions with below 20 research/scholarship doctoral degrees that awarded at least 30 professional practice doctoral degrees in at least 2 programs. Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.647784	2023-12-06 19:12:50.646873	e8eb0b9d-460b-4209-9f8d-0293b9c6f5f9	3047
3053	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Tribal College	Tribal College	Colleges and universities that are members of the American Indian Higher Education Consortium, as identified in IPEDS Institutional Characteristics.	\N	\N	\N	\N	2023-12-06 19:12:50.656343	2023-12-06 19:12:50.656314	9b27c880-bc5b-417b-8a05-4d3926bb8c29	3053
3061	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	\N	2023-12-06 19:12:50.69571	2023-12-06 19:12:50.694621	87a38509-cced-42f6-8211-03a76367254f	3061
3064	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	\N	2023-12-06 19:12:50.7091	2023-12-06 19:12:50.709066	79803dbc-3ea0-4699-a3c9-457b7a586a54	3064
3070	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Remote	Remote	Outside the school or district	\N	\N	\N	\N	2023-12-06 19:12:50.745067	2023-12-06 19:12:50.744193	c16259cc-fafb-41c6-a133-1a3892e786b5	3070
3074	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-12-06 19:12:50.78389	2023-12-06 19:12:50.782205	e3511ddb-69f3-4cda-b2a9-c76b15f1feda	3074
3076	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-12-06 19:12:50.792546	2023-12-06 19:12:50.792211	cc656877-d06f-4e17-b801-761abb69519c	3076
3079	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-12-06 19:12:50.800276	2023-12-06 19:12:50.800176	1acb2f1d-3046-4a3a-9d04-cac1369ad019	3079
3030	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	\N	2023-12-06 19:12:50.556077	2023-12-06 19:12:50.556022	a4c847b4-73a6-4676-b701-7a0e10e0a953	3030
3034	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.563508	2023-12-06 19:12:50.56348	968d9358-8e29-462a-978d-f9c99b50168e	3034
3037	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	\N	2023-12-06 19:12:50.568312	2023-12-06 19:12:50.568277	8344cf22-88f1-4303-9889-78d545f71cc6	3037
3040	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	\N	2023-12-06 19:12:50.571761	2023-12-06 19:12:50.571737	dc710e32-e897-434d-87c7-797903c6a1fc	3040
3041	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	\N	2023-12-06 19:12:50.574392	2023-12-06 19:12:50.574358	785423d7-d899-4f61-9963-3c53506e9190	3041
3045	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	\N	2023-12-06 19:12:50.611112	2023-12-06 19:12:50.609907	c9a6e54e-1163-4112-a07c-89c60dcb2e28	3045
3050	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate/Associate's College	Baccalaureate/Associate's College	Includes four-year colleges (by virtue of having at least one baccalaureate degree program) that conferred more than 50 percent of degrees at the associate's level . Excludes Special Focus Institutions, Tribal Colleges, and institutions that have sufficient master's or doctoral degrees to fall into those categories.	\N	\N	\N	\N	2023-12-06 19:12:50.64791	2023-12-06 19:12:50.646901	cfdfc8d5-1cb4-4a4f-8454-6092869e9fa5	3050
3054	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Two-Year	Special Focus Institution/Two-Year	Two-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.657241	2023-12-06 19:12:50.657219	1c9a4897-8846-452a-a9da-71a8edb206ac	3054
3056	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	\N	\N	\N	\N	2023-12-06 19:12:50.663535	2023-12-06 19:12:50.663523	8eb9ef42-c102-4146-a1e5-b5b975c2e93a	3056
3060	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	\N	2023-12-06 19:12:50.695881	2023-12-06 19:12:50.694626	2645eb04-02fa-4a78-9957-8b0c353771f2	3060
3062	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	\N	2023-12-06 19:12:50.70392	2023-12-06 19:12:50.703838	9fe03201-ef37-4d44-9f86-746fe9b89abe	3062
3065	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	\N	2023-12-06 19:12:50.709954	2023-12-06 19:12:50.70994	67d6fde0-d20f-4946-978d-10ede49d7dbb	3065
3069	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:50.745464	2023-12-06 19:12:50.744213	fba8c953-fe30-48fa-a1af-0fc2674aab84	3069
3073	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-12-06 19:12:50.783184	2023-12-06 19:12:50.782191	901047fa-c2fc-4eb7-ba8c-cf6e3d901062	3073
3075	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-12-06 19:12:50.792406	2023-12-06 19:12:50.79237	4787cddc-e910-4447-b6b2-b85d3b0c88ed	3075
3080	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-12-06 19:12:50.801034	2023-12-06 19:12:50.800997	93f8c980-2e41-4b7b-b40b-a216f171eb53	3080
3084	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	\N	2023-12-06 19:12:50.836247	2023-12-06 19:12:50.83539	1c95d45c-20f8-44c3-ac21-512c1c5adbea	3083
3094	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	DoD Civilian	Student is a dependent of a civil servant to the DoD	Student is a dependent of a person who is employed by the Department of Defense as a civil servant	\N	\N	\N	\N	2023-12-06 19:12:50.885327	2023-12-06 19:12:50.884469	79ef38b8-70ea-4c14-a322-a60c7c6474c1	3094
3099	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	\N	2023-12-06 19:12:50.924878	2023-12-06 19:12:50.924038	04e07b0c-1d5a-44a2-8613-137ec0f0b046	3099
3104	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-12-06 19:12:50.936257	2023-12-06 19:12:50.936198	5dab241b-2cbe-4a63-bebc-7544f91152fc	3104
3106	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	\N	2023-12-06 19:12:50.969708	2023-12-06 19:12:50.968716	8e0156de-ecbf-4937-ba74-4014a54e0b27	3106
3112	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	\N	2023-12-06 19:12:51.033454	2023-12-06 19:12:51.032329	7d41751d-5794-463b-8bfb-b69a3bee2e33	3112
3115	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	\N	2023-12-06 19:12:51.041849	2023-12-06 19:12:51.041836	d5386e2e-dee9-4ecd-ae61-83cfd6460ef6	3115
3120	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-12-06 19:12:51.050433	2023-12-06 19:12:51.050418	9cd16f8a-e76a-4a7d-b5cf-46de3b7bef2d	3120
3123	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	\N	2023-12-06 19:12:51.057124	2023-12-06 19:12:51.056742	6940f557-4b2d-4eea-a37c-5d418393ce87	3123
3128	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	\N	2023-12-06 19:12:51.065232	2023-12-06 19:12:51.065069	83fe9c67-c1f3-4170-8074-a6823c6b5a40	3128
3131	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	\N	2023-12-06 19:12:51.070746	2023-12-06 19:12:51.070699	ca380514-eb4c-4b48-81b3-6203d6408222	3131
3133	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	\N	2023-12-06 19:12:51.075761	2023-12-06 19:12:51.075725	d658d805-5bd1-46ef-b491-71873bccb489	3133
3137	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	\N	2023-12-06 19:12:51.082847	2023-12-06 19:12:51.08281	87898f32-1167-41b2-b2d9-9c874593480c	3137
3035	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	\N	2023-12-06 19:12:50.563594	2023-12-06 19:12:50.56358	657a317f-0baf-46f9-bff2-b25fe6542219	3035
3044	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	\N	2023-12-06 19:12:50.610919	2023-12-06 19:12:50.609924	68d7e2cd-9ada-47a2-8d61-7cfc06d2af6b	3044
3085	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	\N	2023-12-06 19:12:50.83644	2023-12-06 19:12:50.835405	cd9efe2c-b690-4983-9fdf-bb8f5b1d62f0	3085
3208	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Senior	Senior	Senior	\N	\N	\N	\N	2023-12-06 19:29:12.042928	2023-12-06 19:29:12.04287	53c60d18-4db1-4be1-8b80-13495c64789e	3208
3048	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate College	Baccalaureate College	Includes institutions where baccalaureate or higher degrees represent at least 50 percent of all degrees but where fewer than 50 master's degrees or 20 doctoral degrees were awarded during the update year. (Some institutions above the master's degree threshold are also included.) Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.647961	2023-12-06 19:12:50.646881	6f139473-8d73-48fd-afe9-9c4958c24cc4	3048
3052	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Associate's College	Associate's College	Institutions at which the highest level degree awarded is an associate's degree. The institutions are sorted into nine categories based on the intersection of two factors: disciplinary focus (transfer, career and technical or mixed) and dominant student type (traditional, nontraditional or mixed). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:50.656446	2023-12-06 19:12:50.656435	28257916-2794-44b9-ae55-5ff9e6f7917f	3052
3055	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	\N	\N	\N	\N	2023-12-06 19:12:50.663339	2023-12-06 19:12:50.663315	2525121a-fd6a-4387-80e6-ea287ba070a1	3055
3058	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	\N	2023-12-06 19:12:50.695487	2023-12-06 19:12:50.694602	08c779c0-c011-418a-854c-7f0e060bb56b	3058
3067	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:50.745067	2023-12-06 19:12:50.744189	97132726-973b-4d9b-b46e-a015ec469869	3067
3071	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-12-06 19:12:50.783144	2023-12-06 19:12:50.782212	81fdad40-2e3c-4d66-b2c2-5d7814f7c744	3071
3077	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.793109	2023-12-06 19:12:50.79305	37af3d96-6605-4b69-ae65-3b05ed36cddd	3077
3081	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-12-06 19:12:50.801789	2023-12-06 19:12:50.801555	4dcc80d7-d244-48ee-9009-3df490cad4d6	3081
3083	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	\N	2023-12-06 19:12:50.836257	2023-12-06 19:12:50.835381	171543d4-d284-4c9e-909a-ef42fe09a657	3084
3089	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	\N	2023-12-06 19:12:50.846624	2023-12-06 19:12:50.846607	42d1896e-9575-4bd8-88fa-02c4ce04655c	3089
3095	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Reserve	Student is a dependent of a  member of reserve forces or national guard	Student is a dependent of a member of the National Guard (not full-time) or the Reserve Forces Army, Navy, Air Force, Space Force, Marine Corps or Coast Guard	\N	\N	\N	\N	2023-12-06 19:12:50.885373	2023-12-06 19:12:50.884496	8a8b72aa-5007-4669-8ee4-15a26280c790	3095
3097	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Not Military Connected	People who the student is a dependent of is/are not military connected	Contact does not have a connection with military or department of defense as an employee or retiree	\N	\N	\N	\N	2023-12-06 19:12:50.894286	2023-12-06 19:12:50.894159	ef88ff8a-4340-415e-a24a-faccb621bd77	3097
3102	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	\N	2023-12-06 19:12:50.928253	2023-12-06 19:12:50.92824	23bf94df-1a7d-4251-8ce6-850885bd0ad4	3102
3108	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	\N	2023-12-06 19:12:50.970276	2023-12-06 19:12:50.968727	0fbbe8ca-5848-440d-8b77-0289583bc30f	3108
3113	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	\N	2023-12-06 19:12:51.033437	2023-12-06 19:12:51.03234	4633abe7-5e7d-4625-9d09-4d098bb9609c	3113
3116	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	\N	2023-12-06 19:12:51.042872	2023-12-06 19:12:51.042844	04dbc811-fc16-4e3f-8019-094b4c2dcfe7	3116
3121	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	\N	2023-12-06 19:12:51.051446	2023-12-06 19:12:51.05141	6c768d35-529e-4080-854a-3061a86f62dd	3121
3124	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	\N	2023-12-06 19:12:51.057241	2023-12-06 19:12:51.056864	e95c007a-a1c2-4c1c-9abe-78f73e530772	3124
3126	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	\N	2023-12-06 19:12:51.062649	2023-12-06 19:12:51.062294	8985cd71-72c6-4ee1-b1b2-966949cb695f	3126
3127	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	\N	2023-12-06 19:12:51.065166	2023-12-06 19:12:51.064969	982cf628-fac2-40f2-aaa9-cbff3aac0bf0	3127
3134	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	\N	2023-12-06 19:12:51.07666	2023-12-06 19:12:51.076634	ae4bae78-3fc1-47e6-9e3d-e53224bfbf31	3134
3138	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	\N	2023-12-06 19:12:51.08401	2023-12-06 19:12:51.083982	e1569f03-75fc-4e52-b2cb-09cc495be76b	3138
3142	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	\N	2023-12-06 19:12:51.123211	2023-12-06 19:12:51.122327	b19986c0-774c-401a-989d-e67a5e9ea425	3142
3147	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Student survey	Student survey	Student survey	\N	\N	\N	\N	2023-12-06 19:12:51.132885	2023-12-06 19:12:51.132847	6d86dfb0-218a-4282-b7dc-4f0bfff2bee7	3147
3149	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	\N	2023-12-06 19:12:51.16156	2023-12-06 19:12:51.160576	c17ed18e-5d3e-4cb9-86d8-29883e3d30cf	3149
3072	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-12-06 19:12:50.783131	2023-12-06 19:12:50.782181	d6a9d994-299b-432d-b3d9-4f114cfb089f	3072
3078	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-12-06 19:12:50.793636	2023-12-06 19:12:50.793596	624c75d1-f8e4-42ca-9a9a-59c09f7876fc	3078
3087	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	\N	2023-12-06 19:12:50.844854	2023-12-06 19:12:50.844807	38731c48-a642-40d6-b900-d9445221d077	3087
3090	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.848151	2023-12-06 19:12:50.848104	a935bc65-bc17-48b2-8dde-c6b2c8c33eb2	3090
3092	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	\N	2023-12-06 19:12:50.852031	2023-12-06 19:12:50.851536	fb25f1ec-090e-4b71-809b-3f8ec440ea4e	3092
3093	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Active Duty	Student is a dependent of a (full-time) member of the military	Student is a dependent of a member of the Active Duty Forces (full-time) Army, Navy, Air Force, Space Force, Marine Corps, or Coast Guard or a member on full-time National Guard duty	\N	\N	\N	\N	2023-12-06 19:12:50.88534	2023-12-06 19:12:50.884478	da35aeba-ab44-4914-9863-b7dcbefdd03c	3093
3101	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	\N	2023-12-06 19:12:50.927724	2023-12-06 19:12:50.927686	c52306c2-d6dc-4d88-bd75-5734297e224d	3101
3105	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	\N	2023-12-06 19:12:50.936565	2023-12-06 19:12:50.936512	08a9eca4-3ed5-4ce7-8352-a12046a43c90	3105
3107	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	\N	2023-12-06 19:12:50.969867	2023-12-06 19:12:50.968742	4ab0949c-48a9-4cf9-9f24-80b944f3948f	3107
3111	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	\N	2023-12-06 19:12:51.03333	2023-12-06 19:12:51.032315	5707bbaf-a771-4b2e-a037-7758c3db4f4a	3111
3117	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	\N	2023-12-06 19:12:51.042837	2023-12-06 19:12:51.042797	8e058ea3-ecc6-4604-a1ee-c0f9b163fcf7	3117
3119	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	\N	2023-12-06 19:12:51.049463	2023-12-06 19:12:51.049436	6a38eea3-ccce-4f75-85ef-b8349bc841a7	3119
3122	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	\N	2023-12-06 19:12:51.056998	2023-12-06 19:12:51.056973	484e32e4-6e43-418c-abf6-952896b5fdf4	3122
3130	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	\N	2023-12-06 19:12:51.069725	2023-12-06 19:12:51.069697	ad42cec8-4a14-4df2-903f-58bec57748cf	3130
3135	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	\N	2023-12-06 19:12:51.079756	2023-12-06 19:12:51.079728	714f045a-72f0-4fff-aa0c-00302a93b12b	3135
3140	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	\N	2023-12-06 19:12:51.090439	2023-12-06 19:12:51.090424	3a0e9f9e-29af-4c1c-8874-64b86490a946	3140
3145	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Peer	Peer	Peer	\N	\N	\N	\N	2023-12-06 19:12:51.125699	2023-12-06 19:12:51.125649	7c2c4fa7-d942-4046-bf66-8a0091373ef1	3145
3150	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-12-06 19:12:51.161627	2023-12-06 19:12:51.16057	e0ebce0f-1aa1-49f6-b8a3-dc4a68d6f4de	3150
3154	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.171222	2023-12-06 19:12:51.171208	2ae61c0e-f8ee-48b5-9220-04f69324a315	3154
3157	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.177684	2023-12-06 19:12:51.177633	d15e9eec-6a24-4949-a55b-9343b7c5e62a	3157
3159	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.181839	2023-12-06 19:12:51.181817	a010d3a9-9af5-4098-b548-0268f1ed7dc2	3159
3162	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.184563	2023-12-06 19:12:51.184526	75e6bb1f-cb41-47d9-a94a-a45e06648435	3162
3171	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-12-06 19:12:51.259772	2023-12-06 19:12:51.25874	09e9eec9-0de7-46b2-860c-d59d448d9495	3171
3173	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-12-06 19:12:51.2739	2023-12-06 19:12:51.273864	0f5e13c2-e83c-4c33-b488-3c02aca909b8	3173
3181	uri://ed-fi.org/QuestionFormDescriptor	Matrix of numeric ratings	Matrix of numeric ratings	Matrix of numeric ratings	\N	\N	\N	\N	2023-12-06 19:12:51.312763	2023-12-06 19:12:51.31182	c185c694-a44e-40d8-9692-41ef3daa1abe	3181
3185	uri://ed-fi.org/QuestionFormDescriptor	Textbox	Textbox	Textbox	\N	\N	\N	\N	2023-12-06 19:12:51.321826	2023-12-06 19:12:51.3218	26fe1cf4-4983-4eeb-b271-aa1b714c972a	3185
3192	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.368718	2023-12-06 19:12:51.36769	ab4a42b3-c4d9-4fd2-a424-7a1510af45c6	3192
3195	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	\N	2023-12-06 19:12:51.408216	2023-12-06 19:12:51.407367	6e8ab71e-6ac6-4a15-a649-994457ddedf5	3195
3082	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-12-06 19:12:50.806137	2023-12-06 19:12:50.806065	336521c3-894d-49fb-9787-e20b5b1d05bb	3082
3086	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	\N	2023-12-06 19:12:50.836261	2023-12-06 19:12:50.835411	ea825e8e-27bd-4d7e-a019-b54e65595c11	3086
3088	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	\N	2023-12-06 19:12:50.846031	2023-12-06 19:12:50.846008	5fe74293-8280-4571-96d1-f64d0fd057c9	3088
3091	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	\N	2023-12-06 19:12:50.851022	2023-12-06 19:12:50.850996	790db0ab-36e9-4a1d-9a69-fbd7d3f8fba9	3091
3158	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.178623	2023-12-06 19:12:51.178596	b8190ec1-6e4b-47f9-8e87-4a72ae4655d5	3158
3096	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Veteran	Student is a dependent of a discharged military personnel or a retiree	Student is a dependent of a person who has served in the US military and become discharged or released or got retired after completing required amount of years of military services	\N	\N	\N	\N	2023-12-06 19:12:50.885445	2023-12-06 19:12:50.884503	ea4cb388-2a47-4847-b6e3-4988d4c9074f	3096
3098	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Unknown	Military connection information is unknown	It is unknown whether or not the student is a dependent of a person who is military-connected	\N	\N	\N	\N	2023-12-06 19:12:50.895834	2023-12-06 19:12:50.89581	209ab465-4fce-42a7-beeb-ff58f158c043	3098
3100	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	\N	2023-12-06 19:12:50.924971	2023-12-06 19:12:50.92404	7890a438-ab45-4544-b075-3e54748f53ff	3100
3103	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	\N	2023-12-06 19:12:50.934729	2023-12-06 19:12:50.934716	ff07fb82-1f82-41a7-a60e-14b29789c4e9	3103
3109	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	\N	2023-12-06 19:12:50.972847	2023-12-06 19:12:50.972827	87d25676-c24e-4c8c-a16b-f8999887b63d	3109
3110	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	\N	2023-12-06 19:12:51.033228	2023-12-06 19:12:51.032316	d899c332-1712-475d-a951-503ceef6d933	3110
3114	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	\N	2023-12-06 19:12:51.041665	2023-12-06 19:12:51.04165	3dc6de2c-035e-49cd-99c5-9ad846930c8c	3114
3118	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	\N	2023-12-06 19:12:51.048532	2023-12-06 19:12:51.048506	2c2b9ff4-3013-472f-958b-0ec6d4e87372	3118
3125	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.058248	2023-12-06 19:12:51.058138	c040f28e-4ef5-4d26-aef9-38bea8319bf0	3125
3129	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	\N	2023-12-06 19:12:51.068922	2023-12-06 19:12:51.068801	39467d9e-7168-4d06-8569-97fc5f5ef69c	3129
3132	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	\N	2023-12-06 19:12:51.073133	2023-12-06 19:12:51.07311	4a1a5abc-6f06-456b-8d36-a01dd94a0cf0	3132
3136	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	\N	2023-12-06 19:12:51.080828	2023-12-06 19:12:51.080668	9a10585e-5d7f-4db0-9625-eeaed45b515b	3136
3139	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	\N	2023-12-06 19:12:51.08978	2023-12-06 19:12:51.089737	118ccea3-c56f-4e0f-98bb-962dc65771a0	3139
3143	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:12:51.123327	2023-12-06 19:12:51.122317	867ca2cd-3afd-47b0-9d06-9c07cd5bc21b	3143
3148	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	\N	2023-12-06 19:12:51.161392	2023-12-06 19:12:51.160547	dbeed236-8649-4095-a0a9-16bc701c55be	3148
3152	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-12-06 19:12:51.170069	2023-12-06 19:12:51.170033	0d98149e-0973-4bb5-aa18-03ffa79bd379	3152
3160	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.176547	2023-12-06 19:12:51.176478	454ca042-9713-4b6d-8b6f-b8471fab9bd5	3160
3164	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.188963	2023-12-06 19:12:51.188926	f694e6ac-1da6-4b2f-be78-d03a4edb973b	3164
3165	uri://ed-fi.org/DiagnosisDescriptor	Low Attendance	DEPRECATED: Low Attendance	DEPRECATED: Low Attendance	\N	\N	\N	\N	2023-12-06 19:12:51.221844	2023-12-06 19:12:51.220602	2a66daf3-bff6-4265-80d6-657fd9aec74d	3165
3170	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Mid-Year	Mid-Year	Mid-Year	\N	\N	\N	\N	2023-12-06 19:12:51.259805	2023-12-06 19:12:51.258736	ae35c925-f263-49b9-9e67-f68055270332	3170
3176	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-12-06 19:12:51.274386	2023-12-06 19:12:51.274348	47475474-3846-4e85-a9e4-82826b59d72d	3176
3177	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:12:51.281632	2023-12-06 19:12:51.281589	64765487-0c99-423e-b76b-4eb06a7dc10e	3177
3182	uri://ed-fi.org/QuestionFormDescriptor	Radio box	Radio box	Radio box	\N	\N	\N	\N	2023-12-06 19:12:51.312802	2023-12-06 19:12:51.311806	2fcd1a59-80e8-4148-a661-6d12171b9022	3182
3186	uri://ed-fi.org/QuestionFormDescriptor	Matrix of textboxes	Matrix of textboxes	Matrix of textboxes	\N	\N	\N	\N	2023-12-06 19:12:51.322079	2023-12-06 19:12:51.322029	6c527e0e-4cb7-43d2-9bb7-eaa648d23d35	3186
3189	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Initial SLD Evaluation	Initial SLD Evaluation	Initial Specific Learning Disabilities (SLD) Evaluation	\N	\N	\N	\N	2023-12-06 19:12:51.358394	2023-12-06 19:12:51.357239	bd0260b3-1116-47d1-8e45-849ed2b9245e	3189
3193	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	\N	2023-12-06 19:12:51.368719	2023-12-06 19:12:51.367597	a2b29c25-f306-4806-a091-65c9b7ede6dd	3193
3141	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	\N	2023-12-06 19:12:51.091118	2023-12-06 19:12:51.091082	3c8a1e9d-4663-4ce4-a377-6f4d10860c18	3141
3144	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Observation	Observation	Observation	\N	\N	\N	\N	2023-12-06 19:12:51.123392	2023-12-06 19:12:51.12232	acbe7f2c-abe4-43e9-b199-e5d16c02fba5	3144
3146	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Teacher survey	Teacher survey	Teacher survey	\N	\N	\N	\N	2023-12-06 19:12:51.131781	2023-12-06 19:12:51.131762	d835de64-db61-4e8f-b1ab-039986bd4ffa	3146
3151	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	\N	2023-12-06 19:12:51.161625	2023-12-06 19:12:51.160556	f877e228-ce5f-40bb-a061-2aa8d0faa13f	3151
3153	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-12-06 19:12:51.170157	2023-12-06 19:12:51.170104	61ff7ae4-e1a1-447a-b89a-c0f9fc59d2f9	3153
3161	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.183342	2023-12-06 19:12:51.183329	be67cf38-abf8-4e70-ad52-02847bbd865f	3161
3166	uri://ed-fi.org/DiagnosisDescriptor	Dropout Risk	DEPRECATED: Dropout Risk	DEPRECATED: Dropout Risk	\N	\N	\N	\N	2023-12-06 19:12:51.222011	2023-12-06 19:12:51.220661	18fee3f7-6335-4946-9687-2f17702c76f2	3166
3168	uri://ed-fi.org/EligibilityEvaluationTypeDescriptor	Reevaluation	Reevaluation	Reevaluation	\N	\N	\N	\N	2023-12-06 19:12:51.229353	2023-12-06 19:12:51.229328	a9dab055-d261-47d1-9fdb-b4939a71a222	3168
3172	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-12-06 19:12:51.2598	2023-12-06 19:12:51.258718	807369f7-30c5-4192-827a-9048854bba2b	3172
3175	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-12-06 19:12:51.274178	2023-12-06 19:12:51.274157	e377d256-7fd9-4ba8-93b0-9618b276973f	3175
3178	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	\N	2023-12-06 19:12:51.281934	2023-12-06 19:12:51.281905	4875a909-f1d5-4213-a5c7-a02e95085a66	3178
3183	uri://ed-fi.org/QuestionFormDescriptor	Dropdown	Dropdown	Dropdown	\N	\N	\N	\N	2023-12-06 19:12:51.312819	2023-12-06 19:12:51.311781	3e8a390e-3bee-4473-9ad2-8f252d70e6c4	3183
3187	uri://ed-fi.org/QuestionFormDescriptor	Matrix of dropdowns	Matrix of dropdowns	Matrix of dropdowns	\N	\N	\N	\N	2023-12-06 19:12:51.321381	2023-12-06 19:12:51.321367	533fe8f7-43cf-41c5-b6eb-98e051283d33	3187
3190	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Child Unavailable	Child Unavailable	Child Unavailable	\N	\N	\N	\N	2023-12-06 19:12:51.358368	2023-12-06 19:12:51.357269	77546067-bbec-4b2c-abb7-e41012755625	3190
3191	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	\N	2023-12-06 19:12:51.368731	2023-12-06 19:12:51.367674	051af0ef-b490-4ea1-852e-2ddccc26eb2f	3191
3198	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	\N	2023-12-06 19:12:51.408485	2023-12-06 19:12:51.407391	39e0c893-a734-4560-a747-9476ea5fc5a7	3198
3199	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	\N	2023-12-06 19:12:51.416594	2023-12-06 19:12:51.416497	6dca5ca3-8061-4d89-b757-bb5249fb5492	3199
3155	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.171515	2023-12-06 19:12:51.17141	79b6c642-ad4d-4587-9381-c5098b6e632f	3155
3156	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.177118	2023-12-06 19:12:51.177104	ddb472fa-5251-474c-9240-d10c464ed7b9	3156
3163	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	\N	2023-12-06 19:12:51.186663	2023-12-06 19:12:51.186636	4cb587bd-c964-49da-bf94-82086b6ef016	3163
3167	uri://ed-fi.org/EligibilityEvaluationTypeDescriptor	Initial Evaluation	Initial Evaluation	Initial Evaluation	\N	\N	\N	\N	2023-12-06 19:12:51.228867	2023-12-06 19:12:51.227726	ebe289da-093f-4327-92ee-2659f1e5bfdc	3167
3169	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Beginning of year	Beginning of year	Beginning of year	\N	\N	\N	\N	2023-12-06 19:12:51.259627	2023-12-06 19:12:51.258709	e7497059-cf7a-4086-a749-0a126fc97c08	3169
3174	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	\N	2023-12-06 19:12:51.274002	2023-12-06 19:12:51.27399	6297978f-5d8f-4694-bc79-6f53e8bd627b	3174
3179	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-12-06 19:12:51.282231	2023-12-06 19:12:51.282179	4aea27b6-962a-4b0a-80bb-1e7fd53deb4d	3179
3180	uri://ed-fi.org/QuestionFormDescriptor	Checkbox	Checkbox	Checkbox	\N	\N	\N	\N	2023-12-06 19:12:51.312633	2023-12-06 19:12:51.311808	fa673833-c4ab-42f4-a4ab-8c4de622c066	3180
3184	uri://ed-fi.org/QuestionFormDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-12-06 19:12:51.321569	2023-12-06 19:12:51.321535	e0669cd5-5631-4a79-9eec-63aff0bb627b	3184
3188	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	\N	2023-12-06 19:12:51.358333	2023-12-06 19:12:51.357256	8ea38e78-8dda-4002-8391-3e6b9a149bcf	3188
3194	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:51.368784	2023-12-06 19:12:51.36853	cd628648-7170-4ade-a103-d4aac15ed37e	3194
3196	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	\N	2023-12-06 19:12:51.408249	2023-12-06 19:12:51.407396	ddab4e86-5044-4e34-aebf-c42af96a804e	3196
3200	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	\N	2023-12-06 19:12:51.416969	2023-12-06 19:12:51.416955	43312a4a-64c9-4685-8a58-8f8162416360	3200
3197	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	\N	2023-12-06 19:12:51.408207	2023-12-06 19:12:51.407373	bf70e6fd-9e5c-49f4-9fe6-f995c0b19867	3197
3201	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:51.417927	2023-12-06 19:12:51.417914	55dca54d-8fdb-4315-b82f-7f2ceb18cdc3	3201
3202	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Master's Program	Master's Program	Master's Program	\N	\N	\N	\N	2023-12-06 19:29:11.914522	2023-12-06 19:29:11.902917	34881662-5ec4-41ce-af2e-19e7cb375a40	3202
3203	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-12-06 19:29:12.017351	2023-12-06 19:29:12.017259	cd32d325-b2c4-44ae-a62a-eff79b909dea	3203
3204	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-12-06 19:29:12.024444	2023-12-06 19:29:12.0244	6c68cefe-7122-4c64-ab1c-9432d84a05f1	3204
3205	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Freshman	Freshman	Freshman	\N	\N	\N	\N	2023-12-06 19:29:12.029206	2023-12-06 19:29:12.02916	71731a5a-33dc-4b14-b608-860ce5be0fc0	3205
3206	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Sophomore	Sophomore	Sophomore	\N	\N	\N	\N	2023-12-06 19:29:12.033474	2023-12-06 19:29:12.033431	a614137e-f791-41be-91ae-b95ae1ac9119	3206
3207	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Junior	Junior	Junior	\N	\N	\N	\N	2023-12-06 19:29:12.038156	2023-12-06 19:29:12.038116	f397faaf-65c1-44d5-b288-0a5480106367	3207
3209	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Postbaccalaureate	Postbaccalaureate	Postbaccalaureate	\N	\N	\N	\N	2023-12-06 19:29:12.047525	2023-12-06 19:29:12.047479	4d3b0242-ab8a-4bd9-814a-214f84d8f690	3209
3210	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Doctoral Program	Doctoral Program	Doctoral Program	\N	\N	\N	\N	2023-12-06 19:29:12.052205	2023-12-06 19:29:12.05216	fc7fa068-d860-48fe-bb86-b10d05e4bef0	3210
3211	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-12-06 19:29:12.082695	2023-12-06 19:29:12.088453	55105545-bbf5-4374-9dfd-1c92d26ba531	3212
3212	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-12-06 19:29:12.126254	2023-12-06 19:29:12.12768	2b5368c9-2c8c-4842-8063-fd71311498e2	3214
3213	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.132648	2023-12-06 19:29:12.13387	4cb8b96c-3a11-44ce-837a-2273ab8003bf	3216
3214	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-12-06 19:29:12.138589	2023-12-06 19:29:12.139904	14530813-1749-4f22-b4a2-10b7654b3bed	3218
3215	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Growth Measures	Student Growth Measures	Student Growth Measures	\N	\N	\N	\N	2023-12-06 19:29:12.144676	2023-12-06 19:29:12.146012	e4ea1385-823f-46cf-a7f6-adb1d83003ff	3220
3216	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.150596	2023-12-06 19:29:12.151832	776c50fa-fa89-4b55-b2ae-4a0af53ea4f9	3222
3217	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.156564	2023-12-06 19:29:12.157805	7be863d2-b648-4477-92dc-15d079fa85fe	3224
3218	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-12-06 19:29:12.162298	2023-12-06 19:29:12.16361	a251200d-ff54-4dd6-a260-45995a692984	3226
3219	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-12-06 19:29:12.167872	2023-12-06 19:29:12.169089	35a2e1ed-6a3f-48c2-9aeb-ac1bc72fac40	3228
3220	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-12-06 19:29:12.173473	2023-12-06 19:29:12.174703	e8ab1eed-c9af-48da-aa1f-8e55a7b5713f	3230
3221	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:29:12.200829	2023-12-06 19:29:12.202784	ea2647c7-abc8-4ff2-b910-14ab7413325c	3232
3222	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:29:12.208542	2023-12-06 19:29:12.209887	6482a175-7da4-4c18-8e56-b0e30520a56f	3234
3223	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:29:12.214987	2023-12-06 19:29:12.216344	fb6fc90f-c111-45e4-af96-89e0011f5d69	3236
3224	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:29:12.221787	2023-12-06 19:29:12.223114	7c7c8a76-38e6-4067-8358-023ba7c9d333	3238
3225	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:29:12.228195	2023-12-06 19:29:12.229578	de32a4f9-ecaf-4b06-9b8e-fc726771aed5	3240
3226	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:29:12.234441	2023-12-06 19:29:12.23578	c60574a6-8c75-40f8-9cb0-3d79de537832	3242
3227	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:12.241067	2023-12-06 19:29:12.242438	0d8deece-6eb4-462f-9f8c-669cf0f2d1f7	3244
3228	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:12.246989	2023-12-06 19:29:12.248345	3d1685be-12c6-452a-8d4e-a1f3d7c518f6	3246
3229	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:29:12.253347	2023-12-06 19:29:12.254714	a5b83f28-3ea6-4602-bbe5-e92e4690b2a7	3248
3230	uri://tpdm.ed-fi.org/AidTypeDescriptor	Assistantship	Assistantship	Assistantship	\N	\N	\N	\N	2023-12-06 19:29:12.28197	2023-12-06 19:29:12.283966	45c6b671-3a68-4df5-8de3-649613e938ca	3250
3231	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Scholarships	Federal Scholarships	Federal Scholarships	\N	\N	\N	\N	2023-12-06 19:29:12.290342	2023-12-06 19:29:12.291754	845c0e2d-079b-4261-868c-cd6ed466ceaf	3252
3232	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Subsidized Loans	Federal Subsidized Loans	Federal Subsidized Loans	\N	\N	\N	\N	2023-12-06 19:29:12.297085	2023-12-06 19:29:12.298417	ee9ed4fe-39fa-440c-9502-9bac79e68a05	3254
3233	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Unsubsidized Loans	Federal Unsubsidized Loans	Federal Unsubsidized Loans	\N	\N	\N	\N	2023-12-06 19:29:12.303173	2023-12-06 19:29:12.304533	b3487d59-8911-4eab-8f1d-15a0bc5ae4bf	3256
3234	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Work Study	Federal Work Study	Federal Work Study	\N	\N	\N	\N	2023-12-06 19:29:12.309178	2023-12-06 19:29:12.310461	0c867125-daa0-4132-a13b-cf90142b8f39	3258
3235	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Grants	Institutional Grants	Institutional Grants	\N	\N	\N	\N	2023-12-06 19:29:12.314632	2023-12-06 19:29:12.315918	8a0e5ab4-403c-4660-9443-37342ecf82d0	3260
3236	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Loans	Institutional Loans	Institutional Loans	\N	\N	\N	\N	2023-12-06 19:29:12.319988	2023-12-06 19:29:12.32121	fecce806-f1c4-4602-9643-b08687d5528b	3262
3237	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Scholarships	Institutional Scholarships	Institutional Scholarships	\N	\N	\N	\N	2023-12-06 19:29:12.325167	2023-12-06 19:29:12.326403	76de9511-0a06-4855-95ab-ab5e0f2508e0	3264
3238	uri://tpdm.ed-fi.org/AidTypeDescriptor	Loan Forgiveness	Loan Forgiveness	Loan Forgiveness	\N	\N	\N	\N	2023-12-06 19:29:12.330446	2023-12-06 19:29:12.331701	a72dfdf3-6428-4bf2-9795-a0767a020cff	3266
3239	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Federal Grants	Other Federal Grants	Other Federal Grants	\N	\N	\N	\N	2023-12-06 19:29:12.335565	2023-12-06 19:29:12.336763	cea96a6a-b29f-4aee-a289-9f2159a61dcd	3268
3240	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Grants	Other Grants	Other Grants	\N	\N	\N	\N	2023-12-06 19:29:12.340956	2023-12-06 19:29:12.342185	ad3bb65b-d69b-41b8-b040-b6e17a404d52	3270
3241	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other On-Campus Work	Other On-Campus Work	Other On-Campus Work	\N	\N	\N	\N	2023-12-06 19:29:12.346287	2023-12-06 19:29:12.347528	92394ba9-adc6-4ddc-964f-62ac8a357006	3272
3242	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Scholarships	Other Scholarships	Other Scholarships	\N	\N	\N	\N	2023-12-06 19:29:12.351556	2023-12-06 19:29:12.352768	3fda2052-da02-44a7-b5e9-f61554f6265c	3274
3243	uri://tpdm.ed-fi.org/AidTypeDescriptor	Parent PLUS Loans	Parent PLUS Loans	Parent PLUS Loans	\N	\N	\N	\N	2023-12-06 19:29:12.356722	2023-12-06 19:29:12.357958	bd8e9786-2bbc-464e-825f-3524c652afd9	3276
3244	uri://tpdm.ed-fi.org/AidTypeDescriptor	Pell Grants	Pell Grants	Pell Grants	\N	\N	\N	\N	2023-12-06 19:29:12.361951	2023-12-06 19:29:12.36318	21ef6946-e69f-4c1e-8f04-c91223886680	3278
3245	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Grants	Private Grants	Private Grants	\N	\N	\N	\N	2023-12-06 19:29:12.367256	2023-12-06 19:29:12.368472	c8cd6776-02b0-457d-b0c8-3aedf1753964	3280
3246	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Loans	Private Loans	Private Loans	\N	\N	\N	\N	2023-12-06 19:29:12.374213	2023-12-06 19:29:12.37545	26402045-abdf-4c24-9571-15ddc148835b	3282
3247	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Scholarships	Private Scholarships	Private Scholarships	\N	\N	\N	\N	2023-12-06 19:29:12.379556	2023-12-06 19:29:12.380809	5ca7a401-7f47-4063-a25d-ff9d33a203b9	3284
3248	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Grants	State and Local Grants	State and Local Grants	\N	\N	\N	\N	2023-12-06 19:29:12.384928	2023-12-06 19:29:12.386193	99efc1e7-acd8-4758-8056-c5273525c12c	3286
3249	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Scholarships	State and Local Scholarships	State and Local Scholarships	\N	\N	\N	\N	2023-12-06 19:29:12.390124	2023-12-06 19:29:12.39135	23c486a9-c05e-4e66-8c76-0892a4f59cea	3288
3250	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Loans	State Loans	State Loans	\N	\N	\N	\N	2023-12-06 19:29:12.395282	2023-12-06 19:29:12.396485	e1c52519-0128-476e-80d6-d1e399898299	3290
3251	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Work	State Work	State Work	\N	\N	\N	\N	2023-12-06 19:29:12.40041	2023-12-06 19:29:12.401593	681f5ea9-94e1-4ecd-9c2d-87393f2cde78	3292
3252	uri://tpdm.ed-fi.org/AidTypeDescriptor	Teach Grants	Teach Grants	Teach Grants	\N	\N	\N	\N	2023-12-06 19:29:12.405711	2023-12-06 19:29:12.406927	6185fd1f-6d21-4278-8b06-3eef9900b4fd	3294
3253	uri://tpdm.ed-fi.org/AidTypeDescriptor	Tuition Reimbursements	Tuition Reimbursements	Tuition Reimbursements	\N	\N	\N	\N	2023-12-06 19:29:12.410939	2023-12-06 19:29:12.412193	0305d664-4b05-4a34-ab1f-0577c8f50a21	3296
3254	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:29:12.448635	2023-12-06 19:29:12.447789	af97977d-a928-4169-94c1-494224d3a223	3297
3255	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	English Language Learners	English Language Learners	English Language Learners	\N	\N	\N	\N	2023-12-06 19:29:12.454593	2023-12-06 19:29:12.454545	0126586d-bd89-46c2-8222-66c36acc5296	3298
3256	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Multiple Subjects	Multiple Subjects	Multiple Subjects	\N	\N	\N	\N	2023-12-06 19:29:12.458772	2023-12-06 19:29:12.458734	a5d76b4f-3e70-4655-8e11-4573fa316d8e	3299
3257	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:29:12.500409	2023-12-06 19:29:12.500356	162ad95f-7999-41d8-a6f4-4a009aefa2e0	3300
3258	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Traditional Certification Program	Traditional Certification Program	Traditional Certification Program	\N	\N	\N	\N	2023-12-06 19:29:12.52689	2023-12-06 19:29:12.526055	a16f1ccd-1e16-455c-8fae-9933d44eabf0	3301
3259	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Post-Baccalaureate	Post-Baccalaureate	Master's + Teaching certificate	\N	\N	\N	\N	2023-12-06 19:29:12.532227	2023-12-06 19:29:12.532185	7675cfb5-9866-4f3a-98ac-0831d3c70c69	3302
3260	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Continuing Education Certificate	Continuing Education Certificate	Certificates offered by education institution	\N	\N	\N	\N	2023-12-06 19:29:12.536567	2023-12-06 19:29:12.536525	2da0973c-92a9-49a7-b1af-c19fa15afb26	3303
3261	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Alternative	Alternative	Training offered in ESC's, community colleges, private vendors, etc.	\N	\N	\N	\N	2023-12-06 19:29:12.540668	2023-12-06 19:29:12.540633	391f9608-318f-43ed-9497-245e701a2818	3304
3262	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Assist	One Teach, One Assist	One Teach, One Assist	\N	\N	\N	\N	2023-12-06 19:29:12.570051	2023-12-06 19:29:12.57206	b38b6e6f-a634-4c77-8e4b-68c2b58a96a6	3306
3263	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Observe	One Teach, One Observe	One Teach, One Observe	\N	\N	\N	\N	2023-12-06 19:29:12.577966	2023-12-06 19:29:12.579383	0eb56607-65ac-4c2a-b948-da2a93d6c7ac	3308
3264	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Parallel Teaching	Parallel Teaching	Parallel Teaching	\N	\N	\N	\N	2023-12-06 19:29:12.584179	2023-12-06 19:29:12.58548	e6fd98a0-19c9-4d9f-a5f1-1597efbca95c	3310
3265	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Station Teaching	Station Teaching	Station Teaching	\N	\N	\N	\N	2023-12-06 19:29:12.590266	2023-12-06 19:29:12.591724	428be68c-e79e-4426-a665-29a9baa371dc	3312
3266	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:29:12.596759	2023-12-06 19:29:12.598023	aa48ad51-cdf8-4048-9ead-52ba5576ed11	3314
3267	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Team Teaching	Team Teaching	Team Teaching	\N	\N	\N	\N	2023-12-06 19:29:12.602159	2023-12-06 19:29:12.603415	db868cf1-de1e-4505-900c-98f93d89dba1	3316
3268	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Alternative Teaching	Alternative Teaching	Alternative Teaching	\N	\N	\N	\N	2023-12-06 19:29:12.607368	2023-12-06 19:29:12.608585	5836c85e-3a91-4c77-8197-8abdb6de87ab	3318
3269	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Completion	Completion	A cohort year based on the candidate's scheduled completion	\N	\N	\N	\N	2023-12-06 19:29:12.634652	2023-12-06 19:29:12.633831	46397b5f-0785-4e20-be85-a1934df379ba	3319
3270	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Entry	Entry	A cohort year based on the entry of candidate into the Eucator Preparation Provider	\N	\N	\N	\N	2023-12-06 19:29:12.640675	2023-12-06 19:29:12.640629	540d2b8e-433a-4980-b20a-5dec5f9a1cf9	3320
3271	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Fellowship	Fellowship	Fellowship	\N	\N	\N	\N	2023-12-06 19:29:12.691644	2023-12-06 19:29:12.693672	0cf4d436-3e7e-44c9-8aeb-6c0893e83055	3322
3272	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-12-06 19:29:12.699634	2023-12-06 19:29:12.700952	8ed4b6de-453f-4f39-9ca0-0766eace4d3a	3324
3273	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-12-06 19:29:12.705677	2023-12-06 19:29:12.707005	232fb244-ef31-4dc6-b35c-469ca65565e7	3326
3274	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Traditional	Traditional	Traditional	\N	\N	\N	\N	2023-12-06 19:29:12.711879	2023-12-06 19:29:12.713123	6ebb3a85-9a93-4298-a725-8dc8a4dc03aa	3328
3275	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:29:12.717099	2023-12-06 19:29:12.718345	a7e71db8-4e13-4943-a9ab-491c879f2185	3330
3276	uri://tpdm.ed-fi.org/GenderDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-12-06 19:29:12.744769	2023-12-06 19:29:12.746738	b9283253-ef76-4ce5-bcd8-a84a5520b2d5	3332
3277	uri://tpdm.ed-fi.org/GenderDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-12-06 19:29:12.75195	2023-12-06 19:29:12.753173	bfdcc5c7-3ad9-49b9-82cf-8ddfdf2bb58d	3334
3278	uri://tpdm.ed-fi.org/GenderDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:29:12.757405	2023-12-06 19:29:12.758604	7a443e31-9f3f-481f-8d5a-417356bead10	3336
3279	uri://tpdm.ed-fi.org/GenderDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-12-06 19:29:12.762899	2023-12-06 19:29:12.764159	a4dfa93b-e159-4a8a-8714-c2d3320fd68f	3338
3280	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:29:12.790113	2023-12-06 19:29:12.792069	64517baa-a7bb-44eb-8062-d6faa05b6ae3	3340
3281	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	\N	2023-12-06 19:29:12.797659	2023-12-06 19:29:12.798951	844faa14-18ae-42ea-a894-60d93504915f	3342
3282	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Associate School Psychologist	Associate School Psychologist	Associate School Psychologist	\N	\N	\N	\N	2023-12-06 19:29:12.803209	2023-12-06 19:29:12.804444	25d0941a-a76b-4544-b835-74d98d5bcc0d	3344
3283	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-12-06 19:29:12.808341	2023-12-06 19:29:12.809556	7fc9df43-5358-4e20-91d5-fd77ced61865	3346
3284	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Diagnostician	Educational Diagnostician	Educational Diagnostician	\N	\N	\N	\N	2023-12-06 19:29:12.813369	2023-12-06 19:29:12.814636	f77ffa19-dfee-488d-999b-ca8ae8095bd6	3348
3285	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Instructional Officer	Instructional Officer	Instructional Officer	\N	\N	\N	\N	2023-12-06 19:29:12.818559	2023-12-06 19:29:12.819902	a29ae0a4-559a-44b6-a5a7-319de56d4d2a	3350
3286	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Librarian	Librarian	Librarian	\N	\N	\N	\N	2023-12-06 19:29:12.824266	2023-12-06 19:29:12.825493	e1c1d3f1-5129-4b7b-8e5d-876f2ba63c93	3352
3287	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Physician	Physician	Physician	\N	\N	\N	\N	2023-12-06 19:29:12.829439	2023-12-06 19:29:12.83066	c5c210cd-6e00-4fbc-a2cf-ca0fe3a7f7bd	3354
3288	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:29:12.834797	2023-12-06 19:29:12.836068	3b76a4e5-ab92-4793-a287-5b2b6490f355	3356
3289	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Nurse	School Nurse	School Nurse	\N	\N	\N	\N	2023-12-06 19:29:12.840153	2023-12-06 19:29:12.841442	a9b9c3b2-6475-4e40-beb4-99416d3fb484	3358
3290	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-12-06 19:29:12.846163	2023-12-06 19:29:12.847511	059ae841-ab64-418d-8eb8-f8ed5eb3654d	3360
3291	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	\N	2023-12-06 19:29:12.851751	2023-12-06 19:29:12.852991	8bb7ca5c-1012-4567-876b-3f1acbe2f6e2	3362
3292	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher Supervisor	Teacher Supervisor	Teacher Supervisor	\N	\N	\N	\N	2023-12-06 19:29:12.856999	2023-12-06 19:29:12.858247	55e272c4-f895-407c-8d88-5ea903a06bfa	3364
3293	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:29:12.862168	2023-12-06 19:29:12.863415	71076d2d-270d-48c0-8790-456d5f8e440b	3366
3294	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Visiting Teacher	Visiting Teacher	Visiting Teacher	\N	\N	\N	\N	2023-12-06 19:29:12.867393	2023-12-06 19:29:12.868655	6f1a19aa-6d8e-400f-ac93-1f60f10eb9d4	3368
3295	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Secretary	Educational Secretary	Educational Secretary	\N	\N	\N	\N	2023-12-06 19:29:12.87275	2023-12-06 19:29:12.873974	290e3d9b-1d3c-4033-b0db-4cca00a7dd9e	3370
3296	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Aide	Educational Aide	Educational Aide	\N	\N	\N	\N	2023-12-06 19:29:12.87784	2023-12-06 19:29:12.879089	c47d1548-21f3-4ffe-9836-abdf21b28e22	3372
3297	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:29:12.883153	2023-12-06 19:29:12.884347	819dc598-007b-403a-a5a0-2d6920aae1d9	3374
3298	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-12-06 19:29:12.88844	2023-12-06 19:29:12.889682	7c4c3a77-8a41-483d-aae2-aac52626b511	3376
3299	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-12-06 19:29:12.915635	2023-12-06 19:29:12.917488	bd1e776e-6988-48c1-b51c-e406d3be235d	3378
3300	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-12-06 19:29:12.923652	2023-12-06 19:29:12.924937	6fc872db-f22c-4a5f-abcc-d1914e85a9ef	3380
3301	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.929492	2023-12-06 19:29:12.9307	6b77f90f-e570-48b2-93db-378bef1d81a0	3382
3302	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-12-06 19:29:12.935281	2023-12-06 19:29:12.936503	b1a3330f-7123-4630-a19c-a9529996288e	3384
3303	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	\N	2023-12-06 19:29:12.940637	2023-12-06 19:29:12.941862	7cbdb832-df63-4dd2-a44b-aefc32e12192	3386
3304	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.946464	2023-12-06 19:29:12.947688	c46d997d-8ebc-4963-a7a3-3b9f5bdae7fb	3388
3305	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:29:12.951522	2023-12-06 19:29:12.952807	317ce641-f7be-4b36-9a62-1a0ed151a95f	3390
3306	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-12-06 19:29:12.956907	2023-12-06 19:29:12.95829	4b79ab8f-3128-47b4-b23b-aae72204688b	3392
3307	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-12-06 19:29:12.96291	2023-12-06 19:29:12.964341	2677e423-bf24-47b4-a6f0-cd24358e88b0	3394
3308	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-12-06 19:29:12.969781	2023-12-06 19:29:12.971642	ca76542c-fc15-4197-83bb-ba95ff19fc52	3396
3309	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	Educator Preparation Provider	Educator Preparation Provider	Educator Preparation Provider	\N	\N	\N	\N	2023-12-06 19:29:13.000047	2023-12-06 19:29:12.998867	fdfae2b6-16e0-4b20-ae8a-bbe995ec9dcd	3397
3310	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	University	University	University	\N	\N	\N	\N	2023-12-06 19:29:13.0064	2023-12-06 19:29:13.006363	083fb81f-bb20-4fb0-ad46-5a57c47b82a8	3398
3311	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Not Started	Not Started	Not Started	\N	\N	\N	\N	2023-12-06 19:29:13.034337	2023-12-06 19:29:13.036419	687126b8-4658-436c-a583-7071e1eef435	3400
3312	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	In Progress	In Progress	In Progress	\N	\N	\N	\N	2023-12-06 19:29:13.043054	2023-12-06 19:29:13.044803	614b22bc-6d18-45f7-996e-1d61b0ea560e	3402
3313	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-12-06 19:29:13.0507	2023-12-06 19:29:13.051988	141a06ca-ab9e-4380-b53b-1ffefdeae25b	3404
3314	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Queued	Queued	Queued	\N	\N	\N	\N	2023-12-06 19:29:13.056115	2023-12-06 19:29:13.057408	ccf05afd-1f0d-48f7-aa45-7f87e4afbae5	3406
3315	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:29:13.061447	2023-12-06 19:29:13.062632	1ccbc9ab-cb0d-45e3-a064-a73d7090d34d	3408
3316	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:29:13.066673	2023-12-06 19:29:13.067936	612e0838-e478-4ebf-baeb-cf214678521b	3410
3317	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Enrollment	Student Enrollment	Student Enrollment	\N	\N	\N	\N	2023-12-06 19:29:13.093647	2023-12-06 19:29:13.092813	f237120d-1551-4240-a368-27817196b154	3411
3318	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Employment	Staff Employment	Staff Employment	\N	\N	\N	\N	2023-12-06 19:29:13.099488	2023-12-06 19:29:13.099455	bed4e198-649a-4322-a5a2-acdaf145d273	3412
3319	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Programs	Student Programs	Student Programs	\N	\N	\N	\N	2023-12-06 19:29:13.103799	2023-12-06 19:29:13.103754	9b743d24-aa12-4678-9568-a353eb7a6ad2	3413
3320	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Demographics	Student Demographics	Student Demographics	\N	\N	\N	\N	2023-12-06 19:29:13.107656	2023-12-06 19:29:13.10762	c57ac9d9-ca00-47f1-9a4e-28099557e58b	3414
3321	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Demographics	Staff Demographics	Staff Demographics	\N	\N	\N	\N	2023-12-06 19:29:13.111847	2023-12-06 19:29:13.111809	fc1db08b-7298-4fa6-846a-ccd7de6e45aa	3415
3322	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Academics	Student Academics	Student Academics	\N	\N	\N	\N	2023-12-06 19:29:13.115934	2023-12-06 19:29:13.115888	b951e125-3b5d-41d9-b21e-138c7baced11	3416
3323	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Assessment	Student Assessment	Student Assessment	\N	\N	\N	\N	2023-12-06 19:29:13.120153	2023-12-06 19:29:13.120115	37c20248-f062-4895-837c-0b3f55dc500b	3417
3324	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Survey Response	Survey Response	Survey Response	\N	\N	\N	\N	2023-12-06 19:29:13.124055	2023-12-06 19:29:13.124018	a5ab03cf-8ae6-453b-9d16-519376c48c2d	3418
3325	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:29:13.149772	2023-12-06 19:29:13.148947	f2fe4109-afb8-4ea4-92bd-5715a4514249	3419
3326	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Received Degree	Received Degree	Received Degree	\N	\N	\N	\N	2023-12-06 19:29:13.155076	2023-12-06 19:29:13.155035	57db3245-6fe5-4083-beb4-1cbbea45ae56	3420
3327	uri://tpdm.ed-fi.org/IndicatorDescriptor	Administrators Employed	Number of administrators employed	The number of administrators employed by the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.180727	2023-12-06 19:29:13.179904	fe5d948a-8a37-454a-907c-cccf54b26c85	3421
3328	uri://tpdm.ed-fi.org/IndicatorDescriptor	Teachers Employed	Number of teachers employed	The number of teachers employed by the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.186197	2023-12-06 19:29:13.186161	5aae8632-b4bb-4fa7-9e9a-da2ac66a1268	3422
3329	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Enrolled	Number of students enrolled	The number of students enrolled in the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.190334	2023-12-06 19:29:13.190288	f211d208-a534-4488-92f8-7edfa8f83db2	3423
3330	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Eligible for Free Reduced Price Lunches	Percent of students eligible for free and reduced lunches	The percent of students eligible for free and reduced lunches in the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.194393	2023-12-06 19:29:13.194355	b1626898-2064-4aef-bf96-0e4507feff73	3424
3331	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students with Limited English Proficiency	Percent of students with limited English proficiency	The percent of students with limited English proficiency in the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.198363	2023-12-06 19:29:13.198316	2ac38844-96f5-47c4-93d4-4e5fb7cb092c	3425
3332	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students in Special Education	Percent of students in a special education program	The percent of students in a special education program in the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.202447	2023-12-06 19:29:13.202404	bd77d0c4-f9af-4b9e-a0c9-f674a3b9a6e6	3426
3333	uri://tpdm.ed-fi.org/IndicatorDescriptor	Hiring Rate	Percent of staff hired	The percent of staff hired for the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.206469	2023-12-06 19:29:13.206429	08113fe9-6dc5-414d-be7f-a51b2464dd7d	3427
3334	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retention Rate	Percent of staff retained	The percent of staff retained for the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.210552	2023-12-06 19:29:13.210513	3daf3ada-a2e7-49e9-8ebe-01902431a374	3428
3335	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retirement Rate	Percent of staff retired	The percent of staff retired for the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.214645	2023-12-06 19:29:13.214606	896a81b8-eda3-46a9-9393-e7d12dd7e51d	3429
3336	uri://tpdm.ed-fi.org/IndicatorDescriptor	Projected Vacancies	Number of projected vacancies	The number of projected vacancies associated with the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.219617	2023-12-06 19:29:13.21958	a6244822-8056-4925-9a2c-5ae75d636372	3430
3337	uri://tpdm.ed-fi.org/IndicatorDescriptor	Actual Vacancies	Number of actual vacancies	The number of actual vacancies associated with the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.223678	2023-12-06 19:29:13.223641	823d690b-b27f-4754-b5ca-d200a9ea2a4c	3431
3338	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Salary	Average of salaries	The average of salaries collected at the aggregate level	\N	\N	\N	\N	2023-12-06 19:29:13.227527	2023-12-06 19:29:13.22748	1e48226b-512a-4d14-a4f0-b4fc2c18fd81	3432
3339	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Years Employed in District	Average number of years employed in the district	The average number of years that all staff have been employed in the current district of employment	\N	\N	\N	\N	2023-12-06 19:29:13.231428	2023-12-06 19:29:13.231387	132d753e-3b0b-4534-9a38-9b0f72eb919c	3433
3340	uri://tpdm.ed-fi.org/IndicatorDescriptor	Application Count	Number of applications received	The number of applications received for the education organization	\N	\N	\N	\N	2023-12-06 19:29:13.235439	2023-12-06 19:29:13.235394	4e681539-940a-4729-a2ed-4f566d32e005	3434
3341	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:29:13.26133	2023-12-06 19:29:13.263222	39921045-b31d-4a82-ad5b-f7e0904ea9a7	3436
3342	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:29:13.268819	2023-12-06 19:29:13.270096	2380c630-2b5a-4994-88b4-a2c9bc6e3a92	3438
3343	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:29:13.274189	2023-12-06 19:29:13.275464	e513c1fd-ccc7-4340-ba29-4e9a46d8ff94	3440
3344	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:29:13.279647	2023-12-06 19:29:13.280911	b56d19e7-25cd-41a1-923f-91b148b449fd	3442
3345	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:29:13.284982	2023-12-06 19:29:13.286207	199f20d3-94b8-41a3-9573-760c196ea456	3444
3346	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:29:13.290463	2023-12-06 19:29:13.291743	8b426ebe-bd18-4802-8089-eb7f0babf2e6	3446
3347	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.29622	2023-12-06 19:29:13.297437	b1d2d1af-5815-45f2-89c5-7a2dda7b21cc	3448
3348	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.301413	2023-12-06 19:29:13.302623	ec11e0c9-3bb9-43e4-9a95-6590076343cf	3450
3349	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:29:13.306674	2023-12-06 19:29:13.307866	873b7233-c1d6-436b-8a2c-04efd1e31626	3452
3350	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Excellent	Excellent	Excellent	\N	\N	\N	\N	2023-12-06 19:29:13.333131	2023-12-06 19:29:13.33231	1eab107e-a020-4bb8-9ea9-445de1babfe1	3453
3351	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Good	Good	Good	\N	\N	\N	\N	2023-12-06 19:29:13.339122	2023-12-06 19:29:13.339078	3348822a-dea4-48d3-b831-02435d4d0ea6	3454
3352	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Average	Average	Average	\N	\N	\N	\N	2023-12-06 19:29:13.343503	2023-12-06 19:29:13.343455	609719b3-2fda-4055-9c22-b8ff3ac20aad	3455
3353	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Below Average	Below Average	Below Average	\N	\N	\N	\N	2023-12-06 19:29:13.347832	2023-12-06 19:29:13.347785	9f3a1849-24fa-4e8b-98c8-de0207047a26	3456
3354	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Unsatisfactory	Unsatisfactory	Unsatisfactory	\N	\N	\N	\N	2023-12-06 19:29:13.351903	2023-12-06 19:29:13.351861	63e29163-63b9-4716-aa02-3a12c4f4f8d0	3457
3355	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Renewed	Renewed	Renewed	\N	\N	\N	\N	2023-12-06 19:29:13.376977	2023-12-06 19:29:13.378969	cdf6de8a-2ca1-4c50-9a31-72249cdcb3c6	3459
3356	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Revoked	Revoked	Revoked	\N	\N	\N	\N	2023-12-06 19:29:13.384543	2023-12-06 19:29:13.38578	24b1acc7-2032-40f7-92e5-2bde591b86fb	3461
3357	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Suspended	Suspended	Suspended	\N	\N	\N	\N	2023-12-06 19:29:13.390261	2023-12-06 19:29:13.391523	9b1d4a2b-4fc1-4675-8af2-4a38b1c8c9b2	3463
3358	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-12-06 19:29:13.396189	2023-12-06 19:29:13.39743	f99c0b62-8d60-452d-97ea-c2353c23b9db	3465
3359	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Voluntary Surrender	Voluntary Surrender	Voluntary Surrender	\N	\N	\N	\N	2023-12-06 19:29:13.401359	2023-12-06 19:29:13.402594	0f5680e6-c3c1-43e1-a6e6-4a98b559edbf	3467
3360	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Expired	Expired	Expired	\N	\N	\N	\N	2023-12-06 19:29:13.406648	2023-12-06 19:29:13.407908	ceafce34-949f-48b2-b0dc-262cdfca1d30	3469
3361	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-12-06 19:29:13.412727	2023-12-06 19:29:13.413936	89ff54e2-d21d-4521-983e-fae91db5660f	3471
3362	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:29:13.418037	2023-12-06 19:29:13.419299	ecd456a5-0db6-4351-a303-417438aac899	3473
3363	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:29:13.445103	2023-12-06 19:29:13.44717	78d4f8fb-8b46-4bed-aafe-61732465b349	3475
3364	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:29:13.452859	2023-12-06 19:29:13.454142	026d1d60-c000-4d9c-b9a0-e96750eb2347	3477
3365	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:29:13.458338	2023-12-06 19:29:13.459586	23f22d66-21a1-464c-8c9e-6c56416fbb9f	3479
3366	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:29:13.46386	2023-12-06 19:29:13.465059	a138b10a-3bfb-4013-855a-8c967bdebdf6	3481
3367	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:29:13.469065	2023-12-06 19:29:13.470245	cd8d5eff-62cd-496b-b57b-d04fe0f28db8	3483
3368	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:29:13.47468	2023-12-06 19:29:13.475946	1e2586e5-f60f-452d-b0bb-7426c4257efc	3485
3369	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.480121	2023-12-06 19:29:13.481352	91099e1a-1951-4f1f-a1be-9ebdd84022c1	3487
3370	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.485832	2023-12-06 19:29:13.4871	f35d4bff-bc4b-48d0-a1a1-fc4a982ac3eb	3489
3371	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:29:13.491483	2023-12-06 19:29:13.492707	02ed5c45-416e-4d67-a6d9-0bb6ab7d9884	3491
3372	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:29:13.517825	2023-12-06 19:29:13.519693	a002d452-b0d1-49f6-bc30-62103e96d00a	3493
3373	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-12-06 19:29:13.525015	2023-12-06 19:29:13.526201	69a9b710-4744-45c0-84c1-3ec3c12e8cf4	3495
3374	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:29:13.530247	2023-12-06 19:29:13.531512	0897d4bb-5100-4377-a948-dc93c6e8d44a	3497
3375	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:29:13.535675	2023-12-06 19:29:13.536983	29bcf1dc-164a-437a-9ff3-b39acbbdca63	3499
3376	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Alternative Program	Alternative Program	Alternative Program	\N	\N	\N	\N	2023-12-06 19:29:13.563884	2023-12-06 19:29:13.565754	33ad7025-c985-4f1c-8d1b-441f4d31adcd	3501
3377	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Center for Professional Development	Center for Professional Development	Center for Professional Development	\N	\N	\N	\N	2023-12-06 19:29:13.57091	2023-12-06 19:29:13.57219	c9ac6223-0ff0-4d63-8f51-db39a70b5bab	3503
3378	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Vocational Experience	Vocational Experience	Vocational Experience	\N	\N	\N	\N	2023-12-06 19:29:13.576073	2023-12-06 19:29:13.577313	1713d327-0839-4083-9f73-7c3bd5d9003f	3505
3379	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Certification by Exam	Certification by Exam	Certification by Exam	\N	\N	\N	\N	2023-12-06 19:29:13.581168	2023-12-06 19:29:13.58242	d699f5e1-4710-4d9c-8584-b8d079a6a057	3507
3380	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Out of State	Out of State	Out of State	\N	\N	\N	\N	2023-12-06 19:29:13.586299	2023-12-06 19:29:13.587578	0652772e-9c61-489c-817a-9e7db7c39187	3509
3381	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Paraprofessional Program	Paraprofessional Program	Paraprofessional Program	\N	\N	\N	\N	2023-12-06 19:29:13.591565	2023-12-06 19:29:13.592853	c9e27f82-d237-4e50-a24f-e573dc7556e7	3511
3382	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Post-Baccalaureate	Post-Baccalaureate	Post-Baccalaureate	\N	\N	\N	\N	2023-12-06 19:29:13.596951	2023-12-06 19:29:13.598172	1a183755-9778-488e-9ae2-d1fcddeb5e5c	3513
3383	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Permit Program	Permit Program	Permit Program	\N	\N	\N	\N	2023-12-06 19:29:13.601919	2023-12-06 19:29:13.603202	3cc61606-19ee-4a05-80b0-c1bc78d51bc7	3515
3384	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Standard Program	Standard Program	Standard Program	\N	\N	\N	\N	2023-12-06 19:29:13.606965	2023-12-06 19:29:13.608228	e2f0751c-3471-4555-a001-0528374ec61d	3517
3385	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:29:13.612512	2023-12-06 19:29:13.613808	6a2bd4f0-846e-437c-a944-db6c8b2a5f17	3519
3386	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Temporary Teaching Certificate	Temporary Teaching Certificate	Temporary Teaching Certificate	\N	\N	\N	\N	2023-12-06 19:29:13.617805	2023-12-06 19:29:13.619052	a843ba12-a321-4cca-b16c-6c00a86ba4a0	3521
3387	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	MOY	MOY	Mid-Year	\N	\N	\N	\N	2023-12-06 19:29:13.644494	2023-12-06 19:29:13.646434	2e7c2111-4dce-4a79-9987-9c1d8848dccb	3523
3388	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	BOY	BOY	Beginning of year	\N	\N	\N	\N	2023-12-06 19:29:13.651648	2023-12-06 19:29:13.652817	8fbac550-95de-4ee9-877b-fdc35c05dd9e	3525
3389	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	\N	2023-12-06 19:29:13.656877	2023-12-06 19:29:13.658099	bc4a2551-6c9a-423b-ba7f-d604d0b6c401	3527
3390	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-12-06 19:29:13.662039	2023-12-06 19:29:13.66326	bc4a7d36-55ab-4e0a-9883-9312a712bb40	3529
3391	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-12-06 19:29:13.667228	2023-12-06 19:29:13.668541	70731e2f-6121-4d68-9fb1-28eca7d8851c	3531
3392	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-12-06 19:29:13.672743	2023-12-06 19:29:13.67396	65ee7102-ff91-4d52-acc2-97e1ea9911ac	3533
3393	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	\N	2023-12-06 19:29:13.677802	2023-12-06 19:29:13.678988	7cb22cae-771f-4763-8c34-9ed48c98ac26	3535
3394	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-12-06 19:29:13.682759	2023-12-06 19:29:13.683981	186d013e-1fab-4e74-bdb9-a696779fdcc7	3537
3395	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-12-06 19:29:13.687973	2023-12-06 19:29:13.689257	3d701211-b3bc-4ec5-af20-6cc936e29e2a	3539
3396	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:29:13.69322	2023-12-06 19:29:13.694467	716678d5-c81e-4c09-bdc2-59357cb4a81f	3541
3397	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	\N	2023-12-06 19:29:13.698496	2023-12-06 19:29:13.699763	2f9acdee-15dc-4471-8f0e-1a61e0c9505f	3543
3398	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:29:13.748475	2023-12-06 19:29:13.750597	69d744de-aa98-4edd-95ba-ef0412142cf1	3545
3399	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:29:13.756957	2023-12-06 19:29:13.758355	aa304577-2c9b-4d3a-81b6-d42c21bf2450	3547
3400	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:29:13.763157	2023-12-06 19:29:13.764401	48d8d1c3-cd4c-48e1-9065-cc341ffafbd3	3549
3401	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:29:13.768782	2023-12-06 19:29:13.769921	8a61503f-3786-4c09-b53d-d250ad07f30b	3551
3402	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:29:13.774658	2023-12-06 19:29:13.775923	e742777f-38b1-40ce-958b-370c4aa494d2	3553
3403	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:29:13.780123	2023-12-06 19:29:13.781371	c3dc2004-9c61-4632-9ff4-983251838ed9	3555
3404	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.785377	2023-12-06 19:29:13.786599	39ebfa57-4bde-403e-914c-de4ffdabb2fc	3557
3405	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.790624	2023-12-06 19:29:13.791986	85d7de89-cf71-4f88-a451-d0903a5374dd	3559
3406	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:29:13.796064	2023-12-06 19:29:13.797341	6c7d3caf-ab9b-49bd-9687-9e568611fa5a	3561
3407	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Rated	Not Rated	Not Rated	\N	\N	\N	\N	2023-12-06 19:29:13.822862	2023-12-06 19:29:13.824794	1116d408-ec6f-4fe4-bf16-dbadaff90c9e	3563
3408	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited	Accredited	Accredited	\N	\N	\N	\N	2023-12-06 19:29:13.830179	2023-12-06 19:29:13.831428	609822de-d8e3-49db-9663-9aa9deb51de1	3565
3409	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Warned	Accredited - Warned	Accredited - Warned	\N	\N	\N	\N	2023-12-06 19:29:13.835304	2023-12-06 19:29:13.836506	d455e618-5fa2-41cf-a03f-9f97254fb944	3567
3410	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Probation	Accredited - Probation	Accredited - Probation	\N	\N	\N	\N	2023-12-06 19:29:13.840623	2023-12-06 19:29:13.841897	3d6acdbe-f632-4cfa-bf09-b3acb8bc9419	3569
3411	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Accredited	Not Accredited	Not Accredited	\N	\N	\N	\N	2023-12-06 19:29:13.845796	2023-12-06 19:29:13.84707	1e0cb21a-4831-42ea-b30e-db975080c09a	3571
3412	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:29:13.872531	2023-12-06 19:29:13.874454	345f813a-2a1e-4fb0-8c63-c8036413f98e	3573
3413	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:29:13.879486	2023-12-06 19:29:13.880709	bd984847-96d2-43f3-8a6a-b1522b2cced2	3575
3414	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:29:13.884475	2023-12-06 19:29:13.885689	cf88a7ba-9d35-4faa-b3c6-fb5b5489c8e3	3577
3415	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:29:13.889655	2023-12-06 19:29:13.890861	acd7735a-7c8c-4bc8-899b-e43ff9f37a5a	3579
3416	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:29:13.895243	2023-12-06 19:29:13.896456	7710b806-bffb-432f-9c76-389a95a649ef	3581
3417	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:29:13.900353	2023-12-06 19:29:13.901615	76a0eaae-5413-4ba2-81f1-5e8a228915e2	3583
3418	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.905649	2023-12-06 19:29:13.906865	003e142e-115d-4035-8873-07c3044490fa	3585
3419	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:29:13.910555	2023-12-06 19:29:13.911832	36d5392a-0639-4071-9c96-1e0b208343d4	3587
3420	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:29:13.915709	2023-12-06 19:29:13.916921	92251b07-bf3a-4924-9340-d81c68bc2210	3589
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormapping (mappednamespace, mappedvalue, namespace, value, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: descriptormappingmodelentity; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormappingmodelentity (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
3165
3166
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
935
936
937
938
939
940
941
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
1269
1270
1273
1274
1275
1277
1276
1278
1280
1279
1282
1281
1283
1284
1285
1286
1287
1288
1289
1290
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
2152
2153
2154
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
3058
3059
3060
3061
3063
3062
3064
3065
3066
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, actualdisciplineactionlength, assignmentschoolid, disciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, iepplacementmeetingindicator, relatedtozerotolerancepolicy, responsibilityschoolid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
1732
1734
1733
1735
1737
1736
1738
1739
1740
1741
1742
1743
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, studentusi, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
3083
3085
3086
3084
3087
3088
3089
3090
3091
3092
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, casenumber, incidentcost, incidentdate, incidentdescription, incidentlocationdescriptorid, incidenttime, reportedtolawenforcement, reporterdescriptiondescriptorid, reportername, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (incidentidentifier, schoolid, behaviordescriptorid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
2131
2132
2134
2133
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
1592
1597
1599
1593
1598
1601
1594
1595
1602
1603
1591
1596
1600
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, additionalauthorsindicator, contentclassdescriptorid, cost, costratedescriptorid, description, interactivitystyledescriptorid, learningresourcemetadatauri, learningstandardid, namespace, publicationdate, publicationyear, publisher, shortdescription, timerequired, userightsurl, version, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (contentidentifier, author, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, operationalstatusdescriptorid, shortnameofinstitution, website, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationassociationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationassociationtypedescriptor (educationorganizationassociationtypedescriptorid) FROM stdin;
1830
1832
1831
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationid, educationorganizationcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
2095
2097
2096
2098
2099
2100
2101
2102
3309
3310
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
1316
1315
1317
1318
1320
1319
1321
1322
1323
1324
1325
\.


--
-- Data for Name: educationorganizationindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicator (educationorganizationid, indicatordescriptorid, designatedby, indicatorgroupdescriptorid, indicatorleveldescriptorid, indicatorvalue, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicatorperiod (educationorganizationid, indicatordescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (educationorganizationid, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
2136
2137
2135
2138
2139
2141
2142
2140
2143
2144
2145
2146
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
3191
3193
3192
3194
\.


--
-- Data for Name: eligibilitydelayreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eligibilitydelayreasondescriptor (eligibilitydelayreasondescriptorid) FROM stdin;
2171
2170
2172
2173
2174
2175
2176
2177
2178
\.


--
-- Data for Name: eligibilityevaluationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eligibilityevaluationtypedescriptor (eligibilityevaluationtypedescriptorid) FROM stdin;
3168
3167
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
1581
1583
1585
1586
1590
1584
1588
1589
1582
1587
\.


--
-- Data for Name: enrollmenttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.enrollmenttypedescriptor (enrollmenttypedescriptorid) FROM stdin;
2291
2290
2292
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
1349
1347
1350
1348
1351
1352
1353
1354
1355
1356
1357
1358
1359
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
1480
1479
1481
1482
1483
\.


--
-- Data for Name: evaluationdelayreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.evaluationdelayreasondescriptor (evaluationdelayreasondescriptorid) FROM stdin;
3188
3189
3190
\.


--
-- Data for Name: evaluationrubricdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.evaluationrubricdimension (evaluationrubricrating, programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, evaluationcriteriondescription, evaluationrubricratingleveldescriptorid, rubricdimensionsortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
3110
3111
3112
3113
3114
3115
3117
3116
3118
3119
3120
3121
3122
3123
3124
3125
3126
3127
3128
3129
3130
3131
3132
3133
3134
3135
3136
3137
3138
3139
3140
3141
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
2156
2159
2161
2163
2167
2157
2164
2168
2158
2160
2162
2165
2169
2155
2166
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: financialcollectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.financialcollectiondescriptor (financialcollectiondescriptorid) FROM stdin;
2979
2982
2981
2980
2983
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: functiondimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: funddimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationprogramparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, designatedby, statusenddate, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, currentgradeasofdate, currentgradeindicator, diagnosticstatement, gradeearneddescription, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (gradebookentryidentifier, namespace, dateassigned, description, duedate, duetime, gradebookentrytypedescriptorid, gradingperioddescriptorid, gradingperiodname, localcoursecode, maxpoints, schoolid, schoolyear, sectionidentifier, sessionname, sourcesectionidentifier, title, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (gradebookentryidentifier, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
1573
1574
1575
1576
1577
1578
1579
1580
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid, diagnosticstatement, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
754
756
755
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
3202
3203
3204
3205
3206
3207
3208
3209
3210
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
1484
1486
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
3099
3100
3101
3102
3103
3104
3105
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear, begindate, enddate, periodsequence, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
970
971
972
973
975
974
976
977
978
979
980
981
982
983
984
985
986
987
988
989
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcreditconversion, totalrequiredcredits, totalrequiredcredittypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, creditconversion, credits, credittypedescriptorid, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, performanceleveldescriptorid, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
25
26
27
28
29
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
1510
1513
1512
1511
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
1728
1729
1730
1731
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
885
887
884
890
886
888
883
889
\.


--
-- Data for Name: ideapartdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ideapartdescriptor (ideapartdescriptorid) FROM stdin;
32
33
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
112
114
113
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
1096
1097
1095
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1112
1111
1113
1114
1115
1116
1117
1118
1119
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatordescriptor (indicatordescriptorid) FROM stdin;
3327
3328
3329
3330
3331
3332
3333
3334
3335
3336
3337
3338
3339
3340
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid) FROM stdin;
3317
3318
3319
3320
3321
3322
3323
3324
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorleveldescriptor (indicatorleveldescriptorid) FROM stdin;
3350
3351
3352
3353
3354
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
1026
1027
1028
1029
1030
1032
1031
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
666
665
667
668
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
73
74
78
79
80
81
82
83
85
84
86
87
88
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid) FROM stdin;
53
58
51
56
52
55
54
57
59
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid) FROM stdin;
2080
2082
2081
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, begindate, deliverymethoddescriptorid, enddate, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
1805
1806
1807
1808
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (educationorganizationid, interventionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
2316
2317
2318
2319
2320
2321
2322
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, interventionidentificationcode, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (educationorganizationid, interventionstudyidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
131
132
130
133
134
135
136
137
138
140
139
141
143
144
142
145
146
147
148
150
149
151
152
153
155
154
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
185
184
186
187
189
188
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
207
206
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
233
232
234
235
236
237
238
239
240
241
243
242
245
244
246
247
248
249
250
251
252
253
254
255
256
258
257
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
296
295
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
314
313
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
331
330
332
333
334
335
337
336
338
339
340
341
342
343
344
345
346
347
348
349
351
350
352
353
354
355
356
360
363
368
371
374
377
379
382
385
394
400
403
405
417
420
433
438
439
442
447
450
458
460
463
467
470
473
476
477
480
482
488
494
497
500
505
506
510
512
518
522
527
533
534
537
541
544
547
549
552
555
561
564
569
574
578
580
586
588
591
597
599
602
604
609
610
613
358
361
367
372
381
383
387
390
393
396
402
406
408
410
419
424
426
429
434
437
443
445
451
455
459
464
468
471
475
479
484
486
491
501
503
507
509
513
519
524
528
532
539
540
546
551
554
557
566
568
573
576
579
582
584
590
594
595
598
600
608
357
364
369
375
380
384
388
391
395
397
399
401
407
409
412
415
418
422
428
431
436
440
444
452
454
457
461
466
469
478
483
487
492
496
498
504
511
514
516
520
525
529
531
538
542
545
550
553
556
559
562
563
570
572
577
581
583
587
593
605
607
612
359
362
365
366
370
373
376
378
386
389
392
398
404
411
413
414
416
421
423
425
427
430
432
435
441
446
448
449
453
456
462
465
472
474
481
485
489
490
493
495
499
502
508
515
517
521
523
526
530
535
536
543
548
558
560
565
567
571
575
585
589
592
596
601
603
606
611
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
852
853
855
854
856
857
858
859
860
861
863
862
864
865
866
867
868
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
746
747
748
749
750
751
752
753
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, coursetitle, description, learningstandardcategorydescriptorid, learningstandarditemcode, learningstandardscopedescriptorid, namespace, parentlearningstandardid, successcriteria, uri, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (learningstandardid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
1489
1491
1490
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (learningstandardid, author, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescription, learningstandardequivalencestrengthdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
3044
3045
3046
3043
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (learningstandardid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (learningstandardid, contentstandardname, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
1504
1505
1507
1506
1508
1509
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
2091
2089
2088
2090
2092
2093
2094
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
1434
1435
1436
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
1204
1206
1205
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
1291
1292
1293
1294
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, chartofaccountidentifier, chartofaccounteducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localactual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localbudget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localcontractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1441
1443
1444
1445
1448
1449
1451
1442
1446
1450
1440
1447
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, charterstatusdescriptorid, educationservicecenterid, localeducationagencycategorydescriptorid, parentlocaleducationagencyid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
1054
1060
1056
1057
1062
1055
1059
1061
1053
1058
1063
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (localeducationagencyid, fiscalyear, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, stateassessmentadministrationfunding, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localencumbrance (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localpayroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
60
61
62
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
1744
1746
1747
1745
1748
1749
1750
1751
1752
1753
1754
1755
1756
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
1194
1195
1196
1197
1198
1200
1193
1199
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1088
1089
1090
1091
1092
1094
1093
\.


--
-- Data for Name: modelentitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.modelentitydescriptor (modelentitydescriptorid) FROM stdin;
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
1604
1605
1606
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
1295
1296
1297
1298
1299
1300
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
38
39
40
41
42
43
44
45
46
47
48
49
50
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
1773
1772
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, academicsubjectdescriptorid, description, maxrawscore, nomenclature, parentidentificationcode, percentofassessment, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, dateposted, datepostingremoved, employmentstatusdescriptorid, positiontitle, postingresultdescriptorid, programassignmentdescriptorid, staffclassificationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (educationorganizationid, requisitionnumber, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, requisitionnumber, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
2179
2181
2182
2180
2183
2184
2185
2186
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: operationalunitdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.organizationdepartment (organizationdepartmentid, academicsubjectdescriptorid, parenteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
70
71
72
69
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
892
891
893
894
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
1379
1381
1380
1382
1383
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
90
89
91
92
93
94
95
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
872
871
869
874
875
876
878
879
880
882
870
873
877
881
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.person (personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
627
628
629
626
630
631
632
633
634
635
636
637
638
639
640
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
1616
1617
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
2952
2955
2960
2954
2957
2959
2953
2958
2951
2956
2961
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
956
957
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
2985
2984
2986
2987
2988
2989
2990
2991
2992
2993
2994
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, administrativefundingcontroldescriptorid, postsecondaryinstitutionleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
3047
3049
3050
3048
3051
3052
3053
3054
3055
3056
3057
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (postsecondaryinstitutionid, mediumofinstructiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid) FROM stdin;
1186
1187
1185
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid) FROM stdin;
990
992
991
993
994
995
996
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid) FROM stdin;
1202
1201
1203
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
1272
1271
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
65
66
68
63
67
64
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluation (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, evaluationmaxnumericrating, evaluationminnumericrating, programevaluationdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationelement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationelement (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, elementmaxnumericrating, elementminnumericrating, elementsortorder, programevaluationelementdescription, programevaluationobjectivetitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationelementprogramevaluationlevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationelementprogramevaluationlevel (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationlevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationlevel (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationobjective (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, objectivemaxnumericrating, objectiveminnumericrating, objectivesortorder, programevaluationobjectivedescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationobjectiveprogramevaluationlevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationobjectiveprogramevaluationlevel (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationperioddescriptor (programevaluationperioddescriptorid) FROM stdin;
3171
3173
3172
3175
3178
3170
3176
3177
3169
3174
3179
\.


--
-- Data for Name: programevaluationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationtypedescriptor (programevaluationtypedescriptorid) FROM stdin;
3143
3142
3147
3145
3144
3146
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, programname, programtypedescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
2104
2105
2107
2109
2111
2112
2114
2106
2108
2113
2103
2110
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
683
684
685
682
686
688
687
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
728
727
729
730
731
732
733
735
734
736
737
738
739
740
741
742
3258
3259
3260
3261
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
2219
2220
2221
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
1302
1303
1304
1301
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: projectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
1327
1328
1331
1332
1334
1335
1338
1340
1341
1344
1345
1329
1330
1337
1342
1346
1326
1333
1336
1339
1343
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
1487
1488
1485
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
101
103
102
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
2149
2148
2147
2150
2151
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.questionformdescriptor (questionformdescriptorid) FROM stdin;
3181
3185
3183
3187
3182
3186
3180
3184
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
895
896
899
898
901
897
900
\.


--
-- Data for Name: ratingleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ratingleveldescriptor (ratingleveldescriptorid) FROM stdin;
1607
1608
1609
1610
1611
1613
1614
1612
1615
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
1139
1140
1141
1142
1145
1143
1144
1146
1147
1148
1150
1149
1151
3325
3326
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
812
813
816
818
822
823
825
815
819
821
824
814
817
820
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
615
617
614
616
618
619
620
621
622
623
624
625
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
1221
1220
1219
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1267
1266
1268
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
106
105
107
108
111
104
109
110
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
1452
1453
1455
1454
1456
1457
\.


--
-- Data for Name: reportingtagdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportingtagdescriptor (reportingtagdescriptorid) FROM stdin;
1389
1391
1392
1393
1390
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
1188
1189
1190
1191
1192
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
2
1
3
4
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
2308
2310
2311
2309
2312
2313
2314
2315
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, educationalenvironmentdescriptorid, eventdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
2944
2943
2945
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
1619
1618
1620
1622
1621
1623
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
3106
3107
3108
3109
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, administrativefundingcontroldescriptorid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear, charterstatusdescriptorid, internetaccessdescriptorid, localeducationagencyid, magnetspecialprogramemphasisschooldescriptorid, schooltypedescriptorid, titleipartaschooldesignationdescriptorid) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolid, schoolcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
2202
2203
2204
2205
2206
2208
2207
2209
2210
2212
2211
2213
2214
2215
2216
2217
\.


--
-- Data for Name: schoolchoicebasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoicebasisdescriptor (schoolchoicebasisdescriptorid) FROM stdin;
1641
1642
1643
1644
1645
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
1774
1775
1776
1777
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
1121
1125
1130
1132
1123
1127
1128
1122
1124
1129
1134
1120
1126
1131
1133
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
948
950
949
951
952
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id, changeversion) FROM stdin;
2024	2023-2024	t	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	65e866e9-edf6-45b3-9b90-c15f976b14bd	0
1991	1990-1991	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	1837792a-681d-4c74-a9bb-d50f35d715fa	0
1992	1991-1992	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	2483d62e-89bc-4491-ae88-63539e349495	0
1993	1992-1993	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	c088fd8d-c595-4997-a67c-8da46064dfaa	0
1994	1993-1994	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	b3040bf7-b5d0-4c64-b837-8945093175c7	0
1995	1994-1995	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	6cf5f2ff-0f2f-4e35-b844-96a266805959	0
1996	1995-1996	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	f0de13af-6ac7-4b11-a85e-67e8ca98e396	0
1997	1996-1997	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	9eefb63d-4260-4562-a4a4-a21ef7a1e4fc	0
1998	1997-1998	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	ecb6a0d6-6502-490f-8aa7-83334d865604	0
1999	1998-1999	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	aeffe38b-f5a5-437c-accc-f263c5cec12f	0
2000	1999-2000	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	e214b2ee-331e-4ca5-a40f-01d23a4ff238	0
2001	2000-2001	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	52a9ece1-67e0-4838-afdc-73bc339315cb	0
2002	2001-2002	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	737fca6c-36b5-4b19-ab2f-8e6a3f3e1dea	0
2003	2002-2003	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	bd60155f-686d-44a6-8492-c75c66632bde	0
2004	2003-2004	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	df7de975-3818-42a0-9a2d-7de8a6ed4c58	0
2005	2004-2005	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	1bfe2fef-d4e0-4456-9e01-2a926e6eb5ff	0
2006	2005-2006	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	bf567b2c-abae-45af-a9cb-eb88de3a0acb	0
2007	2006-2007	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	260ea568-fa9f-4936-a014-d8f404bc87ac	0
2008	2007-2008	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	bc531618-53fe-46d8-9549-50e97de3cfbc	0
2009	2008-2009	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	547052ca-c6ee-4810-9ebc-551fea21d6ef	0
2010	2009-2010	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	ef9a29b1-6743-4740-a658-a6346a1e8d68	0
2011	2010-2011	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	577a6bbc-aa57-484c-a986-0064e98a0c7b	0
2012	2011-2012	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	af9e4b04-5fa3-459c-8828-d9be84326c8f	0
2013	2012-2013	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	4fb96416-0e29-441f-abca-3749bc047617	0
2014	2013-2014	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	fa221eb0-c9af-43de-834b-de494c102ef7	0
2015	2014-2015	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	76c6e2d4-6e1b-4346-b02e-f3fbcca03a54	0
2016	2015-2016	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	da5028f2-9857-4ebe-adb6-a6a826e5c333	0
2017	2016-2017	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	52ccefa7-3adb-4723-8319-42fd6dd78b74	0
2018	2017-2018	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	c04afc31-fbc3-4022-a330-70c31bc6abbd	0
2019	2018-2019	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	52ce399a-3701-4b10-b329-500da0abb65e	0
2020	2019-2020	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	4c9ad369-c257-40cf-806f-11f65a5e5812	0
2021	2020-2021	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	b727f7e5-2b17-4d5a-a728-091d380bb18d	0
2022	2021-2022	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	578614c6-5c07-4c81-a3c3-ede04f8a9499	0
2023	2022-2023	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	5da887f0-d96c-47be-9ca7-507b8167ab72	0
2025	2024-2025	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	0de182e0-97d9-4ee2-9f0f-ede40455e3d0	0
2026	2025-2026	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	5da13d22-7359-4b94-a582-6f73790fecab	0
2027	2026-2027	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	387076b0-47f8-4ffb-b3cb-d26b224870df	0
2028	2027-2028	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	39517e62-db33-4295-b843-b823681c5026	0
2029	2028-2029	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	fe6fdc77-486d-4c81-ba76-464f188b2526	0
2030	2029-2030	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	38a0d55b-5c8e-4e27-8cfe-8ece97092259	0
2031	2030-2031	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	28c2637f-636a-4a50-af45-85512e5657e6	0
2032	2031-2032	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	0f54afee-f24f-449e-ad77-932a4d51ee3e	0
2033	2032-2033	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	cb6e9315-ccda-406d-aded-482b8f929711	0
2034	2033-2034	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	4ec8a121-454a-4da5-959a-c422cade8e62	0
2035	2034-2035	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	31e95efd-5ef1-491d-abb7-bbfdceda5312	0
2036	2035-2036	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	5d3ca2fc-4e73-49cf-9dc3-73c301f83793	0
2037	2036-2037	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	eb53d67c-5b75-4d12-8503-05cb5388a494	0
2038	2037-2038	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	44b06f49-1b59-4bdd-9cc3-abcd2fe42a18	0
2039	2038-2039	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	5d5d836a-2312-4a80-b3d8-760ef6171cc4	0
2040	2039-2040	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	355b2bbc-50ea-4977-a133-07d72d627817	0
2041	2040-2041	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	2b1d50b0-d0ba-4903-a2e5-1cb7e948bd6c	0
2042	2041-2042	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	924a9a00-2d38-4392-a678-9118576456ea	0
2043	2042-2043	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	b6c95589-44eb-4694-a053-08edcd4cefeb	0
2044	2043-2044	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	4f9ef175-0248-4aa4-ba5a-fd4e65b9e3b5	0
2045	2044-2045	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	1cd3e870-32a0-4b9a-82f2-f2b4c540cf39	0
2046	2045-2046	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	5ccf0d0b-f8b4-4001-b437-0ea1ab9a7c2b	0
2047	2046-2047	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	1c2ecf83-a468-408c-9c38-1737c220e4d8	0
2048	2047-2048	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	7118b997-6271-414c-af4e-92ca4577184d	0
2049	2048-2049	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	da3d6d2b-0829-4f86-8f6b-7b30555dd204	0
2050	2049-2050	f	2023-12-06 19:12:17.155937	2023-12-06 19:12:17.155937	c5d69088-4fa7-4900-9a2b-c7e205053683	0
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, availablecreditconversion, availablecredits, availablecredittypedescriptorid, educationalenvironmentdescriptorid, instructionlanguagedescriptorid, locationclassroomidentificationcode, locationschoolid, mediumofinstructiondescriptorid, officialattendanceperiod, populationserveddescriptorid, sectionname, sectiontypedescriptorid, sequenceofcourse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
15
14
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectiontypedescriptor (sectiontypedescriptorid) FROM stdin;
1437
1438
1439
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
669
670
671
672
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2298
2300
2299
2301
2304
2303
2305
2306
2297
2302
2307
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
1069
1071
1072
1073
1074
1075
1077
1078
1079
1082
1083
1070
1076
1080
1081
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (schoolid, schoolyear, sessionname, gradingperioddescriptorid, gradingperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
848
849
850
851
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sourcedimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcesystemdescriptor (sourcesystemdescriptorid) FROM stdin;
1796
1797
1798
1799
\.


--
-- Data for Name: specialeducationexitreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationexitreasondescriptor (specialeducationexitreasondescriptorid) FROM stdin;
1817
1818
1819
1820
1822
1821
1823
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
1629
1631
1630
1632
1633
1634
1635
1636
1637
1638
1639
1640
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
2118
2117
2116
2119
2121
2122
2124
2125
2126
2127
2128
2129
2130
2115
2120
2123
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, birthdate, citizenshipstatusdescriptorid, firstname, genderidentity, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, highlyqualifiedteacher, hispaniclatinoethnicity, lastsurname, loginid, maidenname, middlename, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, staffuniqueid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffancestryethnicorigin (staffusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
1536
1537
1541
1542
1544
1545
1547
1550
1552
1553
1556
1558
1559
1561
1562
1565
1567
1568
1569
1571
1539
1540
1549
1551
1555
1557
1560
1563
1566
1570
1538
1543
1546
1548
1554
1564
1572
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, credentialidentifier, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, enddate, fulltimeequivalency, orderofassignment, positiontitle, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, addresstypedescriptorid, apartmentroomsuitenumber, buildingsitenumber, city, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, postalcode, stateabbreviationdescriptorid, streetnumbername, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (contacttitle, educationorganizationid, staffusi, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, annualwage, credentialidentifier, department, enddate, fulltimeequivalency, hourlywage, offerdate, separationdescriptorid, separationreasondescriptorid, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (staffusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffusi, staffidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
115
117
118
116
120
119
121
122
123
124
125
126
127
128
129
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (staffusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (staffusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (staffusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
997
998
999
1000
1002
1001
1003
1004
1006
1005
1007
1008
1009
1010
1011
1012
1013
1014
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (staffusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (staffusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (staffusi, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, classroompositiondescriptorid, enddate, highlyqualifiedteacher, percentagecontribution, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
2228
2231
2230
2229
2232
2233
2234
2235
2236
2237
2238
2239
2240
2241
2242
2243
2244
2245
2246
2247
2248
2249
2250
2251
2252
2253
2254
2255
2256
2257
2258
2259
2260
2261
2262
2263
2264
2265
2266
2267
2269
2268
2270
2271
2272
2273
2274
2276
2275
2277
2278
2279
2280
2281
2282
2283
2284
2285
2286
2287
2288
2289
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (stateeducationagencyid, schoolyear, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (stateeducationagencyid, fiscalyear, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, citizenshipstatusdescriptorid, dateenteredus, firstname, generationcodesuffix, lastsurname, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sourcesystemdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeattemptedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, projectedgraduationdate, sessionattemptedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionearnedcreditconversion, sessionearnedcredits, sessionearnedcredittypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, honorawarddate, honorawardexpiresdate, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, classrankingdate, percentageranking, totalnumberinclass, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, ctecompleter, diplomaawardexpiresdate, diplomadescription, diplomaleveldescriptorid, evidencestatement, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, administrationenvironmentdescriptorid, administrationlanguagedescriptorid, assessedminutes, eventcircumstancedescriptorid, eventdescription, platformtypedescriptorid, reasonnottesteddescriptorid, reportedschoolid, reportedschoolidentifier, retestindicatordescriptorid, schoolyear, serialnumber, whenassessedgradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmenteducationorganizationassociation (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentitemresultdescriptorid, assessmentresponse, descriptivefeedback, itemnumber, rawscoreresult, responseindicatordescriptorid, timeassessed, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperiod (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, administrationdate, administrationenddate, assessedminutes, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
1171
1174
1172
1173
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcontactassociation (contactusi, studentusi, contactpriority, contactrestrictions, emergencycontactstatus, legalguardian, liveswith, primarycontactstatus, relationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid, cipcode, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, barriertointernetaccessinresidencedescriptorid, genderidentity, hispaniclatinoethnicity, internetaccessinresidence, internetaccesstypeinresidencedescriptorid, internetperformanceinresidencedescriptorid, limitedenglishproficiencydescriptorid, loginid, primarylearningdeviceaccessdescriptorid, primarylearningdeviceawayfromschooldescriptorid, primarylearningdeviceproviderdescriptorid, profilethumbnail, sexdescriptorid, supportermilitaryconnectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationancestryethnicorigin (educationorganizationid, studentusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (educationorganizationid, studentusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, studentusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, studentusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentusi, studentcharacteristicdescriptorid, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, studentusi, indicatorname, designatedby, indicator, indicatorgroup, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (educationorganizationid, studentusi, indicatorname, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (gradebookentryidentifier, namespace, studentusi, assignmentlatestatusdescriptorid, competencyleveldescriptorid, datefulfilled, diagnosticstatement, lettergradeearned, numericgradeearned, pointsearned, submissionstatusdescriptorid, timefulfilled, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, awaitingfostercare, homelessprimarynighttimeresidencedescriptorid, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
958
959
960
961
963
964
962
965
966
967
968
969
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, dosage, englishlearnerparticipation) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear, monitoreddescriptorid, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, continuationofservicesreasondescriptorid, eligibilityexpirationdate, lastqualifyingmove, priorityforservices, qualifyingarrivaldate, stateresidencydate, usinitialentry, usinitialschoolentry, usmostrecententry) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid, neglectedordelinquentprogramdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (studentusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
2995
2997
2998
2996
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluation (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, educationorganizationid, evaluationduration, staffevaluatorstaffusi, summaryevaluationcomment, summaryevaluationnumericrating, summaryevaluationratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationexternalevaluator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationexternalevaluator (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, externalevaluator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationstudentevaluationelement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationstudentevaluationelement (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationelementtitle, evaluationelementnumericrating, evaluationelementratingleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationstudentevaluationobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationstudentevaluationobjective (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationobjectivetitle, evaluationobjectivenumericrating, evaluationobjectiveratingleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, calendarcode, classofschoolyear, educationorganizationid, employedwhileenrolled, enrollmenttypedescriptorid, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, exitwithdrawdate, exitwithdrawtypedescriptorid, fulltimeequivalency, graduationplantypedescriptorid, graduationschoolyear, nextyeargradeleveldescriptorid, nextyearschoolid, primaryschool, repeatgradeindicator, residencystatusdescriptorid, schoolchoice, schoolchoicebasisdescriptorid, schoolchoicetransfer, schoolyear, termcompletionindicator, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (entrydate, schoolid, studentusi, educationplandescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attemptstatusdescriptorid, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionassociationprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociationprogram (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceeventclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceeventclassperiod (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, iepbegindate, iependdate, iepreviewdate, lastevaluationdate, medicallyfragile, multiplydisabled, schoolhoursperweek, specialeducationexitdate, specialeducationexitexplained, specialeducationexitreasondescriptorid, specialeducationhoursperweek, specialeducationsettingdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogrameligibilityassociation (consenttoevaluationreceiveddate, educationorganizationid, programname, programtypedescriptorid, studentusi, consenttoevaluationdate, eligibilityconferencedate, eligibilitydelayreasondescriptorid, eligibilitydeterminationdate, eligibilityevaluationdate, eligibilityevaluationtypedescriptorid, evaluationcompleteindicator, evaluationdelaydays, evaluationdelayreasondescriptorid, evaluationlatereason, ideaindicator, ideapartdescriptorid, originaleciservicesdate, transitionconferencedate, transitionnotificationdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: submissionstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.submissionstatusdescriptor (submissionstatusdescriptorid) FROM stdin;
2083
2084
2085
2086
2087
\.


--
-- Data for Name: supportermilitaryconnectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.supportermilitaryconnectiondescriptor (supportermilitaryconnectiondescriptorid) FROM stdin;
3093
3094
3096
3095
3097
3098
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.survey (namespace, surveyidentifier, educationorganizationid, numberadministered, schoolid, schoolyear, sessionname, surveycategorydescriptorid, surveytitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycategorydescriptor (surveycategorydescriptorid) FROM stdin;
838
839
840
841
843
842
844
845
846
847
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyleveldescriptor (surveyleveldescriptorid) FROM stdin;
902
903
905
904
908
906
907
909
910
911
912
913
914
916
915
917
918
919
920
921
922
923
924
925
926
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestion (namespace, questioncode, surveyidentifier, questionformdescriptorid, questiontext, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionmatrix; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionmatrix (namespace, questioncode, surveyidentifier, matrixelement, maxrawscore, minrawscore, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, comment, noresponse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsechoice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsechoice (namespace, questioncode, surveyidentifier, sortorder, numericvalue, textvalue, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement, maxnumericresponse, minnumericresponse, noresponse, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsevalue; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsevalue (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, contactusi, electronicmailaddress, fullname, location, responsedate, responsetime, staffusi, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsesurveylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsesurveylevel (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, sectionrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
1497
1496
1498
1499
1501
1502
1500
1503
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
953
954
955
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
1018
1019
1020
1021
1022
1023
1024
1025
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1669
1668
1670
1671
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
1386
1385
1384
1387
1388
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
658
657
656
659
660
661
662
663
664
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
3196
3195
3197
3198
3199
3200
3201
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
2323
2326
2329
2330
2331
2332
2333
2335
2338
2340
2343
2344
2345
2348
2349
2350
2351
2356
2358
2360
2362
2366
2367
2370
2371
2374
2378
2379
2381
2383
2384
2386
2387
2389
2390
2394
2396
2397
2400
2401
2403
2406
2408
2409
2410
2411
2414
2415
2416
2418
2420
2424
2426
2431
2432
2434
2436
2437
2438
2441
2443
2446
2448
2450
2453
2454
2457
2459
2460
2464
2466
2469
2472
2473
2475
2476
2479
2481
2484
2486
2487
2490
2491
2494
2497
2499
2501
2502
2503
2505
2506
2508
2510
2515
2517
2519
2520
2522
2523
2527
2528
2529
2532
2533
2535
2540
2543
2544
2545
2546
2548
2550
2553
2555
2558
2562
2563
2566
2568
2571
2574
2575
2576
2577
2580
2581
2582
2584
2586
2585
2590
2591
2593
2594
2596
2597
2600
2602
2606
2607
2611
2612
2614
2615
2617
2619
2621
2624
2629
2630
2633
2636
2638
2641
2642
2646
2648
2650
2653
2654
2656
2658
2661
2663
2665
2666
2667
2670
2673
2672
2676
2680
2682
2684
2686
2687
2690
2691
2694
2696
2700
2701
2703
2708
2709
2712
2714
2715
2717
2720
2721
2723
2725
2727
2729
2731
2734
2735
2736
2739
2740
2742
2745
2747
2748
2750
2751
2754
2757
2759
2762
2765
2767
2768
2771
2773
2775
2776
2777
2780
2783
2782
2786
2787
2789
2791
2325
2327
2336
2339
2342
2346
2352
2354
2355
2357
2361
2364
2369
2373
2376
2380
2385
2388
2391
2393
2399
2404
2407
2413
2417
2421
2423
2427
2429
2430
2435
2440
2442
2447
2449
2451
2455
2458
2462
2463
2467
2471
2477
2478
2482
2485
2488
2489
2492
2495
2498
2500
2504
2507
2509
2512
2514
2524
2526
2531
2534
2538
2542
2547
2552
2557
2560
2567
2569
2572
2579
2583
2587
2589
2592
2598
2601
2604
2608
2609
2613
2620
2622
2625
2627
2632
2635
2639
2643
2644
2647
2651
2655
2660
2668
2671
2678
2688
2692
2697
2698
2704
2707
2710
2713
2718
2722
2724
2728
2733
2737
2741
2743
2749
2752
2755
2758
2761
2764
2769
2772
2779
2781
2788
2790
2793
2796
2798
2802
2804
2805
2807
2809
2813
2812
2815
2817
2819
2820
2822
2825
2827
2829
2832
2835
2836
2839
2840
2843
2844
2845
2848
2851
2852
2854
2858
2856
2860
2861
2862
2864
2867
2869
2870
2872
2874
2875
2878
2879
2880
2883
2885
2886
2887
2888
2889
2891
2893
2894
2896
2897
2902
2904
2905
2909
2910
2912
2915
2918
2920
2922
2923
2924
2926
2928
2931
2933
2934
2936
2937
2938
2941
2794
2797
2800
2803
2806
2811
2816
2818
2821
2824
2830
2837
2841
2847
2849
2855
2863
2871
2873
2876
2881
2884
2899
2900
2903
2907
2908
2914
2916
2919
2927
2930
2940
2942
2324
2328
2334
2337
2341
2347
2353
2359
2363
2365
2368
2372
2375
2377
2382
2392
2395
2398
2402
2405
2412
2419
2422
2425
2428
2433
2439
2444
2445
2452
2456
2461
2465
2468
2470
2474
2480
2483
2493
2496
2511
2513
2516
2518
2521
2525
2530
2536
2537
2539
2541
2549
2551
2554
2556
2559
2561
2564
2565
2570
2573
2578
2588
2595
2599
2603
2605
2610
2616
2618
2623
2626
2628
2631
2634
2637
2640
2645
2649
2652
2657
2659
2662
2664
2669
2674
2675
2677
2679
2681
2683
2685
2689
2693
2695
2699
2702
2705
2706
2711
2716
2719
2726
2730
2732
2738
2744
2746
2753
2756
2760
2763
2766
2770
2774
2778
2784
2785
2792
2795
2799
2801
2808
2810
2814
2823
2826
2828
2831
2833
2834
2838
2842
2846
2850
2853
2857
2859
2865
2866
2868
2877
2882
2890
2892
2895
2898
2901
2906
2911
2913
2917
2921
2925
2929
2932
2935
2939
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
2218
2222
2223
2224
2225
2226
2227
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
1646
1649
1648
1647
1650
1652
1651
1653
1654
1655
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2023-12-06 19:12:17.159824	2023-12-06 19:12:17.159824	2eb06ee1-6f12-4f54-b74b-ad170cbac76f
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2023-12-06 19:12:14.626399
2	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2023-12-06 19:12:14.642355
3	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2023-12-06 19:12:15.35276
4	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2023-12-06 19:12:16.827025
5	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2023-12-06 19:12:16.906601
6	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2023-12-06 19:12:16.960779
7	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2023-12-06 19:12:16.974803
8	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2023-12-06 19:12:16.980051
9	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2023-12-06 19:12:16.990992
10	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2023-12-06 19:12:16.994278
11	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2023-12-06 19:12:16.996046
12	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2023-12-06 19:12:17.002066
13	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2023-12-06 19:12:17.003193
14	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1040-MissingSecurityViews.sql	2023-12-06 19:12:17.005227
15	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1100-AddMoreContextToEducationIdentifiersView.sql	2023-12-06 19:12:17.009573
16	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1100-CorrectCommunityOrganizationAuthViews.sql	2023-12-06 19:12:17.011549
17	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1120-RemoveCompositesHierarchicalViews.sql	2023-12-06 19:12:17.013697
18	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1150-UpdatedAuthViewsToPreventDuplicatesFromStaffEdOrgAssignmentsAndEmployments.sql	2023-12-06 19:12:17.018324
19	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1160-UpdateVersionTo510.sql	2023-12-06 19:12:17.019302
20	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1170-UpdatedAuthViewsToRemoveJoin.sql	2023-12-06 19:12:17.021027
21	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1180-Add-OrgDeptId-to-EdOrgIdentifiers.sql	2023-12-06 19:12:17.025431
22	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1190-UpdateVersionTo520.sql	2023-12-06 19:12:17.026467
23	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1200-AuthViewsSupportOrgDeptId.sql	2023-12-06 19:12:17.033326
24	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1290-RemoveAllUnusedAuthorizationViews.sql	2023-12-06 19:12:17.039751
25	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1300-CreateEdOrgToEdOrgTable.sql	2023-12-06 19:12:17.041683
26	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1302-CreateEdOrgToEdOrgTriggers.sql	2023-12-06 19:12:17.05188
27	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1303-AuthViewEducationOrganizationIdToStudentUSI.sql	2023-12-06 19:12:17.053394
28	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1304-AuthViewEducationOrganizationIdToContactUSI.sql	2023-12-06 19:12:17.055099
29	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1305-AuthViewsEducationOrganizationIdToStaffUSI.sql	2023-12-06 19:12:17.056639
30	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1306-AuthViewEducationOrganizationIdToStudentUSIThroughResponsibility.sql	2023-12-06 19:12:17.057898
31	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1320-UpdateVersionTo53.sql	2023-12-06 19:12:17.058713
32	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1340-UpdateVersionTo60.sql	2023-12-06 19:12:17.059721
33	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1370-AddEducationOrganizationIdToEducationOrganizationIdIndex.sql	2023-12-06 19:12:17.061316
34	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1380-UpdateVersionTo61.sql	2023-12-06 19:12:17.062184
35	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1390-UpdateVersionTo70.sql	2023-12-06 19:12:17.063022
36	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1400-Alter-EducationOrganizationId-to-bigint.sql	2023-12-06 19:12:17.072578
37	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1410-CreateIndex-EdOrgIdsRelationship-AuthPerformance.sql	2023-12-06 19:12:17.131224
38	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1420-UpdateEdFiStandardVersionTo50.sql	2023-12-06 19:12:17.132353
39	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1430-UpdateVersionTo71.sql	2023-12-06 19:12:17.133527
40	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2023-12-06 19:12:17.159276
41	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2023-12-06 19:12:17.160302
42	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2023-12-06 19:12:17.162119
43	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-12-06 19:12:17.178882
44	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-12-06 19:12:17.180206
45	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-12-06 19:12:17.414501
46	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-12-06 19:12:17.497183
47	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0110-AddSnapshot-Tables.sql	2023-12-06 19:12:17.500039
48	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0120-AddSnapshotIdColumnUniqueIndexes.sql	2023-12-06 19:12:17.501548
49	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0130-AddSnapshotExtendedProperties.sql	2023-12-06 19:12:17.502348
50	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-12-06 19:12:17.756611
51	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-12-06 19:12:17.825626
52	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-12-06 19:12:18.010527
53	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1010-CreateGetMaxChangeVersionFunction.sql	2023-12-06 19:12:18.012878
54	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1020-AuthViewsIncludingDeletes.sql	2023-12-06 19:12:18.017328
55	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1030-DropSnapshot-Table.sql	2023-12-06 19:12:18.019656
56	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1040-AuthViewStudentResponsibilityIncludingDeletes.sql	2023-12-06 19:12:18.021055
57	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0010-EXTENSION-TPDM-Schemas.sql	2023-12-06 19:28:48.334264
58	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0020-EXTENSION-TPDM-Tables.sql	2023-12-06 19:28:48.451603
59	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0030-EXTENSION-TPDM-ForeignKeys.sql	2023-12-06 19:28:48.668158
60	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0040-EXTENSION-TPDM-IdColumnUniqueIndexes.sql	2023-12-06 19:28:48.68225
61	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0050-EXTENSION-TPDM-ExtendedProperties.sql	2023-12-06 19:28:48.691829
62	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1410-EXTENSION-TPDM-CreateIndex-EdOrgIdsRelationship-AuthPerformance.sql	2023-12-06 19:28:48.705928
63	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-12-06 19:28:48.737978
64	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-12-06 19:28:48.739326
65	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-12-06 19:28:48.773077
66	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-12-06 19:28:48.785943
67	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-12-06 19:28:48.830194
68	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-12-06 19:28:48.838499
69	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-12-06 19:28:48.858464
\.


--
-- Data for Name: accreditationstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.accreditationstatusdescriptor (accreditationstatusdescriptorid) FROM stdin;
3407
3408
3409
3410
3411
\.


--
-- Data for Name: aidtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.aidtypedescriptor (aidtypedescriptorid) FROM stdin;
3230
3231
3232
3233
3234
3235
3236
3237
3238
3239
3240
3241
3242
3243
3244
3245
3246
3247
3248
3249
3250
3251
3252
3253
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidate (candidateidentifier, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, dateenteredus, displacementstatus, economicdisadvantaged, englishlanguageexamdescriptorid, firstgenerationstudent, firstname, genderdescriptorid, generationcodesuffix, hispaniclatinoethnicity, lastsurname, limitedenglishproficiencydescriptorid, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateaddress; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddress (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: candidateaddressperiod; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddressperiod (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisability; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisability (candidateidentifier, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisabilitydesignation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisabilitydesignation (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociation (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, enddate, eppprogrampathwaydescriptorid, reasonexiteddescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationcohortyear (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization, enddate, minorspecialization, createdate) FROM stdin;
\.


--
-- Data for Name: candidateelectronicmail; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateelectronicmail (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguage; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguage (candidateidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguageuse; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguageuse (candidateidentifier, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateothername; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateothername (candidateidentifier, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: candidatepersonalidentificationdocument; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatepersonalidentificationdocument (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: candidaterace; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidaterace (candidateidentifier, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatetelephone; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatetelephone (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: certificationroutedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.certificationroutedescriptor (certificationroutedescriptorid) FROM stdin;
3376
3377
3378
3379
3380
3381
3382
3383
3384
3385
3386
\.


--
-- Data for Name: coteachingstyleobserveddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.coteachingstyleobserveddescriptor (coteachingstyleobserveddescriptorid) FROM stdin;
3262
3263
3264
3265
3266
3267
3268
\.


--
-- Data for Name: credentialextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialextension (credentialidentifier, stateofissuestateabbreviationdescriptorid, boardcertificationindicator, certificationroutedescriptorid, certificationtitle, credentialstatusdate, credentialstatusdescriptorid, educatorroledescriptorid, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstatusdescriptor (credentialstatusdescriptorid) FROM stdin;
3355
3356
3357
3358
3359
3360
3361
3362
\.


--
-- Data for Name: credentialstudentacademicrecord; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstudentacademicrecord (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogram (educationorganizationid, programname, programtypedescriptorid, accreditationstatusdescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogramgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogramgradelevel (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorroledescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorroledescriptor (educatorroledescriptorid) FROM stdin;
3280
3281
3282
3283
3284
3285
3286
3287
3288
3289
3290
3291
3292
3293
3294
3295
3296
3297
3298
\.


--
-- Data for Name: englishlanguageexamdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.englishlanguageexamdescriptor (englishlanguageexamdescriptorid) FROM stdin;
3372
3373
3374
3375
\.


--
-- Data for Name: eppprogrampathwaydescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.eppprogrampathwaydescriptor (eppprogrampathwaydescriptorid) FROM stdin;
3271
3272
3273
3274
3275
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluation (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationdescription, evaluationtypedescriptorid, interraterreliabilityscore, maxrating, minrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelement (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementrating (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, areaofrefinement, areaofreinforcement, comments, evaluationelementratingleveldescriptorid, feedback, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratinglevel (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingleveldescriptor (evaluationelementratingleveldescriptorid) FROM stdin;
3221
3222
3223
3224
3225
3226
3227
3228
3229
\.


--
-- Data for Name: evaluationelementratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingresult (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjective (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationobjectivedescription, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiverating (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, comments, objectiveratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratinglevel (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratingresult (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationperioddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationperioddescriptor (evaluationperioddescriptorid) FROM stdin;
3387
3388
3389
3390
3391
3392
3393
3394
3395
3396
3397
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationrating (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, evaluationratingleveldescriptorid, evaluationratingstatusdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingleveldescriptor (evaluationratingleveldescriptorid) FROM stdin;
3363
3364
3365
3366
3367
3368
3369
3370
3371
\.


--
-- Data for Name: evaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingresult (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewer (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewerreceivedtraining (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingstatusdescriptor (evaluationratingstatusdescriptorid) FROM stdin;
3311
3312
3313
3314
3315
3316
\.


--
-- Data for Name: evaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationtypedescriptor (evaluationtypedescriptorid) FROM stdin;
3299
3300
3301
3302
3303
3304
3305
3306
3307
3308
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.financialaid (aidtypedescriptorid, begindate, studentusi, aidamount, aidconditiondescription, enddate, pellgrantrecipient, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: genderdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.genderdescriptor (genderdescriptorid) FROM stdin;
3276
3277
3278
3279
\.


--
-- Data for Name: objectiveratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.objectiveratingleveldescriptor (objectiveratingleveldescriptorid) FROM stdin;
3412
3413
3414
3415
3416
3417
3418
3419
3420
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluation (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, academicsubjectdescriptorid, performanceevaluationdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationgradelevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationrating (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, actualdate, actualduration, actualtime, announced, comments, coteachingstyleobserveddescriptorid, performanceevaluationratingleveldescriptorid, scheduledate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingleveldescriptor (performanceevaluationratingleveldescriptorid) FROM stdin;
3398
3399
3400
3401
3402
3403
3404
3405
3406
\.


--
-- Data for Name: performanceevaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingresult (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewer (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewerreceivedtraining (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationtypedescriptor (performanceevaluationtypedescriptorid) FROM stdin;
3211
3212
3213
3214
3215
3216
3217
3218
3219
3220
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricdimension (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid, criteriondescription, dimensionorder, rubricratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricratingleveldescriptor (rubricratingleveldescriptorid) FROM stdin;
3341
3342
3343
3344
3345
3346
3347
3348
3349
\.


--
-- Data for Name: schoolextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.schoolextension (schoolid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponseextension (namespace, surveyidentifier, surveyresponseidentifier, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveysectionresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.academicweek (oldschoolid, oldweekidentifier, newschoolid, newweekidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.accountabilityrating (oldeducationorganizationid, oldratingtitle, oldschoolyear, neweducationorganizationid, newratingtitle, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessment (oldassessmentidentifier, oldnamespace, newassessmentidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentitem (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentscorerangelearningstandard (oldassessmentidentifier, oldnamespace, oldscorerangeid, newassessmentidentifier, newnamespace, newscorerangeid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.balancesheetdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.bellschedule (oldbellschedulename, oldschoolid, newbellschedulename, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendar (oldcalendarcode, oldschoolid, oldschoolyear, newcalendarcode, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendardate (oldcalendarcode, olddate, oldschoolid, oldschoolyear, newcalendarcode, newdate, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.chartofaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.classperiod (oldclassperiodname, oldschoolid, newclassperiodname, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.cohort (oldcohortidentifier, oldeducationorganizationid, newcohortidentifier, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.communityproviderlicense (oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization, newcommunityproviderid, newlicenseidentifier, newlicensingorganization, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.competencyobjective (oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, neweducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: contact; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.contact (oldcontactusi, oldcontactuniqueid, newcontactusi, newcontactuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.course (oldcoursecode, oldeducationorganizationid, newcoursecode, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.courseoffering (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.coursetranscript (oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, newcourseattemptresultdescriptorid, newcourseattemptresultdescriptornamespace, newcourseattemptresultdescriptorcodevalue, newcoursecode, newcourseeducationorganizationid, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.credential (oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue, newcredentialidentifier, newstateofissuestateabbreviationdescriptorid, newstateofissuestateabbreviationdescriptornamespace, newstateofissuestateabbreviationdescriptorcodevalue, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptor (olddescriptorid, oldcodevalue, oldnamespace, newdescriptorid, newcodevalue, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptormapping (oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue, newmappednamespace, newmappedvalue, newnamespace, newvalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineaction (olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid, newdisciplineactionidentifier, newdisciplinedate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineincident (oldincidentidentifier, oldschoolid, newincidentidentifier, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationcontent (oldcontentidentifier, newcontentidentifier, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganization (oldeducationorganizationid, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptioneducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationnetworkassociation (oldeducationorganizationnetworkid, oldmembereducationorganizationid, neweducationorganizationnetworkid, newmembereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationpeerassociation (oldeducationorganizationid, oldpeereducationorganizationid, neweducationorganizationid, newpeereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationrubricdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.evaluationrubricdimension (oldevaluationrubricrating, oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newevaluationrubricrating, newprogrameducationorganizationid, newprogramevaluationelementtitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.feederschoolassociation (oldbegindate, oldfeederschoolid, oldschoolid, newbegindate, newfeederschoolid, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.functiondimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.funddimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.generalstudentprogramassociation (oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.grade (oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradebookentry (oldgradebookentryidentifier, oldnamespace, newgradebookentryidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradingperiod (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldschoolid, oldschoolyear, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.graduationplan (oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear, neweducationorganizationid, newgraduationplantypedescriptorid, newgraduationplantypedescriptornamespace, newgraduationplantypedescriptorcodevalue, newgraduationschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.intervention (oldeducationorganizationid, oldinterventionidentificationcode, neweducationorganizationid, newinterventionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionprescription (oldeducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionstudy (oldeducationorganizationid, oldinterventionstudyidentificationcode, neweducationorganizationid, newinterventionstudyidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandard (oldlearningstandardid, newlearningstandardid, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandardequivalenceassociation (oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid, newnamespace, newsourcelearningstandardid, newtargetlearningstandardid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localactual (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localbudget (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localcontractedstaff (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localencumbrance (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localpayroll (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.location (oldclassroomidentificationcode, oldschoolid, newclassroomidentificationcode, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectiveassessment (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.openstaffposition (oldeducationorganizationid, oldrequisitionnumber, neweducationorganizationid, newrequisitionnumber, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.operationalunitdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.person (oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.postsecondaryevent (oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, neweventdate, newpostsecondaryeventcategorydescriptorid, newpostsecondaryeventcategorydescriptornamespace, newpostsecondaryeventcategorydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.program (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluation (oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationelement; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluationelement (oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationelementtitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluationobjective (oldprogrameducationorganizationid, oldprogramevaluationobjectivetitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationobjectivetitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.projectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.reportcard (oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolid, newgradingperiodschoolyear, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.restraintevent (oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newrestrainteventidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.schoolyeartype (oldschoolyear, newschoolyear, id, changeversion, createdate) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.section (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sectionattendancetakenevent (oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.session (oldschoolid, oldschoolyear, oldsessionname, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sourcedimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staff (oldstaffusi, oldstaffuniqueid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffabsenceevent (oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid, newabsenceeventcategorydescriptorid, newabsenceeventcategorydescriptornamespace, newabsenceeventcategorydescriptorcodevalue, neweventdate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid, newincidentidentifier, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationassignmentassociation (oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, neweducationorganizationid, newstaffclassificationdescriptorid, newstaffclassificationdescriptornamespace, newstaffclassificationdescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationcontactassociation (oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newcontacttitle, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationemploymentassociation (oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid, neweducationorganizationid, newemploymentstatusdescriptorid, newemploymentstatusdescriptornamespace, newemploymentstatusdescriptorcodevalue, newhiredate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffleave (oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newstaffleaveeventcategorydescriptorid, newstaffleaveeventcategorydescriptornamespace, newstaffleaveeventcategorydescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffprogramassociation (oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffschoolassociation (oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid, newprogramassignmentdescriptorid, newprogramassignmentdescriptornamespace, newprogramassignmentdescriptorcodevalue, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffsectionassociation (oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.student (oldstudentusi, oldstudentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentacademicrecord (oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessment (oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessmenteducationorganizationassociation (oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, neweducationorganizationassociationtypedescriptorid, neweducationorganizationassociationtypedescriptornamespace, neweducationorganizationassociationtypedescriptorcodevalue, neweducationorganizationid, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcompetencyobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolid, newgradingperiodschoolyear, newobjectiveeducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcontactassociation (oldcontactusi, oldcontactuniqueid, oldstudentusi, oldstudentuniqueid, newcontactusi, newcontactuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newbehaviordescriptorid, newbehaviordescriptornamespace, newbehaviordescriptorcodevalue, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationassociation (oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newresponsibilitydescriptorid, newresponsibilitydescriptornamespace, newresponsibilitydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentgradebookentry (oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionassociation (oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramevaluation (oldevaluationdate, oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newevaluationdate, newprogrameducationorganizationid, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolassociation (oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, newentrydate, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionassociation (oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation (oldconsenttoevaluationreceiveddate, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newconsenttoevaluationreceiveddate, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.survey (oldnamespace, oldsurveyidentifier, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveycourseassociation (oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier, newcoursecode, neweducationorganizationid, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyprogramassociation (oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier, neweducationorganizationid, newnamespace, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestion (oldnamespace, oldquestioncode, oldsurveyidentifier, newnamespace, newquestioncode, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestionresponse (oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newquestioncode, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysection (oldnamespace, oldsurveyidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionassociation (oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidate (oldcandidateidentifier, newcandidateidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newbegindate, newcandidateidentifier, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.educatorpreparationprogram (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelement (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelementrating (oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjective (oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjectiverating (oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationrating (oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.financialaid (oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid, newaidtypedescriptorid, newaidtypedescriptornamespace, newaidtypedescriptorcodevalue, newbegindate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluationrating (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.rubricdimension (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newrubricrating, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveyresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveysectionresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Name: changeversionsequence; Type: SEQUENCE SET; Schema: changes; Owner: postgres
--

SELECT pg_catalog.setval('changes.changeversionsequence', 3589, true);


--
-- Name: contact_contactusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.contact_contactusi_seq', 1, false);


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 3420, true);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 69, true);


--
-- Name: educationorganizationidtoeducationorganizationid educationorganizationidtoeducationorganizationid_pk; Type: CONSTRAINT; Schema: auth; Owner: postgres
--

ALTER TABLE ONLY auth.educationorganizationidtoeducationorganizationid
    ADD CONSTRAINT educationorganizationidtoeducationorganizationid_pk PRIMARY KEY (sourceeducationorganizationid, targeteducationorganizationid);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accounttypedescriptor accounttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT accounttypedescriptor_pk PRIMARY KEY (accounttypedescriptorid);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (ancestryethnicorigindescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (assessmentidentifier, namespace, academicsubjectdescriptorid);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, namespace, gradeleveldescriptorid);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, namespace, author);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, namespace, languagedescriptorid);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentperioddescriptorid);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid);


--
-- Name: assessmentscorerangelearningstandardlearningstandard assessmentscorerangelearningstandardlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandardlearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid, learningstandardid);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: assignmentlatestatusdescriptor assignmentlatestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT assignmentlatestatusdescriptor_pk PRIMARY KEY (assignmentlatestatusdescriptorid);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: balancesheetdimensionreportingtag balancesheetdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT balancesheetdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (barriertointernetaccessinresidencedescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, schoolid, classperiodname);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, schoolid, date);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, schoolid, gradeleveldescriptorid);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, schoolid, schoolyear, gradeleveldescriptorid);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: chartofaccountreportingtag chartofaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT chartofaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, schoolid, endtime, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contact contact_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT contact_pk PRIMARY KEY (contactusi);


--
-- Name: contactaddress contactaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT contactaddress_pk PRIMARY KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: contactaddressperiod contactaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddressperiod
    ADD CONSTRAINT contactaddressperiod_pk PRIMARY KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: contactelectronicmail contactelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT contactelectronicmail_pk PRIMARY KEY (contactusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: contactinternationaladdress contactinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT contactinternationaladdress_pk PRIMARY KEY (contactusi, addresstypedescriptorid);


--
-- Name: contactlanguage contactlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT contactlanguage_pk PRIMARY KEY (contactusi, languagedescriptorid);


--
-- Name: contactlanguageuse contactlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT contactlanguageuse_pk PRIMARY KEY (contactusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: contactothername contactothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT contactothername_pk PRIMARY KEY (contactusi, othernametypedescriptorid);


--
-- Name: contactpersonalidentificationdocument contactpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT contactpersonalidentificationdocument_pk PRIMARY KEY (contactusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: contacttelephone contacttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT contacttelephone_pk PRIMARY KEY (contactusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseacademicsubject courseacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT courseacademicsubject_pk PRIMARY KEY (coursecode, educationorganizationid, academicsubjectdescriptorid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (coursecode, educationorganizationid, competencyleveldescriptorid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, educationorganizationid, courseidentificationsystemdescriptorid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptcourseprogram coursetranscriptcourseprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcourseprogram
    ADD CONSTRAINT coursetranscriptcourseprogram_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseprogramname, courseprogramtypedescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid);


--
-- Name: coursetranscriptpartialcoursetranscriptawards coursetranscriptpartialcoursetranscriptawards_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT coursetranscriptpartialcoursetranscriptawards_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate);


--
-- Name: coursetranscriptsection coursetranscriptsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT coursetranscriptsection_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (namespace, codevalue);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value);


--
-- Name: descriptormappingmodelentity descriptormappingmodelentity_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT descriptormappingmodelentity_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, staffusi);


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation disciplineactionstudentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (incidentidentifier, schoolid, behaviordescriptorid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (contentidentifier, author);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: educationorganizationassociationtypedescriptor educationorganizationassociationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT educationorganizationassociationtypedescriptor_pk PRIMARY KEY (educationorganizationassociationtypedescriptorid);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationid, educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationindicator educationorganizationindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT educationorganizationindicator_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationindicatorperiod educationorganizationindicatorperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT educationorganizationindicatorperiod_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid, begindate);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: eligibilitydelayreasondescriptor eligibilitydelayreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilitydelayreasondescriptor
    ADD CONSTRAINT eligibilitydelayreasondescriptor_pk PRIMARY KEY (eligibilitydelayreasondescriptorid);


--
-- Name: eligibilityevaluationtypedescriptor eligibilityevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilityevaluationtypedescriptor
    ADD CONSTRAINT eligibilityevaluationtypedescriptor_pk PRIMARY KEY (eligibilityevaluationtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: enrollmenttypedescriptor enrollmenttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.enrollmenttypedescriptor
    ADD CONSTRAINT enrollmenttypedescriptor_pk PRIMARY KEY (enrollmenttypedescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: evaluationdelayreasondescriptor evaluationdelayreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationdelayreasondescriptor
    ADD CONSTRAINT evaluationdelayreasondescriptor_pk PRIMARY KEY (evaluationdelayreasondescriptorid);


--
-- Name: evaluationrubricdimension evaluationrubricdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT evaluationrubricdimension_pk PRIMARY KEY (evaluationrubricrating, programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: financialcollectiondescriptor financialcollectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT financialcollectiondescriptor_pk PRIMARY KEY (financialcollectiondescriptorid);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: functiondimensionreportingtag functiondimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT functiondimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: funddimensionreportingtag funddimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT funddimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus generalstudentprogramassociationprogramparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationprogramparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (gradebookentryidentifier, namespace, learningstandardid);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: ideapartdescriptor ideapartdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ideapartdescriptor
    ADD CONSTRAINT ideapartdescriptor_pk PRIMARY KEY (ideapartdescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (indicatordescriptorid);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (indicatorgroupdescriptorid);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (indicatorleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (internetaccesstypeinresidencedescriptorid);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (internetperformanceinresidencedescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, contentidentifier);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, endtime, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, contentidentifier);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (learningstandardid, academicsubjectdescriptorid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (learningstandardid, author);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (learningstandardid, gradeleveldescriptorid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (learningstandardid, contentstandardname, identificationcode);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccountreportingtag localaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT localaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (localeducationagencyid, fiscalyear);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: modelentitydescriptor modelentitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT modelentitydescriptor_pk PRIMARY KEY (modelentitydescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: objectdimensionreportingtag objectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT objectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (educationorganizationid, requisitionnumber, academicsubjectdescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, requisitionnumber, gradeleveldescriptorid);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: operationalunitdimensionreportingtag operationalunitdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT operationalunitdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (organizationdepartmentid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (personid, sourcesystemdescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (postsecondaryinstitutionid, mediumofinstructiondescriptorid);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (primarylearningdeviceaccessdescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (primarylearningdeviceproviderdescriptorid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: programdimensionreportingtag programdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT programdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: programevaluation programevaluation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT programevaluation_pk PRIMARY KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelement programevaluationelement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT programevaluationelement_pk PRIMARY KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelementprogramevaluationlevel programevaluationelementprogramevaluationlevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementprogramevaluationlevel
    ADD CONSTRAINT programevaluationelementprogramevaluationlevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationlevel programevaluationlevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationlevel
    ADD CONSTRAINT programevaluationlevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationobjective programevaluationobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjective
    ADD CONSTRAINT programevaluationobjective_pk PRIMARY KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationobjectiveprogramevaluationlevel programevaluationobjectiveprogramevaluationlevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveprogramevaluationlevel
    ADD CONSTRAINT programevaluationobjectiveprogramevaluationlevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationperioddescriptor programevaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationperioddescriptor
    ADD CONSTRAINT programevaluationperioddescriptor_pk PRIMARY KEY (programevaluationperioddescriptorid);


--
-- Name: programevaluationtypedescriptor programevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationtypedescriptor
    ADD CONSTRAINT programevaluationtypedescriptor_pk PRIMARY KEY (programevaluationtypedescriptorid);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, learningstandardid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: projectdimensionreportingtag projectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT projectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (questionformdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: ratingleveldescriptor ratingleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ratingleveldescriptor
    ADD CONSTRAINT ratingleveldescriptor_pk PRIMARY KEY (ratingleveldescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: reportingtagdescriptor reportingtagdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT reportingtagdescriptor_pk PRIMARY KEY (reportingtagdescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolid, schoolcategorydescriptorid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoicebasisdescriptor schoolchoicebasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoicebasisdescriptor
    ADD CONSTRAINT schoolchoicebasisdescriptor_pk PRIMARY KEY (schoolchoicebasisdescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (schoolid, gradeleveldescriptorid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectiontypedescriptor sectiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectiontypedescriptor
    ADD CONSTRAINT sectiontypedescriptor_pk PRIMARY KEY (sectiontypedescriptorid);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (schoolid, schoolyear, sessionname, gradingperioddescriptorid, gradingperiodname);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: sourcedimensionreportingtag sourcedimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT sourcedimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (sourcesystemdescriptorid);


--
-- Name: specialeducationexitreasondescriptor specialeducationexitreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationexitreasondescriptor
    ADD CONSTRAINT specialeducationexitreasondescriptor_pk PRIMARY KEY (specialeducationexitreasondescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: staffancestryethnicorigin staffancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT staffancestryethnicorigin_pk PRIMARY KEY (staffusi, ancestryethnicorigindescriptorid);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, begindate);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (staffusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffusi, staffidentificationsystemdescriptorid);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (staffusi, addresstypedescriptorid);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (staffusi, languagedescriptorid);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (staffusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (staffusi, othernametypedescriptorid);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (staffusi, racedescriptorid);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (staffusi, recognitiontypedescriptorid);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (stateeducationagencyid, schoolyear);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (stateeducationagencyid, fiscalyear);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentperiod studentassessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT studentassessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcontactassociation studentcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT studentcontactassociation_pk PRIMARY KEY (contactusi, studentusi);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a studentdisciplineincidentnonoffenderassociationdis_4c979a_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociationdis_4c979a_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin studenteducationorganizationassociationancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT studenteducationorganizationassociationancestryethnicorigin_pk PRIMARY KEY (educationorganizationid, studentusi, ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, studentusi, racedescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname, begindate);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (studentusi, othernametypedescriptorid);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramevaluation studentprogramevaluation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT studentprogramevaluation_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramevaluationexternalevaluator studentprogramevaluationexternalevaluator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationexternalevaluator
    ADD CONSTRAINT studentprogramevaluationexternalevaluator_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, externalevaluator);


--
-- Name: studentprogramevaluationstudentevaluationelement studentprogramevaluationstudentevaluationelement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT studentprogramevaluationstudentevaluationelement_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationelementtitle);


--
-- Name: studentprogramevaluationstudentevaluationobjective studentprogramevaluationstudentevaluationobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT studentprogramevaluationstudentevaluationobjective_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationobjectivetitle);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, educationplandescriptorid);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionassociationprogram studentsectionassociationprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT studentsectionassociationprogram_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceeventclassperiod studentsectionattendanceeventclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT studentsectionattendanceeventclassperiod_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi);


--
-- Name: studentspecialeducationprogrameligibilityassociation studentspecialeducationprogrameligibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT studentspecialeducationprogrameligibilityassociation_pk PRIMARY KEY (consenttoevaluationreceiveddate, educationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: submissionstatusdescriptor submissionstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT submissionstatusdescriptor_pk PRIMARY KEY (submissionstatusdescriptorid);


--
-- Name: supportermilitaryconnectiondescriptor supportermilitaryconnectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.supportermilitaryconnectiondescriptor
    ADD CONSTRAINT supportermilitaryconnectiondescriptor_pk PRIMARY KEY (supportermilitaryconnectiondescriptorid);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (namespace, surveyidentifier);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (surveycategorydescriptorid);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (coursecode, educationorganizationid, namespace, surveyidentifier);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (surveyleveldescriptorid);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionmatrix surveyquestionmatrix_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT surveyquestionmatrix_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, matrixelement);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsechoice surveyquestionresponsechoice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT surveyquestionresponsechoice_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, sortorder);


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse surveyquestionresponsesurveyquestionmatrixelementresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT surveyquestionresponsesurveyquestionmatrixelementresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement);


--
-- Name: surveyquestionresponsevalue surveyquestionresponsevalue_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT surveyquestionresponsevalue_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsesurveylevel surveyresponsesurveylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT surveyresponsesurveylevel_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: accreditationstatusdescriptor accreditationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT accreditationstatusdescriptor_pk PRIMARY KEY (accreditationstatusdescriptorid);


--
-- Name: aidtypedescriptor aidtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT aidtypedescriptor_pk PRIMARY KEY (aidtypedescriptorid);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (candidateidentifier);


--
-- Name: candidateaddress candidateaddress_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT candidateaddress_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: candidateaddressperiod candidateaddressperiod_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT candidateaddressperiod_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: candidatedisability candidatedisability_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT candidatedisability_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid);


--
-- Name: candidatedisabilitydesignation candidatedisabilitydesignation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT candidatedisabilitydesignation_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear candidateeducatorpreparationprogramassociationcohortyear_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationcohortyear_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 candidateeducatorpreparationprogramassociationdegr_2501c4_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationdegr_2501c4_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization);


--
-- Name: candidateelectronicmail candidateelectronicmail_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT candidateelectronicmail_pk PRIMARY KEY (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: candidatelanguage candidatelanguage_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT candidatelanguage_pk PRIMARY KEY (candidateidentifier, languagedescriptorid);


--
-- Name: candidatelanguageuse candidatelanguageuse_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT candidatelanguageuse_pk PRIMARY KEY (candidateidentifier, languagedescriptorid, languageusedescriptorid);


--
-- Name: candidateothername candidateothername_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT candidateothername_pk PRIMARY KEY (candidateidentifier, othernametypedescriptorid);


--
-- Name: candidatepersonalidentificationdocument candidatepersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT candidatepersonalidentificationdocument_pk PRIMARY KEY (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: candidaterace candidaterace_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT candidaterace_pk PRIMARY KEY (candidateidentifier, racedescriptorid);


--
-- Name: candidatetelephone candidatetelephone_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT candidatetelephone_pk PRIMARY KEY (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: certificationroutedescriptor certificationroutedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT certificationroutedescriptor_pk PRIMARY KEY (certificationroutedescriptorid);


--
-- Name: coteachingstyleobserveddescriptor coteachingstyleobserveddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT coteachingstyleobserveddescriptor_pk PRIMARY KEY (coteachingstyleobserveddescriptorid);


--
-- Name: credentialextension credentialextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT credentialextension_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialstatusdescriptor credentialstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT credentialstatusdescriptor_pk PRIMARY KEY (credentialstatusdescriptorid);


--
-- Name: credentialstudentacademicrecord credentialstudentacademicrecord_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT credentialstudentacademicrecord_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: educatorpreparationprogramgradelevel educatorpreparationprogramgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT educatorpreparationprogramgradelevel_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid);


--
-- Name: educatorroledescriptor educatorroledescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT educatorroledescriptor_pk PRIMARY KEY (educatorroledescriptorid);


--
-- Name: englishlanguageexamdescriptor englishlanguageexamdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT englishlanguageexamdescriptor_pk PRIMARY KEY (englishlanguageexamdescriptorid);


--
-- Name: eppprogrampathwaydescriptor eppprogrampathwaydescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT eppprogrampathwaydescriptor_pk PRIMARY KEY (eppprogrampathwaydescriptorid);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationelementratinglevel evaluationelementratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT evaluationelementratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationelementratingleveldescriptor evaluationelementratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT evaluationelementratingleveldescriptor_pk PRIMARY KEY (evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementratingresult evaluationelementratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT evaluationelementratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiveratinglevel evaluationobjectiveratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT evaluationobjectiveratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationobjectiveratingresult evaluationobjectiveratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT evaluationobjectiveratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationperioddescriptor evaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT evaluationperioddescriptor_pk PRIMARY KEY (evaluationperioddescriptorid);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratinglevel evaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT evaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationratingleveldescriptor evaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT evaluationratingleveldescriptor_pk PRIMARY KEY (evaluationratingleveldescriptorid);


--
-- Name: evaluationratingresult evaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT evaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationratingreviewer evaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT evaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingreviewerreceivedtraining evaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT evaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingstatusdescriptor evaluationratingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT evaluationratingstatusdescriptor_pk PRIMARY KEY (evaluationratingstatusdescriptorid);


--
-- Name: evaluationtypedescriptor evaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT evaluationtypedescriptor_pk PRIMARY KEY (evaluationtypedescriptorid);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (aidtypedescriptorid, begindate, studentusi);


--
-- Name: genderdescriptor genderdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT genderdescriptor_pk PRIMARY KEY (genderdescriptorid);


--
-- Name: objectiveratingleveldescriptor objectiveratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT objectiveratingleveldescriptor_pk PRIMARY KEY (objectiveratingleveldescriptorid);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationgradelevel performanceevaluationgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT performanceevaluationgradelevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratinglevel performanceevaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT performanceevaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor performanceevaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT performanceevaluationratingleveldescriptor_pk PRIMARY KEY (performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingresult performanceevaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT performanceevaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: performanceevaluationratingreviewer performanceevaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT performanceevaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationratingreviewerreceivedtraining performanceevaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT performanceevaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationtypedescriptor performanceevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT performanceevaluationtypedescriptor_pk PRIMARY KEY (performanceevaluationtypedescriptorid);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid);


--
-- Name: rubricratingleveldescriptor rubricratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT rubricratingleveldescriptor_pk PRIMARY KEY (rubricratingleveldescriptorid);


--
-- Name: schoolextension schoolextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT schoolextension_pk PRIMARY KEY (schoolid);


--
-- Name: surveyresponseextension surveyresponseextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT surveyresponseextension_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (changeversion);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (changeversion);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (changeversion);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (changeversion);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (changeversion);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (changeversion);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (changeversion);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (changeversion);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (changeversion);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (changeversion);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: contact contact_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.contact
    ADD CONSTRAINT contact_pk PRIMARY KEY (changeversion);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (changeversion);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (changeversion);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (changeversion);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (changeversion);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (changeversion);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (changeversion);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrubricdimension evaluationrubricdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.evaluationrubricdimension
    ADD CONSTRAINT evaluationrubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (changeversion);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (changeversion);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (changeversion);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (changeversion);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (changeversion);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (changeversion);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (changeversion);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (changeversion);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (changeversion);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (changeversion);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (changeversion);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (changeversion);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (changeversion);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (changeversion);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (changeversion);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (changeversion);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (changeversion);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (changeversion);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluation programevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluation
    ADD CONSTRAINT programevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluationelement programevaluationelement_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluationelement
    ADD CONSTRAINT programevaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluationobjective programevaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluationobjective
    ADD CONSTRAINT programevaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (changeversion);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (changeversion);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (changeversion);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (changeversion);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (changeversion);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (changeversion);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (changeversion);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (changeversion);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (changeversion);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (changeversion);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (changeversion);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentcontactassociation studentcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcontactassociation
    ADD CONSTRAINT studentcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramevaluation studentprogramevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramevaluation
    ADD CONSTRAINT studentprogramevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentspecialeducationprogrameligibilityassociation studentspecialeducationprogrameligibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT studentspecialeducationprogrameligibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (changeversion);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (changeversion);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (changeversion);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: ix_educationorganizationidtoeducationorganizationid; Type: INDEX; Schema: auth; Owner: postgres
--

CREATE INDEX ix_educationorganizationidtoeducationorganizationid ON auth.educationorganizationidtoeducationorganizationid USING btree (targeteducationorganizationid) INCLUDE (sourceeducationorganizationid);


--
-- Name: contact_ui_contactuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX contact_ui_contactuniqueid ON edfi.contact USING btree (contactuniqueid) INCLUDE (contactusi);


--
-- Name: fk_000683_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_financialcollectiondescriptor ON edfi.localbudget USING btree (financialcollectiondescriptorid);


--
-- Name: fk_000683_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_localaccount ON edfi.localbudget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_01bfbb_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_01bfbb_ratingleveldescriptor ON edfi.programevaluationelementprogramevaluationlevel USING btree (ratingleveldescriptorid);


--
-- Name: fk_02ddd8_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_02ddd8_assessmentperioddescriptor ON edfi.studentassessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_03f044_surveyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyleveldescriptor ON edfi.surveyresponsesurveylevel USING btree (surveyleveldescriptorid);


--
-- Name: fk_050c1b_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_050c1b_languageusedescriptor ON edfi.contactlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_0855d2_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_participationstatusdescriptor ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c6eff_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c6eff_reportingtagdescriptor ON edfi.sourcedimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_131e2b_accounttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_accounttypedescriptor ON edfi.chartofaccount USING btree (accounttypedescriptorid);


--
-- Name: fk_131e2b_balancesheetdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_balancesheetdimension ON edfi.chartofaccount USING btree (balancesheetcode, fiscalyear);


--
-- Name: fk_131e2b_functiondimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_functiondimension ON edfi.chartofaccount USING btree (functioncode, fiscalyear);


--
-- Name: fk_131e2b_funddimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_funddimension ON edfi.chartofaccount USING btree (fundcode, fiscalyear);


--
-- Name: fk_131e2b_objectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_objectdimension ON edfi.chartofaccount USING btree (objectcode, fiscalyear);


--
-- Name: fk_131e2b_operationalunitdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_operationalunitdimension ON edfi.chartofaccount USING btree (operationalunitcode, fiscalyear);


--
-- Name: fk_131e2b_programdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_programdimension ON edfi.chartofaccount USING btree (programcode, fiscalyear);


--
-- Name: fk_131e2b_projectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_projectdimension ON edfi.chartofaccount USING btree (projectcode, fiscalyear);


--
-- Name: fk_131e2b_sourcedimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_sourcedimension ON edfi.chartofaccount USING btree (sourcecode, fiscalyear);


--
-- Name: fk_13b924_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_academicsubjectdescriptor ON edfi.organizationdepartment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_13b924_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_educationorganization1 ON edfi.organizationdepartment USING btree (parenteducationorganizationid);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1b7ccf_programevaluationelement; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7ccf_programevaluationelement ON edfi.evaluationrubricdimension USING btree (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_1b7ccf_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7ccf_ratingleveldescriptor ON edfi.evaluationrubricdimension USING btree (evaluationrubricratingleveldescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bb88c_questionformdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_questionformdescriptor ON edfi.surveyquestion USING btree (questionformdescriptorid);


--
-- Name: fk_1bb88c_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_survey ON edfi.surveyquestion USING btree (namespace, surveyidentifier);


--
-- Name: fk_1bb88c_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_surveysection ON edfi.surveyquestion USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_211bb3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_schoolyeartype ON edfi.survey USING btree (schoolyear);


--
-- Name: fk_211bb3_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_session ON edfi.survey USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_surveycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_surveycategorydescriptor ON edfi.survey USING btree (surveycategorydescriptorid);


--
-- Name: fk_2189c3_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveyresponse ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_2189c3_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveysection ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_225a51_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_225a51_telephonenumbertypedescriptor ON edfi.contacttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_24f4bf_programevaluationelement; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_24f4bf_programevaluationelement ON edfi.studentprogramevaluationstudentevaluationelement USING btree (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_24f4bf_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_24f4bf_ratingleveldescriptor ON edfi.studentprogramevaluationstudentevaluationelement USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_277c31_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_countrydescriptor ON edfi.contactpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_277c31_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_identificationdocumentusedescriptor ON edfi.contactpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_277c31_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_personalinformationverificationdescriptor ON edfi.contactpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_person ON edfi.student USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2b5c3d_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_levelofeducationdescriptor ON edfi.contact USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_2b5c3d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_person ON edfi.contact USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2b5c3d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_sexdescriptor ON edfi.contact USING btree (sexdescriptorid);


--
-- Name: fk_2c2b13_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_ancestryethnicorigindescriptor ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_studentdisciplineincidentbehaviorassociation ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32eddb_chartofaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_chartofaccount ON edfi.localaccount USING btree (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_358692_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_358692_addresstypedescriptor ON edfi.contactinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_358692_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_358692_countrydescriptor ON edfi.contactinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_39073d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_staff ON edfi.surveysectionresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_39073d_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_surveysectionresponse ON edfi.surveysectionresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b06c7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b06c7_reportingtagdescriptor ON edfi.operationalunitdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3e04ae_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e04ae_reportingtagdescriptor ON edfi.programdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_4007e0_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4007e0_electronicmailtypedescriptor ON edfi.contactelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_42109f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42109f_languagedescriptor ON edfi.contactlanguage USING btree (languagedescriptorid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_46e5c2_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_financialcollectiondescriptor ON edfi.localpayroll USING btree (financialcollectiondescriptorid);


--
-- Name: fk_46e5c2_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_localaccount ON edfi.localpayroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_46e5c2_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_staff ON edfi.localpayroll USING btree (staffusi);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4b1054_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_programevaluation ON edfi.studentprogramevaluation USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_4b1054_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_ratingleveldescriptor ON edfi.studentprogramevaluation USING btree (summaryevaluationratingleveldescriptorid);


--
-- Name: fk_4b1054_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_staff ON edfi.studentprogramevaluation USING btree (staffevaluatorstaffusi);


--
-- Name: fk_4b1054_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_student ON edfi.studentprogramevaluation USING btree (studentusi);


--
-- Name: fk_4b43da_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_disciplineincident ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_4b43da_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_student ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (studentusi);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4d9b4a_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_financialcollectiondescriptor ON edfi.localcontractedstaff USING btree (financialcollectiondescriptorid);


--
-- Name: fk_4d9b4a_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_localaccount ON edfi.localcontractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_4d9b4a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_staff ON edfi.localcontractedstaff USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6007db_sourcesystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6007db_sourcesystemdescriptor ON edfi.person USING btree (sourcesystemdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_person ON edfi.staff USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_termdescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_staff ON edfi.coursetranscript USING btree (responsibleteacherstaffusi);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_7062bd_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7062bd_reportingtagdescriptor ON edfi.funddimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_720058_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_addresstypedescriptor ON edfi.contactaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_720058_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_localedescriptor ON edfi.contactaddress USING btree (localedescriptorid);


--
-- Name: fk_720058_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_stateabbreviationdescriptor ON edfi.contactaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_730be1_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_surveysectionresponse ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7433b4_modelentitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7433b4_modelentitydescriptor ON edfi.descriptormappingmodelentity USING btree (modelentitydescriptorid);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_784616_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_784616_programevaluation ON edfi.programevaluationelement USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_784616_programevaluationobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_784616_programevaluationobjective ON edfi.programevaluationelement USING btree (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_80c6c1_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_classperiod ON edfi.studentsectionattendanceeventclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_8422f4_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8422f4_reportingtagdescriptor ON edfi.chartofaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_enrollmenttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_enrollmenttypedescriptor ON edfi.studentschoolassociation USING btree (enrollmenttypedescriptorid);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor1 ON edfi.studentschoolassociation USING btree (nextyeargradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school1 ON edfi.studentschoolassociation USING btree (nextyearschoolid);


--
-- Name: fk_857b52_schoolchoicebasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolchoicebasisdescriptor ON edfi.studentschoolassociation USING btree (schoolchoicebasisdescriptorid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d455d_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d455d_reportingtagdescriptor ON edfi.functiondimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_8d6383_contact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_contact ON edfi.surveyresponse USING btree (contactusi);


--
-- Name: fk_8d6383_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_staff ON edfi.surveyresponse USING btree (staffusi);


--
-- Name: fk_8d6383_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_student ON edfi.surveyresponse USING btree (studentusi);


--
-- Name: fk_8d6383_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_survey ON edfi.surveyresponse USING btree (namespace, surveyidentifier);


--
-- Name: fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_barriertointernetaccessinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (barriertointernetaccessinresidencedescriptorid);


--
-- Name: fk_8e1257_internetaccesstypeinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetaccesstypeinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetaccesstypeinresidencedescriptorid);


--
-- Name: fk_8e1257_internetperformanceinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetperformanceinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetperformanceinresidencedescriptorid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceaccessdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceaccessdescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceawayfromschooldescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceproviderdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceproviderdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceproviderdescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e1257_supportermilitaryconnectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_supportermilitaryconnectiondescriptor ON edfi.studenteducationorganizationassociation USING btree (supportermilitaryconnectiondescriptorid);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_91b095_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_91b095_othernametypedescriptor ON edfi.contactothername USING btree (othernametypedescriptorid);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_990204_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_990204_program ON edfi.studentsectionassociationprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_9960a9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_learningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (learningstandardid);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9f1246_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_course ON edfi.surveycourseassociation USING btree (coursecode, educationorganizationid);


--
-- Name: fk_9f1246_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_survey ON edfi.surveycourseassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_a20588_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a20588_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessmentreportingmethoddescriptor ON edfi.assessmentscorerangelearningstandard USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_a20588_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_objectiveassessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a4a6ae_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_ancestryethnicorigindescriptor ON edfi.staffancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a53c6c_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a53c6c_programevaluation ON edfi.programevaluationobjective USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afb8b8_educationorganizationassociationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganizationassociationtypedescriptor ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationassociationtypedescriptorid);


--
-- Name: fk_afb8b8_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_schoolyeartype ON edfi.studentassessmenteducationorganizationassociation USING btree (schoolyear);


--
-- Name: fk_afb8b8_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_studentassessment ON edfi.studentassessmenteducationorganizationassociation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b2bd0a_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_surveyresponse ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b5314a_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b5314a_reportingtagdescriptor ON edfi.projectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_b6310e_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_financialcollectiondescriptor ON edfi.localactual USING btree (financialcollectiondescriptorid);


--
-- Name: fk_b6310e_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_localaccount ON edfi.localactual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcbd82_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcbd82_reportingtagdescriptor ON edfi.balancesheetdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16804_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_section ON edfi.surveysectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c16804_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_survey ON edfi.surveysectionassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2efaa_assignmentlatestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_assignmentlatestatusdescriptor ON edfi.studentgradebookentry USING btree (assignmentlatestatusdescriptorid);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (gradebookentryidentifier, namespace);


--
-- Name: fk_c2efaa_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_student ON edfi.studentgradebookentry USING btree (studentusi);


--
-- Name: fk_c2efaa_submissionstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_submissionstatusdescriptor ON edfi.studentgradebookentry USING btree (submissionstatusdescriptorid);


--
-- Name: fk_c38935_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c38935_reportingtagdescriptor ON edfi.localaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cd2ae9_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cd2ae9_section ON edfi.coursetranscriptsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d2730d_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2730d_ratingleveldescriptor ON edfi.programevaluationobjectiveprogramevaluationlevel USING btree (ratingleveldescriptorid);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d9a90e_programevaluationobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9a90e_programevaluationobjective ON edfi.studentprogramevaluationstudentevaluationobjective USING btree (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_d9a90e_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9a90e_ratingleveldescriptor ON edfi.studentprogramevaluationstudentevaluationobjective USING btree (evaluationobjectiveratingleveldescriptorid);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_dde098_indicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatordescriptor ON edfi.educationorganizationindicator USING btree (indicatordescriptorid);


--
-- Name: fk_dde098_indicatorgroupdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorgroupdescriptor ON edfi.educationorganizationindicator USING btree (indicatorgroupdescriptorid);


--
-- Name: fk_dde098_indicatorleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorleveldescriptor ON edfi.educationorganizationindicator USING btree (indicatorleveldescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_dfca5d_sectiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_sectiontypedescriptor ON edfi.section USING btree (sectiontypedescriptorid);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e2733e_contact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_contact ON edfi.studentcontactassociation USING btree (contactusi);


--
-- Name: fk_e2733e_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_relationdescriptor ON edfi.studentcontactassociation USING btree (relationdescriptorid);


--
-- Name: fk_e2733e_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_student ON edfi.studentcontactassociation USING btree (studentusi);


--
-- Name: fk_e3e5a4_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_program ON edfi.surveyprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e3e5a4_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_survey ON edfi.surveyprogramassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e4a585_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e4a585_program ON edfi.coursetranscriptcourseprogram USING btree (courseeducationorganizationid, courseprogramname, courseprogramtypedescriptorid);


--
-- Name: fk_e5572a_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e5572a_survey ON edfi.surveysection USING btree (namespace, surveyidentifier);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e78c97_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e78c97_ratingleveldescriptor ON edfi.programevaluationlevel USING btree (ratingleveldescriptorid);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e811ad_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_methodcreditearneddescriptor ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_ea526f_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_financialcollectiondescriptor ON edfi.localencumbrance USING btree (financialcollectiondescriptorid);


--
-- Name: fk_ea526f_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_localaccount ON edfi.localencumbrance USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_eddd02_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyquestion ON edfi.surveyquestionresponse USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_eddd02_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyresponse ON edfi.surveyquestionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_school ON edfi.studentassessment USING btree (reportedschoolid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee5caf_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee5caf_academicsubjectdescriptor ON edfi.courseacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f3a20e_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_program ON edfi.programevaluation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_f3a20e_programevaluationperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_programevaluationperioddescriptor ON edfi.programevaluation USING btree (programevaluationperioddescriptorid);


--
-- Name: fk_f3a20e_programevaluationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_programevaluationtypedescriptor ON edfi.programevaluation USING btree (programevaluationtypedescriptorid);


--
-- Name: fk_f4934f_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_behaviordescriptor ON edfi.studentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid);


--
-- Name: fk_f4934f_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_disciplineincident ON edfi.studentdisciplineincidentbehaviorassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_f4934f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_student ON edfi.studentdisciplineincidentbehaviorassociation USING btree (studentusi);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f86fd9_specialeducationexitreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationexitreasondescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationexitreasondescriptorid);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f9457e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_staff ON edfi.surveyresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_f9457e_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_surveyresponse ON edfi.surveyresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_fcb699_eligibilitydelayreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_eligibilitydelayreasondescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (eligibilitydelayreasondescriptorid);


--
-- Name: fk_fcb699_eligibilityevaluationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_eligibilityevaluationtypedescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (eligibilityevaluationtypedescriptorid);


--
-- Name: fk_fcb699_evaluationdelayreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_evaluationdelayreasondescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (evaluationdelayreasondescriptorid);


--
-- Name: fk_fcb699_ideapartdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_ideapartdescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (ideapartdescriptorid);


--
-- Name: fk_fcb699_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_program ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fcb699_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_student ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (studentusi);


--
-- Name: fk_fda3b7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fda3b7_reportingtagdescriptor ON edfi.objectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: ix_academicweek_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_academicweek_schoolid ON edfi.academicweek USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_accountabilityrating_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_accountabilityrating_educationorganizationid ON edfi.accountabilityrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_assessment_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_assessment_educationorganizationid ON edfi.assessment USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_bellschedule_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_bellschedule_schoolid ON edfi.bellschedule USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_calendar_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_calendar_schoolid ON edfi.calendar USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_calendardate_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_calendardate_schoolid ON edfi.calendardate USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_chartofaccount_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_chartofaccount_educationorganizationid ON edfi.chartofaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_classperiod_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_classperiod_schoolid ON edfi.classperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_cohort_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_cohort_educationorganizationid ON edfi.cohort USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_communityproviderlicense_communityproviderid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_communityproviderlicense_communityproviderid ON edfi.communityproviderlicense USING btree (communityproviderid) INCLUDE (id);


--
-- Name: ix_competencyobjective_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_competencyobjective_educationorganizationid ON edfi.competencyobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_course_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_course_educationorganizationid ON edfi.course USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_courseoffering_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_courseoffering_educationorganizationid ON edfi.courseoffering USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_courseoffering_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_courseoffering_schoolid ON edfi.courseoffering USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_coursetranscript_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_coursetranscript_educationorganizationid ON edfi.coursetranscript USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_disciplineincident_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_disciplineincident_schoolid ON edfi.disciplineincident USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_educationorganization_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganization_educationorganizationid ON edfi.educationorganization USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educationorganizationinterventionprescriptionassociation_edu; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationinterventionprescriptionassociation_edu ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educationorganizationnetworkassociation_educationorganizatio; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationnetworkassociation_educationorganizatio ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid) INCLUDE (id);


--
-- Name: ix_educationorganizationpeerassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationpeerassociation_educationorganizationid ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationrubricdimension_programeducationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_evaluationrubricdimension_programeducationorganizationid ON edfi.evaluationrubricdimension USING btree (programeducationorganizationid) INCLUDE (id);


--
-- Name: ix_feederschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_feederschoolassociation_schoolid ON edfi.feederschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_generalstudentprogramassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_generalstudentprogramassociation_educationorganizationid ON edfi.generalstudentprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_grade_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_grade_schoolid ON edfi.grade USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_gradebookentry_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_gradebookentry_schoolid ON edfi.gradebookentry USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_gradingperiod_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_gradingperiod_schoolid ON edfi.gradingperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_graduationplan_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_graduationplan_educationorganizationid ON edfi.graduationplan USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_intervention_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_intervention_educationorganizationid ON edfi.intervention USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_interventionprescription_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_interventionprescription_educationorganizationid ON edfi.interventionprescription USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_interventionstudy_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_interventionstudy_educationorganizationid ON edfi.interventionstudy USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localaccount_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localaccount_educationorganizationid ON edfi.localaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localactual_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localactual_educationorganizationid ON edfi.localactual USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localbudget_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localbudget_educationorganizationid ON edfi.localbudget USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localcontractedstaff_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localcontractedstaff_educationorganizationid ON edfi.localcontractedstaff USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localencumbrance_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localencumbrance_educationorganizationid ON edfi.localencumbrance USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localpayroll_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localpayroll_educationorganizationid ON edfi.localpayroll USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_location_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_location_schoolid ON edfi.location USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_openstaffposition_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_openstaffposition_educationorganizationid ON edfi.openstaffposition USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_postsecondaryevent_postsecondaryinstitutionid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_postsecondaryevent_postsecondaryinstitutionid ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid) INCLUDE (id);


--
-- Name: ix_program_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_program_educationorganizationid ON edfi.program USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_programevaluationelement_programeducationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_programevaluationelement_programeducationorganizationid ON edfi.programevaluationelement USING btree (programeducationorganizationid) INCLUDE (id);


--
-- Name: ix_programevaluationobjective_programeducationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_programevaluationobjective_programeducationorganizationid ON edfi.programevaluationobjective USING btree (programeducationorganizationid) INCLUDE (id);


--
-- Name: ix_reportcard_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_reportcard_educationorganizationid ON edfi.reportcard USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_restraintevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_restraintevent_schoolid ON edfi.restraintevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_section_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_section_schoolid ON edfi.section USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_sectionattendancetakenevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_sectionattendancetakenevent_schoolid ON edfi.sectionattendancetakenevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_session_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_session_schoolid ON edfi.session USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffcohortassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffcohortassociation_educationorganizationid ON edfi.staffcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffdisciplineincidentassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffdisciplineincidentassociation_schoolid ON edfi.staffdisciplineincidentassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationassignmentassociation_educationorg; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationassignmentassociation_educationorg ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationcontactassociation_educationorgani; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationcontactassociation_educationorgani ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationemploymentassociation_educationorg; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationemploymentassociation_educationorg ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffschoolassociation_schoolid ON edfi.staffschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffsectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffsectionassociation_schoolid ON edfi.staffsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentacademicrecord_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentacademicrecord_educationorganizationid ON edfi.studentacademicrecord USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentassessmenteducationorganizationassociation_educationo; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentassessmenteducationorganizationassociation_educationo ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentcohortassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentcohortassociation_educationorganizationid ON edfi.studentcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentdisciplineincidentbehaviorassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentdisciplineincidentbehaviorassociation_schoolid ON edfi.studentdisciplineincidentbehaviorassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentdisciplineincidentnonoffenderassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentdisciplineincidentnonoffenderassociation_schoolid ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studenteducationorganizationassociation_educationorganizatio; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studenteducationorganizationassociation_educationorganizatio ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studenteducationorganizationresponsibilityassociation_educat; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studenteducationorganizationresponsibilityassociation_educat ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentinterventionassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentinterventionassociation_educationorganizationid ON edfi.studentinterventionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentinterventionattendanceevent_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentinterventionattendanceevent_educationorganizationid ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentprogramattendanceevent_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentprogramattendanceevent_educationorganizationid ON edfi.studentprogramattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentprogramevaluation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentprogramevaluation_educationorganizationid ON edfi.studentprogramevaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentprogramevaluation_programeducationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentprogramevaluation_programeducationorganizationid ON edfi.studentprogramevaluation USING btree (programeducationorganizationid) INCLUDE (id);


--
-- Name: ix_studentschoolassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolassociation_educationorganizationid ON edfi.studentschoolassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolassociation_schoolid ON edfi.studentschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentschoolattendanceevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolattendanceevent_schoolid ON edfi.studentschoolattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentsectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentsectionassociation_schoolid ON edfi.studentsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentsectionattendanceevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentsectionattendanceevent_schoolid ON edfi.studentsectionattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentspecialeducationprogrameligibilityassociation_educati; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentspecialeducationprogrameligibilityassociation_educati ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_survey_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_survey_educationorganizationid ON edfi.survey USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_survey_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_survey_schoolid ON edfi.survey USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_surveycourseassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveycourseassociation_educationorganizationid ON edfi.surveycourseassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveyprogramassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveyprogramassociation_educationorganizationid ON edfi.surveyprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveyresponseeducationorganizationtargetassociation_educati; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveyresponseeducationorganizationtargetassociation_educati ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveysectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveysectionassociation_schoolid ON edfi.surveysectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_surveysectionresponseeducationorganizationtargetassociation_; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveysectionresponseeducationorganizationtargetassociation_ ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid) INCLUDE (staffusi);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid) INCLUDE (studentusi);


--
-- Name: ux_000683_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_000683_changeversion ON edfi.localbudget USING btree (changeversion);


--
-- Name: ux_000683_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_000683_id ON edfi.localbudget USING btree (id);


--
-- Name: ux_01fe80_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_01fe80_changeversion ON edfi.classperiod USING btree (changeversion);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0325c5_changeversion ON edfi.courseoffering USING btree (changeversion);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0516f9_changeversion ON edfi.generalstudentprogramassociation USING btree (changeversion);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0fae05_changeversion ON edfi.intervention USING btree (changeversion);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0ff8d6_changeversion ON edfi.studentacademicrecord USING btree (changeversion);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_11f7b6_changeversion ON edfi.feederschoolassociation USING btree (changeversion);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_131e2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_131e2b_changeversion ON edfi.chartofaccount USING btree (changeversion);


--
-- Name: ux_131e2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_131e2b_id ON edfi.chartofaccount USING btree (id);


--
-- Name: ux_15b619_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_15b619_changeversion ON edfi.location USING btree (changeversion);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_170747_changeversion ON edfi.staffcohortassociation USING btree (changeversion);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_17c02a_changeversion ON edfi.learningstandardequivalenceassociation USING btree (changeversion);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_19c6d6_changeversion ON edfi.cohort USING btree (changeversion);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1b7ccf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1b7ccf_changeversion ON edfi.evaluationrubricdimension USING btree (changeversion);


--
-- Name: ux_1b7ccf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1b7ccf_id ON edfi.evaluationrubricdimension USING btree (id);


--
-- Name: ux_1bb88c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1bb88c_changeversion ON edfi.surveyquestion USING btree (changeversion);


--
-- Name: ux_1bb88c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1bb88c_id ON edfi.surveyquestion USING btree (id);


--
-- Name: ux_2096ce_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2096ce_changeversion ON edfi.course USING btree (changeversion);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_211bb3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_211bb3_changeversion ON edfi.survey USING btree (changeversion);


--
-- Name: ux_211bb3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_211bb3_id ON edfi.survey USING btree (id);


--
-- Name: ux_2189c3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2189c3_changeversion ON edfi.surveysectionresponse USING btree (changeversion);


--
-- Name: ux_2189c3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2189c3_id ON edfi.surveysectionresponse USING btree (id);


--
-- Name: ux_219915_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_219915_changeversion ON edfi.descriptor USING btree (changeversion);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_252151_changeversion ON edfi.educationorganizationnetworkassociation USING btree (changeversion);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_25cb9c_changeversion ON edfi.studentinterventionassociation USING btree (changeversion);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_269e10_changeversion ON edfi.objectiveassessment USING btree (changeversion);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_28b7c4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_28b7c4_changeversion ON edfi.operationalunitdimension USING btree (changeversion);


--
-- Name: ux_28b7c4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_28b7c4_id ON edfi.operationalunitdimension USING btree (id);


--
-- Name: ux_2a164d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2a164d_changeversion ON edfi.student USING btree (changeversion);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2b5c3d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2b5c3d_changeversion ON edfi.contact USING btree (changeversion);


--
-- Name: ux_2b5c3d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2b5c3d_id ON edfi.contact USING btree (id);


--
-- Name: ux_2d3c0c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2d3c0c_changeversion ON edfi.accountabilityrating USING btree (changeversion);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_317aeb_changeversion ON edfi.studentprogramattendanceevent USING btree (changeversion);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_32eddb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_32eddb_changeversion ON edfi.localaccount USING btree (changeversion);


--
-- Name: ux_32eddb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_32eddb_id ON edfi.localaccount USING btree (id);


--
-- Name: ux_369ddc_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_369ddc_changeversion ON edfi.studentcohortassociation USING btree (changeversion);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3800be_changeversion ON edfi.restraintevent USING btree (changeversion);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_39073d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39073d_changeversion ON edfi.surveysectionresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_39073d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39073d_id ON edfi.surveysectionresponsestafftargetassociation USING btree (id);


--
-- Name: ux_395c07_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_395c07_changeversion ON edfi.studentcompetencyobjective USING btree (changeversion);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39aa3c_changeversion ON edfi.studentsectionassociation USING btree (changeversion);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3cc1d4_changeversion ON edfi.openstaffposition USING btree (changeversion);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_4100ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4100ee_changeversion ON edfi.objectdimension USING btree (changeversion);


--
-- Name: ux_4100ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4100ee_id ON edfi.objectdimension USING btree (id);


--
-- Name: ux_42aa64_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_42aa64_changeversion ON edfi.studenteducationorganizationresponsibilityassociation USING btree (changeversion);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4525e6_changeversion ON edfi.educationorganization USING btree (changeversion);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_464d7a_changeversion ON edfi.schoolyeartype USING btree (changeversion);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_466cfa_changeversion ON edfi.gradebookentry USING btree (changeversion);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_46e5c2_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_46e5c2_changeversion ON edfi.localpayroll USING btree (changeversion);


--
-- Name: ux_46e5c2_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_46e5c2_id ON edfi.localpayroll USING btree (id);


--
-- Name: ux_4b1054_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b1054_changeversion ON edfi.studentprogramevaluation USING btree (changeversion);


--
-- Name: ux_4b1054_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b1054_id ON edfi.studentprogramevaluation USING btree (id);


--
-- Name: ux_4b43da_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b43da_changeversion ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (changeversion);


--
-- Name: ux_4b43da_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b43da_id ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (id);


--
-- Name: ux_4d9b4a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4d9b4a_changeversion ON edfi.localcontractedstaff USING btree (changeversion);


--
-- Name: ux_4d9b4a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4d9b4a_id ON edfi.localcontractedstaff USING btree (id);


--
-- Name: ux_4e79b9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4e79b9_changeversion ON edfi.staffeducationorganizationemploymentassociation USING btree (changeversion);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_515cb5_changeversion ON edfi.staffsectionassociation USING btree (changeversion);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_5a18f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5a18f9_changeversion ON edfi.gradingperiod USING btree (changeversion);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5e9932_changeversion ON edfi.competencyobjective USING btree (changeversion);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_6007db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6007db_changeversion ON edfi.person USING btree (changeversion);


--
-- Name: ux_6007db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6007db_id ON edfi.person USING btree (id);


--
-- Name: ux_61b087_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_61b087_changeversion ON edfi.studentsectionattendanceevent USING btree (changeversion);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_631023_changeversion ON edfi.studentinterventionattendanceevent USING btree (changeversion);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_681927_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_681927_changeversion ON edfi.staff USING btree (changeversion);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6959b4_changeversion ON edfi.session USING btree (changeversion);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6acf2b_changeversion ON edfi.coursetranscript USING btree (changeversion);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_730be1_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_730be1_changeversion ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_730be1_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_730be1_id ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_735dd8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_735dd8_changeversion ON edfi.staffeducationorganizationcontactassociation USING btree (changeversion);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_74e4e5_changeversion ON edfi.educationorganizationpeerassociation USING btree (changeversion);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7808ee_changeversion ON edfi.assessment USING btree (changeversion);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_784616_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_784616_changeversion ON edfi.programevaluationelement USING btree (changeversion);


--
-- Name: ux_784616_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_784616_id ON edfi.programevaluationelement USING btree (id);


--
-- Name: ux_78fd7f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_78fd7f_changeversion ON edfi.studentschoolattendanceevent USING btree (changeversion);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7bbbe7_changeversion ON edfi.sectionattendancetakenevent USING btree (changeversion);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_839e20_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_839e20_changeversion ON edfi.grade USING btree (changeversion);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_857b52_changeversion ON edfi.studentschoolassociation USING btree (changeversion);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8a9a67_changeversion ON edfi.calendardate USING btree (changeversion);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8ceb4c_changeversion ON edfi.learningstandard USING btree (changeversion);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8d6383_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8d6383_changeversion ON edfi.surveyresponse USING btree (changeversion);


--
-- Name: ux_8d6383_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8d6383_id ON edfi.surveyresponse USING btree (id);


--
-- Name: ux_8e1257_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8e1257_changeversion ON edfi.studenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_90920d_changeversion ON edfi.program USING btree (changeversion);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_937af8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_937af8_changeversion ON edfi.funddimension USING btree (changeversion);


--
-- Name: ux_937af8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_937af8_id ON edfi.funddimension USING btree (id);


--
-- Name: ux_9965a5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9965a5_changeversion ON edfi.educationcontent USING btree (changeversion);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9bbaf5_changeversion ON edfi.bellschedule USING btree (changeversion);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_9f1246_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9f1246_changeversion ON edfi.surveycourseassociation USING btree (changeversion);


--
-- Name: ux_9f1246_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9f1246_id ON edfi.surveycourseassociation USING btree (id);


--
-- Name: ux_a20588_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a20588_changeversion ON edfi.assessmentscorerangelearningstandard USING btree (changeversion);


--
-- Name: ux_a20588_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a20588_id ON edfi.assessmentscorerangelearningstandard USING btree (id);


--
-- Name: ux_a53c6c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a53c6c_changeversion ON edfi.programevaluationobjective USING btree (changeversion);


--
-- Name: ux_a53c6c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a53c6c_id ON edfi.programevaluationobjective USING btree (id);


--
-- Name: ux_a97956_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a97956_changeversion ON edfi.academicweek USING btree (changeversion);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9a613_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9a613_changeversion ON edfi.programdimension USING btree (changeversion);


--
-- Name: ux_a9a613_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9a613_id ON edfi.programdimension USING btree (id);


--
-- Name: ux_a9c0d9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9c0d9_changeversion ON edfi.staffprogramassociation USING btree (changeversion);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_af86db_changeversion ON edfi.staffdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_afb8b8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_afb8b8_changeversion ON edfi.studentassessmenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_afb8b8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_afb8b8_id ON edfi.studentassessmenteducationorganizationassociation USING btree (id);


--
-- Name: ux_b13bbd_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b13bbd_changeversion ON edfi.staffabsenceevent USING btree (changeversion);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b1c42b_changeversion ON edfi.credential USING btree (changeversion);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b2bd0a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b2bd0a_changeversion ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_b2bd0a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2bd0a_id ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_b6310e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b6310e_changeversion ON edfi.localactual USING btree (changeversion);


--
-- Name: ux_b6310e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b6310e_id ON edfi.localactual USING btree (id);


--
-- Name: ux_b8b6d7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b8b6d7_changeversion ON edfi.postsecondaryevent USING btree (changeversion);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b9be24_changeversion ON edfi.staffeducationorganizationassignmentassociation USING btree (changeversion);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_be1ea4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_be1ea4_changeversion ON edfi.graduationplan USING btree (changeversion);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_c16804_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c16804_changeversion ON edfi.surveysectionassociation USING btree (changeversion);


--
-- Name: ux_c16804_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c16804_id ON edfi.surveysectionassociation USING btree (id);


--
-- Name: ux_c2efaa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c2efaa_changeversion ON edfi.studentgradebookentry USING btree (changeversion);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c4d12e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c4d12e_changeversion ON edfi.functiondimension USING btree (changeversion);


--
-- Name: ux_c4d12e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c4d12e_id ON edfi.functiondimension USING btree (id);


--
-- Name: ux_ce2080_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ce2080_changeversion ON edfi.staffschoolassociation USING btree (changeversion);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d16e19_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d16e19_changeversion ON edfi.projectdimension USING btree (changeversion);


--
-- Name: ux_d16e19_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d16e19_id ON edfi.projectdimension USING btree (id);


--
-- Name: ux_d5d0a3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d5d0a3_changeversion ON edfi.calendar USING btree (changeversion);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d92986_changeversion ON edfi.interventionstudy USING btree (changeversion);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dc3dcf_changeversion ON edfi.assessmentitem USING btree (changeversion);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_debd4f_changeversion ON edfi.staffleave USING btree (changeversion);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_descriptor_uri; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_descriptor_uri ON edfi.descriptor USING btree (uri) INCLUDE (descriptorid, discriminator);


--
-- Name: ux_dfca5d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dfca5d_changeversion ON edfi.section USING btree (changeversion);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e2733e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e2733e_changeversion ON edfi.studentcontactassociation USING btree (changeversion);


--
-- Name: ux_e2733e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e2733e_id ON edfi.studentcontactassociation USING btree (id);


--
-- Name: ux_e3e5a4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e3e5a4_changeversion ON edfi.surveyprogramassociation USING btree (changeversion);


--
-- Name: ux_e3e5a4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e3e5a4_id ON edfi.surveyprogramassociation USING btree (id);


--
-- Name: ux_e45c0b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e45c0b_changeversion ON edfi.disciplineincident USING btree (changeversion);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e52c9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e52c9c_changeversion ON edfi.balancesheetdimension USING btree (changeversion);


--
-- Name: ux_e52c9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e52c9c_id ON edfi.balancesheetdimension USING btree (id);


--
-- Name: ux_e5572a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e5572a_changeversion ON edfi.surveysection USING btree (changeversion);


--
-- Name: ux_e5572a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e5572a_id ON edfi.surveysection USING btree (id);


--
-- Name: ux_e670ae_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e670ae_changeversion ON edfi.educationorganizationinterventionprescriptionassociation USING btree (changeversion);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e91a4d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e91a4d_changeversion ON edfi.sourcedimension USING btree (changeversion);


--
-- Name: ux_e91a4d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e91a4d_id ON edfi.sourcedimension USING btree (id);


--
-- Name: ux_e93bc3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e93bc3_changeversion ON edfi.interventionprescription USING btree (changeversion);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ea526f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ea526f_changeversion ON edfi.localencumbrance USING btree (changeversion);


--
-- Name: ux_ea526f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ea526f_id ON edfi.localencumbrance USING btree (id);


--
-- Name: ux_ec1992_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ec1992_changeversion ON edfi.reportcard USING btree (changeversion);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_eddd02_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eddd02_changeversion ON edfi.surveyquestionresponse USING btree (changeversion);


--
-- Name: ux_eddd02_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eddd02_id ON edfi.surveyquestionresponse USING btree (id);


--
-- Name: ux_ee3b2a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee3b2a_changeversion ON edfi.studentassessment USING btree (changeversion);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_ee9047_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee9047_changeversion ON edfi.descriptormapping USING btree (changeversion);


--
-- Name: ux_ee9047_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee9047_id ON edfi.descriptormapping USING btree (id);


--
-- Name: ux_eec7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eec7b6_changeversion ON edfi.disciplineaction USING btree (changeversion);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f092ff_changeversion ON edfi.communityproviderlicense USING btree (changeversion);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_f3a20e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f3a20e_changeversion ON edfi.programevaluation USING btree (changeversion);


--
-- Name: ux_f3a20e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f3a20e_id ON edfi.programevaluation USING btree (id);


--
-- Name: ux_f4934f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f4934f_changeversion ON edfi.studentdisciplineincidentbehaviorassociation USING btree (changeversion);


--
-- Name: ux_f4934f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f4934f_id ON edfi.studentdisciplineincidentbehaviorassociation USING btree (id);


--
-- Name: ux_f9457e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f9457e_changeversion ON edfi.surveyresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_f9457e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f9457e_id ON edfi.surveyresponsestafftargetassociation USING btree (id);


--
-- Name: ux_fcb699_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_fcb699_changeversion ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (changeversion);


--
-- Name: ux_fcb699_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_fcb699_id ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (id);


--
-- Name: fk_09c531_telephonenumbertypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_09c531_telephonenumbertypedescriptor ON tpdm.candidatetelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_15d685_academicsubjectdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_academicsubjectdescriptor ON tpdm.performanceevaluation USING btree (academicsubjectdescriptorid);


--
-- Name: fk_15d685_evaluationperioddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_evaluationperioddescriptor ON tpdm.performanceevaluation USING btree (evaluationperioddescriptorid);


--
-- Name: fk_15d685_performanceevaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_performanceevaluationtypedescriptor ON tpdm.performanceevaluation USING btree (performanceevaluationtypedescriptorid);


--
-- Name: fk_15d685_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_schoolyeartype ON tpdm.performanceevaluation USING btree (schoolyear);


--
-- Name: fk_15d685_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_termdescriptor ON tpdm.performanceevaluation USING btree (termdescriptorid);


--
-- Name: fk_160329_addresstypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_addresstypedescriptor ON tpdm.candidateaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_160329_localedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_localedescriptor ON tpdm.candidateaddress USING btree (localedescriptorid);


--
-- Name: fk_160329_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_stateabbreviationdescriptor ON tpdm.candidateaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_163e44_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_evaluationtypedescriptor ON tpdm.evaluation USING btree (evaluationtypedescriptorid);


--
-- Name: fk_163e44_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_performanceevaluation ON tpdm.evaluation USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_195935_accreditationstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_accreditationstatusdescriptor ON tpdm.educatorpreparationprogram USING btree (accreditationstatusdescriptorid);


--
-- Name: fk_195935_programtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_programtypedescriptor ON tpdm.educatorpreparationprogram USING btree (programtypedescriptorid);


--
-- Name: fk_1d984c_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_1d984c_evaluationratingleveldescriptor ON tpdm.evaluationobjectiveratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_2199be_postsecondaryinstitution; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2199be_postsecondaryinstitution ON tpdm.schoolextension USING btree (postsecondaryinstitutionid);


--
-- Name: fk_236ee4_disabilitydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydescriptor ON tpdm.candidatedisability USING btree (disabilitydescriptorid);


--
-- Name: fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydeterminationsourcetypedescriptor ON tpdm.candidatedisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_268283_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_268283_resultdatatypetypedescriptor ON tpdm.evaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d29eb_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2d29eb_person ON tpdm.evaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_3f00b1_languageusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_3f00b1_languageusedescriptor ON tpdm.candidatelanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_4479ea_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelement ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_4479ea_evaluationelementratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelementratingleveldescriptor ON tpdm.evaluationelementrating USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_4479ea_evaluationobjectiverating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationobjectiverating ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_4521bb_othernametypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4521bb_othernametypedescriptor ON tpdm.candidateothername USING btree (othernametypedescriptorid);


--
-- Name: fk_477526_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_477526_person ON tpdm.performanceevaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_520027_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_person ON tpdm.surveyresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_520027_surveyresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_surveyresponse ON tpdm.surveyresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_5b9d31_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_5b9d31_gradeleveldescriptor ON tpdm.performanceevaluationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_620d03_cohortyeartypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_cohortyeartypedescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_620d03_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_schoolyeartype ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_620d03_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_termdescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_643c81_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_evaluationelement ON tpdm.rubricdimension USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_643c81_rubricratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_rubricratingleveldescriptor ON tpdm.rubricdimension USING btree (rubricratingleveldescriptorid);


--
-- Name: fk_6aa942_racedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6aa942_racedescriptor ON tpdm.candidaterace USING btree (racedescriptorid);


--
-- Name: fk_6edb1d_disabilitydesignationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6edb1d_disabilitydesignationdescriptor ON tpdm.candidatedisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6fae52_certificationroutedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_certificationroutedescriptor ON tpdm.credentialextension USING btree (certificationroutedescriptorid);


--
-- Name: fk_6fae52_credentialstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_credentialstatusdescriptor ON tpdm.credentialextension USING btree (credentialstatusdescriptorid);


--
-- Name: fk_6fae52_educatorroledescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_educatorroledescriptor ON tpdm.credentialextension USING btree (educatorroledescriptorid);


--
-- Name: fk_6fae52_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_person ON tpdm.credentialextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7052f8_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7052f8_evaluationratingleveldescriptor ON tpdm.evaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_73e151_studentacademicrecord; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_73e151_studentacademicrecord ON tpdm.credentialstudentacademicrecord USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_759abe_coteachingstyleobserveddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_coteachingstyleobserveddescriptor ON tpdm.performanceevaluationrating USING btree (coteachingstyleobserveddescriptorid);


--
-- Name: fk_759abe_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluation ON tpdm.performanceevaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_759abe_performanceevaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluationratingleveldescriptor ON tpdm.performanceevaluationrating USING btree (performanceevaluationratingleveldescriptorid);


--
-- Name: fk_759abe_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_person ON tpdm.performanceevaluationrating USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7ae19d_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationobjective ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_7ae19d_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationrating ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_7ae19d_objectiveratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_objectiveratingleveldescriptor ON tpdm.evaluationobjectiverating USING btree (objectiveratingleveldescriptorid);


--
-- Name: fk_863fa4_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_863fa4_resultdatatypetypedescriptor ON tpdm.performanceevaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_90ed3d_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_90ed3d_evaluationratingleveldescriptor ON tpdm.performanceevaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_93a227_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_countrydescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_93a227_identificationdocumentusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_identificationdocumentusedescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_93a227_personalinformationverificationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_personalinformationverificationdescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a465f2_aidtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_aidtypedescriptor ON tpdm.financialaid USING btree (aidtypedescriptorid);


--
-- Name: fk_a465f2_student; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_student ON tpdm.financialaid USING btree (studentusi);


--
-- Name: fk_afbeb2_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_afbeb2_evaluationratingleveldescriptor ON tpdm.evaluationelementratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_b2452d_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_countrydescriptor ON tpdm.candidate USING btree (birthcountrydescriptorid);


--
-- Name: fk_b2452d_englishlanguageexamdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_englishlanguageexamdescriptor ON tpdm.candidate USING btree (englishlanguageexamdescriptorid);


--
-- Name: fk_b2452d_genderdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_genderdescriptor ON tpdm.candidate USING btree (genderdescriptorid);


--
-- Name: fk_b2452d_limitedenglishproficiencydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_limitedenglishproficiencydescriptor ON tpdm.candidate USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_b2452d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_person ON tpdm.candidate USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor ON tpdm.candidate USING btree (sexdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor1; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor1 ON tpdm.candidate USING btree (birthsexdescriptorid);


--
-- Name: fk_b2452d_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_stateabbreviationdescriptor ON tpdm.candidate USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_beeccb_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_beeccb_resultdatatypetypedescriptor ON tpdm.evaluationobjectiveratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_bfaa20_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluation ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_bfaa20_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingleveldescriptor ON tpdm.evaluationrating USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_bfaa20_evaluationratingstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingstatusdescriptor ON tpdm.evaluationrating USING btree (evaluationratingstatusdescriptorid);


--
-- Name: fk_bfaa20_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_performanceevaluationrating ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_bfaa20_section; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_section ON tpdm.evaluationrating USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c5124f_electronicmailtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5124f_electronicmailtypedescriptor ON tpdm.candidateelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_c5877a_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5877a_resultdatatypetypedescriptor ON tpdm.evaluationelementratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_d3a222_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d3a222_gradeleveldescriptor ON tpdm.educatorpreparationprogramgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_d4565d_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluation ON tpdm.evaluationobjective USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_d4565d_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluationtypedescriptor ON tpdm.evaluationobjective USING btree (evaluationtypedescriptorid);


--
-- Name: fk_e21e4b_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_person ON tpdm.surveysectionresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_e21e4b_surveysectionresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_surveysectionresponse ON tpdm.surveysectionresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_e5239b_languagedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e5239b_languagedescriptor ON tpdm.candidatelanguage USING btree (languagedescriptorid);


--
-- Name: fk_e53186_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationobjective ON tpdm.evaluationelement USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_e53186_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationtypedescriptor ON tpdm.evaluationelement USING btree (evaluationtypedescriptorid);


--
-- Name: fk_fa906d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fa906d_person ON tpdm.surveyresponseextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_fc61b2_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_candidate ON tpdm.candidateeducatorpreparationprogramassociation USING btree (candidateidentifier);


--
-- Name: fk_fc61b2_educatorpreparationprogram; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_educatorpreparationprogram ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fc61b2_eppprogrampathwaydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_eppprogrampathwaydescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (eppprogrampathwaydescriptorid);


--
-- Name: fk_fc61b2_reasonexiteddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_reasonexiteddescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: ix_candidateeducatorpreparationprogramassociation_educationorga; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_candidateeducatorpreparationprogramassociation_educationorga ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educatorpreparationprogram_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_educatorpreparationprogram_educationorganizationid ON tpdm.educatorpreparationprogram USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluation_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluation_educationorganizationid ON tpdm.evaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationelement_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationelement_educationorganizationid ON tpdm.evaluationelement USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationelementrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationelementrating_educationorganizationid ON tpdm.evaluationelementrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationobjective_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationobjective_educationorganizationid ON tpdm.evaluationobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationobjectiverating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationobjectiverating_educationorganizationid ON tpdm.evaluationobjectiverating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationrating_educationorganizationid ON tpdm.evaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationrating_schoolid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationrating_schoolid ON tpdm.evaluationrating USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_performanceevaluation_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_performanceevaluation_educationorganizationid ON tpdm.performanceevaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_performanceevaluationrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_performanceevaluationrating_educationorganizationid ON tpdm.performanceevaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_rubricdimension_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_rubricdimension_educationorganizationid ON tpdm.rubricdimension USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ux_15d685_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_15d685_changeversion ON tpdm.performanceevaluation USING btree (changeversion);


--
-- Name: ux_15d685_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_15d685_id ON tpdm.performanceevaluation USING btree (id);


--
-- Name: ux_163e44_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_163e44_changeversion ON tpdm.evaluation USING btree (changeversion);


--
-- Name: ux_163e44_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_163e44_id ON tpdm.evaluation USING btree (id);


--
-- Name: ux_195935_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_195935_changeversion ON tpdm.educatorpreparationprogram USING btree (changeversion);


--
-- Name: ux_195935_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_195935_id ON tpdm.educatorpreparationprogram USING btree (id);


--
-- Name: ux_4479ea_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_4479ea_changeversion ON tpdm.evaluationelementrating USING btree (changeversion);


--
-- Name: ux_4479ea_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_4479ea_id ON tpdm.evaluationelementrating USING btree (id);


--
-- Name: ux_520027_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_520027_changeversion ON tpdm.surveyresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_520027_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_520027_id ON tpdm.surveyresponsepersontargetassociation USING btree (id);


--
-- Name: ux_643c81_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_643c81_changeversion ON tpdm.rubricdimension USING btree (changeversion);


--
-- Name: ux_643c81_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_643c81_id ON tpdm.rubricdimension USING btree (id);


--
-- Name: ux_759abe_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_759abe_changeversion ON tpdm.performanceevaluationrating USING btree (changeversion);


--
-- Name: ux_759abe_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_759abe_id ON tpdm.performanceevaluationrating USING btree (id);


--
-- Name: ux_7ae19d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_7ae19d_changeversion ON tpdm.evaluationobjectiverating USING btree (changeversion);


--
-- Name: ux_7ae19d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_7ae19d_id ON tpdm.evaluationobjectiverating USING btree (id);


--
-- Name: ux_a465f2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_a465f2_changeversion ON tpdm.financialaid USING btree (changeversion);


--
-- Name: ux_a465f2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_a465f2_id ON tpdm.financialaid USING btree (id);


--
-- Name: ux_b2452d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_b2452d_changeversion ON tpdm.candidate USING btree (changeversion);


--
-- Name: ux_b2452d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2452d_id ON tpdm.candidate USING btree (id);


--
-- Name: ux_bfaa20_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_bfaa20_changeversion ON tpdm.evaluationrating USING btree (changeversion);


--
-- Name: ux_bfaa20_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_bfaa20_id ON tpdm.evaluationrating USING btree (id);


--
-- Name: ux_d4565d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_d4565d_changeversion ON tpdm.evaluationobjective USING btree (changeversion);


--
-- Name: ux_d4565d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_d4565d_id ON tpdm.evaluationobjective USING btree (id);


--
-- Name: ux_e21e4b_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e21e4b_changeversion ON tpdm.surveysectionresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_e21e4b_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e21e4b_id ON tpdm.surveysectionresponsepersontargetassociation USING btree (id);


--
-- Name: ux_e53186_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e53186_changeversion ON tpdm.evaluationelement USING btree (changeversion);


--
-- Name: ux_e53186_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e53186_id ON tpdm.evaluationelement USING btree (id);


--
-- Name: ux_fc61b2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_fc61b2_changeversion ON tpdm.candidateeducatorpreparationprogramassociation USING btree (changeversion);


--
-- Name: ux_fc61b2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_fc61b2_id ON tpdm.candidateeducatorpreparationprogramassociation USING btree (id);


--
-- Name: communityorganization deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_delete();


--
-- Name: communityprovider deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_delete();


--
-- Name: educationorganizationnetwork deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete();


--
-- Name: educationservicecenter deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_delete();


--
-- Name: localeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_delete();


--
-- Name: organizationdepartment deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_delete();


--
-- Name: postsecondaryinstitution deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete();


--
-- Name: school deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_delete();


--
-- Name: stateeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_delete();


--
-- Name: classperiod handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classperiodname, schoolid ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_keychg();


--
-- Name: contact handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF contactuniqueid ON edfi.contact FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contact_keychg();


--
-- Name: courseoffering handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sessionname ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_keychg();


--
-- Name: grade handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_keychg();


--
-- Name: gradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_keychg();


--
-- Name: location handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classroomidentificationcode, schoolid ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_keychg();


--
-- Name: section handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_keychg();


--
-- Name: sectionattendancetakenevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg();


--
-- Name: session handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF schoolid, schoolyear, sessionname ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_keychg();


--
-- Name: staff handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF staffuniqueid ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_keychg();


--
-- Name: staffsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg();


--
-- Name: student handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF studentuniqueid ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_keychg();


--
-- Name: studentgradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace, studentusi ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg();


--
-- Name: studentschoolassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF entrydate, schoolid, studentusi ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg();


--
-- Name: studentschoolattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg();


--
-- Name: studentsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg();


--
-- Name: studentsectionattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg();


--
-- Name: surveysectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg();


--
-- Name: communityorganization insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_insert();


--
-- Name: communityprovider insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_insert();


--
-- Name: educationorganizationnetwork insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert();


--
-- Name: educationservicecenter insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_insert();


--
-- Name: localeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_insert();


--
-- Name: organizationdepartment insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_insert();


--
-- Name: postsecondaryinstitution insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert();


--
-- Name: school insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_insert();


--
-- Name: stateeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_insert();


--
-- Name: absenceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.absenceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted();


--
-- Name: academichonorcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academichonorcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted();


--
-- Name: academicsubjectdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicsubjectdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted();


--
-- Name: academicweek trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicweek_deleted();


--
-- Name: accommodationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accommodationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted();


--
-- Name: accountabilityrating trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accountabilityrating_deleted();


--
-- Name: accounttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accounttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted();


--
-- Name: achievementcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.achievementcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted();


--
-- Name: additionalcredittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.additionalcredittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted();


--
-- Name: addresstypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.addresstypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted();


--
-- Name: administrationenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrationenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted();


--
-- Name: administrativefundingcontroldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrativefundingcontroldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted();


--
-- Name: ancestryethnicorigindescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ancestryethnicorigindescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted();


--
-- Name: assessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessment_deleted();


--
-- Name: assessmentcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted();


--
-- Name: assessmentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted();


--
-- Name: assessmentitem trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitem_deleted();


--
-- Name: assessmentitemcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted();


--
-- Name: assessmentitemresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted();


--
-- Name: assessmentperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted();


--
-- Name: assessmentreportingmethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentreportingmethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted();


--
-- Name: assessmentscorerangelearningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted();


--
-- Name: assignmentlatestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assignmentlatestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted();


--
-- Name: attemptstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attemptstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted();


--
-- Name: attendanceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attendanceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted();


--
-- Name: balancesheetdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted();


--
-- Name: barriertointernetaccessinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.barriertointernetaccessinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted();


--
-- Name: behaviordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.behaviordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted();


--
-- Name: bellschedule trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.bellschedule_deleted();


--
-- Name: calendar trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendar_deleted();


--
-- Name: calendardate trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendardate_deleted();


--
-- Name: calendareventdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendareventdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted();


--
-- Name: calendartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted();


--
-- Name: careerpathwaydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.careerpathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted();


--
-- Name: charterapprovalagencytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterapprovalagencytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted();


--
-- Name: charterstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted();


--
-- Name: chartofaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.chartofaccount_deleted();


--
-- Name: citizenshipstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.citizenshipstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted();


--
-- Name: classperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_deleted();


--
-- Name: classroompositiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classroompositiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted();


--
-- Name: cohort trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohort_deleted();


--
-- Name: cohortscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted();


--
-- Name: cohorttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohorttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted();


--
-- Name: cohortyeartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortyeartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted();


--
-- Name: communityproviderlicense trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted();


--
-- Name: competencyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted();


--
-- Name: competencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyobjective_deleted();


--
-- Name: contact trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contact FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contact_deleted();


--
-- Name: contacttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contacttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted();


--
-- Name: contentclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contentclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted();


--
-- Name: continuationofservicesreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.continuationofservicesreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted();


--
-- Name: costratedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.costratedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.costratedescriptor_deleted();


--
-- Name: countrydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.countrydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.countrydescriptor_deleted();


--
-- Name: course trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.course FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.course_deleted();


--
-- Name: courseattemptresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseattemptresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted();


--
-- Name: coursedefinedbydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursedefinedbydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted();


--
-- Name: coursegpaapplicabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursegpaapplicabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted();


--
-- Name: courseidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted();


--
-- Name: courselevelcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courselevelcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted();


--
-- Name: courseoffering trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_deleted();


--
-- Name: courserepeatcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courserepeatcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted();


--
-- Name: coursetranscript trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursetranscript_deleted();


--
-- Name: credential trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credential_deleted();


--
-- Name: credentialfielddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialfielddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted();


--
-- Name: credentialtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted();


--
-- Name: creditcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.creditcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted();


--
-- Name: credittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted();


--
-- Name: cteprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cteprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted();


--
-- Name: curriculumuseddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.curriculumuseddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted();


--
-- Name: deliverymethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.deliverymethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted();


--
-- Name: descriptormapping trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.descriptormapping_deleted();


--
-- Name: diagnosisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diagnosisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted();


--
-- Name: diplomaleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomaleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted();


--
-- Name: diplomatypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomatypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted();


--
-- Name: disabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted();


--
-- Name: disabilitydesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted();


--
-- Name: disabilitydeterminationsourcetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydeterminationsourcetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted();


--
-- Name: disciplineaction trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineaction_deleted();


--
-- Name: disciplineactionlengthdifferencereasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineactionlengthdifferencereasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted();


--
-- Name: disciplinedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplinedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted();


--
-- Name: disciplineincident trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincident_deleted();


--
-- Name: disciplineincidentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincidentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted();


--
-- Name: educationalenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationalenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted();


--
-- Name: educationcontent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationcontent_deleted();


--
-- Name: educationorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganization_deleted();


--
-- Name: educationorganizationassociationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationassociationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted();


--
-- Name: educationorganizationcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted();


--
-- Name: educationorganizationidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted();


--
-- Name: educationorganizationinterventionprescriptionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted();


--
-- Name: educationorganizationnetworkassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted();


--
-- Name: educationorganizationpeerassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted();


--
-- Name: educationplandescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationplandescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted();


--
-- Name: electronicmailtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.electronicmailtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted();


--
-- Name: eligibilitydelayreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eligibilitydelayreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted();


--
-- Name: eligibilityevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eligibilityevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted();


--
-- Name: employmentstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.employmentstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted();


--
-- Name: enrollmenttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.enrollmenttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted();


--
-- Name: entrygradelevelreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrygradelevelreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted();


--
-- Name: entrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted();


--
-- Name: evaluationdelayreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.evaluationdelayreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted();


--
-- Name: evaluationrubricdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.evaluationrubricdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted();


--
-- Name: eventcircumstancedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eventcircumstancedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted();


--
-- Name: exitwithdrawtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.exitwithdrawtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted();


--
-- Name: feederschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted();


--
-- Name: financialcollectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.financialcollectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted();


--
-- Name: functiondimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.functiondimension_deleted();


--
-- Name: funddimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.funddimension_deleted();


--
-- Name: generalstudentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted();


--
-- Name: grade trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_deleted();


--
-- Name: gradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_deleted();


--
-- Name: gradebookentrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted();


--
-- Name: gradeleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradeleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted();


--
-- Name: gradepointaveragetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradepointaveragetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted();


--
-- Name: gradetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted();


--
-- Name: gradingperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperiod_deleted();


--
-- Name: gradingperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted();


--
-- Name: graduationplan trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplan_deleted();


--
-- Name: graduationplantypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplantypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted();


--
-- Name: gunfreeschoolsactreportingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gunfreeschoolsactreportingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted();


--
-- Name: homelessprimarynighttimeresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprimarynighttimeresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted();


--
-- Name: homelessprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted();


--
-- Name: ideapartdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ideapartdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted();


--
-- Name: identificationdocumentusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.identificationdocumentusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted();


--
-- Name: incidentlocationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.incidentlocationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted();


--
-- Name: indicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted();


--
-- Name: indicatorgroupdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorgroupdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted();


--
-- Name: indicatorleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted();


--
-- Name: institutiontelephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.institutiontelephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted();


--
-- Name: interactivitystyledescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interactivitystyledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted();


--
-- Name: internetaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted();


--
-- Name: internetaccesstypeinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccesstypeinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted();


--
-- Name: internetperformanceinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetperformanceinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted();


--
-- Name: intervention trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.intervention_deleted();


--
-- Name: interventionclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted();


--
-- Name: interventioneffectivenessratingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventioneffectivenessratingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted();


--
-- Name: interventionprescription trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionprescription_deleted();


--
-- Name: interventionstudy trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionstudy_deleted();


--
-- Name: languagedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languagedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languagedescriptor_deleted();


--
-- Name: languageinstructionprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageinstructionprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted();


--
-- Name: languageusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted();


--
-- Name: learningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandard_deleted();


--
-- Name: learningstandardcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted();


--
-- Name: learningstandardequivalenceassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted();


--
-- Name: learningstandardequivalencestrengthdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalencestrengthdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted();


--
-- Name: learningstandardscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted();


--
-- Name: levelofeducationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.levelofeducationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted();


--
-- Name: licensestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted();


--
-- Name: licensetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted();


--
-- Name: limitedenglishproficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.limitedenglishproficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted();


--
-- Name: localaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localaccount_deleted();


--
-- Name: localactual trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localactual_deleted();


--
-- Name: localbudget trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localbudget_deleted();


--
-- Name: localcontractedstaff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted();


--
-- Name: localedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localedescriptor_deleted();


--
-- Name: localeducationagencycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagencycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted();


--
-- Name: localencumbrance trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localencumbrance_deleted();


--
-- Name: localpayroll trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localpayroll_deleted();


--
-- Name: location trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_deleted();


--
-- Name: magnetspecialprogramemphasisschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.magnetspecialprogramemphasisschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted();


--
-- Name: mediumofinstructiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.mediumofinstructiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted();


--
-- Name: methodcreditearneddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.methodcreditearneddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted();


--
-- Name: migranteducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.migranteducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted();


--
-- Name: modelentitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.modelentitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted();


--
-- Name: monitoreddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.monitoreddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted();


--
-- Name: neglectedordelinquentprogramdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted();


--
-- Name: neglectedordelinquentprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted();


--
-- Name: networkpurposedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.networkpurposedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted();


--
-- Name: objectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectdimension_deleted();


--
-- Name: objectiveassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectiveassessment_deleted();


--
-- Name: openstaffposition trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.openstaffposition_deleted();


--
-- Name: operationalstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted();


--
-- Name: operationalunitdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted();


--
-- Name: othernametypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.othernametypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted();


--
-- Name: participationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationdescriptor_deleted();


--
-- Name: participationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted();


--
-- Name: performancebaseconversiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performancebaseconversiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted();


--
-- Name: performanceleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performanceleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted();


--
-- Name: person trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.person FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.person_deleted();


--
-- Name: personalinformationverificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.personalinformationverificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted();


--
-- Name: platformtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.platformtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted();


--
-- Name: populationserveddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.populationserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted();


--
-- Name: postingresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postingresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted();


--
-- Name: postsecondaryevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted();


--
-- Name: postsecondaryeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted();


--
-- Name: postsecondaryinstitutionleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitutionleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted();


--
-- Name: primarylearningdeviceaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted();


--
-- Name: primarylearningdeviceawayfromschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceawayfromschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted();


--
-- Name: primarylearningdeviceproviderdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceproviderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted();


--
-- Name: proficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.proficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted();


--
-- Name: program trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.program FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.program_deleted();


--
-- Name: programassignmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programassignmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted();


--
-- Name: programcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted();


--
-- Name: programdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programdimension_deleted();


--
-- Name: programevaluation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluation_deleted();


--
-- Name: programevaluationelement trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationelement FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationelement_deleted();


--
-- Name: programevaluationobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationobjective_deleted();


--
-- Name: programevaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted();


--
-- Name: programevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted();


--
-- Name: programsponsordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programsponsordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted();


--
-- Name: programtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted();


--
-- Name: progressdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressdescriptor_deleted();


--
-- Name: progressleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted();


--
-- Name: projectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.projectdimension_deleted();


--
-- Name: providercategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providercategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted();


--
-- Name: providerprofitabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerprofitabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted();


--
-- Name: providerstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted();


--
-- Name: publicationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.publicationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted();


--
-- Name: questionformdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.questionformdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted();


--
-- Name: racedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.racedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.racedescriptor_deleted();


--
-- Name: ratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted();


--
-- Name: reasonexiteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonexiteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted();


--
-- Name: reasonnottesteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonnottesteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted();


--
-- Name: recognitiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.recognitiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted();


--
-- Name: relationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.relationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.relationdescriptor_deleted();


--
-- Name: repeatidentifierdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.repeatidentifierdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted();


--
-- Name: reportcard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportcard_deleted();


--
-- Name: reporterdescriptiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reporterdescriptiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted();


--
-- Name: reportingtagdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportingtagdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted();


--
-- Name: residencystatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.residencystatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted();


--
-- Name: responseindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responseindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted();


--
-- Name: responsibilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responsibilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted();


--
-- Name: restraintevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restraintevent_deleted();


--
-- Name: restrainteventreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restrainteventreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted();


--
-- Name: resultdatatypetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.resultdatatypetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted();


--
-- Name: retestindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.retestindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted();


--
-- Name: schoolcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted();


--
-- Name: schoolchoicebasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoicebasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted();


--
-- Name: schoolchoiceimplementstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoiceimplementstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted();


--
-- Name: schoolfoodserviceprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolfoodserviceprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted();


--
-- Name: schooltypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schooltypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted();


--
-- Name: schoolyeartype trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolyeartype_deleted();


--
-- Name: section trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_deleted();


--
-- Name: sectionattendancetakenevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted();


--
-- Name: sectioncharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectioncharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted();


--
-- Name: sectiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted();


--
-- Name: separationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationdescriptor_deleted();


--
-- Name: separationreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted();


--
-- Name: servicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.servicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.servicedescriptor_deleted();


--
-- Name: session trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_deleted();


--
-- Name: sexdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sexdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sexdescriptor_deleted();


--
-- Name: sourcedimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcedimension_deleted();


--
-- Name: sourcesystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcesystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted();


--
-- Name: specialeducationexitreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationexitreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationexitreasondescriptor_deleted();


--
-- Name: specialeducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted();


--
-- Name: specialeducationsettingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationsettingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted();


--
-- Name: staff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_deleted();


--
-- Name: staffabsenceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted();


--
-- Name: staffclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffclassificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted();


--
-- Name: staffcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted();


--
-- Name: staffdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted();


--
-- Name: staffeducationorganizationassignmentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted();


--
-- Name: staffeducationorganizationcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted();


--
-- Name: staffeducationorganizationemploymentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted();


--
-- Name: staffidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted();


--
-- Name: staffleave trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleave_deleted();


--
-- Name: staffleaveeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleaveeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted();


--
-- Name: staffprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted();


--
-- Name: staffschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted();


--
-- Name: staffsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted();


--
-- Name: stateabbreviationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateabbreviationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted();


--
-- Name: student trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_deleted();


--
-- Name: studentacademicrecord trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted();


--
-- Name: studentassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessment_deleted();


--
-- Name: studentassessmenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted();


--
-- Name: studentcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted();


--
-- Name: studentcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted();


--
-- Name: studentcompetencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted();


--
-- Name: studentcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcontactassociation_deleted();


--
-- Name: studentdisciplineincidentbehaviorassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted();


--
-- Name: studentdisciplineincidentnonoffenderassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted();


--
-- Name: studenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted();


--
-- Name: studenteducationorganizationresponsibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted();


--
-- Name: studentgradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted();


--
-- Name: studentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted();


--
-- Name: studentinterventionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted();


--
-- Name: studentinterventionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted();


--
-- Name: studentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted();


--
-- Name: studentprogramattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted();


--
-- Name: studentprogramevaluation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted();


--
-- Name: studentschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted();


--
-- Name: studentschoolattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted();


--
-- Name: studentsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted();


--
-- Name: studentsectionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted();


--
-- Name: studentspecialeducationprogrameligibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentspecialeducationprogrameligibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted();


--
-- Name: submissionstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.submissionstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted();


--
-- Name: supportermilitaryconnectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.supportermilitaryconnectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted();


--
-- Name: survey trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.survey_deleted();


--
-- Name: surveycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted();


--
-- Name: surveycourseassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted();


--
-- Name: surveyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted();


--
-- Name: surveyprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted();


--
-- Name: surveyquestion trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestion_deleted();


--
-- Name: surveyquestionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted();


--
-- Name: surveyresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponse_deleted();


--
-- Name: surveyresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted();


--
-- Name: surveyresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted();


--
-- Name: surveysection trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysection_deleted();


--
-- Name: surveysectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted();


--
-- Name: surveysectionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted();


--
-- Name: surveysectionresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted();


--
-- Name: teachingcredentialbasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialbasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted();


--
-- Name: teachingcredentialdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted();


--
-- Name: technicalskillsassessmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.technicalskillsassessmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted();


--
-- Name: telephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.telephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted();


--
-- Name: termdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.termdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.termdescriptor_deleted();


--
-- Name: titleipartaparticipantdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaparticipantdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted();


--
-- Name: titleipartaprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted();


--
-- Name: titleipartaschooldesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaschooldesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted();


--
-- Name: tribalaffiliationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.tribalaffiliationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted();


--
-- Name: visadescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.visadescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.visadescriptor_deleted();


--
-- Name: weapondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.weapondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.weapondescriptor_deleted();


--
-- Name: communityprovider updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_update();


--
-- Name: educationservicecenter updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_update();


--
-- Name: localeducationagency updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_update();


--
-- Name: organizationdepartment updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_update();


--
-- Name: school updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_update();


--
-- Name: academicweek updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accountabilityrating updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentitem updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentscorerangelearningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: balancesheetdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: bellschedule updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendar updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendardate updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: chartofaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: classperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: cohort updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: communityproviderlicense updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: competencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: contact updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.contact FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: course updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.course FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: courseoffering updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: coursetranscript updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: credential updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptor updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptor FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptormapping updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineaction updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineincident updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationcontent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganization updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationinterventionprescriptionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationnetworkassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationpeerassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationrubricdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.evaluationrubricdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: feederschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: functiondimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: funddimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: generalstudentprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: grade updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradingperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: graduationplan updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: intervention updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionprescription updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionstudy updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandardequivalenceassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localactual updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localcontractedstaff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localencumbrance updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localpayroll updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: location updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.location FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectiveassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: openstaffposition updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: operationalunitdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: person updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.person FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: postsecondaryevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: program updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.program FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluationelement updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluationelement FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluationobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluationobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: projectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: reportcard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: restraintevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: schoolyeartype updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: section updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.section FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sectionattendancetakenevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: session updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.session FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sourcedimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffabsenceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationassignmentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationemploymentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffleave updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: student updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.student FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentacademicrecord updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessmenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcompetencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentbehaviorassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentnonoffenderassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationresponsibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentgradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramevaluation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentspecialeducationprogrameligibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentspecialeducationprogrameligibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: survey updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveycourseassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestion updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysection updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accreditationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.accreditationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted();


--
-- Name: aidtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.aidtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted();


--
-- Name: candidate trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidate_deleted();


--
-- Name: candidateeducatorpreparationprogramassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted();


--
-- Name: certificationroutedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.certificationroutedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted();


--
-- Name: coteachingstyleobserveddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.coteachingstyleobserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted();


--
-- Name: credentialstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.credentialstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted();


--
-- Name: educatorpreparationprogram trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted();


--
-- Name: educatorroledescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorroledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted();


--
-- Name: englishlanguageexamdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.englishlanguageexamdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted();


--
-- Name: eppprogrampathwaydescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.eppprogrampathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted();


--
-- Name: evaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluation_deleted();


--
-- Name: evaluationelement trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelement_deleted();


--
-- Name: evaluationelementrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted();


--
-- Name: evaluationelementratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted();


--
-- Name: evaluationobjective trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted();


--
-- Name: evaluationobjectiverating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted();


--
-- Name: evaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted();


--
-- Name: evaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationrating_deleted();


--
-- Name: evaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted();


--
-- Name: evaluationratingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted();


--
-- Name: evaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted();


--
-- Name: financialaid trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.financialaid_deleted();


--
-- Name: genderdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.genderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted();


--
-- Name: objectiveratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.objectiveratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted();


--
-- Name: performanceevaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted();


--
-- Name: performanceevaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted();


--
-- Name: performanceevaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted();


--
-- Name: performanceevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted();


--
-- Name: rubricdimension trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricdimension_deleted();


--
-- Name: rubricratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted();


--
-- Name: surveyresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted();


--
-- Name: surveysectionresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted();


--
-- Name: candidate updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: candidateeducatorpreparationprogramassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educatorpreparationprogram updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelement updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelementrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjective updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjectiverating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: financialaid updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: rubricdimension updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget fk_000683_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localbudget fk_000683_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: programevaluationelementprogramevaluationlevel fk_01bfbb_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementprogramevaluationlevel
    ADD CONSTRAINT fk_01bfbb_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationelementprogramevaluationlevel fk_01bfbb_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementprogramevaluationlevel
    ADD CONSTRAINT fk_01bfbb_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessmentperiod fk_02ddd8_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: studentassessmentperiod fk_02ddd8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyleveldescriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.surveyleveldescriptor(surveyleveldescriptorid);


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse fk_048797_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT fk_048797_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: studentprogramevaluationexternalevaluator fk_04c7ce_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationexternalevaluator
    ADD CONSTRAINT fk_04c7ce_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: contactlanguageuse fk_050c1b_contactlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT fk_050c1b_contactlanguage FOREIGN KEY (contactusi, languagedescriptorid) REFERENCES edfi.contactlanguage(contactusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: contactlanguageuse fk_050c1b_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT fk_050c1b_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: indicatorleveldescriptor fk_05d3f9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT fk_05d3f9_descriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sourcedimensionreportingtag fk_0c6eff_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: sourcedimensionreportingtag fk_0c6eff_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_sourcedimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: specialeducationexitreasondescriptor fk_131a5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationexitreasondescriptor
    ADD CONSTRAINT fk_131a5d_descriptor FOREIGN KEY (specialeducationexitreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: chartofaccount fk_131e2b_accounttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_accounttypedescriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.accounttypedescriptor(accounttypedescriptorid);


--
-- Name: chartofaccount fk_131e2b_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_balancesheetdimension FOREIGN KEY (balancesheetcode, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: chartofaccount fk_131e2b_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_functiondimension FOREIGN KEY (functioncode, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_funddimension FOREIGN KEY (fundcode, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_objectdimension FOREIGN KEY (objectcode, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_operationalunitdimension FOREIGN KEY (operationalunitcode, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_programdimension FOREIGN KEY (programcode, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_projectdimension FOREIGN KEY (projectcode, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_sourcedimension FOREIGN KEY (sourcecode, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear);


--
-- Name: organizationdepartment fk_13b924_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: organizationdepartment fk_13b924_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization FOREIGN KEY (organizationdepartmentid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization1 FOREIGN KEY (parenteducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectiontypedescriptor fk_17bb6e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectiontypedescriptor
    ADD CONSTRAINT fk_17bb6e_descriptor FOREIGN KEY (sectiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrubricdimension fk_1b7ccf_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT fk_1b7ccf_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: evaluationrubricdimension fk_1b7ccf_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT fk_1b7ccf_ratingleveldescriptor FOREIGN KEY (evaluationrubricratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestion fk_1bb88c_questionformdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_questionformdescriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.questionformdescriptor(questionformdescriptorid);


--
-- Name: surveyquestion fk_1bb88c_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: surveyquestion fk_1bb88c_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveyquestionresponsechoice fk_1c624b_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT fk_1c624b_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: survey fk_211bb3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: survey fk_211bb3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: survey fk_211bb3_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: survey fk_211bb3_surveycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_surveycategorydescriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.surveycategorydescriptor(surveycategorydescriptorid);


--
-- Name: surveysectionresponse fk_2189c3_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponse fk_2189c3_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: contacttelephone fk_225a51_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT fk_225a51_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contacttelephone fk_225a51_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT fk_225a51_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_ratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: internetperformanceinresidencedescriptor fk_256049_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT fk_256049_descriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: contactpersonalidentificationdocument fk_277c31_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactpersonalidentificationdocument fk_277c31_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: contactpersonalidentificationdocument fk_277c31_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: contactpersonalidentificationdocument fk_277c31_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: contact fk_2b5c3d_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: contact fk_2b5c3d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: contact fk_2b5c3d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, studentusi, languagedescriptorid) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, studentusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: localaccount fk_32eddb_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_chartofaccount FOREIGN KEY (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccount fk_32eddb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: contactinternationaladdress fk_358692_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: contactinternationaladdress fk_358692_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactinternationaladdress fk_358692_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_operationalunitdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_programdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: contactelectronicmail fk_4007e0_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT fk_4007e0_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactelectronicmail fk_4007e0_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT fk_4007e0_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: contactlanguage fk_42109f_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT fk_42109f_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactlanguage fk_42109f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT fk_42109f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: questionformdescriptor fk_43a820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT fk_43a820_descriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: eligibilityevaluationtypedescriptor fk_445555_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilityevaluationtypedescriptor
    ADD CONSTRAINT fk_445555_descriptor FOREIGN KEY (eligibilityevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: localpayroll fk_46e5c2_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localpayroll fk_46e5c2_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localpayroll fk_46e5c2_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentprogramevaluation fk_4b1054_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramevaluation fk_4b1054_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluation fk_4b1054_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_ratingleveldescriptor FOREIGN KEY (summaryevaluationratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluation fk_4b1054_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_staff FOREIGN KEY (staffevaluatorstaffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentprogramevaluation fk_4b1054_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_studentdisciplineincidentnonoffenderassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentnonoffenderassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localcontractedstaff fk_4d9b4a_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localcontractedstaff fk_4d9b4a_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff fk_4d9b4a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: surveycategorydescriptor fk_4e55bd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT fk_4e55bd_descriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: assignmentlatestatusdescriptor fk_518b3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT fk_518b3c_descriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: supportermilitaryconnectiondescriptor fk_5d0e44_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.supportermilitaryconnectiondescriptor
    ADD CONSTRAINT fk_5d0e44_descriptor FOREIGN KEY (supportermilitaryconnectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor fk_5ee08d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT fk_5ee08d_descriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (educationorganizationid, studentusi, disabilitydescriptorid) REFERENCES edfi.studenteducationorganizationassociationdisability(educationorganizationid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: person fk_6007db_sourcesystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT fk_6007db_sourcesystemdescriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.sourcesystemdescriptor(sourcesystemdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: surveyquestionmatrix fk_64d76d_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT fk_64d76d_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_staff FOREIGN KEY (responsibleteacherstaffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: contactaddressperiod fk_6b884f_contactaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddressperiod
    ADD CONSTRAINT fk_6b884f_contactaddress FOREIGN KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.contactaddress(contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: financialcollectiondescriptor fk_6dc716_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT fk_6dc716_descriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: funddimensionreportingtag fk_7062bd_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_funddimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: funddimensionreportingtag fk_7062bd_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: contactaddress fk_720058_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: contactaddress fk_720058_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactaddress fk_720058_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: contactaddress fk_720058_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: descriptormappingmodelentity fk_7433b4_descriptormapping; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_descriptormapping FOREIGN KEY (mappednamespace, mappedvalue, namespace, value) REFERENCES edfi.descriptormapping(mappednamespace, mappedvalue, namespace, value) ON DELETE CASCADE;


--
-- Name: descriptormappingmodelentity fk_7433b4_modelentitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_modelentitydescriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.modelentitydescriptor(modelentitydescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: programevaluationelement fk_784616_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT fk_784616_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelement fk_784616_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT fk_784616_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: internetaccesstypeinresidencedescriptor fk_8007d5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT fk_8007d5_descriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_studentsectionattendanceevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_studentsectionattendanceevent FOREIGN KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionattendanceevent(attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_chartofaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicatorperiod fk_8486ae_educationorganizationindicator; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT fk_8486ae_educationorganizationindicator FOREIGN KEY (educationorganizationid, indicatordescriptorid) REFERENCES edfi.educationorganizationindicator(educationorganizationid, indicatordescriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_enrollmenttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_enrollmenttypedescriptor FOREIGN KEY (enrollmenttypedescriptorid) REFERENCES edfi.enrollmenttypedescriptor(enrollmenttypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor1 FOREIGN KEY (nextyeargradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school1 FOREIGN KEY (nextyearschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolchoicebasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolchoicebasisdescriptor FOREIGN KEY (schoolchoicebasisdescriptorid) REFERENCES edfi.schoolchoicebasisdescriptor(schoolchoicebasisdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: modelentitydescriptor fk_88479e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT fk_88479e_descriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_functiondimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyresponse fk_8d6383_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi);


--
-- Name: surveyresponse fk_8d6383_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponse fk_8d6383_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyresponse fk_8d6383_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_barriertointernetaccessinresidencedescriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.barriertointernetaccessinresidencedescriptor(barriertointernetaccessinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetaccesstypeinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetaccesstypeinresidencedescriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.internetaccesstypeinresidencedescriptor(internetaccesstypeinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetperformanceinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetperformanceinresidencedescriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.internetperformanceinresidencedescriptor(internetperformanceinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceaccessdescriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.primarylearningdeviceaccessdescriptor(primarylearningdeviceaccessdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceawayfromschooldescriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.primarylearningdeviceawayfromschooldescriptor(primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceproviderdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceproviderdescriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.primarylearningdeviceproviderdescriptor(primarylearningdeviceproviderdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studenteducationorganizationassociation fk_8e1257_supportermilitaryconnectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_supportermilitaryconnectiondescriptor FOREIGN KEY (supportermilitaryconnectiondescriptorid) REFERENCES edfi.supportermilitaryconnectiondescriptor(supportermilitaryconnectiondescriptorid);


--
-- Name: ideapartdescriptor fk_8e5a99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ideapartdescriptor
    ADD CONSTRAINT fk_8e5a99_descriptor FOREIGN KEY (ideapartdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: submissionstatusdescriptor fk_8e9244_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT fk_8e9244_descriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: accounttypedescriptor fk_8f249f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT fk_8f249f_descriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: contactothername fk_91b095_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT fk_91b095_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactothername fk_91b095_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT fk_91b095_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.studenteducationorganizationassociationaddress(educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: studentsectionassociationprogram fk_990204_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT fk_990204_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentsectionassociationprogram fk_990204_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT fk_990204_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_assessmentscorerangelearningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_assessmentscorerangelearningstandard FOREIGN KEY (assessmentidentifier, namespace, scorerangeid) REFERENCES edfi.assessmentscorerangelearningstandard(assessmentidentifier, namespace, scorerangeid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveycourseassociation fk_9f1246_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: surveycourseassociation fk_9f1246_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: programevaluationperioddescriptor fk_9f3c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationperioddescriptor
    ADD CONSTRAINT fk_9f3c51_descriptor FOREIGN KEY (programevaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentusi, studentcharacteristicdescriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceproviderdescriptor fk_a1f277_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT fk_a1f277_descriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: ancestryethnicorigindescriptor fk_a21217_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT fk_a21217_descriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffancestryethnicorigin fk_a4a6ae_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: staffancestryethnicorigin fk_a4a6ae_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: programevaluationobjective fk_a53c6c_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjective
    ADD CONSTRAINT fk_a53c6c_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, studentusi, indicatorname) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, studentusi, indicatorname) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganizationassociationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganizationassociationtypedescriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.educationorganizationassociationtypedescriptor(educationorganizationassociationtypedescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: reportingtagdescriptor fk_b173f4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT fk_b173f4_descriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (staffusi, languagedescriptorid) REFERENCES edfi.stafflanguage(staffusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_projectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localactual fk_b6310e_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localactual fk_b6310e_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_balancesheetdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyleveldescriptor fk_bce725_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT fk_bce725_descriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: eligibilitydelayreasondescriptor fk_be0937_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilitydelayreasondescriptor
    ADD CONSTRAINT fk_be0937_descriptor FOREIGN KEY (eligibilitydelayreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: surveysectionassociation fk_c16804_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: surveysectionassociation fk_c16804_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_assignmentlatestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_assignmentlatestatusdescriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.assignmentlatestatusdescriptor(assignmentlatestatusdescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentgradebookentry fk_c2efaa_submissionstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_submissionstatusdescriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.submissionstatusdescriptor(submissionstatusdescriptorid);


--
-- Name: localaccountreportingtag fk_c38935_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: localaccountreportingtag fk_c38935_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceaccessdescriptor fk_cbfe5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT fk_cbfe5d_descriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: barriertointernetaccessinresidencedescriptor fk_cce75a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT fk_cce75a_descriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoicebasisdescriptor fk_ccfb43_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoicebasisdescriptor
    ADD CONSTRAINT fk_ccfb43_descriptor FOREIGN KEY (schoolchoicebasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptsection fk_cd2ae9_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT fk_cd2ae9_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptsection fk_cd2ae9_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT fk_cd2ae9_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyquestionresponsevalue fk_d047f5_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT fk_d047f5_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationobjectiveprogramevaluationlevel fk_d2730d_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveprogramevaluationlevel
    ADD CONSTRAINT fk_d2730d_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationobjectiveprogramevaluationlevel fk_d2730d_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveprogramevaluationlevel
    ADD CONSTRAINT fk_d2730d_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: enrollmenttypedescriptor fk_d3c777_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.enrollmenttypedescriptor
    ADD CONSTRAINT fk_d3c777_descriptor FOREIGN KEY (enrollmenttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_ratingleveldescriptor FOREIGN KEY (evaluationobjectiveratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationassociationtypedescriptor fk_d9f485_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT fk_d9f485_descriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) REFERENCES edfi.graduationplancreditsbycourse(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) ON DELETE CASCADE;


--
-- Name: evaluationdelayreasondescriptor fk_db2c46_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationdelayreasondescriptor
    ADD CONSTRAINT fk_db2c46_descriptor FOREIGN KEY (evaluationdelayreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicator fk_dde098_indicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatordescriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.indicatordescriptor(indicatordescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorgroupdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorgroupdescriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.indicatorgroupdescriptor(indicatorgroupdescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorleveldescriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.indicatorleveldescriptor(indicatorleveldescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: section fk_dfca5d_sectiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_sectiontypedescriptor FOREIGN KEY (sectiontypedescriptorid) REFERENCES edfi.sectiontypedescriptor(sectiontypedescriptorid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: indicatorgroupdescriptor fk_e0f6fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT fk_e0f6fe_descriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: studentcontactassociation fk_e2733e_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi);


--
-- Name: studentcontactassociation fk_e2733e_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentcontactassociation fk_e2733e_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyprogramassociation fk_e3e5a4_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: surveyprogramassociation fk_e3e5a4_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: coursetranscriptcourseprogram fk_e4a585_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcourseprogram
    ADD CONSTRAINT fk_e4a585_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcourseprogram fk_e4a585_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcourseprogram
    ADD CONSTRAINT fk_e4a585_program FOREIGN KEY (courseeducationorganizationid, courseprogramname, courseprogramtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysection fk_e5572a_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT fk_e5572a_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: ratingleveldescriptor fk_e67dd1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ratingleveldescriptor
    ADD CONSTRAINT fk_e67dd1_descriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: programevaluationlevel fk_e78c97_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationlevel
    ADD CONSTRAINT fk_e78c97_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationlevel fk_e78c97_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationlevel
    ADD CONSTRAINT fk_e78c97_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localencumbrance fk_ea526f_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localencumbrance fk_ea526f_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyquestionresponse fk_eddd02_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse fk_eddd02_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: indicatordescriptor fk_ee0bbf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT fk_ee0bbf_descriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_school FOREIGN KEY (reportedschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseacademicsubject fk_ee5caf_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT fk_ee5caf_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: courseacademicsubject fk_ee5caf_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT fk_ee5caf_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: programevaluation fk_f3a20e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programevaluation fk_f3a20e_programevaluationperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_programevaluationperioddescriptor FOREIGN KEY (programevaluationperioddescriptorid) REFERENCES edfi.programevaluationperioddescriptor(programevaluationperioddescriptorid);


--
-- Name: programevaluation fk_f3a20e_programevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_programevaluationtypedescriptor FOREIGN KEY (programevaluationtypedescriptorid) REFERENCES edfi.programevaluationtypedescriptor(programevaluationtypedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: sourcesystemdescriptor fk_f71783_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT fk_f71783_descriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationexitreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationexitreasondescriptor FOREIGN KEY (specialeducationexitreasondescriptorid) REFERENCES edfi.specialeducationexitreasondescriptor(specialeducationexitreasondescriptorid);


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: programevaluationtypedescriptor fk_fb3d63_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationtypedescriptor
    ADD CONSTRAINT fk_fb3d63_descriptor FOREIGN KEY (programevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_eligibilitydelayreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_eligibilitydelayreasondescriptor FOREIGN KEY (eligibilitydelayreasondescriptorid) REFERENCES edfi.eligibilitydelayreasondescriptor(eligibilitydelayreasondescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_eligibilityevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_eligibilityevaluationtypedescriptor FOREIGN KEY (eligibilityevaluationtypedescriptorid) REFERENCES edfi.eligibilityevaluationtypedescriptor(eligibilityevaluationtypedescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_evaluationdelayreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_evaluationdelayreasondescriptor FOREIGN KEY (evaluationdelayreasondescriptorid) REFERENCES edfi.evaluationdelayreasondescriptor(evaluationdelayreasondescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_ideapartdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_ideapartdescriptor FOREIGN KEY (ideapartdescriptorid) REFERENCES edfi.ideapartdescriptor(ideapartdescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: objectdimensionreportingtag fk_fda3b7_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_objectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- Name: candidatetelephone fk_09c531_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatetelephone fk_09c531_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: performanceevaluation fk_15d685_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: performanceevaluation fk_15d685_evaluationperioddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_evaluationperioddescriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES tpdm.evaluationperioddescriptor(evaluationperioddescriptorid);


--
-- Name: performanceevaluation fk_15d685_performanceevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_performanceevaluationtypedescriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES tpdm.performanceevaluationtypedescriptor(performanceevaluationtypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: performanceevaluation fk_15d685_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: candidateaddress fk_160329_addresstypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: candidateaddress fk_160329_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateaddress fk_160329_localedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: candidateaddress fk_160329_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: evaluation fk_163e44_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: evaluation fk_163e44_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: candidateaddressperiod fk_17e793_candidateaddress; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT fk_17e793_candidateaddress FOREIGN KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES tpdm.candidateaddress(candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogram fk_195935_accreditationstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_accreditationstatusdescriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES tpdm.accreditationstatusdescriptor(accreditationstatusdescriptorid);


--
-- Name: educatorpreparationprogram fk_195935_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educatorpreparationprogram fk_195935_programtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: schoolextension fk_2199be_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: schoolextension fk_2199be_school; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_disabilitydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: candidatedisability fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 fk_2501c4_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT fk_2501c4_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: performanceevaluationtypedescriptor fk_2ba831_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT fk_2ba831_descriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidatelanguageuse fk_3f00b1_candidatelanguage; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_candidatelanguage FOREIGN KEY (candidateidentifier, languagedescriptorid) REFERENCES tpdm.candidatelanguage(candidateidentifier, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: candidatelanguageuse fk_3f00b1_languageusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: certificationroutedescriptor fk_40b601_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT fk_40b601_descriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementrating fk_4479ea_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationelementratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelementratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES tpdm.evaluationelementratingleveldescriptor(evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: candidateothername fk_4521bb_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateothername fk_4521bb_othernametypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: performanceevaluationratingreviewer fk_477526_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingreviewer fk_477526_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratingstatusdescriptor fk_4b53ea_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT fk_4b53ea_descriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponsepersontargetassociation fk_520027_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponsepersontargetassociation fk_520027_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: genderdescriptor fk_554e4f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT fk_554e4f_descriptor FOREIGN KEY (genderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationgradelevel fk_5b9d31_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: performanceevaluationgradelevel fk_5b9d31_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingleveldescriptor fk_5fb2ad_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT fk_5fb2ad_descriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewerreceivedtraining fk_608112_evaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_608112_evaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.evaluationratingreviewer(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: rubricdimension fk_643c81_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: rubricdimension fk_643c81_rubricratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_rubricratingleveldescriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES tpdm.rubricratingleveldescriptor(rubricratingleveldescriptorid);


--
-- Name: evaluationtypedescriptor fk_67cd19_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT fk_67cd19_descriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: accreditationstatusdescriptor fk_69de81_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT fk_69de81_descriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_racedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: performanceevaluationratingreviewerreceivedtraining fk_6e6517_performanceevaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_6e6517_performanceevaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.performanceevaluationratingreviewer(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_candidatedisability; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_candidatedisability FOREIGN KEY (candidateidentifier, disabilitydescriptorid) REFERENCES tpdm.candidatedisability(candidateidentifier, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: credentialextension fk_6fae52_certificationroutedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_certificationroutedescriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES tpdm.certificationroutedescriptor(certificationroutedescriptorid);


--
-- Name: credentialextension fk_6fae52_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialextension fk_6fae52_credentialstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credentialstatusdescriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES tpdm.credentialstatusdescriptor(credentialstatusdescriptorid);


--
-- Name: credentialextension fk_6fae52_educatorroledescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_educatorroledescriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES tpdm.educatorroledescriptor(educatorroledescriptorid);


--
-- Name: credentialextension fk_6fae52_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratinglevel fk_7052f8_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratinglevel fk_7052f8_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: credentialstudentacademicrecord fk_73e151_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstudentacademicrecord fk_73e151_studentacademicrecord; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_coteachingstyleobserveddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_coteachingstyleobserveddescriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES tpdm.coteachingstyleobserveddescriptor(coteachingstyleobserveddescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluationratingleveldescriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES tpdm.performanceevaluationratingleveldescriptor(performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: englishlanguageexamdescriptor fk_76d6e8_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT fk_76d6e8_descriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_objectiveratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_objectiveratingleveldescriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES tpdm.objectiveratingleveldescriptor(objectiveratingleveldescriptorid);


--
-- Name: evaluationperioddescriptor fk_83ff2a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT fk_83ff2a_descriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationelementratingleveldescriptor fk_86df6c_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT fk_86df6c_descriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratinglevel fk_90ed3d_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratinglevel fk_90ed3d_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstatusdescriptor fk_91080a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT fk_91080a_descriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coteachingstyleobserveddescriptor fk_932c9a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT fk_932c9a_descriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: financialaid fk_a465f2_aidtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_aidtypedescriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES tpdm.aidtypedescriptor(aidtypedescriptorid);


--
-- Name: financialaid fk_a465f2_student; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: candidate fk_b2452d_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidate fk_b2452d_englishlanguageexamdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_englishlanguageexamdescriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES tpdm.englishlanguageexamdescriptor(englishlanguageexamdescriptorid);


--
-- Name: candidate fk_b2452d_genderdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_genderdescriptor FOREIGN KEY (genderdescriptorid) REFERENCES tpdm.genderdescriptor(genderdescriptorid);


--
-- Name: candidate fk_b2452d_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: candidate fk_b2452d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor1; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor1 FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: educatorroledescriptor fk_bc8b94_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT fk_bc8b94_descriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingstatusdescriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES tpdm.evaluationratingstatusdescriptor(evaluationratingstatusdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_section; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: evaluationelementratingresult fk_c5877a_evaluationelementrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_evaluationelementrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationelementrating(educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratingresult fk_c5877a_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: eppprogrampathwaydescriptor fk_cde665_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT fk_cde665_descriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: objectiveratingleveldescriptor fk_d49b1f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT fk_d49b1f_descriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: aidtypedescriptor fk_d6106a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT fk_d6106a_descriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_surveysectionresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: candidatelanguage fk_e5239b_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatelanguage fk_e5239b_languagedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor fk_ed7e01_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT fk_ed7e01_descriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: rubricratingleveldescriptor fk_f24609_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT fk_f24609_descriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponseextension fk_fa906d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponseextension fk_fa906d_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_eppprogrampathwaydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_eppprogrampathwaydescriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES tpdm.eppprogrampathwaydescriptor(eppprogrampathwaydescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- PostgreSQL database dump complete
--

