--
-- PostgreSQL database dump
--

-- Dumped from database version 13.13 (Debian 13.13-1.pgdg120+1)
-- Dumped by pg_dump version 14.10 (Ubuntu 14.10-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: changes; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA changes;


ALTER SCHEMA changes OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tpdm;


ALTER SCHEMA tpdm OWNER TO postgres;

--
-- Name: tracked_changes_edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_edfi;


ALTER SCHEMA tracked_changes_edfi OWNER TO postgres;

--
-- Name: tracked_changes_tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_tpdm;


ALTER SCHEMA tracked_changes_tpdm OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: getmaxchangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.getmaxchangeversion() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
DECLARE
	result bigint;
BEGIN
    SELECT last_value FROM changes.ChangeVersionSequence INTO result;
    RETURN result;
END
$$;


ALTER FUNCTION changes.getmaxchangeversion() OWNER TO postgres;

--
-- Name: updatechangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.updatechangeversion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    new.ChangeVersion := nextval('changes.ChangeVersionSequence');
    RETURN new;
END;
$$;


ALTER FUNCTION changes.updatechangeversion() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityorganizationid
            AND targeteducationorganizationid = OLD.communityorganizationid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityorganizationid AS SourceEducationOrganizationId, 
            NEW.communityorganizationid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid 
                    AND OLD.communityorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.communityproviderid
            ) as targets
        WHERE sources.communityproviderid = targets.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityproviderid
            AND targeteducationorganizationid = OLD.communityproviderid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityproviderid AS SourceEducationOrganizationId, 
            NEW.communityproviderid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the communityorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.communityproviderid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid  
                AND NEW.communityorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.communityproviderid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.communityproviderid
        ) as targets
    WHERE sources.communityproviderid = targets.communityproviderid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid  
                    AND OLD.communityorganizationid IS NOT NULL 
                    AND (NEW.communityorganizationid IS NULL OR OLD.communityorganizationid <> NEW.communityorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the communityorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.communityproviderid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.communityproviderid = d2.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid
                AND ((OLD.communityorganizationid IS NULL AND NEW.communityorganizationid IS NOT NULL)
                OR OLD.communityorganizationid <> NEW.communityorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.communityproviderid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_update() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationorganizationnetworkid
            AND targeteducationorganizationid = OLD.educationorganizationnetworkid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationorganizationnetworkid AS SourceEducationOrganizationId, 
            NEW.educationorganizationnetworkid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.educationservicecenterid
            ) as targets
        WHERE sources.educationservicecenterid = targets.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationservicecenterid
            AND targeteducationorganizationid = OLD.educationservicecenterid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationservicecenterid AS SourceEducationOrganizationId, 
            NEW.educationservicecenterid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.educationservicecenterid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.educationservicecenterid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.educationservicecenterid
        ) as targets
    WHERE sources.educationservicecenterid = targets.educationservicecenterid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.educationservicecenterid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.educationservicecenterid = d2.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.educationservicecenterid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_update() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid 
                    AND OLD.parentlocaleducationagencyid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid 
                    AND OLD.educationservicecenterid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.localeducationagencyid
            ) as targets
        WHERE sources.localeducationagencyid = targets.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.localeducationagencyid
            AND targeteducationorganizationid = OLD.localeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.localeducationagencyid AS SourceEducationOrganizationId, 
            NEW.localeducationagencyid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parentlocaleducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid  
                AND NEW.parentlocaleducationagencyid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the educationservicecenterid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid  
                AND NEW.educationservicecenterid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.localeducationagencyid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.localeducationagencyid
        ) as targets
    WHERE sources.localeducationagencyid = targets.localeducationagencyid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid  
                    AND OLD.parentlocaleducationagencyid IS NOT NULL 
                    AND (NEW.parentlocaleducationagencyid IS NULL OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid  
                    AND OLD.educationservicecenterid IS NOT NULL 
                    AND (NEW.educationservicecenterid IS NULL OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parentlocaleducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the educationservicecenterid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.localeducationagencyid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.localeducationagencyid = d2.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid
                AND ((OLD.parentlocaleducationagencyid IS NULL AND NEW.parentlocaleducationagencyid IS NOT NULL)
                OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid
                AND ((OLD.educationservicecenterid IS NULL AND NEW.educationservicecenterid IS NOT NULL)
                OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.localeducationagencyid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_update() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid 
                    AND OLD.parenteducationorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.organizationdepartmentid
            ) as targets
        WHERE sources.organizationdepartmentid = targets.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.organizationdepartmentid
            AND targeteducationorganizationid = OLD.organizationdepartmentid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_delete() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.organizationdepartmentid AS SourceEducationOrganizationId, 
            NEW.organizationdepartmentid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parenteducationorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.organizationdepartmentid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid  
                AND NEW.parenteducationorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.organizationdepartmentid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.organizationdepartmentid
        ) as targets
    WHERE sources.organizationdepartmentid = targets.organizationdepartmentid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_insert() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid  
                    AND OLD.parenteducationorganizationid IS NOT NULL 
                    AND (NEW.parenteducationorganizationid IS NULL OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parenteducationorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.organizationdepartmentid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.organizationdepartmentid = d2.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid
                AND ((OLD.parenteducationorganizationid IS NULL AND NEW.parenteducationorganizationid IS NOT NULL)
                OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.organizationdepartmentid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_update() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.postsecondaryinstitutionid
            AND targeteducationorganizationid = OLD.postsecondaryinstitutionid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.postsecondaryinstitutionid AS SourceEducationOrganizationId, 
            NEW.postsecondaryinstitutionid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid 
                    AND OLD.localeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.schoolid
            ) as targets
        WHERE sources.schoolid = targets.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.schoolid
            AND targeteducationorganizationid = OLD.schoolid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_delete() OWNER TO postgres;

--
-- Name: edfi_school_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.schoolid AS SourceEducationOrganizationId, 
            NEW.schoolid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the localeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.schoolid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid  
                AND NEW.localeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.schoolid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.schoolid
        ) as targets
    WHERE sources.schoolid = targets.schoolid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid  
                    AND OLD.localeducationagencyid IS NOT NULL 
                    AND (NEW.localeducationagencyid IS NULL OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the localeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.schoolid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.schoolid = d2.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid
                AND ((OLD.localeducationagencyid IS NULL AND NEW.localeducationagencyid IS NOT NULL)
                OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.schoolid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_update() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.stateeducationagencyid
            AND targeteducationorganizationid = OLD.stateeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.stateeducationagencyid AS SourceEducationOrganizationId, 
            NEW.stateeducationagencyid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AbsenceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AbsenceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AbsenceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicHonorCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicHonorCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicHonorCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academicsubjectdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicSubjectDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicSubjectDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicSubjectDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() OWNER TO postgres;

--
-- Name: academicweek_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicweek_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.academicweek(
        oldschoolid, oldweekidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.weekidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicweek_deleted() OWNER TO postgres;

--
-- Name: accommodationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccommodationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccommodationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccommodationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() OWNER TO postgres;

--
-- Name: accountabilityrating_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accountabilityrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.accountabilityrating(
        oldeducationorganizationid, oldratingtitle, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.ratingtitle, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accountabilityrating_deleted() OWNER TO postgres;

--
-- Name: accounttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccountTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccountTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccountTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: achievementcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AchievementCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AchievementCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AchievementCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdditionalCreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdditionalCreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdditionalCreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: addresstypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AddressTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AddressTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AddressTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrationEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrationEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrationEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrativeFundingControlDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrativeFundingControlDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrativeFundingControlDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AncestryEthnicOriginDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AncestryEthnicOriginDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AncestryEthnicOriginDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() OWNER TO postgres;

--
-- Name: assessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessment(
        oldassessmentidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessment_deleted() OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitem_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitem_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentitem(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitem_deleted() OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentReportingMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentReportingMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentReportingMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentscorerangelearningstandard(
        oldassessmentidentifier, oldnamespace, oldscorerangeid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.scorerangeid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() OWNER TO postgres;

--
-- Name: assignmentlatestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssignmentLateStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssignmentLateStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssignmentLateStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attemptstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttemptStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttemptStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttemptStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttendanceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttendanceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttendanceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: balancesheetdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.balancesheetdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BarrierToInternetAccessInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BarrierToInternetAccessInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BarrierToInternetAccessInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: behaviordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BehaviorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BehaviorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BehaviorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() OWNER TO postgres;

--
-- Name: bellschedule_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.bellschedule_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.bellschedule(
        oldbellschedulename, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.bellschedulename, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.bellschedule_deleted() OWNER TO postgres;

--
-- Name: calendar_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendar_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendar(
        oldcalendarcode, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendar_deleted() OWNER TO postgres;

--
-- Name: calendardate_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendardate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendardate(
        oldcalendarcode, olddate, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendardate_deleted() OWNER TO postgres;

--
-- Name: calendareventdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarEventDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarEventDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarEventDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() OWNER TO postgres;

--
-- Name: calendartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: careerpathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CareerPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CareerPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CareerPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterApprovalAgencyTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterApprovalAgencyTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterApprovalAgencyTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: charterstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: chartofaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.chartofaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.chartofaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.chartofaccount_deleted() OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CitizenshipStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CitizenshipStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CitizenshipStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: classperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classperiodname, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_deleted() OWNER TO postgres;

--
-- Name: classperiod_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid, 
        newclassperiodname, newschoolid, 
        id, changeversion)
    VALUES (
        old.classperiodname, old.schoolid, 
        new.classperiodname, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_keychg() OWNER TO postgres;

--
-- Name: classroompositiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ClassroomPositionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ClassroomPositionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ClassroomPositionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() OWNER TO postgres;

--
-- Name: cohort_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohort_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.cohort(
        oldcohortidentifier, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.cohortidentifier, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohort_deleted() OWNER TO postgres;

--
-- Name: cohortscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohorttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortYearTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortYearTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortYearTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: communityproviderlicense_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.communityproviderlicense(
        oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization,
        id, discriminator, changeversion)
    VALUES (
        OLD.communityproviderid, OLD.licenseidentifier, OLD.licensingorganization, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() OWNER TO postgres;

--
-- Name: competencyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CompetencyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CompetencyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CompetencyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: competencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    INSERT INTO tracked_changes_edfi.competencyobjective(
        oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyobjective_deleted() OWNER TO postgres;

--
-- Name: contacttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContactTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContactTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContactTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: contentclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContentClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContentClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContentClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContinuationOfServicesReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContinuationOfServicesReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContinuationOfServicesReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: costratedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.costratedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CostRateDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CostRateDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CostRateDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.costratedescriptor_deleted() OWNER TO postgres;

--
-- Name: countrydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.countrydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CountryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CountryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CountryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.countrydescriptor_deleted() OWNER TO postgres;

--
-- Name: course_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.course_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.course(
        oldcoursecode, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.course_deleted() OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseAttemptResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseAttemptResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseAttemptResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseDefinedByDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseDefinedByDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseDefinedByDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseGPAApplicabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseGPAApplicabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseGPAApplicabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseLevelCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseLevelCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseLevelCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: courseoffering_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_deleted() OWNER TO postgres;

--
-- Name: courseoffering_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_keychg() OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseRepeatCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseRepeatCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseRepeatCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: coursetranscript_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursetranscript_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.courseattemptresultdescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.coursetranscript(
        oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.courseattemptresultdescriptorid, dj0.namespace, dj0.codevalue, OLD.coursecode, OLD.courseeducationorganizationid, OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj1.studentuniqueid, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursetranscript_deleted() OWNER TO postgres;

--
-- Name: credential_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credential_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.stateofissuestateabbreviationdescriptorid;

    INSERT INTO tracked_changes_edfi.credential(
        oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.credentialidentifier, OLD.stateofissuestateabbreviationdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credential_deleted() OWNER TO postgres;

--
-- Name: credentialfielddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialFieldDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialFieldDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialFieldDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: creditcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: credittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CTEProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CTEProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CTEProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: curriculumuseddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CurriculumUsedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CurriculumUsedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CurriculumUsedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() OWNER TO postgres;

--
-- Name: deliverymethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DeliveryMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DeliveryMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DeliveryMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: descriptormapping_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.descriptormapping_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptormapping(
        oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.mappednamespace, OLD.mappedvalue, OLD.namespace, OLD.value, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.descriptormapping_deleted() OWNER TO postgres;

--
-- Name: diagnosisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiagnosisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiagnosisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiagnosisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomaleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomatypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDeterminationSourceTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDeterminationSourceTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDeterminationSourceTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineaction_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineaction_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.disciplineaction(
        olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.disciplineactionidentifier, OLD.disciplinedate, OLD.studentusi, dj0.studentuniqueid, OLD.responsibilityschoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineaction_deleted() OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineActionLengthDifferenceReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineActionLengthDifferenceReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineActionLengthDifferenceReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplinedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineincident_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincident_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.disciplineincident(
        oldincidentidentifier, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincident_deleted() OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineIncidentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineIncidentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineIncidentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationalEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationalEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationalEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationcontent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationcontent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationcontent(
        oldcontentidentifier,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.contentidentifier, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationcontent_deleted() OWNER TO postgres;

--
-- Name: educationorganization_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganization_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganization(
        oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganization_deleted() OWNER TO postgres;

--
-- Name: educationorganizationassociationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationAssociationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationAssociationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationAssociationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionass_e670ae_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationinterventionprescriptionassociation(
        oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptioneducationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationnetworkassociation(
        oldeducationorganizationnetworkid, oldmembereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationnetworkid, OLD.membereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationpeerassociation(
        oldeducationorganizationid, oldpeereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.peereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() OWNER TO postgres;

--
-- Name: educationplandescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationPlanDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationPlanDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationPlanDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ElectronicMailTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ElectronicMailTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ElectronicMailTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: employmentstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EmploymentStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EmploymentStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EmploymentStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryGradeLevelReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryGradeLevelReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryGradeLevelReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: entrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EventCircumstanceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EventCircumstanceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EventCircumstanceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ExitWithdrawTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ExitWithdrawTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ExitWithdrawTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: feederschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.feederschoolassociation(
        oldbegindate, oldfeederschoolid, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.feederschoolid, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() OWNER TO postgres;

--
-- Name: financialcollectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.FinancialCollectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.FinancialCollectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.FinancialCollectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: functiondimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.functiondimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.functiondimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.functiondimension_deleted() OWNER TO postgres;

--
-- Name: funddimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.funddimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.funddimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.funddimension_deleted() OWNER TO postgres;

--
-- Name: generalstudentprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.generalstudentprogramassociation(
        oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() OWNER TO postgres;

--
-- Name: grade_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.gradetypedescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, OLD.gradingperiodsequence, OLD.gradingperiodschoolyear, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_deleted() OWNER TO postgres;

--
-- Name: grade_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    ij1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
    ij2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.gradetypedescriptorid;
    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;
    SELECT INTO ij1 * FROM edfi.descriptor j1 WHERE descriptorid = new.gradingperioddescriptorid;
    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;
    SELECT INTO ij2 * FROM edfi.student j2 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodsequence, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.gradetypedescriptorid, dj0.namespace, dj0.codevalue, old.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, old.gradingperiodsequence, old.gradingperiodschoolyear, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj2.studentuniqueid, 
        new.begindate, new.gradetypedescriptorid, ij0.namespace, ij0.codevalue, new.gradingperioddescriptorid, ij1.namespace, ij1.codevalue, new.gradingperiodsequence, new.gradingperiodschoolyear, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij2.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_keychg() OWNER TO postgres;

--
-- Name: gradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_deleted() OWNER TO postgres;

--
-- Name: gradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace, 
        newgradebookentryidentifier, newnamespace, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, 
        new.gradebookentryidentifier, new.namespace, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_keychg() OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradebookEntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradebookEntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradebookEntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradeleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradePointAverageTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradePointAverageTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradePointAverageTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradingperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    INSERT INTO tracked_changes_edfi.gradingperiod(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldperiodsequence, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.periodsequence, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperiod_deleted() OWNER TO postgres;

--
-- Name: gradingperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradingPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradingPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradingPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: graduationplan_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplan_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.graduationplantypedescriptorid;

    INSERT INTO tracked_changes_edfi.graduationplan(
        oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.graduationplantypedescriptorid, dj0.namespace, dj0.codevalue, OLD.graduationschoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplan_deleted() OWNER TO postgres;

--
-- Name: graduationplantypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GraduationPlanTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GraduationPlanTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GraduationPlanTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GunFreeSchoolsActReportingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GunFreeSchoolsActReportingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GunFreeSchoolsActReportingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessPrimaryNighttimeResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessPrimaryNighttimeResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessPrimaryNighttimeResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IdentificationDocumentUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IdentificationDocumentUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IdentificationDocumentUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() OWNER TO postgres;

--
-- Name: incidentlocationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IncidentLocationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IncidentLocationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IncidentLocationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorGroupDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorGroupDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorGroupDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InstitutionTelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InstitutionTelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InstitutionTelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: interactivitystyledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InteractivityStyleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InteractivityStyleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InteractivityStyleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessTypeInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessTypeInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessTypeInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetPerformanceInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetPerformanceInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetPerformanceInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: intervention_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.intervention_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.intervention(
        oldeducationorganizationid, oldinterventionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.intervention_deleted() OWNER TO postgres;

--
-- Name: interventionclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionEffectivenessRatingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionEffectivenessRatingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionEffectivenessRatingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventionprescription_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionprescription_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionprescription(
        oldeducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionprescription_deleted() OWNER TO postgres;

--
-- Name: interventionstudy_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionstudy_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionstudy(
        oldeducationorganizationid, oldinterventionstudyidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionstudyidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionstudy_deleted() OWNER TO postgres;

--
-- Name: languagedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languagedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languagedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageInstructionProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageInstructionProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageInstructionProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() OWNER TO postgres;

--
-- Name: learningobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningobjective(
        oldlearningobjectiveid, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.learningobjectiveid, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningobjective_deleted() OWNER TO postgres;

--
-- Name: learningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandard(
        oldlearningstandardid,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.learningstandardid, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandard_deleted() OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandardequivalenceassociation(
        oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.sourcelearningstandardid, OLD.targetlearningstandardid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardEquivalenceStrengthDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardEquivalenceStrengthDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardEquivalenceStrengthDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: levelofeducationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LevelOfEducationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LevelOfEducationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LevelOfEducationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LimitedEnglishProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LimitedEnglishProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LimitedEnglishProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: localaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localaccount_deleted() OWNER TO postgres;

--
-- Name: localactual_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localactual_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localactual(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localactual_deleted() OWNER TO postgres;

--
-- Name: localbudget_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localbudget_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localbudget(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localbudget_deleted() OWNER TO postgres;

--
-- Name: localcontractedstaff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localcontractedstaff(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() OWNER TO postgres;

--
-- Name: localedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocaleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocaleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocaleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localedescriptor_deleted() OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocalEducationAgencyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocalEducationAgencyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocalEducationAgencyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: localencumbrance_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localencumbrance_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localencumbrance(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localencumbrance_deleted() OWNER TO postgres;

--
-- Name: localpayroll_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localpayroll_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localpayroll(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localpayroll_deleted() OWNER TO postgres;

--
-- Name: location_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classroomidentificationcode, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_deleted() OWNER TO postgres;

--
-- Name: location_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid, 
        newclassroomidentificationcode, newschoolid, 
        id, changeversion)
    VALUES (
        old.classroomidentificationcode, old.schoolid, 
        new.classroomidentificationcode, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_keychg() OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MagnetSpecialProgramEmphasisSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MagnetSpecialProgramEmphasisSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MediumOfInstructionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MediumOfInstructionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MediumOfInstructionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MethodCreditEarnedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MethodCreditEarnedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MethodCreditEarnedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MigrantEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MigrantEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MigrantEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: modelentitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ModelEntityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ModelEntityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ModelEntityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() OWNER TO postgres;

--
-- Name: monitoreddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MonitoredDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MonitoredDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MonitoredDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: networkpurposedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NetworkPurposeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NetworkPurposeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NetworkPurposeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() OWNER TO postgres;

--
-- Name: objectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectdimension_deleted() OWNER TO postgres;

--
-- Name: objectiveassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectiveassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectiveassessment(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectiveassessment_deleted() OWNER TO postgres;

--
-- Name: oldethnicitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OldEthnicityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OldEthnicityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OldEthnicityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted() OWNER TO postgres;

--
-- Name: openstaffposition_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.openstaffposition_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.openstaffposition(
        oldeducationorganizationid, oldrequisitionnumber,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.requisitionnumber, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.openstaffposition_deleted() OWNER TO postgres;

--
-- Name: operationalstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OperationalStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OperationalStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OperationalStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: operationalunitdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.operationalunitdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() OWNER TO postgres;

--
-- Name: othernametypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OtherNameTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OtherNameTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OtherNameTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() OWNER TO postgres;

--
-- Name: parent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.parent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.parent(
        oldparentusi, oldparentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.parentusi, OLD.parentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.parent_deleted() OWNER TO postgres;

--
-- Name: parent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.parent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.parent(
        oldparentusi, oldparentuniqueid, 
        newparentusi, newparentuniqueid, 
        id, changeversion)
    VALUES (
        old.parentusi, old.parentuniqueid, 
        new.parentusi, new.parentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.parent_keychg() OWNER TO postgres;

--
-- Name: participationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationdescriptor_deleted() OWNER TO postgres;

--
-- Name: participationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceBaseConversionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceBaseConversionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceBaseConversionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: person_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.person_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_edfi.person(
        oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.person_deleted() OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PersonalInformationVerificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PersonalInformationVerificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PersonalInformationVerificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: platformtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PlatformTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PlatformTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PlatformTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: populationserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PopulationServedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PopulationServedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PopulationServedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: postingresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostingResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostingResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostingResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.postsecondaryeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.postsecondaryevent(
        oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.eventdate, OLD.postsecondaryeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryInstitutionLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryInstitutionLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryInstitutionLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAwayFromSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceProviderDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceProviderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceProviderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() OWNER TO postgres;

--
-- Name: proficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: program_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.program_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.program(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.program_deleted() OWNER TO postgres;

--
-- Name: programassignmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramAssignmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramAssignmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramAssignmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: programdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.programdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programdimension_deleted() OWNER TO postgres;

--
-- Name: programsponsordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramSponsorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramSponsorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramSponsorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() OWNER TO postgres;

--
-- Name: programtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: progressdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressdescriptor_deleted() OWNER TO postgres;

--
-- Name: progressleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: projectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.projectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.projectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.projectdimension_deleted() OWNER TO postgres;

--
-- Name: providercategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderProfitabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderProfitabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderProfitabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: publicationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PublicationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PublicationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PublicationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: questionformdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.QuestionFormDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.QuestionFormDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.QuestionFormDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() OWNER TO postgres;

--
-- Name: racedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.racedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RaceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RaceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RaceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.racedescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonexiteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonExitedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonExitedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonExitedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonNotTestedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonNotTestedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonNotTestedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() OWNER TO postgres;

--
-- Name: recognitiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RecognitionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RecognitionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RecognitionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: relationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.relationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RelationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RelationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RelationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.relationdescriptor_deleted() OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RepeatIdentifierDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RepeatIdentifierDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RepeatIdentifierDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() OWNER TO postgres;

--
-- Name: reportcard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportcard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.reportcard(
        oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodsequence, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportcard_deleted() OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReporterDescriptionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReporterDescriptionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReporterDescriptionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() OWNER TO postgres;

--
-- Name: reportingtagdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReportingTagDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReportingTagDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReportingTagDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() OWNER TO postgres;

--
-- Name: residencystatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResidencyStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResidencyStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResidencyStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: responseindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponseIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponseIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponseIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: responsibilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponsibilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponsibilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponsibilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: restraintevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restraintevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.restraintevent(
        oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.restrainteventidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restraintevent_deleted() OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RestraintEventReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RestraintEventReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RestraintEventReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResultDatatypeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResultDatatypeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResultDatatypeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: retestindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RetestIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RetestIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RetestIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceImplementStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceImplementStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceImplementStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolFoodServiceProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolFoodServiceProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolFoodServiceProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: schooltypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolyeartype_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolyeartype_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.schoolyeartype(
        oldschoolyear,
        id, changeversion)
    VALUES (
        OLD.schoolyear, 
        OLD.id, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolyeartype_deleted() OWNER TO postgres;

--
-- Name: section_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_deleted() OWNER TO postgres;

--
-- Name: section_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_keychg() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.calendarcode, old.date, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.calendarcode, new.date, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: servicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.servicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.servicedescriptor_deleted() OWNER TO postgres;

--
-- Name: session_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_deleted() OWNER TO postgres;

--
-- Name: session_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname, 
        newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.schoolid, old.schoolyear, old.sessionname, 
        new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_keychg() OWNER TO postgres;

--
-- Name: sexdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sexdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SexDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SexDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SexDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sexdescriptor_deleted() OWNER TO postgres;

--
-- Name: sourcedimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcedimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sourcedimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcedimension_deleted() OWNER TO postgres;

--
-- Name: sourcesystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SourceSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SourceSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SourceSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationSettingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationSettingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationSettingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() OWNER TO postgres;

--
-- Name: staff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.staffusi, OLD.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_deleted() OWNER TO postgres;

--
-- Name: staff_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid, 
        newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.staffusi, old.staffuniqueid, 
        new.staffusi, new.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_keychg() OWNER TO postgres;

--
-- Name: staffabsenceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.absenceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffabsenceevent(
        oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.absenceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() OWNER TO postgres;

--
-- Name: staffclassificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffClassificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffClassificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffClassificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffclassificationdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationassignmentassociation(
        oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.staffclassificationdescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationcontactassociation(
        oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contacttitle, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.employmentstatusdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationemploymentassociation(
        oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.employmentstatusdescriptorid, dj0.namespace, dj0.codevalue, OLD.hiredate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffleave_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleave_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffleaveeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffleave(
        oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.staffleaveeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleave_deleted() OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffLeaveEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffLeaveEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffLeaveEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: staffprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffprogramassociation(
        oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() OWNER TO postgres;

--
-- Name: staffschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programassignmentdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffschoolassociation(
        oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.programassignmentdescriptorid, dj0.namespace, dj0.codevalue, OLD.schoolid, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
    ij0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;
    SELECT INTO ij0 * FROM edfi.staff j0 WHERE staffusi = new.staffusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.staffusi, dj0.staffuniqueid, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.staffusi, ij0.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StateAbbreviationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StateAbbreviationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StateAbbreviationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() OWNER TO postgres;

--
-- Name: student_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.studentusi, OLD.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_deleted() OWNER TO postgres;

--
-- Name: student_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid, 
        newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.studentusi, old.studentuniqueid, 
        new.studentusi, new.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_keychg() OWNER TO postgres;

--
-- Name: studentacademicrecord_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.studentacademicrecord(
        oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj0.studentuniqueid, OLD.termdescriptorid, dj1.namespace, dj1.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() OWNER TO postgres;

--
-- Name: studentassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessment(
        oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessment_deleted() OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.educationorganizationassociationtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessmenteducationorganizationassociation(
        oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.educationorganizationassociationtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() OWNER TO postgres;

--
-- Name: studentcompetencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcompetencyobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodsequence, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.objectiveeducationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.behaviordescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentbehaviorassociation(
        oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.behaviordescriptorid, dj0.namespace, dj0.codevalue, OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationassociation(
        oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.responsibilitydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationresponsibilityassociation(
        oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.responsibilitydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, 
        newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, old.studentusi, dj0.studentuniqueid, 
        new.gradebookentryidentifier, new.namespace, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentinterventionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionassociation(
        oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.interventionidentificationcode, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentlearningobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentlearningobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentlearningobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldlearningobjectiveid, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodsequence, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.learningobjectiveid, OLD.namespace, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentlearningobjective_deleted() OWNER TO postgres;

--
-- Name: studentparentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.parent%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.parent j0 WHERE parentusi = old.parentusi;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentparentassociation(
        oldparentusi, oldparentuniqueid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.parentusi, dj0.parentuniqueid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparentassociation_deleted() OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: studentprogramattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.entrydate, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, 
        newentrydate, newschoolid, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.entrydate, old.schoolid, old.studentusi, dj0.studentuniqueid, 
        new.entrydate, new.schoolid, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.schoolid, OLD.schoolyear, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.schoolid, old.schoolyear, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.schoolid, new.schoolyear, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() OWNER TO postgres;

--
-- Name: studentsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj0.studentuniqueid, 
        new.begindate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() OWNER TO postgres;

--
-- Name: submissionstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SubmissionStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SubmissionStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SubmissionStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: survey_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.survey_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.survey(
        oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.survey_deleted() OWNER TO postgres;

--
-- Name: surveycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: surveycourseassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveycourseassociation(
        oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() OWNER TO postgres;

--
-- Name: surveyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.surveyprogramassociation(
        oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() OWNER TO postgres;

--
-- Name: surveyquestion_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestion_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestion(
        oldnamespace, oldquestioncode, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestion_deleted() OWNER TO postgres;

--
-- Name: surveyquestionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestionresponse(
        oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveyresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysection_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysection_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysection(
        oldnamespace, oldsurveyidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysection_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.namespace, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, 
        newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.namespace, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.surveyidentifier, 
        new.localcoursecode, new.namespace, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.surveyidentifier, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() OWNER TO postgres;

--
-- Name: surveysectionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtarget_730be1_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveysectionresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TechnicalSkillsAssessmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TechnicalSkillsAssessmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TechnicalSkillsAssessmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: termdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.termdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TermDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TermDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TermDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.termdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAParticipantDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAParticipantDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAParticipantDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartASchoolDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartASchoolDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartASchoolDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TribalAffiliationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TribalAffiliationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TribalAffiliationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() OWNER TO postgres;

--
-- Name: visadescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.visadescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.VisaDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.VisaDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.VisaDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.visadescriptor_deleted() OWNER TO postgres;

--
-- Name: weapondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.weapondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.WeaponDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.WeaponDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.WeaponDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.weapondescriptor_deleted() OWNER TO postgres;

--
-- Name: accreditationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccreditationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AccreditationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccreditationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: aidtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AidTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AidTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AidTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: candidate_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_tpdm.candidate(
        oldcandidateidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.candidateidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidate_deleted() OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.candidateeducatorpreparationprogramassociation(
        oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.candidateidentifier, OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() OWNER TO postgres;

--
-- Name: certificationroutedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CertificationRouteDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CertificationRouteDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CertificationRouteDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() OWNER TO postgres;

--
-- Name: coteachingstyleobserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CoteachingStyleObservedDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CoteachingStyleObservedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CoteachingStyleObservedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CredentialStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: educatorpreparationprogram_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.educatorpreparationprogram(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() OWNER TO postgres;

--
-- Name: educatorroledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducatorRoleDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EducatorRoleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducatorRoleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() OWNER TO postgres;

--
-- Name: englishlanguageexamdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EnglishLanguageExamDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EnglishLanguageExamDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EnglishLanguageExamDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() OWNER TO postgres;

--
-- Name: eppprogrampathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EPPProgramPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EPPProgramPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EPPProgramPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluation_deleted() OWNER TO postgres;

--
-- Name: evaluationelement_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelement_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelement(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelement_deleted() OWNER TO postgres;

--
-- Name: evaluationelementrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelementrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() OWNER TO postgres;

--
-- Name: evaluationelementratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationElementRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationElementRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationElementRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjective(
        oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() OWNER TO postgres;

--
-- Name: evaluationobjectiverating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjectiverating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() OWNER TO postgres;

--
-- Name: evaluationperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationrating_deleted() OWNER TO postgres;

--
-- Name: evaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationratingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: financialaid_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.financialaid_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.aidtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_tpdm.financialaid(
        oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.aidtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.begindate, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.financialaid_deleted() OWNER TO postgres;

--
-- Name: genderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GenderDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.GenderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GenderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() OWNER TO postgres;

--
-- Name: objectiveratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ObjectiveRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.ObjectiveRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ObjectiveRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluationrating(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: rubricdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.rubricdimension(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.rubricrating, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricdimension_deleted() OWNER TO postgres;

--
-- Name: rubricratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RubricRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.RubricRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RubricRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveyresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveysectionresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '7.1';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

--
-- Name: getedfistandardversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfistandardversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '4.0';
END;
$$;


ALTER FUNCTION util.getedfistandardversion() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: educationorganizationidtoeducationorganizationid; Type: TABLE; Schema: auth; Owner: postgres
--

CREATE TABLE auth.educationorganizationidtoeducationorganizationid (
    sourceeducationorganizationid integer NOT NULL,
    targeteducationorganizationid integer NOT NULL
);


ALTER TABLE auth.educationorganizationidtoeducationorganizationid OWNER TO postgres;

--
-- Name: changeversionsequence; Type: SEQUENCE; Schema: changes; Owner: postgres
--

CREATE SEQUENCE changes.changeversionsequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE changes.changeversionsequence OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparentassociation (
    parentusi integer NOT NULL,
    studentusi integer NOT NULL,
    contactpriority integer,
    contactrestrictions character varying(250),
    emergencycontactstatus boolean,
    legalguardian boolean,
    liveswith boolean,
    primarycontactstatus boolean,
    relationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentparentassociation OWNER TO postgres;

--
-- Name: TABLE studentparentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparentassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentparentassociation.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN studentparentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentparentassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentparentassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: COLUMN studentparentassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the student.';


--
-- Name: COLUMN studentparentassociation.legalguardian; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.legalguardian IS 'Indicator of whether the person is a legal guardian for the student.';


--
-- Name: COLUMN studentparentassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.liveswith IS 'Indicator of whether the student lives with the associated parent.';


--
-- Name: COLUMN studentparentassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.primarycontactstatus IS 'Indicator of whether the person is a primary parental contact for the student.';


--
-- Name: COLUMN studentparentassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student, primarily used to capture family relationships.';


--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    calendarcode character varying(60),
    classofschoolyear smallint,
    educationorganizationid integer,
    employedwhileenrolled boolean,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    fulltimeequivalency numeric(5,4),
    graduationplantypedescriptorid integer,
    graduationschoolyear smallint,
    primaryschool boolean,
    repeatgradeindicator boolean,
    residencystatusdescriptorid integer,
    schoolchoicetransfer boolean,
    schoolyear smallint,
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected high school graduation year.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: educationorganizationidtoparentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoparentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    spa.parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN edfi.studentparentassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY edorgs.sourceeducationorganizationid, spa.parentusi;


ALTER TABLE auth.educationorganizationidtoparentusi OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentparentassociation (
    oldparentusi integer NOT NULL,
    oldparentuniqueid character varying(32) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newparentusi integer,
    newparentuniqueid character varying(32),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentparentassociation OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolassociation (
    oldentrydate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newentrydate date,
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: educationorganizationidtoparentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoparentusiincludingdeletes AS
 SELECT educationorganizationidtoparentusi.sourceeducationorganizationid,
    educationorganizationidtoparentusi.parentusi
   FROM auth.educationorganizationidtoparentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldparentusi AS parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN tracked_changes_edfi.studentparentassociation spa_tc ON ((ssa.studentusi = spa_tc.oldstudentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa.parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN edfi.studentparentassociation spa ON ((ssa_tc.oldstudentusi = spa.studentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldparentusi AS parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN tracked_changes_edfi.studentparentassociation spa_tc ON ((ssa_tc.oldstudentusi = spa_tc.oldstudentusi)));


ALTER TABLE auth.educationorganizationidtoparentusiincludingdeletes OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    credentialidentifier character varying(60),
    employmenteducationorganizationid integer,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    enddate date,
    fulltimeequivalency numeric(5,4),
    orderofassignment integer,
    positiontitle character varying(100),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid integer NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    credentialidentifier character varying(60),
    department character varying(60),
    enddate date,
    fulltimeequivalency numeric(5,4),
    hourlywage money,
    offerdate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT edorgs.sourceeducationorganizationid,
    seo_assign.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assign ON ((edorgs.targeteducationorganizationid = seo_assign.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seo_empl.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((edorgs.targeteducationorganizationid = seo_empl.educationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffclassificationdescriptorid integer NOT NULL,
    oldstaffclassificationdescriptornamespace character varying(255) NOT NULL,
    oldstaffclassificationdescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newstaffclassificationdescriptorid integer,
    newstaffclassificationdescriptornamespace character varying(255),
    newstaffclassificationdescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation (
    oldeducationorganizationid integer NOT NULL,
    oldemploymentstatusdescriptorid integer NOT NULL,
    oldemploymentstatusdescriptornamespace character varying(255) NOT NULL,
    oldemploymentstatusdescriptorcodevalue character varying(50) NOT NULL,
    oldhiredate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newemploymentstatusdescriptorid integer,
    newemploymentstatusdescriptornamespace character varying(255),
    newemploymentstatusdescriptorcodevalue character varying(50),
    newhiredate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostaffusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusiincludingdeletes AS
 SELECT edorgtostaff.sourceeducationorganizationid,
    edorgtostaff.staffusi
   FROM auth.educationorganizationidtostaffusi edorgtostaff
UNION
 SELECT edorgs.sourceeducationorganizationid,
    emp_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationemploymentassociation emp_tc ON ((edorgs.targeteducationorganizationid = emp_tc.oldeducationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    assgn_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationassignmentassociation assgn_tc ON ((edorgs.targeteducationorganizationid = assgn_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusiincludingdeletes OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    ssa.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
  GROUP BY edorgs.sourceeducationorganizationid, ssa.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusiincludingdeletes AS
 SELECT educationorganizationidtostudentusi.sourceeducationorganizationid,
    educationorganizationidtostudentusi.studentusi
   FROM auth.educationorganizationidtostudentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    ssa_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)));


ALTER TABLE auth.educationorganizationidtostudentusiincludingdeletes OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: educationorganizationidtostudentusithroughresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
  GROUP BY edorgs.sourceeducationorganizationid, seora.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusithroughresponsibility OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid integer NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid integer NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating.';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the accountability rating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the accountability rating (e.g., NCLB, AEIS).';


--
-- Name: accounttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accounttypedescriptor (
    accounttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.accounttypedescriptor OWNER TO postgres;

--
-- Name: TABLE accounttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accounttypedescriptor IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN accounttypedescriptor.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accounttypedescriptor.accounttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL
);


ALTER TABLE edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: TABLE ancestryethnicorigindescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ancestryethnicorigindescriptor IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    adaptiveassessment boolean,
    assessmentcategorydescriptorid integer,
    assessmentfamily character varying(60),
    assessmentform character varying(60),
    assessmenttitle character varying(255) NOT NULL,
    assessmentversion integer,
    educationorganizationid integer,
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    revisiondate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The assessment family this assessment is a member of.';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the assessment.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid integer,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    assessmentitemuri character varying(255),
    expectedtimeassessed character varying(30),
    itemtext character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the assessment item.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for assessment item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'Learning standard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    correctresponse boolean,
    responsedescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer,
    identificationcode character varying(60),
    maximumscore character varying(35) NOT NULL,
    minimumscore character varying(35) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandard IS 'Score ranges of an assessment associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid IS 'The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).';


--
-- Name: COLUMN assessmentscorerangelearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.maximumscore IS 'The maximum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.minimumscore IS 'The minimum score in the score range.';


--
-- Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandardlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandardlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandardlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandardlearningstandard IS 'Learning standard associated with the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: assignmentlatestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assignmentlatestatusdescriptor (
    assignmentlatestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assignmentlatestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE assignmentlatestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assignmentlatestatusdescriptor IS 'Status of whether the assignment was submitted after the due date and/or marked as late.';


--
-- Name: COLUMN assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: balancesheetdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: TABLE balancesheetdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimension IS 'The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.';


--
-- Name: COLUMN balancesheetdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.codename IS 'A description of the account balance sheet dimension.';


--
-- Name: balancesheetdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.balancesheetdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE balancesheetdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE barriertointernetaccessinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.barriertointernetaccessinresidencedescriptor IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    alternatedayname character varying(20),
    endtime time without time zone,
    starttime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    date date NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the bell schedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the bell schedule applies.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the grade level associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the grade level associated with the calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: chartofaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    accounttypedescriptorid integer NOT NULL,
    balancesheetcode character varying(16),
    functioncode character varying(16),
    fundcode character varying(16),
    objectcode character varying(16),
    operationalunitcode character varying(16),
    programcode character varying(16),
    projectcode character varying(16),
    sourcecode character varying(16),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.chartofaccount OWNER TO postgres;

--
-- Name: TABLE chartofaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccount IS 'A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN chartofaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN chartofaccount.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accounttypedescriptorid IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN chartofaccount.balancesheetcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.balancesheetcode IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN chartofaccount.functioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.functioncode IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN chartofaccount.fundcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fundcode IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN chartofaccount.objectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.objectcode IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN chartofaccount.operationalunitcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.operationalunitcode IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN chartofaccount.programcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.programcode IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN chartofaccount.projectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.projectcode IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN chartofaccount.sourcecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.sourcecode IS 'The code representation of the account source dimension.';


--
-- Name: chartofaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.chartofaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE chartofaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    academicsubjectdescriptorid integer,
    cohortdescription character varying(1024),
    cohortscopedescriptorid integer,
    cohorttypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the cohort and its purpose.';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid integer NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid integer NOT NULL,
    communityorganizationid integer,
    licenseexemptindicator boolean,
    providercategorydescriptorid integer NOT NULL,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    schoolindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid integer NOT NULL,
    licenseidentifier character varying(20) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    authorizedfacilitycapacity integer,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the community provider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the competency objective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    academicsubjectdescriptorid integer,
    careerpathwaydescriptorid integer,
    coursedefinedbydescriptorid integer,
    coursedescription character varying(1024),
    coursegpaapplicabilitydescriptorid integer,
    coursetitle character varying(60) NOT NULL,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    maxcompletionsforcredit integer,
    maximumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    numberofparts integer NOT NULL,
    timerequiredforcompletion integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.academicsubjectdescriptorid IS 'The intended major subject area of the course.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s grade point average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningobjective (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningobjective OWNER TO postgres;

--
-- Name: TABLE courselearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningobjective IS 'Learning objectives to be mastered in the course.';


--
-- Name: COLUMN courselearningobjective.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN courselearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    instructionaltimeplanned integer,
    localcoursetitle character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the course title.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    curriculumuseddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    alternativecoursecode character varying(60),
    alternativecoursetitle character varying(60),
    assigningorganizationidentificationcode character varying(60),
    attemptedcreditconversion numeric(9,2),
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    coursecatalogurl character varying(255),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    earnedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3) NOT NULL,
    earnedcredittypedescriptorid integer,
    externaleducationorganizationid integer,
    externaleducationorganizationnameofinstitution character varying(75),
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    methodcreditearneddescriptorid integer,
    whentakengradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.alternativecoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursecode IS 'The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationnameofinstitution IS 'Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    additionalcredittypedescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptpartialcoursetranscriptawards (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    awarddate date NOT NULL,
    earnedcredits numeric(9,3) NOT NULL,
    lettergradeearned character varying(20),
    methodcreditearneddescriptorid integer,
    numericgradeearned character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptpartialcoursetranscriptawards OWNER TO postgres;

--
-- Name: TABLE coursetranscriptpartialcoursetranscriptawards; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptpartialcoursetranscriptawards IS 'A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.awarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.awarddate IS 'The date the partial credits and/or grades were awarded or earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.earnedcredits IS 'The number of credits a student earned for completing a given course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.lettergradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.numericgradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialfielddescriptorid integer,
    credentialtypedescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    issuancedate date NOT NULL,
    namespace character varying(255) NOT NULL,
    teachingcredentialbasisdescriptorid integer,
    teachingcredentialdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the credential.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialendorsement character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    discriminator character varying(128),
    uri character varying(306) GENERATED ALWAYS AS ((((namespace)::text || '#'::text) || (codevalue)::text)) STORED,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: descriptormapping; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormapping (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptormapping OWNER TO postgres;

--
-- Name: TABLE descriptormapping; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormapping IS 'A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.';


--
-- Name: COLUMN descriptormapping.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormapping.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormapping.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormapping.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: descriptormappingmodelentity; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormappingmodelentity (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    modelentitydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.descriptormappingmodelentity OWNER TO postgres;

--
-- Name: TABLE descriptormappingmodelentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormappingmodelentity IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: COLUMN descriptormappingmodelentity.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.modelentitydescriptorid IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    actualdisciplineactionlength numeric(5,2),
    assignmentschoolid integer,
    disciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    iepplacementmeetingindicator boolean,
    receivededucationservicesduringexpulsion boolean,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the discipline action (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: COLUMN disciplineaction.receivededucationservicesduringexpulsion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.receivededucationservicesduringexpulsion IS 'An indication of whether the student received educational services when removed from the regular school program for disciplinary reasons.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentassociation (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentassociation IS 'Reference to the discipline incident associated with the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation IS 'A reference to the behavior(s) by the student that led or contributed to this specific action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    casenumber character varying(20),
    incidentcost money,
    incidentdate date NOT NULL,
    incidentdescription character varying(1024),
    incidentlocationdescriptorid integer,
    incidenttime time without time zone,
    reportedtolawenforcement boolean,
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the discipline incident occurred.';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the discipline incident occurred and whether or not it occurred on school.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff").';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the discipline incident by name.';


--
-- Name: COLUMN disciplineincident.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    behaviordescriptorid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of an individual in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    additionalauthorsindicator boolean,
    contentclassdescriptorid integer,
    cost money,
    costratedescriptorid integer,
    description character varying(1024),
    interactivitystyledescriptorid integer,
    learningresourcemetadatauri character varying(255),
    learningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    publicationdate date,
    publicationyear smallint,
    publisher character varying(50),
    shortdescription character varying(75),
    timerequired character varying(30),
    userightsurl character varying(255),
    version character varying(10),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the education content.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the education content.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    contentidentifier character varying(225) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the education content.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid integer NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    operationalstatusdescriptorid integer,
    shortnameofinstitution character varying(75),
    website character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the education organization.';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    educationorganizationid integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    educationorganizationid integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationassociationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationassociationtypedescriptor (
    educationorganizationassociationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationassociationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationassociationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationassociationtypedescriptor IS 'The type of education organization association being represented.';


--
-- Name: COLUMN educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationid integer NOT NULL,
    educationorganizationcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid integer NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicator (
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    designatedby character varying(60),
    indicatorgroupdescriptorid integer,
    indicatorleveldescriptorid integer,
    indicatorvalue character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicator OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicator IS 'An indicator or metric of an education organization.';


--
-- Name: COLUMN educationorganizationindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicator.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.designatedby IS 'The person, organization, or department that defined the metric.';


--
-- Name: COLUMN educationorganizationindicator.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorgroupdescriptorid IS 'The name for a group of indicators.';


--
-- Name: COLUMN educationorganizationindicator.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorleveldescriptorid IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorvalue IS 'The value of the indicator or metric. The semantics of an empty value is "not submitted."';


--
-- Name: educationorganizationindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicatorperiod (
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicatorperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicatorperiod IS 'The time period or as-of date for the indicator.';


--
-- Name: COLUMN educationorganizationindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicatorperiod.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid integer NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    educationorganizationid integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the intervention prescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the intervention prescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid integer NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid integer NOT NULL,
    membereducationorganizationid integer NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the education organization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the education organization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the education organization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid integer NOT NULL,
    peereducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid integer NOT NULL,
    stateeducationagencyid integer
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid integer NOT NULL,
    schoolid integer NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: financialcollectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.financialcollectiondescriptor (
    financialcollectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.financialcollectiondescriptor OWNER TO postgres;

--
-- Name: TABLE financialcollectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.financialcollectiondescriptor IS 'The accounting period or grouping for which financial information is collected.';


--
-- Name: COLUMN financialcollectiondescriptor.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.financialcollectiondescriptor.financialcollectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: functiondimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.functiondimension OWNER TO postgres;

--
-- Name: TABLE functiondimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimension IS 'The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.';


--
-- Name: COLUMN functiondimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.codename IS 'A description of the account function dimension.';


--
-- Name: functiondimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.functiondimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE functiondimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN functiondimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: funddimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.funddimension OWNER TO postgres;

--
-- Name: TABLE funddimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimension IS 'The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.';


--
-- Name: COLUMN funddimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.codename IS 'A description of the account fund dimension.';


--
-- Name: funddimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.funddimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE funddimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN funddimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the student exited the program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the student left the program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    designatedby character varying(60),
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date,
    statusenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationprogramparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date NOT NULL,
    designatedby character varying(60),
    statusenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationprogramparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationprogramparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationprogramparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    currentgradeasofdate date,
    currentgradeindicator boolean,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.currentgradeasofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeasofdate IS 'As-Of date for a grade posted as the current grade.';


--
-- Name: COLUMN grade.currentgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeindicator IS 'An indicator that the posted grade is an interim grade for the grading period and not the final grade.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    dateassigned date NOT NULL,
    description character varying(1024),
    duedate date,
    duetime time without time zone,
    gradebookentrytypedescriptorid integer,
    gradingperioddescriptorid integer,
    localcoursecode character varying(60),
    maxpoints numeric(9,2),
    periodsequence integer,
    schoolid integer,
    schoolyear smallint,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    sourcesectionidentifier character varying(255) NOT NULL,
    title character varying(100) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.duetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duetime IS 'The time the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.maxpoints; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.maxpoints IS 'The maximum number of points  that can be earned for the submission.';


--
-- Name: COLUMN gradebookentry.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradebookentry.sourcesectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sourcesectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.title IS 'The name or title of the activity to be recorded in the gradebook entry.';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentrylearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the grading period.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the grading period.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the grading period.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcreditconversion numeric(9,2),
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the graduation plan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: TABLE indicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatordescriptor IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN indicatordescriptor.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatordescriptor.indicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorgroupdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorgroupdescriptor IS 'The name for a group of indicators.';


--
-- Name: COLUMN indicatorgroupdescriptor.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorgroupdescriptor.indicatorgroupdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorleveldescriptor IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN indicatorleveldescriptor.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorleveldescriptor.indicatorleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccesstypeinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccesstypeinresidencedescriptor IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetperformanceinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetperformanceinresidencedescriptor IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    begindate date NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    enddate date,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the intervention.';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the intervention study per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjective (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    description character varying(1024),
    nomenclature character varying(100),
    objective character varying(60) NOT NULL,
    parentlearningobjectiveid character varying(60),
    parentnamespace character varying(255),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningobjective OWNER TO postgres;

--
-- Name: TABLE learningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjective IS 'This entity represents identified LearningObjectives for courses in specific grades.';


--
-- Name: COLUMN learningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.description IS 'The description of the learning objective.';


--
-- Name: COLUMN learningobjective.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.nomenclature IS 'Reflects the specific nomenclature used for the learning objective.';


--
-- Name: COLUMN learningobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.objective IS 'The designated title of the learning objective.';


--
-- Name: COLUMN learningobjective.parentlearningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentlearningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.parentnamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentnamespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning objective.';


--
-- Name: learningobjectiveacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectiveacademicsubject (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectiveacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningobjectiveacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectiveacademicsubject IS 'The description of the content or subject area of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectiveacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectiveacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area of an assessment.';


--
-- Name: learningobjectivecontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandard (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid integer,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandard IS 'A reference to the type of content standard (e.g., state, national)';


--
-- Name: COLUMN learningobjectivecontentstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectivecontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningobjectivecontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningobjectivecontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningobjectivecontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningobjectivecontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.version IS 'The version identifier for the content.';


--
-- Name: learningobjectivecontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandardauthor (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: learningobjectivegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivegradelevel (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivegradelevel OWNER TO postgres;

--
-- Name: TABLE learningobjectivegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivegradelevel IS 'The grade level for which the learning objective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivegradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectivegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.gradeleveldescriptorid IS 'The grade level for which the learning objective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: learningobjectivelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivelearningstandard (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivelearningstandard IS 'Learning standard(s) included in this objective.';


--
-- Name: COLUMN learningobjectivelearningstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectivelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    coursetitle character varying(60),
    description character varying(1024) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandarditemcode character varying(60),
    learningstandardscopedescriptorid integer,
    namespace character varying(255) NOT NULL,
    parentlearningstandardid character varying(60),
    successcriteria character varying(150),
    uri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official course title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    learningstandardid character varying(60) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the learning standard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the learning standard.';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid integer,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the learning standard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    learningstandardid character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescription character varying(255),
    learningstandardequivalencestrengthdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is partial.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    learningstandardid character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    learningstandardid character varying(60) NOT NULL,
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: learningstandardprerequisitelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardprerequisitelearningstandard (
    learningstandardid character varying(60) NOT NULL,
    prerequisitelearningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardprerequisitelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardprerequisitelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardprerequisitelearningstandard IS 'The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.prerequisitelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.prerequisitelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    chartofaccountidentifier character varying(50) NOT NULL,
    chartofaccounteducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localaccount OWNER TO postgres;

--
-- Name: TABLE localaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccount IS 'The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN localaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN localaccount.chartofaccountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN localaccount.chartofaccounteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccounteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: localaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE localaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN localaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN localaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: localactual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localactual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localactual OWNER TO postgres;

--
-- Name: TABLE localactual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localactual IS 'The set of local education agency or charter management organization expense or revenue amounts.';


--
-- Name: COLUMN localactual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localactual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localactual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localactual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localactual.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localactual.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localbudget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localbudget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localbudget OWNER TO postgres;

--
-- Name: TABLE localbudget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localbudget IS 'The set of local education agency or charter management organization budget amounts.';


--
-- Name: COLUMN localbudget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localbudget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localbudget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localbudget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localbudget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localbudget.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localcontractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localcontractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: TABLE localcontractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localcontractedstaff IS 'The set of local education agency or charter management organization contracted staff amounts.';


--
-- Name: COLUMN localcontractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localcontractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localcontractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localcontractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localcontractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localcontractedstaff.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localcontractedstaff.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid integer NOT NULL,
    charterstatusdescriptorid integer,
    educationservicecenterid integer,
    localeducationagencycategorydescriptorid integer NOT NULL,
    parentlocaleducationagencyid integer,
    stateeducationagencyid integer
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid integer NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    localeducationagencyid integer NOT NULL,
    fiscalyear integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    stateassessmentadministrationfunding numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: localencumbrance; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localencumbrance (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localencumbrance OWNER TO postgres;

--
-- Name: TABLE localencumbrance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localencumbrance IS 'The set of local education agency or charter management organization encumbrance amounts.';


--
-- Name: COLUMN localencumbrance.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localencumbrance.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localencumbrance.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localencumbrance.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localencumbrance.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localencumbrance.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localpayroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localpayroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localpayroll OWNER TO postgres;

--
-- Name: TABLE localpayroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localpayroll IS 'The set of local education agency or charter management organization payroll amounts.';


--
-- Name: COLUMN localpayroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localpayroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localpayroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localpayroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localpayroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localpayroll.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localpayroll.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: modelentitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.modelentitydescriptor (
    modelentitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.modelentitydescriptor OWNER TO postgres;

--
-- Name: TABLE modelentitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.modelentitydescriptor IS 'The class of a domain entity in the Ed-Fi data model.';


--
-- Name: COLUMN modelentitydescriptor.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.modelentitydescriptor.modelentitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectdimension OWNER TO postgres;

--
-- Name: TABLE objectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimension IS 'The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.';


--
-- Name: COLUMN objectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.codename IS 'A description of the account object dimension.';


--
-- Name: objectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE objectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN objectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer,
    description character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    parentidentificationcode character varying(60),
    percentofassessment numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the objective assessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of objective assessment.';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the assessment that tests this objective.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'Learning standard tested by this objective assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: oldethnicitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.oldethnicitydescriptor (
    oldethnicitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.oldethnicitydescriptor OWNER TO postgres;

--
-- Name: TABLE oldethnicitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.oldethnicitydescriptor IS 'Previous definition of Ethnicity combining Hispanic/Latino and Race.';


--
-- Name: COLUMN oldethnicitydescriptor.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.oldethnicitydescriptor.oldethnicitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    dateposted date NOT NULL,
    datepostingremoved date,
    employmentstatusdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    postingresultdescriptorid integer,
    programassignmentdescriptorid integer,
    staffclassificationdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the open staff position was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the open staff position will be assigned.';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the open staff position.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the open staff position.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: operationalunitdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: TABLE operationalunitdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimension IS 'The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN operationalunitdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.codename IS 'A description of the account operational unit dimension.';


--
-- Name: operationalunitdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.operationalunitdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE operationalunitdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: organizationdepartment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.organizationdepartment (
    organizationdepartmentid integer NOT NULL,
    academicsubjectdescriptorid integer,
    parenteducationorganizationid integer
);


ALTER TABLE edfi.organizationdepartment OWNER TO postgres;

--
-- Name: TABLE organizationdepartment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.organizationdepartment IS 'An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.';


--
-- Name: COLUMN organizationdepartment.organizationdepartmentid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.organizationdepartmentid IS 'The unique identification code for the organization department.';


--
-- Name: COLUMN organizationdepartment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.academicsubjectdescriptorid IS 'The intended major subject area of the department.';


--
-- Name: COLUMN organizationdepartment.parenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.parenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: parent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parent (
    parentusi integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    parentuniqueid character varying(32) NOT NULL,
    personaltitleprefix character varying(30),
    personid character varying(32),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.parent OWNER TO postgres;

--
-- Name: TABLE parent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parent IS 'This entity represents a parent or guardian of a student, such as mother, father, or caretaker.';


--
-- Name: COLUMN parent.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parent.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parent.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN parent.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN parent.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parent.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN parent.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN parent.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parent.parentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentuniqueid IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parent.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN parent.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN parent.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN parent.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: parent_parentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.parent_parentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.parent_parentusi_seq OWNER TO postgres;

--
-- Name: parent_parentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.parent_parentusi_seq OWNED BY edfi.parent.parentusi;


--
-- Name: parentaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddress (
    parentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddress OWNER TO postgres;

--
-- Name: TABLE parentaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddress IS 'Parent''s address, if different from the student address.';


--
-- Name: COLUMN parentaddress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN parentaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN parentaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN parentaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN parentaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN parentaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN parentaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: parentaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddressperiod (
    parentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddressperiod OWNER TO postgres;

--
-- Name: TABLE parentaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN parentaddressperiod.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN parentaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: parentelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentelectronicmail (
    parentusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentelectronicmail OWNER TO postgres;

--
-- Name: TABLE parentelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN parentelectronicmail.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN parentelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN parentelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: parentinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentinternationaladdress (
    parentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentinternationaladdress OWNER TO postgres;

--
-- Name: TABLE parentinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN parentinternationaladdress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN parentinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN parentinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN parentinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN parentinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: parentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguage (
    parentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguage OWNER TO postgres;

--
-- Name: TABLE parentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN parentlanguage.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: parentlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguageuse (
    parentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguageuse OWNER TO postgres;

--
-- Name: TABLE parentlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: parentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentothername (
    parentusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentothername OWNER TO postgres;

--
-- Name: TABLE parentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN parentothername.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN parentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN parentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: parentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentpersonalidentificationdocument (
    parentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE parentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN parentpersonalidentificationdocument.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN parentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: parenttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parenttelephone (
    parentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parenttelephone OWNER TO postgres;

--
-- Name: TABLE parenttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parenttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN parenttelephone.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parenttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN parenttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN parenttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN parenttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN parenttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: person; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.person OWNER TO postgres;

--
-- Name: TABLE person; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.person IS 'This entity represents a human being.';


--
-- Name: COLUMN person.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN person.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The post secondary event that is logged.';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid integer NOT NULL,
    administrativefundingcontroldescriptorid integer,
    postsecondaryinstitutionleveldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of a postsecondary institution''s highest level of offering. Default values are based on the Carnegie Classifications.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    postsecondaryinstitutionid integer NOT NULL,
    mediumofinstructiondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceaccessdescriptor IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceawayfromschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceawayfromschooldescriptor IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceproviderdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceproviderdescriptor IS 'The provider of the primary learning device.';


--
-- Name: COLUMN primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programdimension OWNER TO postgres;

--
-- Name: TABLE programdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimension IS 'The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.';


--
-- Name: COLUMN programdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.codename IS 'A description of the account program dimension.';


--
-- Name: programdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE programdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN programdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: programlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningobjective (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningobjective OWNER TO postgres;

--
-- Name: TABLE programlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningobjective IS 'References the learning objective(s) with which the program is associated.';


--
-- Name: COLUMN programlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'Learning standard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: programservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programservice (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programservice OWNER TO postgres;

--
-- Name: TABLE programservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programservice IS 'Defines the services this program provides to students.';


--
-- Name: COLUMN programservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.servicedescriptorid IS 'Defines the services this program provides to students.';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: projectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.projectdimension OWNER TO postgres;

--
-- Name: TABLE projectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimension IS 'The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.';


--
-- Name: COLUMN projectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.codename IS 'A description of the account project dimension.';


--
-- Name: projectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.projectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE projectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN projectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: questionformdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL
);


ALTER TABLE edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: TABLE questionformdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.questionformdescriptor IS 'The form or type of question.';


--
-- Name: COLUMN questionformdescriptor.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.questionformdescriptor.questionformdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested.';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    gpacumulative numeric(18,4),
    gpagivengradingperiod numeric(18,4),
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.gpacumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpacumulative IS 'A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.';


--
-- Name: COLUMN reportcard.gpagivengradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpagivengradingperiod IS 'A measure of average performance in all courses taken by an individual for the current grading period.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the student for this grading period.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: reportcardstudentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentlearningobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentlearningobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentlearningobjective IS 'The student learning objective evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardstudentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN reportcardstudentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportingtagdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportingtagdescriptor (
    reportingtagdescriptorid integer NOT NULL
);


ALTER TABLE edfi.reportingtagdescriptor OWNER TO postgres;

--
-- Name: TABLE reportingtagdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportingtagdescriptor IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN reportingtagdescriptor.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportingtagdescriptor.reportingtagdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    educationalenvironmentdescriptorid integer,
    eventdate date NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the restraint event.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the restraint event.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid integer NOT NULL,
    administrativefundingcontroldescriptorid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint,
    charterstatusdescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid integer,
    magnetspecialprogramemphasisschooldescriptorid integer,
    schooltypedescriptorid integer,
    titleipartaschooldesignationdescriptorid integer
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolid integer NOT NULL,
    schoolcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    schoolid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    availablecreditconversion numeric(9,2),
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    educationalenvironmentdescriptorid integer,
    instructionlanguagedescriptorid integer,
    locationclassroomidentificationcode character varying(60),
    locationschoolid integer,
    mediumofinstructiondescriptorid integer,
    officialattendanceperiod boolean,
    populationserveddescriptorid integer,
    sectionname character varying(100),
    sequenceofcourse integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a student receives education and related services.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction. If omitted, English is assumed.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the section is offered and tailored to.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the section attendance taken event was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the section meets.';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program to which the section is associated.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A term in the school year, generally a unit of time into which courses are scheduled, instruction occurs and by which credits are awarded. Sessions may be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'An descriptor value indicating the term.';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sourcedimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sourcedimension OWNER TO postgres;

--
-- Name: TABLE sourcedimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimension IS 'The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN sourcedimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.codename IS 'A description of the account source dimension.';


--
-- Name: sourcedimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sourcedimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE sourcedimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN sourcedimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: TABLE sourcesystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcesystemdescriptor IS 'This descriptor defines the originating record source system.';


--
-- Name: COLUMN sourcesystemdescriptor.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcesystemdescriptor.sourcesystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    birthdate date,
    citizenshipstatusdescriptorid integer,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    highlyqualifiedteacher boolean,
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    oldethnicitydescriptorid integer,
    personaltitleprefix character varying(30),
    personid character varying(32),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    staffuniqueid character varying(32) NOT NULL,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.oldethnicitydescriptorid IS 'Previous definition of ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN staff.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN staff.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffancestryethnicorigin (
    staffusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE staffancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    staffusi integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the education organization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    staffusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffusi integer NOT NULL,
    staffidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    staffusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    staffusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    staffusi integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the school(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    begindate date,
    classroompositiondescriptorid integer NOT NULL,
    enddate date,
    highlyqualifiedteacher boolean,
    percentagecontribution numeric(5,4),
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the section. If blank, defaults to the first day of the first grading period for the section.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the staff member holds in the specific class/section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid integer NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    stateeducationagencyid integer NOT NULL,
    schoolyear smallint NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    stateeducationagencyid integer NOT NULL,
    fiscalyear integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    dateenteredus date,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    sourcesystemdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN student.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN student.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    cumulativegradepointaverage numeric(18,4),
    cumulativegradepointsearned numeric(18,4),
    gradevaluequalifier character varying(80),
    projectedgraduationdate date,
    sessionattemptedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    sessiongradepointaverage numeric(18,4),
    sessiongradepointsearned numeric(18,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointaverage IS 'A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointsearned IS 'The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.gradevaluequalifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.gradevaluequalifier IS 'The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student''s grade point average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.).';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointaverage IS 'The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointsearned IS 'The number of grade points an individual earned for this session.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academichonorcategorydescriptorid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    honorawarddate date,
    honorawardexpiresdate date,
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the honor expires.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    classrankingdate date,
    percentageranking integer,
    totalnumberinclass integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    ctecompleter boolean,
    diplomaawardexpiresdate date,
    diplomadescription character varying(80),
    diplomaleveldescriptorid integer,
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the diploma expires.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of the diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    administrationenvironmentdescriptorid integer,
    administrationlanguagedescriptorid integer,
    assessedminutes integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    platformtypedescriptorid integer,
    reasonnottesteddescriptorid integer,
    reportedschoolid integer,
    reportedschoolidentifier character varying(60),
    retestindicatordescriptorid integer,
    schoolyear smallint,
    serialnumber character varying(60),
    whenassessedgradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested.';


--
-- Name: COLUMN studentassessment.reportedschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentassessment.reportedschoolidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolidentifier IS 'A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was a retake.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    accommodationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmenteducationorganizationassociation (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationassociationtypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studentassessmenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmenteducationorganizationassociation IS 'The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid IS 'The type of association being represented.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.schoolyear IS 'The school year associated with the association..';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentitemresultdescriptorid integer NOT NULL,
    assessmentresponse character varying(255),
    descriptivefeedback character varying(1024),
    itemnumber integer,
    rawscoreresult numeric(15,5),
    responseindicatordescriptorid integer,
    timeassessed character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.itemnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.itemnumber IS 'The test question number for this student''s test item.';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of a student on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the assessment item.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the student assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperiod OWNER TO postgres;

--
-- Name: TABLE studentassessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN studentassessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperiod.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN studentassessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN studentassessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    assessedminutes integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The performance level(s) achieved for the objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the student was removed as part of the cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the student and program associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the student and section associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogram (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    careerpathwaydescriptorid integer NOT NULL,
    cipcode character varying(120),
    cteprogramcompletionindicator boolean,
    primarycteprogramindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogram OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogram IS 'The career cluster representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.careerpathwaydescriptorid IS 'A sequence of courses within an area of interest that is a student''s educational road map to a chosen career.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cteprogramcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cteprogramcompletionindicator IS 'A boolean indicator of whether the student has completed the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.primarycteprogramindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.primarycteprogramindicator IS 'A boolean indicator of whether this CTE program is the student''s primary CTE program.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    cipcode character varying(120),
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the service(s) being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentcteprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    studentparticipationcodedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociation IS 'This association indicates those students who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studentdisciplineincidentassociationbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociationbehavior (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordescriptorid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociationbehavior OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociationbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociationbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociation IS 'This association describes the behavior of students involved in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociation IS 'This association indicates those students who were involved and not perpetrators for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    barriertointernetaccessinresidencedescriptorid integer,
    hispaniclatinoethnicity boolean,
    internetaccessinresidence boolean,
    internetaccesstypeinresidencedescriptorid integer,
    internetperformanceinresidencedescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    oldethnicitydescriptorid integer,
    primarylearningdeviceaccessdescriptorid integer,
    primarylearningdeviceawayfromschooldescriptorid integer,
    primarylearningdeviceproviderdescriptorid integer,
    profilethumbnail character varying(255),
    sexdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccessinresidence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccessinresidence IS 'An indication of whether the student is able to access the internet in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetperformanceinresidencedescriptorid IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN studenteducationorganizationassociation.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.oldethnicitydescriptorid IS 'Previous definition of ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid IS 'The provider of the primary learning device.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s gender as last reported to the education organization.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationancestryethnicorigin (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipat_810575; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    begindate date,
    designatedby character varying(60),
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipation IS 'Key programs the student is participating in or receives services from.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.begindate IS 'The date the student was associated with the program or service.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.enddate IS 'The date the program participation ended.';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    designatedby character varying(60),
    indicator character varying(60) NOT NULL,
    indicatorgroup character varying(200),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'An indicator or metric computed for the student (e.g., at risk).';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    assignmentlatestatusdescriptorid integer,
    competencyleveldescriptorid integer,
    datefulfilled date,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    pointsearned numeric(9,2),
    submissionstatusdescriptorid integer,
    timefulfilled time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN studentgradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.assignmentlatestatusdescriptorid IS 'Status of whether the assignment was submitted after the due date and/or marked as.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.pointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.pointsearned IS 'The points earned for the submission. With extra credit, the points earned may exceed the max points.';


--
-- Name: COLUMN studentgradebookentry.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.submissionstatusdescriptorid IS 'The status of the student''s submission.';


--
-- Name: COLUMN studentgradebookentry.timefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.timefulfilled IS 'The time an assignment was turned in on the date fulfilled.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    awaitingfostercare boolean,
    homelessprimarynighttimeresidencedescriptorid integer,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(20),
    cohorteducationorganizationid integer,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    dosage integer,
    englishlearnerparticipation boolean
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint NOT NULL,
    monitoreddescriptorid integer,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The school year for which the assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: TABLE studentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific learning objective.';


--
-- Name: COLUMN studentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentlearningobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentlearningobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivestudentsectionassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodsequence integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    continuationofservicesreasondescriptorid integer,
    eligibilityexpirationdate date,
    lastqualifyingmove date NOT NULL,
    priorityforservices boolean NOT NULL,
    qualifyingarrivaldate date,
    stateresidencydate date,
    usinitialentry date,
    usinitialschoolentry date,
    usmostrecententry date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The eligibility expiration date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states'' requirements), or if the child passes away.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the state''s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified state residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the student''s most recent entry into the U.S.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the service(s) being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer,
    neglectedordelinquentprogramdescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    studentusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    alternativeeducationorganizationid integer NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    educationplandescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attemptstatusdescriptorid integer,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the student from the section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: studentsectionattendanceeventclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceeventclassperiod (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceeventclassperiod OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceeventclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceeventclassperiod IS 'The class period(s) to which the section attendance event applies.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    iepbegindate date,
    iependdate date,
    iepreviewdate date,
    lastevaluationdate date,
    medicallyfragile boolean,
    multiplydisabled boolean,
    schoolhoursperweek numeric(5,2),
    specialeducationhoursperweek numeric(5,2),
    specialeducationsettingdescriptorid integer
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The staff providing special education services to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the service(s) being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The staff providing the service to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.';


--
-- Name: studenttitleipartaprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the student by the Title I Part A program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: submissionstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.submissionstatusdescriptor (
    submissionstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.submissionstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE submissionstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.submissionstatusdescriptor IS 'The status of the student''s submission.';


--
-- Name: COLUMN submissionstatusdescriptor.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.submissionstatusdescriptor.submissionstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: survey; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    educationorganizationid integer,
    numberadministered integer,
    schoolid integer,
    schoolyear smallint NOT NULL,
    sessionname character varying(60),
    surveycategorydescriptorid integer,
    surveytitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.survey OWNER TO postgres;

--
-- Name: TABLE survey; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.survey IS 'A survey to identified or anonymous respondents.';


--
-- Name: COLUMN survey.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN survey.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN survey.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN survey.numberadministered; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.numberadministered IS 'Number of persons to whom this survey was administered.';


--
-- Name: COLUMN survey.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN survey.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolyear IS 'The school year associated with the survey.';


--
-- Name: COLUMN survey.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN survey.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveycategorydescriptorid IS 'The category or type of survey.';


--
-- Name: COLUMN survey.surveytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveytitle IS 'The title of the survey.';


--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE surveycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycategorydescriptor IS 'The descriptor holds the category or type of survey.';


--
-- Name: COLUMN surveycategorydescriptor.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycategorydescriptor.surveycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveycourseassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: TABLE surveycourseassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycourseassociation IS 'The course associated with the survey.';


--
-- Name: COLUMN surveycourseassociation.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN surveycourseassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveycourseassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveycourseassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE surveyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyleveldescriptor IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyleveldescriptor.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyleveldescriptor.surveyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveyprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyprogramassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: TABLE surveyprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyprogramassociation IS 'The program associated with the survey.';


--
-- Name: COLUMN surveyprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN surveyprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN surveyprogramassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyquestion; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    questionformdescriptorid integer NOT NULL,
    questiontext character varying(1024) NOT NULL,
    surveysectiontitle character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestion OWNER TO postgres;

--
-- Name: TABLE surveyquestion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestion IS 'The questions for the survey.';


--
-- Name: COLUMN surveyquestion.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestion.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestion.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestion.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questionformdescriptorid IS 'The form or type of question.';


--
-- Name: COLUMN surveyquestion.questiontext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questiontext IS 'The text of the question.';


--
-- Name: COLUMN surveyquestion.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveyquestionmatrix; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionmatrix (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxrawscore integer,
    minrawscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionmatrix OWNER TO postgres;

--
-- Name: TABLE surveyquestionmatrix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionmatrix IS 'Information about the matrix element in the survey.';


--
-- Name: COLUMN surveyquestionmatrix.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionmatrix.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionmatrix.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.maxrawscore IS 'The maximum score possible on a survey.';


--
-- Name: COLUMN surveyquestionmatrix.minrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.minrawscore IS 'The minimum score possible on a survey.';


--
-- Name: surveyquestionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    comment character varying(1024),
    noresponse boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponse IS 'The response to a survey question.';


--
-- Name: COLUMN surveyquestionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponse.comment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.comment IS 'Additional information provided by the responder about the question in the survey.';


--
-- Name: COLUMN surveyquestionresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: surveyquestionresponsechoice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsechoice (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    sortorder integer NOT NULL,
    numericvalue integer,
    textvalue character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsechoice OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsechoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsechoice IS 'The optional list of possible responses to a survey question.';


--
-- Name: COLUMN surveyquestionresponsechoice.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsechoice.sortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.sortorder IS 'Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn''t apply, the value of NumericValue or a unique, possibly sequential numeric value.';


--
-- Name: COLUMN surveyquestionresponsechoice.numericvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.numericvalue IS 'A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.';


--
-- Name: COLUMN surveyquestionresponsechoice.textvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.textvalue IS 'A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.';


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxnumericresponse integer,
    minnumericresponse integer,
    noresponse boolean,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsesurveyquestionmatrixelementresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse IS 'For matrix questions, the response for each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse IS 'The maximum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse IS 'The minimum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse IS 'The numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse IS 'The text response(s) for the question.';


--
-- Name: surveyquestionresponsevalue; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsevalue (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyquestionresponsevalueidentifier integer NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsevalue OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsevalue IS 'For free-form, single- or multiple-selection questions, one or more responses.';


--
-- Name: COLUMN surveyquestionresponsevalue.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyquestionresponsevalueidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyquestionresponsevalueidentifier IS 'Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.';


--
-- Name: COLUMN surveyquestionresponsevalue.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.numericresponse IS 'A numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsevalue.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.textresponse IS 'A text response to the question.';


--
-- Name: surveyresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    electronicmailaddress character varying(128),
    fullname character varying(80),
    location character varying(75),
    parentusi integer,
    responsedate date NOT NULL,
    responsetime integer,
    staffusi integer,
    studentusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponse OWNER TO postgres;

--
-- Name: TABLE surveyresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponse IS 'Responses to a Survey for named or anonymous persons.';


--
-- Name: COLUMN surveyresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponse.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.electronicmailaddress IS 'Email address of the respondent.';


--
-- Name: COLUMN surveyresponse.fullname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.fullname IS 'Full name of the respondent.';


--
-- Name: COLUMN surveyresponse.location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.location IS 'Location of the respondent, often a city, district, or school.';


--
-- Name: COLUMN surveyresponse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN surveyresponse.responsedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsedate IS 'Date of the survey response.';


--
-- Name: COLUMN surveyresponse.responsetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsetime IS 'The amount of time (in seconds) it took for the respondent to complete the survey.';


--
-- Name: COLUMN surveyresponse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponseeducationorganizationtargetassociation IS 'This association provides information about the survey being taken and the education organization the survey is about.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsestafftargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsesurveylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsesurveylevel (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyresponsesurveylevel OWNER TO postgres;

--
-- Name: TABLE surveyresponsesurveylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsesurveylevel IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyleveldescriptorid IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: surveysection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysection OWNER TO postgres;

--
-- Name: TABLE surveysection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysection IS 'The section of questions for the survey.';


--
-- Name: COLUMN surveysection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysection.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysection.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionassociation IS 'The section associated with the survey.';


--
-- Name: COLUMN surveysectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN surveysectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN surveysectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN surveysectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN surveysectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN surveysectionassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveysectionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    sectionrating numeric(9,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: TABLE surveysectionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponse IS 'Optional information about the responses provided for a section of a survey.';


--
-- Name: COLUMN surveysectionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponse.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: COLUMN surveysectionresponse.sectionrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.sectionrating IS 'Numeric rating computed from the survey responses for the section.';


--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponseeducationorganizationtargetassociation IS 'This association provides information about the survey section and the education organization the survey section is about.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponsestafftargetassociation IS 'This association provides information about the survey section and the staff the survey section is about.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'This descriptor defines the term of a session during the school year (e.g., Semester).';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: accreditationstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.accreditationstatusdescriptor (
    accreditationstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.accreditationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE accreditationstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.accreditationstatusdescriptor IS 'Accreditation Status for a Teacher Preparation Provider.';


--
-- Name: COLUMN accreditationstatusdescriptor.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.accreditationstatusdescriptor.accreditationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: aidtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.aidtypedescriptor (
    aidtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.aidtypedescriptor OWNER TO postgres;

--
-- Name: TABLE aidtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.aidtypedescriptor IS 'This descriptor defines the classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN aidtypedescriptor.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.aidtypedescriptor.aidtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: candidate; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidate (
    candidateidentifier character varying(32) NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    dateenteredus date,
    displacementstatus character varying(30),
    economicdisadvantaged boolean,
    englishlanguageexamdescriptorid integer,
    firstgenerationstudent boolean,
    firstname character varying(75) NOT NULL,
    genderdescriptorid integer,
    generationcodesuffix character varying(10),
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    limitedenglishproficiencydescriptorid integer,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    sexdescriptorid integer NOT NULL,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidate OWNER TO postgres;

--
-- Name: TABLE candidate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidate IS 'A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.';


--
-- Name: COLUMN candidate.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidate.birthcity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN candidate.birthcountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidate.birthdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN candidate.birthinternationalprovince; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN candidate.birthsexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN candidate.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN candidate.dateenteredus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN candidate.displacementstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.displacementstatus IS 'Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.';


--
-- Name: COLUMN candidate.economicdisadvantaged; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.economicdisadvantaged IS 'An indication of inadequate financial condition of an individual''s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.';


--
-- Name: COLUMN candidate.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.englishlanguageexamdescriptorid IS 'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).';


--
-- Name: COLUMN candidate.firstgenerationstudent; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstgenerationstudent IS 'Indicator of whether individual is a first generation college student.';


--
-- Name: COLUMN candidate.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidate.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.genderdescriptorid IS 'The gender of the candidate.';


--
-- Name: COLUMN candidate.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidate.hispaniclatinoethnicity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN candidate.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidate.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN candidate.maidenname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN candidate.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidate.multiplebirthstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN candidate.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN candidate.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN candidate.sexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sexdescriptorid IS 'The sex of the candidate.';


--
-- Name: COLUMN candidate.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: candidateaddress; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddress (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddress OWNER TO postgres;

--
-- Name: TABLE candidateaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN candidateaddress.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddress.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddress.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddress.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddress.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN candidateaddress.buildingsitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN candidateaddress.congressionaldistrict; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN candidateaddress.countyfipscode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN candidateaddress.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN candidateaddress.latitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN candidateaddress.localedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN candidateaddress.longitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN candidateaddress.nameofcounty; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: candidateaddressperiod; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddressperiod (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddressperiod OWNER TO postgres;

--
-- Name: TABLE candidateaddressperiod; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN candidateaddressperiod.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddressperiod.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddressperiod.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN candidateaddressperiod.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: candidatedisability; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisability (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisability OWNER TO postgres;

--
-- Name: TABLE candidatedisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisability IS 'The disability condition(s) that best describes an individual''s impairment.';


--
-- Name: COLUMN candidatedisability.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisability.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN candidatedisability.disabilitydiagnosis; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN candidatedisability.orderofdisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: candidatedisabilitydesignation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisabilitydesignation (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE candidatedisabilitydesignation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN candidatedisabilitydesignation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociation (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    enddate date,
    eppprogrampathwaydescriptorid integer,
    reasonexiteddescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociation IS 'Information about the association between the Teacher Candidate and the EducatorPreparationProgram';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.enddate IS 'The end date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid IS 'The program pathway the candidate is following; for example: Residency, Internship, Traditional';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid IS 'Reason exited for the association.';


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationcohortyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear IS 'The type and year of a cohort the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    majorspecialization character varying(255) NOT NULL,
    enddate date,
    minorspecialization character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 IS 'Information around the area(s) of specialization for an individual.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization IS 'The major area for a degree or area of specialization for a certificate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate IS 'The month, day, and year on which the Teacher Candidate exited the declared specialization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization IS 'The minor area for a degree or area of specialization for a certificate.';


--
-- Name: candidateelectronicmail; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateelectronicmail (
    candidateidentifier character varying(32) NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateelectronicmail OWNER TO postgres;

--
-- Name: TABLE candidateelectronicmail; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN candidateelectronicmail.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN candidateelectronicmail.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN candidateelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: candidatelanguage; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguage (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguage OWNER TO postgres;

--
-- Name: TABLE candidatelanguage; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguage IS 'The language(s) the individual uses to communicate.';


--
-- Name: COLUMN candidatelanguage.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguage.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: candidatelanguageuse; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguageuse (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguageuse OWNER TO postgres;

--
-- Name: TABLE candidatelanguageuse; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN candidatelanguageuse.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguageuse.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN candidatelanguageuse.languageusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: candidateothername; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateothername (
    candidateidentifier character varying(32) NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateothername OWNER TO postgres;

--
-- Name: TABLE candidateothername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN candidateothername.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateothername.othernametypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN candidateothername.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidateothername.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidateothername.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidateothername.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidateothername.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: candidatepersonalidentificationdocument; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatepersonalidentificationdocument (
    candidateidentifier character varying(32) NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatepersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE candidatepersonalidentificationdocument; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatepersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: candidaterace; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidaterace (
    candidateidentifier character varying(32) NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidaterace OWNER TO postgres;

--
-- Name: TABLE candidaterace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidaterace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN candidaterace.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidaterace.racedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: candidatetelephone; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatetelephone (
    candidateidentifier character varying(32) NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatetelephone OWNER TO postgres;

--
-- Name: TABLE candidatetelephone; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatetelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN candidatetelephone.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatetelephone.telephonenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN candidatetelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN candidatetelephone.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN candidatetelephone.orderofpriority; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN candidatetelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: certificationroutedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.certificationroutedescriptor (
    certificationroutedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.certificationroutedescriptor OWNER TO postgres;

--
-- Name: TABLE certificationroutedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.certificationroutedescriptor IS 'The process, program, or pathway used to obtain a certification.';


--
-- Name: COLUMN certificationroutedescriptor.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.certificationroutedescriptor.certificationroutedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coteachingstyleobserveddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.coteachingstyleobserveddescriptor (
    coteachingstyleobserveddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.coteachingstyleobserveddescriptor OWNER TO postgres;

--
-- Name: TABLE coteachingstyleobserveddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.coteachingstyleobserveddescriptor IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialextension (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    boardcertificationindicator boolean,
    certificationroutedescriptorid integer,
    certificationtitle character varying(64),
    credentialstatusdate date,
    credentialstatusdescriptorid integer,
    educatorroledescriptorid integer,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialextension OWNER TO postgres;

--
-- Name: COLUMN credentialextension.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialextension.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialextension.boardcertificationindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.boardcertificationindicator IS 'Indicator that the credential was granted under the authority of a national Board Certification.';


--
-- Name: COLUMN credentialextension.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationroutedescriptorid IS 'The process, program, or pathway used to obtain certification.';


--
-- Name: COLUMN credentialextension.certificationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationtitle IS 'The title of the certification obtained by the educator.';


--
-- Name: COLUMN credentialextension.credentialstatusdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdate IS 'The month, day, and year on which the credential status was effective.';


--
-- Name: COLUMN credentialextension.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdescriptorid IS 'The current status of the credential (e.g., active, suspended, etc.).';


--
-- Name: COLUMN credentialextension.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.educatorroledescriptorid IS 'The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN credentialextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN credentialextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: credentialstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstatusdescriptor (
    credentialstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.credentialstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE credentialstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstatusdescriptor IS 'The current status of the credential.';


--
-- Name: COLUMN credentialstatusdescriptor.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstatusdescriptor.credentialstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialstudentacademicrecord; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstudentacademicrecord (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialstudentacademicrecord OWNER TO postgres;

--
-- Name: TABLE credentialstudentacademicrecord; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstudentacademicrecord IS 'Reference to the person''s Student Academic Records for the school(s) with which the Credential is associated.';


--
-- Name: COLUMN credentialstudentacademicrecord.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialstudentacademicrecord.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN credentialstudentacademicrecord.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN credentialstudentacademicrecord.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN credentialstudentacademicrecord.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    accreditationstatusdescriptorid integer,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogram; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogram IS 'The Educator Preparation Program is designed to prepare students to become licensed educators.';


--
-- Name: COLUMN educatorpreparationprogram.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogram.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogram.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.accreditationstatusdescriptorid IS 'The current accreditation status of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: educatorpreparationprogramgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogramgradelevel (
    educationorganizationid integer NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogramgradelevel OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogramgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogramgradelevel IS 'The grade levels served at the EPP Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.gradeleveldescriptorid IS 'The grade levels served at the EPP Program.';


--
-- Name: educatorroledescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorroledescriptor (
    educatorroledescriptorid integer NOT NULL
);


ALTER TABLE tpdm.educatorroledescriptor OWNER TO postgres;

--
-- Name: TABLE educatorroledescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorroledescriptor IS 'The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN educatorroledescriptor.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorroledescriptor.educatorroledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: englishlanguageexamdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.englishlanguageexamdescriptor (
    englishlanguageexamdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.englishlanguageexamdescriptor OWNER TO postgres;

--
-- Name: TABLE englishlanguageexamdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.englishlanguageexamdescriptor IS 'Indicates that a person passed, failed, or did not take an English Language assessment.';


--
-- Name: COLUMN englishlanguageexamdescriptor.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.englishlanguageexamdescriptor.englishlanguageexamdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eppprogrampathwaydescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.eppprogrampathwaydescriptor (
    eppprogrampathwaydescriptorid integer NOT NULL
);


ALTER TABLE tpdm.eppprogrampathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE eppprogrampathwaydescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.eppprogrampathwaydescriptor IS 'The description of the program pathway, for example: Residency, Internship, Traditional';


--
-- Name: COLUMN eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationdescription character varying(255),
    evaluationtypedescriptorid integer,
    interraterreliabilityscore integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluation OWNER TO postgres;

--
-- Name: TABLE evaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluation IS 'An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.';


--
-- Name: COLUMN evaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluation.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluation.evaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationdescription IS 'The long description of the Evaluation.';


--
-- Name: COLUMN evaluation.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluation.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluation.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.maxrating IS 'The maximum summary numerical rating or score for the evaluation.';


--
-- Name: COLUMN evaluation.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.minrating IS 'The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.';


--
-- Name: evaluationelement; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelement (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelement OWNER TO postgres;

--
-- Name: TABLE evaluationelement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelement IS 'The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.';


--
-- Name: COLUMN evaluationelement.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelement.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelement.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelement.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelement.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelement.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelement.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelement.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationelement.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.maxrating IS 'The maximum summary numerical rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelement.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.minrating IS 'The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationelement.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.sortorder IS 'The sort order of this Evaluation Element.';


--
-- Name: evaluationelementrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    areaofrefinement character varying(1024),
    areaofreinforcement character varying(1024),
    comments character varying(1024),
    evaluationelementratingleveldescriptorid integer,
    feedback character varying(2048),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: TABLE evaluationelementrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementrating IS 'The lowest-level rating for an Evaluation Element for an individual educator.';


--
-- Name: COLUMN evaluationelementrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementrating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementrating.areaofrefinement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofrefinement IS 'Area identified for person to refine or improve as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.areaofreinforcement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofreinforcement IS 'Area identified for reinforcement or positive feedback as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationelementrating.feedback; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.feedback IS 'Feedback provided to the evaluated person.';


--
-- Name: evaluationelementratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationelementratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationelementratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationelementratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationelementratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingleveldescriptor (
    evaluationelementratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingleveldescriptor IS 'Rating levels for Evaluation Elements.';


--
-- Name: COLUMN evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationelementratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingresult IS 'The numerical summary rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationelementratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationobjective; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjective (
    educationorganizationid integer NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationobjectivedescription character varying(255),
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: TABLE evaluationobjective; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjective IS 'A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN evaluationobjective.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjective.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjective.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjective.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivedescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivedescription IS 'The long description of the Evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtypedescriptorid IS 'The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationobjective.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.maxrating IS 'The maximum summary numerical rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.minrating IS 'The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationobjective.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.sortorder IS 'The sort order of this Evaluation Objective.';


--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiverating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    comments character varying(1024),
    objectiveratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiverating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiverating IS 'The rating for the component Evaluation Objective for an individual educator.';


--
-- Name: COLUMN evaluationobjectiverating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiverating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiverating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiverating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiverating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiverating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationobjectiverating.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.objectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: evaluationobjectiveratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationobjectiveratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationobjectiveratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratingresult IS 'The numerical summary rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationobjectiveratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationperioddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationperioddescriptor (
    evaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationperioddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationperioddescriptor.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationperioddescriptor.evaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer,
    evaluationratingstatusdescriptorid integer,
    localcoursecode character varying(60),
    schoolid integer,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationrating OWNER TO postgres;

--
-- Name: TABLE evaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationrating IS 'The summary weighting for the Evaluation instrument for an individual educator.';


--
-- Name: COLUMN evaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationrating.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationrating.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingstatusdescriptorid IS 'The Status of the poerformance evaluation.';


--
-- Name: COLUMN evaluationrating.localcoursecode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN evaluationrating.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN evaluationrating.sectionidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN evaluationrating.sessionname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: evaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingleveldescriptor (
    evaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingleveldescriptor IS 'Rating levels for Evaluations.';


--
-- Name: COLUMN evaluationratingleveldescriptor.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingleveldescriptor.evaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingresult (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingresult IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewer (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: evaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewerreceivedtraining (
    educationorganizationid integer NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: evaluationratingstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingstatusdescriptor (
    evaluationratingstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingstatusdescriptor IS 'Represents the status of a Evaluation Rating.';


--
-- Name: COLUMN evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationtypedescriptor (
    evaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationtypedescriptor IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationtypedescriptor.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationtypedescriptor.evaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: financialaid; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.financialaid (
    aidtypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    studentusi integer NOT NULL,
    aidamount numeric(19,4),
    aidconditiondescription character varying(1024),
    enddate date,
    pellgrantrecipient boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.financialaid OWNER TO postgres;

--
-- Name: TABLE financialaid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.financialaid IS 'This entity represents the financial aid a person is awarded.';


--
-- Name: COLUMN financialaid.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidtypedescriptorid IS 'The classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN financialaid.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.begindate IS 'The date the award was designated.';


--
-- Name: COLUMN financialaid.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN financialaid.aidamount; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidamount IS 'The amount of financial aid awarded to a person for the term/year.';


--
-- Name: COLUMN financialaid.aidconditiondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidconditiondescription IS 'The description of the condition (e.g., placement in a high need school) under which the aid was given.';


--
-- Name: COLUMN financialaid.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.enddate IS 'The date the award was removed.';


--
-- Name: COLUMN financialaid.pellgrantrecipient; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.pellgrantrecipient IS 'Indicates a person who receives Pell Grant aid.';


--
-- Name: genderdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.genderdescriptor (
    genderdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.genderdescriptor OWNER TO postgres;

--
-- Name: TABLE genderdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.genderdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN genderdescriptor.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.genderdescriptor.genderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.objectiveratingleveldescriptor (
    objectiveratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.objectiveratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE objectiveratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.objectiveratingleveldescriptor IS 'Rating levels for Evaluation Objectives.';


--
-- Name: COLUMN objectiveratingleveldescriptor.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.objectiveratingleveldescriptor.objectiveratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluation (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer,
    performanceevaluationdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: TABLE performanceevaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluation IS 'A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.';


--
-- Name: COLUMN performanceevaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluation.academicsubjectdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.academicsubjectdescriptorid IS 'The description of the content or subject area of a performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationdescription IS 'The long description of the Performance Evaluation.';


--
-- Name: performanceevaluationgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationgradelevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationgradelevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationgradelevel IS 'The grade levels involved with the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationgradelevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationgradelevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.gradeleveldescriptorid IS 'The grade levels involved with the performance evaluation.';


--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationrating (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    actualdate date NOT NULL,
    actualduration integer,
    actualtime time without time zone,
    announced boolean,
    comments character varying(1024),
    coteachingstyleobserveddescriptorid integer,
    performanceevaluationratingleveldescriptorid integer,
    scheduledate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: TABLE performanceevaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationrating IS 'The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.';


--
-- Name: COLUMN performanceevaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationrating.actualdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualdate IS 'The month, day, and year on which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualduration; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualduration IS 'The actual or estimated number of clock minutes during which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualtime; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualtime IS 'An indication of the the time at which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.announced; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.announced IS 'An indicator of whether the performance evaluation was announced or not.';


--
-- Name: COLUMN performanceevaluationrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN performanceevaluationrating.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.coteachingstyleobserveddescriptorid IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN performanceevaluationrating.scheduledate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.scheduledate IS 'The month, day, and year on which the performance evaluation was scheduled.';


--
-- Name: performanceevaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratinglevel (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN performanceevaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN performanceevaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: performanceevaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingleveldescriptor (
    performanceevaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingleveldescriptor IS 'Rating levels for Performance Evaluations.';


--
-- Name: COLUMN performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingresult (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingresult OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingresult IS 'The numerical summary rating or score for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN performanceevaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: performanceevaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewer (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewerreceivedtraining (
    educationorganizationid integer NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: performanceevaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationtypedescriptor (
    performanceevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationtypedescriptor IS 'The type of performance evaluation conducted (e.g., walkthrough, summative).';


--
-- Name: COLUMN performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: rubricdimension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricdimension (
    educationorganizationid integer NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    rubricrating integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    criteriondescription character varying(1024) NOT NULL,
    dimensionorder integer,
    rubricratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.rubricdimension OWNER TO postgres;

--
-- Name: TABLE rubricdimension; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.';


--
-- Name: COLUMN rubricdimension.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN rubricdimension.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN rubricdimension.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN rubricdimension.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN rubricdimension.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN rubricdimension.rubricrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricrating IS 'The rating achieved for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN rubricdimension.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN rubricdimension.criteriondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.criteriondescription IS 'The criterion description for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.dimensionorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.dimensionorder IS 'The order for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricratingleveldescriptorid IS 'The rating level achieved for the rubric dimension.';


--
-- Name: rubricratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricratingleveldescriptor (
    rubricratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.rubricratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE rubricratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricratingleveldescriptor IS 'Rating levels for Rubric Dimensions.';


--
-- Name: COLUMN rubricratingleveldescriptor.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricratingleveldescriptor.rubricratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.schoolextension (
    schoolid integer NOT NULL,
    postsecondaryinstitutionid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.schoolextension OWNER TO postgres;

--
-- Name: COLUMN schoolextension.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolextension.postsecondaryinstitutionid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: surveyresponseextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponseextension (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.surveyresponseextension OWNER TO postgres;

--
-- Name: COLUMN surveyresponseextension.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseextension.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseextension.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponseextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponseextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveyresponsepersontargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveysectionresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveysectionresponsepersontargetassociation IS 'This association provides information about the survey section and the person the survey section is about.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveysectiontitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: academicweek; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.academicweek (
    oldschoolid integer NOT NULL,
    oldweekidentifier character varying(80) NOT NULL,
    newschoolid integer,
    newweekidentifier character varying(80),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.academicweek OWNER TO postgres;

--
-- Name: accountabilityrating; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.accountabilityrating (
    oldeducationorganizationid integer NOT NULL,
    oldratingtitle character varying(60) NOT NULL,
    oldschoolyear smallint NOT NULL,
    neweducationorganizationid integer,
    newratingtitle character varying(60),
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.accountabilityrating OWNER TO postgres;

--
-- Name: assessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessment OWNER TO postgres;

--
-- Name: assessmentitem; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentitem (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentitem OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentscorerangelearningstandard (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldscorerangeid character varying(60) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newscorerangeid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: balancesheetdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.balancesheetdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: bellschedule; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.bellschedule (
    oldbellschedulename character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newbellschedulename character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.bellschedule OWNER TO postgres;

--
-- Name: calendar; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendar (
    oldcalendarcode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendar OWNER TO postgres;

--
-- Name: calendardate; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendardate (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendardate OWNER TO postgres;

--
-- Name: chartofaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.chartofaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.chartofaccount OWNER TO postgres;

--
-- Name: classperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.classperiod (
    oldclassperiodname character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newclassperiodname character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.classperiod OWNER TO postgres;

--
-- Name: cohort; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.cohort (
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.cohort OWNER TO postgres;

--
-- Name: communityproviderlicense; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.communityproviderlicense (
    oldcommunityproviderid integer NOT NULL,
    oldlicenseidentifier character varying(20) NOT NULL,
    oldlicensingorganization character varying(75) NOT NULL,
    newcommunityproviderid integer,
    newlicenseidentifier character varying(20),
    newlicensingorganization character varying(75),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: competencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.competencyobjective (
    oldeducationorganizationid integer NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.competencyobjective OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.course (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.course OWNER TO postgres;

--
-- Name: courseoffering; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.courseoffering (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.courseoffering OWNER TO postgres;

--
-- Name: coursetranscript; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.coursetranscript (
    oldcourseattemptresultdescriptorid integer NOT NULL,
    oldcourseattemptresultdescriptornamespace character varying(255) NOT NULL,
    oldcourseattemptresultdescriptorcodevalue character varying(50) NOT NULL,
    oldcoursecode character varying(60) NOT NULL,
    oldcourseeducationorganizationid integer NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    newcourseattemptresultdescriptorid integer,
    newcourseattemptresultdescriptornamespace character varying(255),
    newcourseattemptresultdescriptorcodevalue character varying(50),
    newcoursecode character varying(60),
    newcourseeducationorganizationid integer,
    neweducationorganizationid integer,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.coursetranscript OWNER TO postgres;

--
-- Name: credential; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.credential (
    oldcredentialidentifier character varying(60) NOT NULL,
    oldstateofissuestateabbreviationdescriptorid integer NOT NULL,
    oldstateofissuestateabbreviationdescriptornamespace character varying(255) NOT NULL,
    oldstateofissuestateabbreviationdescriptorcodevalue character varying(50) NOT NULL,
    newcredentialidentifier character varying(60),
    newstateofissuestateabbreviationdescriptorid integer,
    newstateofissuestateabbreviationdescriptornamespace character varying(255),
    newstateofissuestateabbreviationdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.credential OWNER TO postgres;

--
-- Name: descriptor; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptor (
    olddescriptorid integer NOT NULL,
    oldcodevalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newdescriptorid integer,
    newcodevalue character varying(50),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptor OWNER TO postgres;

--
-- Name: descriptormapping; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptormapping (
    oldmappednamespace character varying(255) NOT NULL,
    oldmappedvalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldvalue character varying(50) NOT NULL,
    newmappednamespace character varying(255),
    newmappedvalue character varying(50),
    newnamespace character varying(255),
    newvalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptormapping OWNER TO postgres;

--
-- Name: disciplineaction; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineaction (
    olddisciplineactionidentifier character varying(32) NOT NULL,
    olddisciplinedate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldresponsibilityschoolid integer NOT NULL,
    newdisciplineactionidentifier character varying(32),
    newdisciplinedate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineaction OWNER TO postgres;

--
-- Name: disciplineincident; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineincident (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineincident OWNER TO postgres;

--
-- Name: educationcontent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationcontent (
    oldcontentidentifier character varying(225) NOT NULL,
    newcontentidentifier character varying(225),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationcontent OWNER TO postgres;

--
-- Name: educationorganization; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganization (
    oldeducationorganizationid integer NOT NULL,
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganization OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionprescriptioneducationorganizationid integer NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionprescriptioneducationorganizationid integer,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationnetworkassociation (
    oldeducationorganizationnetworkid integer NOT NULL,
    oldmembereducationorganizationid integer NOT NULL,
    neweducationorganizationnetworkid integer,
    newmembereducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationpeerassociation (
    oldeducationorganizationid integer NOT NULL,
    oldpeereducationorganizationid integer NOT NULL,
    neweducationorganizationid integer,
    newpeereducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: feederschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.feederschoolassociation (
    oldbegindate date NOT NULL,
    oldfeederschoolid integer NOT NULL,
    oldschoolid integer NOT NULL,
    newbegindate date,
    newfeederschoolid integer,
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: functiondimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.functiondimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.functiondimension OWNER TO postgres;

--
-- Name: funddimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.funddimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.funddimension OWNER TO postgres;

--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.generalstudentprogramassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: grade; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.grade (
    oldbegindate date NOT NULL,
    oldgradetypedescriptorid integer NOT NULL,
    oldgradetypedescriptornamespace character varying(255) NOT NULL,
    oldgradetypedescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newgradetypedescriptorid integer,
    newgradetypedescriptornamespace character varying(255),
    newgradetypedescriptorcodevalue character varying(50),
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodsequence integer,
    newgradingperiodschoolyear smallint,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.grade OWNER TO postgres;

--
-- Name: gradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradebookentry OWNER TO postgres;

--
-- Name: gradingperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradingperiod (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperiodsequence integer NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newperiodsequence integer,
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradingperiod OWNER TO postgres;

--
-- Name: graduationplan; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.graduationplan (
    oldeducationorganizationid integer NOT NULL,
    oldgraduationplantypedescriptorid integer NOT NULL,
    oldgraduationplantypedescriptornamespace character varying(255) NOT NULL,
    oldgraduationplantypedescriptorcodevalue character varying(50) NOT NULL,
    oldgraduationschoolyear smallint NOT NULL,
    neweducationorganizationid integer,
    newgraduationplantypedescriptorid integer,
    newgraduationplantypedescriptornamespace character varying(255),
    newgraduationplantypedescriptorcodevalue character varying(50),
    newgraduationschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.graduationplan OWNER TO postgres;

--
-- Name: intervention; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.intervention (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.intervention OWNER TO postgres;

--
-- Name: interventionprescription; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionprescription (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionprescription OWNER TO postgres;

--
-- Name: interventionstudy; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionstudy (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionstudyidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionstudyidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionstudy OWNER TO postgres;

--
-- Name: learningobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningobjective (
    oldlearningobjectiveid character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newlearningobjectiveid character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningobjective OWNER TO postgres;

--
-- Name: learningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandard (
    oldlearningstandardid character varying(60) NOT NULL,
    newlearningstandardid character varying(60),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandard OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandardequivalenceassociation (
    oldnamespace character varying(255) NOT NULL,
    oldsourcelearningstandardid character varying(60) NOT NULL,
    oldtargetlearningstandardid character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsourcelearningstandardid character varying(60),
    newtargetlearningstandardid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: localaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localaccount OWNER TO postgres;

--
-- Name: localactual; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localactual (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localactual OWNER TO postgres;

--
-- Name: localbudget; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localbudget (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localbudget OWNER TO postgres;

--
-- Name: localcontractedstaff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localcontractedstaff (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: localencumbrance; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localencumbrance (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localencumbrance OWNER TO postgres;

--
-- Name: localpayroll; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localpayroll (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localpayroll OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.location (
    oldclassroomidentificationcode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newclassroomidentificationcode character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.location OWNER TO postgres;

--
-- Name: objectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectdimension OWNER TO postgres;

--
-- Name: objectiveassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectiveassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectiveassessment OWNER TO postgres;

--
-- Name: openstaffposition; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.openstaffposition (
    oldeducationorganizationid integer NOT NULL,
    oldrequisitionnumber character varying(20) NOT NULL,
    neweducationorganizationid integer,
    newrequisitionnumber character varying(20),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.openstaffposition OWNER TO postgres;

--
-- Name: operationalunitdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.operationalunitdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: parent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.parent (
    oldparentusi integer NOT NULL,
    oldparentuniqueid character varying(32) NOT NULL,
    newparentusi integer,
    newparentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.parent OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.person (
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.person OWNER TO postgres;

--
-- Name: postsecondaryevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.postsecondaryevent (
    oldeventdate date NOT NULL,
    oldpostsecondaryeventcategorydescriptorid integer NOT NULL,
    oldpostsecondaryeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldpostsecondaryeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweventdate date,
    newpostsecondaryeventcategorydescriptorid integer,
    newpostsecondaryeventcategorydescriptornamespace character varying(255),
    newpostsecondaryeventcategorydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.program (
    oldeducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.program OWNER TO postgres;

--
-- Name: programdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programdimension OWNER TO postgres;

--
-- Name: projectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.projectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.projectdimension OWNER TO postgres;

--
-- Name: reportcard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.reportcard (
    oldeducationorganizationid integer NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodsequence integer,
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.reportcard OWNER TO postgres;

--
-- Name: restraintevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.restraintevent (
    oldrestrainteventidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newrestrainteventidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.restraintevent OWNER TO postgres;

--
-- Name: schoolyeartype; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.schoolyeartype (
    oldschoolyear smallint NOT NULL,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.schoolyeartype OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.section (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.section OWNER TO postgres;

--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sectionattendancetakenevent (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: session; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.session (
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.session OWNER TO postgres;

--
-- Name: sourcedimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sourcedimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sourcedimension OWNER TO postgres;

--
-- Name: staff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staff (
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staff OWNER TO postgres;

--
-- Name: staffabsenceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffabsenceevent (
    oldabsenceeventcategorydescriptorid integer NOT NULL,
    oldabsenceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldabsenceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newabsenceeventcategorydescriptorid integer,
    newabsenceeventcategorydescriptornamespace character varying(255),
    newabsenceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: staffcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffdisciplineincidentassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation (
    oldcontacttitle character varying(75) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newcontacttitle character varying(75),
    neweducationorganizationid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: staffleave; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffleave (
    oldbegindate date NOT NULL,
    oldstaffleaveeventcategorydescriptorid integer NOT NULL,
    oldstaffleaveeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldstaffleaveeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newstaffleaveeventcategorydescriptorid integer,
    newstaffleaveeventcategorydescriptornamespace character varying(255),
    newstaffleaveeventcategorydescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffleave OWNER TO postgres;

--
-- Name: staffprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffprogramassociation (
    oldbegindate date NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: staffschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffschoolassociation (
    oldprogramassignmentdescriptorid integer NOT NULL,
    oldprogramassignmentdescriptornamespace character varying(255) NOT NULL,
    oldprogramassignmentdescriptorcodevalue character varying(50) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newprogramassignmentdescriptorid integer,
    newprogramassignmentdescriptornamespace character varying(255),
    newprogramassignmentdescriptorcodevalue character varying(50),
    newschoolid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: staffsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffsectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.student (
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.student OWNER TO postgres;

--
-- Name: studentacademicrecord; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentacademicrecord (
    oldeducationorganizationid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: studentassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessment OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldeducationorganizationassociationtypedescriptorid integer NOT NULL,
    oldeducationorganizationassociationtypedescriptornamespace character varying(255) NOT NULL,
    oldeducationorganizationassociationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    neweducationorganizationassociationtypedescriptorid integer,
    neweducationorganizationassociationtypedescriptornamespace character varying(255),
    neweducationorganizationassociationtypedescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcompetencyobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldobjectiveeducationorganizationid integer NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodsequence integer,
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newobjectiveeducationorganizationid integer,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (
    oldbehaviordescriptorid integer NOT NULL,
    oldbehaviordescriptornamespace character varying(255) NOT NULL,
    oldbehaviordescriptorcodevalue character varying(50) NOT NULL,
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbehaviordescriptorid integer,
    newbehaviordescriptornamespace character varying(255),
    newbehaviordescriptorcodevalue character varying(50),
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationassociation (
    oldeducationorganizationid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldresponsibilitydescriptorid integer NOT NULL,
    oldresponsibilitydescriptornamespace character varying(255) NOT NULL,
    oldresponsibilitydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newresponsibilitydescriptorid integer,
    newresponsibilitydescriptornamespace character varying(255),
    newresponsibilitydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: studentgradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentgradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: studentinterventionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionassociation (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldeventdate date NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    neweventdate date,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: studentlearningobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentlearningobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldlearningobjectiveid character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodsequence integer,
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newlearningobjectiveid character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldeventdate date NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    neweventdate date,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: studentsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionassociation (
    oldbegindate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: survey; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.survey (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.survey OWNER TO postgres;

--
-- Name: surveycourseassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveycourseassociation (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: surveyprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyprogramassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: surveyquestion; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestion (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestion OWNER TO postgres;

--
-- Name: surveyquestionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: surveyresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponse OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: surveysection; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysection (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysection OWNER TO postgres;

--
-- Name: surveysectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newnamespace character varying(255),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: surveysectionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: candidate; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidate (
    oldcandidateidentifier character varying(32) NOT NULL,
    newcandidateidentifier character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidate OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (
    oldbegindate date NOT NULL,
    oldcandidateidentifier character varying(32) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newbegindate date,
    newcandidateidentifier character varying(32),
    neweducationorganizationid integer,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.educatorpreparationprogram (
    oldeducationorganizationid integer NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: evaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluation (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluation OWNER TO postgres;

--
-- Name: evaluationelement; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelement (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelement OWNER TO postgres;

--
-- Name: evaluationelementrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelementrating (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationdate timestamp without time zone,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: evaluationobjective; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjective (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjectiverating (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationdate timestamp without time zone,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: evaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationrating (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationdate timestamp without time zone,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationrating OWNER TO postgres;

--
-- Name: financialaid; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.financialaid (
    oldaidtypedescriptorid integer NOT NULL,
    oldaidtypedescriptornamespace character varying(255) NOT NULL,
    oldaidtypedescriptorcodevalue character varying(50) NOT NULL,
    oldbegindate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newaidtypedescriptorid integer,
    newaidtypedescriptornamespace character varying(255),
    newaidtypedescriptorcodevalue character varying(50),
    newbegindate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.financialaid OWNER TO postgres;

--
-- Name: performanceevaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluation (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluationrating (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: rubricdimension; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.rubricdimension (
    oldeducationorganizationid integer NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldrubricrating integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newrubricrating integer,
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.rubricdimension OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: parent parentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent ALTER COLUMN parentusi SET DEFAULT nextval('edfi.parent_parentusi_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: educationorganizationidtoeducationorganizationid; Type: TABLE DATA; Schema: auth; Owner: postgres
--

COPY auth.educationorganizationidtoeducationorganizationid (sourceeducationorganizationid, targeteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
693
697
698
699
700
701
702
703
705
704
706
707
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
41
43
42
44
45
46
47
48
49
50
51
52
53
54
56
55
57
58
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
2061
2062
2063
2064
2065
2066
2067
2068
2069
2070
2071
2072
2073
2074
2075
2076
2077
2078
2079
3343
3344
3345
3346
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
127
131
128
130
126
133
129
132
134
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accounttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accounttypedescriptor (accounttypedescriptorid) FROM stdin;
3150
3151
3152
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
997
996
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
1301
1304
1302
1303
1305
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
1313
1318
1321
1326
1312
1319
1322
1325
1315
1316
1323
1314
1317
1320
1324
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
1426
1425
1424
1427
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
1064
1065
1066
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, adaptiveassessment, assessmentcategorydescriptorid, assessmentfamily, assessmentform, assessmenttitle, assessmentversion, educationorganizationid, maxrawscore, nomenclature, revisiondate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (assessmentidentifier, namespace, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, namespace, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
174
176
175
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
201
200
202
203
204
205
206
207
209
208
210
211
212
213
214
216
215
217
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, namespace, author, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
3083
3088
3084
3090
3086
3089
3085
3087
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, assessmentitemuri, expectedtimeassessed, itemtext, maxrawscore, nomenclature, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
667
668
670
669
671
672
673
674
675
676
678
677
679
680
681
682
683
684
685
686
687
688
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, correctresponse, responsedescription, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
1207
1211
1209
1210
1208
1212
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, namespace, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, namespace, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
513
516
514
518
517
515
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
2331
2332
2333
2334
2336
2335
2337
2338
2339
2340
2341
2342
2343
2344
2345
2346
2347
2348
2349
2350
2351
2352
2353
2355
2354
2356
2357
2358
2359
2360
2361
2362
2363
2364
2365
2366
2367
2368
2369
2370
2371
2372
2373
2374
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, assessmentreportingmethoddescriptorid, identificationcode, maximumscore, minimumscore, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandardlearningstandard (assessmentidentifier, namespace, scorerangeid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: assignmentlatestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assignmentlatestatusdescriptor (assignmentlatestatusdescriptorid) FROM stdin;
305
306
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
2115
2118
2116
2117
2119
2120
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: balancesheetdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid) FROM stdin;
607
604
605
606
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
2170
2171
2172
2173
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, endtime, starttime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, schoolid, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, schoolid, date, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
1194
1196
1192
1195
1197
1199
1200
1201
1193
1198
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, schoolid, schoolyear, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
1947
1948
1949
1950
1951
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
2080
2081
2082
2083
2085
2084
2086
2087
2088
2089
2090
2091
2092
2093
2094
2095
2096
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
1945
1944
1946
1943
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
490
491
494
495
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, accounttypedescriptorid, balancesheetcode, functioncode, fundcode, objectcode, operationalunitcode, programcode, projectcode, sourcecode, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: chartofaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
2431
2433
2432
2434
2435
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, schoolid, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
2001
2002
2004
2003
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, academicsubjectdescriptorid, cohortdescription, cohortscopedescriptorid, cohorttypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
2007
2008
2010
2009
2005
2012
2006
2011
2013
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
2287
2290
2291
2293
2295
2296
2288
2297
2289
2292
2294
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
322
324
323
325
326
327
328
329
330
331
332
333
3247
3248
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, licenseexemptindicator, providercategorydescriptorid, providerprofitabilitydescriptorid, providerstatusdescriptorid, schoolindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, authorizedfacilitycapacity, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
970
971
969
968
972
973
974
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
138
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
1368
1369
1370
1371
1372
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
1342
1344
1343
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
1986
1987
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
715
718
717
716
719
721
720
722
723
724
725
726
727
728
729
730
731
733
732
734
735
736
737
738
739
741
740
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
773
772
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
791
790
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
814
813
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
849
848
851
850
852
853
854
855
856
857
858
859
860
861
862
863
865
864
866
867
868
869
870
871
872
873
874
875
876
878
877
880
881
879
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
901
900
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
919
920
921
918
922
923
924
925
926
928
927
929
930
931
932
933
934
935
936
937
938
939
940
941
945
948
949
952
956
960
942
954
961
943
947
950
953
957
959
963
944
946
951
955
958
962
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, academicsubjectdescriptorid, careerpathwaydescriptorid, coursedefinedbydescriptorid, coursedescription, coursegpaapplicabilitydescriptorid, coursetitle, datecourseadopted, highschoolcourserequirement, maxcompletionsforcredit, maximumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, minimumavailablecreditconversion, minimumavailablecredits, minimumavailablecredittypedescriptorid, numberofparts, timerequiredforcompletion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
558
557
559
560
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (coursecode, educationorganizationid, competencyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
413
415
414
416
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
163
165
164
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, educationorganizationid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
1010
1011
1012
1013
1014
1016
1015
1017
1018
\.


--
-- Data for Name: courselearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningobjective (coursecode, educationorganizationid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
425
427
432
439
441
446
429
431
433
436
430
435
437
442
445
426
428
434
438
440
443
444
447
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, coursecode, educationorganizationid, instructionaltimeplanned, localcoursetitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
2028
2029
2030
2031
2032
2033
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, alternativecoursecode, alternativecoursetitle, assigningorganizationidentificationcode, attemptedcreditconversion, attemptedcredits, attemptedcredittypedescriptorid, coursecatalogurl, courserepeatcodedescriptorid, coursetitle, earnedcreditconversion, earnedcredits, earnedcredittypedescriptorid, externaleducationorganizationid, externaleducationorganizationnameofinstitution, finallettergradeearned, finalnumericgradeearned, methodcreditearneddescriptorid, whentakengradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptpartialcoursetranscriptawards (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate, earnedcredits, lettergradeearned, methodcreditearneddescriptorid, numericgradeearned, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialfielddescriptorid, credentialtypedescriptorid, effectivedate, expirationdate, issuancedate, namespace, teachingcredentialbasisdescriptorid, teachingcredentialdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
2153
2152
2154
2151
2155
2156
2157
2158
2159
2160
2161
2162
2164
2163
2165
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
1203
1202
1205
1206
1204
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
1019
1020
1021
1022
1023
1024
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
68
70
72
75
76
78
79
81
83
71
74
77
82
84
69
73
80
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
496
498
499
497
500
501
502
503
504
506
505
507
508
509
510
511
512
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
2422
2423
2425
2424
2427
2426
2428
2429
2430
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
1036
1037
1038
1039
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
1	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	\N	2023-12-06 19:12:42.108274	2023-12-06 19:12:42.088421	036ca35a-ffc5-4199-a4ae-75365bba6435	1
2	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	\N	2023-12-06 19:12:42.108263	2023-12-06 19:12:42.088409	ef5f3f1f-7913-4438-a2ee-9333b93049d8	2
4	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.10827	2023-12-06 19:12:42.088415	f52ff573-c977-492f-a1c2-80bc07dec1aa	3
3	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	\N	2023-12-06 19:12:42.108268	2023-12-06 19:12:42.088408	55349bc7-1dd2-40af-af05-800cf0786bc1	4
5	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:42.267301	2023-12-06 19:12:42.26626	92335cf1-f2b7-432a-b62d-ab6067d686ce	5
6	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Correction	Juvenile Correction	Juvenile Correction	\N	\N	\N	\N	2023-12-06 19:12:42.26751	2023-12-06 19:12:42.266278	5b3d4885-ea0f-4d0e-b9d3-40f43ede9d4b	6
7	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Detention	Juvenile Detention	Juvenile Detention	\N	\N	\N	\N	2023-12-06 19:12:42.267278	2023-12-06 19:12:42.266287	30056c6d-6e09-47ba-849a-5544c994a5c8	7
8	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Adult Correction	Adult Correction	Adult Correction	\N	\N	\N	\N	2023-12-06 19:12:42.26728	2023-12-06 19:12:42.266267	0752775e-a01e-43d7-a121-da9fb6d60792	8
9	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-12-06 19:12:42.278481	2023-12-06 19:12:42.278341	2c1ce844-0ccc-410f-9054-a77820c7e085	9
10	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	\N	\N	\N	\N	2023-12-06 19:12:42.278694	2023-12-06 19:12:42.278678	08c9b62d-39a4-4318-a1fc-674c4e5053f9	10
11	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	DEPRECATED: Transition Programs	DEPRECATED: Transition Programs	\N	\N	\N	\N	2023-12-06 19:12:42.279091	2023-12-06 19:12:42.27906	13633f57-3d92-4b85-99ed-e139caa91066	11
12	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-12-06 19:12:42.27914	2023-12-06 19:12:42.279114	c699554b-7802-452f-8e42-299e5f0c9295	12
13	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	DEPRECATED: Health And Social Services	DEPRECATED: Health And Social Services	\N	\N	\N	\N	2023-12-06 19:12:42.286831	2023-12-06 19:12:42.286795	fa722c50-1f72-4cbe-b61a-7dd7f1bd24c6	13
14	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	DEPRECATED: Mentoring Programs	DEPRECATED: Mentoring Programs	\N	\N	\N	\N	2023-12-06 19:12:42.287452	2023-12-06 19:12:42.287423	f150e04d-0f99-449b-abb8-dcd4834449bc	14
15	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	DEPRECATED: Special Programs	DEPRECATED: Special Programs	\N	\N	\N	\N	2023-12-06 19:12:42.287846	2023-12-06 19:12:42.28782	89ac08a0-287e-4284-98b7-0a9ba8db3d45	15
16	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	\N	\N	\N	\N	2023-12-06 19:12:42.290385	2023-12-06 19:12:42.290357	4bec3c67-fe9b-4a16-89e4-756fac84fd49	16
17	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	\N	\N	\N	\N	2023-12-06 19:12:42.294429	2023-12-06 19:12:42.294398	e77b5766-564c-4251-ac36-11a6c46c5922	17
18	uri://ed-fi.org/InternetAccessDescriptor	Dial-up	Dial-up	Dial-up	\N	\N	\N	\N	2023-12-06 19:12:42.324911	2023-12-06 19:12:42.324022	a0e993bf-542b-4151-b5f7-58084b502e55	18
19	uri://ed-fi.org/InternetAccessDescriptor	Fiber	Fiber	Fiber	\N	\N	\N	\N	2023-12-06 19:12:42.32488	2023-12-06 19:12:42.324017	976762c4-ec30-47a4-9283-dc18d3f5bdcf	19
20	uri://ed-fi.org/InternetAccessDescriptor	DSL	DSL	DSL	\N	\N	\N	\N	2023-12-06 19:12:42.325304	2023-12-06 19:12:42.324031	78e87a1c-6025-4b56-a79f-aa30d0d8148b	20
21	uri://ed-fi.org/InternetAccessDescriptor	Cable	Cable	Cable	\N	\N	\N	\N	2023-12-06 19:12:42.325306	2023-12-06 19:12:42.324047	3fc1ff72-e717-4fbd-b76d-ca19e43a7bd9	21
22	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	\N	2023-12-06 19:12:42.334853	2023-12-06 19:12:42.334789	4ec05d55-8152-4b70-8e34-8a5105f9b647	22
23	uri://ed-fi.org/InternetAccessDescriptor	Microwave	Microwave	Microwave	\N	\N	\N	\N	2023-12-06 19:12:42.334853	2023-12-06 19:12:42.334789	4070603e-5162-4c8a-8215-8df7217ef1c0	23
24	uri://ed-fi.org/InternetAccessDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.335298	2023-12-06 19:12:42.335283	85ffc396-c62c-4e27-b644-91d0c3c3287c	24
25	uri://ed-fi.org/InternetAccessDescriptor	Personal hotspot/smartphone	Personal hotspot/smartphone	Personal hotspot/smartphone	\N	\N	\N	\N	2023-12-06 19:12:42.336982	2023-12-06 19:12:42.336929	8de54310-17a5-4079-83e4-bdce51c16661	25
26	uri://ed-fi.org/InternetAccessDescriptor	Satellite	Satellite	Satellite	\N	\N	\N	\N	2023-12-06 19:12:42.341934	2023-12-06 19:12:42.341903	5a8bb25e-7804-415e-a870-d4a15ae548af	26
27	uri://ed-fi.org/InternetAccessDescriptor	School-provided hotspot	School-provided hotspot	School-provided hotspot	\N	\N	\N	\N	2023-12-06 19:12:42.344379	2023-12-06 19:12:42.34436	daf012d4-2396-4de9-84a1-048868f37307	27
28	uri://ed-fi.org/InternetAccessDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:42.344562	2023-12-06 19:12:42.344546	4a698d07-fa1c-43f4-9be9-42333042d1e3	28
29	uri://ed-fi.org/InternetAccessDescriptor	High Speed	DEPRECATED: High Speed	DEPRECATED: High Speed	\N	\N	\N	\N	2023-12-06 19:12:42.347758	2023-12-06 19:12:42.347592	3d0063e1-1482-4d02-8164-41cbc4705a4e	29
30	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	DEPRECATED: Less Than High Speed	DEPRECATED: Less Than High Speed	\N	\N	\N	\N	2023-12-06 19:12:42.349117	2023-12-06 19:12:42.349067	9f19d2af-b64b-4009-973a-79942f672180	30
31	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	\N	2023-12-06 19:12:42.380394	2023-12-06 19:12:42.379564	54776b83-9ad3-4c3d-9a94-c603cf050a0f	31
32	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	\N	2023-12-06 19:12:42.380394	2023-12-06 19:12:42.379535	a9524f2b-e283-4bf2-a0bc-8a98d4bc15dd	32
34	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	\N	2023-12-06 19:12:42.380493	2023-12-06 19:12:42.379546	f2d76d09-934b-49b9-85cb-e13e081c6e21	34
36	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Below Average	Below Average	Below Average	\N	\N	\N	\N	2023-12-06 19:12:42.415867	2023-12-06 19:12:42.415002	5bb7bec8-aac7-4ca7-a906-b0c4ea5b08f1	36
42	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-12-06 19:12:42.454819	2023-12-06 19:12:42.453952	63039806-87f8-4fe1-a1fe-8bd8c2cb7531	42
46	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	\N	2023-12-06 19:12:42.469136	2023-12-06 19:12:42.468986	b81b3580-e01b-4960-95f5-ab8c9aa99f0f	46
53	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	\N	2023-12-06 19:12:42.483637	2023-12-06 19:12:42.48362	18ca044d-4dd5-4052-9db5-056c188e00a8	53
57	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-12-06 19:12:42.495191	2023-12-06 19:12:42.495163	b110b2a4-c32b-405e-be87-8f0d98445e3f	57
61	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.534892	2023-12-06 19:12:42.533577	b86cd424-dfce-4c5d-9240-a3b857517121	61
64	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.544602	2023-12-06 19:12:42.544146	e320dc65-dc36-4e0a-b500-8962c313bfbe	64
70	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	\N	2023-12-06 19:12:42.580038	2023-12-06 19:12:42.579024	1863f845-a91d-4cae-9370-b1bfff5a882d	70
75	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.589436	2023-12-06 19:12:42.589218	a049d6c1-e5a1-4f56-9232-e6fbf09e7ce3	75
78	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.598327	2023-12-06 19:12:42.598264	deb9acc0-11cd-48f6-8c5e-a94fd587a159	78
81	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.604837	2023-12-06 19:12:42.604803	f1d7bf5a-448e-4b17-86ce-c2ef108901fd	81
86	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	\N	2023-12-06 19:12:42.640572	2023-12-06 19:12:42.639504	830decfb-6ab1-4d28-a8a4-099e82b44063	86
90	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	\N	2023-12-06 19:12:42.649643	2023-12-06 19:12:42.649616	f33c6768-2801-4520-a8a6-eac4a38e86ec	90
97	uri://ed-fi.org/SurveyLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	\N	2023-12-06 19:12:42.686161	2023-12-06 19:12:42.684823	47749ff8-65ea-410d-8037-491eee729cd1	97
102	uri://ed-fi.org/SurveyLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:42.696432	2023-12-06 19:12:42.6964	2a5267af-ebbe-4448-a3e5-40ea4d743a4d	102
105	uri://ed-fi.org/SurveyLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:42.70269	2023-12-06 19:12:42.702634	1118c443-cc75-4e3c-baab-00300f018625	105
110	uri://ed-fi.org/SurveyLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:42.710463	2023-12-06 19:12:42.710434	2cfa34a7-0e00-4ca2-9e1a-27f489b7bb1c	110
111	uri://ed-fi.org/SurveyLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-12-06 19:12:42.714835	2023-12-06 19:12:42.714807	a08667a6-636b-40d4-ac23-dc3e2bec320f	111
113	uri://ed-fi.org/SurveyLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-12-06 19:12:42.717675	2023-12-06 19:12:42.717648	b7920157-934f-49dd-b145-a884a9ee56f6	113
116	uri://ed-fi.org/SurveyLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.723972	2023-12-06 19:12:42.72393	23613935-e9a6-4acf-a2f4-d7cf4fd90e50	116
120	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	\N	2023-12-06 19:12:42.762025	2023-12-06 19:12:42.76097	3a1e0b6b-c5ab-46e7-a6f2-b67645e5c0f8	120
125	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-12-06 19:12:42.772663	2023-12-06 19:12:42.772633	71c46770-f848-48d5-8dca-68e1d274aae4	125
126	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.814205	2023-12-06 19:12:42.81311	845754fd-08e4-444d-80e3-1df641bce13f	126
133	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology accommodation	Student equipment/technology	Student equipment/technology	\N	\N	\N	\N	2023-12-06 19:12:42.825437	2023-12-06 19:12:42.825409	c8f6e1a2-a786-47c4-91cb-1e9b2b136cd3	133
137	uri://ed-fi.org/SourceSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:42.864047	2023-12-06 19:12:42.862385	b1e6b23e-4139-4285-8e35-9ce5f4de5459	137
140	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	\N	2023-12-06 19:12:42.922316	2023-12-06 19:12:42.921009	2717adc8-d10e-44cb-8185-34149a63824f	140
145	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	\N	2023-12-06 19:12:42.931906	2023-12-06 19:12:42.931878	52797d15-7bc0-4e3c-a498-4849aa5baffc	145
149	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:42.965247	2023-12-06 19:12:42.964205	565c2268-d804-487e-92c8-3e45dacc7663	149
154	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	\N	2023-12-06 19:12:42.978719	2023-12-06 19:12:42.978445	a964148d-c8df-4f8b-9d24-7edf879ce31a	154
157	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-12-06 19:12:42.98462	2023-12-06 19:12:42.984145	70a657a3-f1ce-46e1-933c-b365eb51b269	157
162	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-12-06 19:12:43.000483	2023-12-06 19:12:43.000442	8ac30a5f-e085-442d-827e-52db2ce52c89	162
165	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-12-06 19:12:43.038616	2023-12-06 19:12:43.037008	3f72e1c1-1aa3-4dd5-ab6c-31cdf17a8c62	165
176	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	\N	2023-12-06 19:12:43.094081	2023-12-06 19:12:43.094054	0b11073e-b3ab-480c-ad72-215a3a51ae90	176
33	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	\N	2023-12-06 19:12:42.380646	2023-12-06 19:12:42.379567	cdeb7e04-265c-413c-85e3-e3e911cd21b0	33
37	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Good	Good	Good	\N	\N	\N	\N	2023-12-06 19:12:42.415859	2023-12-06 19:12:42.415026	84c50fdf-8f82-4248-aa8e-f0e43aad08b8	37
43	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-12-06 19:12:42.454894	2023-12-06 19:12:42.453954	9700fc5f-e61d-4292-9fd3-12f3012c7b15	43
45	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	\N	2023-12-06 19:12:42.468439	2023-12-06 19:12:42.468406	6ab20b3a-3c78-46f8-bd24-1c6d81af5302	45
48	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-12-06 19:12:42.471431	2023-12-06 19:12:42.471413	e50a4451-4c21-49c3-ada8-2a3252a13d5e	48
49	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	\N	2023-12-06 19:12:42.47428	2023-12-06 19:12:42.474249	d4ac6271-14b9-49fa-afae-cefc14ad4ff6	49
52	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-12-06 19:12:42.481713	2023-12-06 19:12:42.481683	ce96f3f9-352f-4ae6-89f8-280d9fff6128	52
55	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.493848	2023-12-06 19:12:42.493819	4fe4924a-6709-4557-a875-eb564af3596e	55
59	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.534837	2023-12-06 19:12:42.533567	9a5d9193-21b5-4fa4-8a7d-e3b99f81771b	59
65	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	\N	2023-12-06 19:12:42.544543	2023-12-06 19:12:42.54451	1dd7ce4a-3178-4e22-adbf-253c2544ea71	65
67	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	\N	2023-12-06 19:12:42.551046	2023-12-06 19:12:42.551001	2eaae050-2171-4e39-8bab-64bcb38d3fd1	67
71	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	\N	2023-12-06 19:12:42.580032	2023-12-06 19:12:42.57904	8ddfe4f9-3b08-4956-a7ec-3a2d22eb6e80	71
74	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.589452	2023-12-06 19:12:42.589432	9c7d8cb8-a2d7-4d0f-aa03-48593dbd3863	74
77	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.597094	2023-12-06 19:12:42.597066	9d8756ea-1663-43f2-bcfd-a8e1ec6c5aae	77
82	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.605601	2023-12-06 19:12:42.605587	66d36b2e-30a6-4bec-8a36-9d079c6357b4	82
84	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.611354	2023-12-06 19:12:42.611324	746bef21-426d-4fc2-890f-e8c72ddf2517	84
87	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	\N	2023-12-06 19:12:42.640565	2023-12-06 19:12:42.639519	87cf4a0c-6c09-41fc-88f7-b1ebfb896a6a	87
91	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	\N	2023-12-06 19:12:42.649817	2023-12-06 19:12:42.649287	15a79ae1-b828-4e0d-9b5c-140305f39f5b	91
94	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	\N	2023-12-06 19:12:42.656958	2023-12-06 19:12:42.656865	e67aa2c9-138c-4d2a-904f-dd06c8bfc77a	94
98	uri://ed-fi.org/SurveyLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-12-06 19:12:42.687078	2023-12-06 19:12:42.687052	58589490-ec50-4f4d-bb89-8fb37f28bc23	98
100	uri://ed-fi.org/SurveyLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:42.695358	2023-12-06 19:12:42.695344	7f611706-393d-4dd2-a761-1a27cb98f01f	100
104	uri://ed-fi.org/SurveyLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:42.70282	2023-12-06 19:12:42.702789	1930a8f2-0464-42fd-bca4-d9b753cd8ea3	104
109	uri://ed-fi.org/SurveyLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.710105	2023-12-06 19:12:42.710004	306e9109-89e7-4053-925a-90238ebb8cee	109
112	uri://ed-fi.org/SurveyLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-12-06 19:12:42.716729	2023-12-06 19:12:42.716654	6eeca339-34fd-41f1-89b2-2ad141fa269a	112
117	uri://ed-fi.org/SurveyLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	\N	2023-12-06 19:12:42.724599	2023-12-06 19:12:42.724546	61e5239e-9297-4794-acc9-3038d7fb3c70	117
121	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	\N	2023-12-06 19:12:42.762191	2023-12-06 19:12:42.760952	42414858-5c49-4296-afed-72c9a4bfeb02	121
124	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	\N	2023-12-06 19:12:42.771612	2023-12-06 19:12:42.771505	e9ae96e8-bfbe-4462-878f-a77e83e036ee	124
127	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.814184	2023-12-06 19:12:42.813114	7f7a7b61-6361-405d-b8df-02e2d00dedb1	127
131	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.824319	2023-12-06 19:12:42.824288	05439180-d4be-4a27-b4b5-06bcec48a6b9	131
138	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.892409	2023-12-06 19:12:42.890954	0baea856-08b1-4827-91b8-5a4433caee6b	138
141	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	\N	2023-12-06 19:12:42.922363	2023-12-06 19:12:42.921041	e9fd40ac-de82-4ad7-acc6-16a1536ab5ee	141
150	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:42.965931	2023-12-06 19:12:42.96424	396cbeec-3a40-47a8-a48d-f3fb459c17ef	150
155	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	\N	2023-12-06 19:12:42.979072	2023-12-06 19:12:42.979058	082ae5dc-ac0b-4b88-b969-402057a82d32	155
35	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	\N	2023-12-06 19:12:42.389947	2023-12-06 19:12:42.389915	742a9866-566a-47de-8c13-161dd2d0df70	35
39	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Excellent	Excellent	Excellent	\N	\N	\N	\N	2023-12-06 19:12:42.415955	2023-12-06 19:12:42.415029	388ffac3-43e5-471a-a92d-41f646bae928	39
41	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	\N	2023-12-06 19:12:42.454931	2023-12-06 19:12:42.453968	b754bc2b-6043-4342-a683-afeb8dc2fc38	41
47	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-12-06 19:12:42.470589	2023-12-06 19:12:42.470559	5ae6e084-2f92-492d-aaa7-9cc276554cc5	47
51	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	\N	2023-12-06 19:12:42.480834	2023-12-06 19:12:42.480803	68287450-74a4-49f8-a340-9c8ec8c30e8c	51
54	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-12-06 19:12:42.492092	2023-12-06 19:12:42.492071	c2b58acc-5260-4449-b1c6-7207e21e26cd	54
62	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.535281	2023-12-06 19:12:42.533596	be367ec9-cab1-4c66-a7b2-e0e939d94206	62
63	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	\N	2023-12-06 19:12:42.544399	2023-12-06 19:12:42.544322	bf0e3cac-9584-4e0d-a8c2-ed5ce077a5cb	63
68	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-12-06 19:12:42.580036	2023-12-06 19:12:42.579018	f27e716f-cd3b-46f3-a1f9-56f4f075dc0f	68
72	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-12-06 19:12:42.58936	2023-12-06 19:12:42.589339	ed9e4e0e-2e7a-4eee-af0a-96eefb6847df	72
76	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.597024	2023-12-06 19:12:42.596972	aadd08bd-2381-43b6-af85-f3598422352c	76
79	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.600208	2023-12-06 19:12:42.600193	b30f76b8-d237-45ac-b10c-19be3d76cb13	79
83	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.606438	2023-12-06 19:12:42.606374	99a21388-2366-4e85-9cea-aa022a867892	83
85	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	\N	2023-12-06 19:12:42.640565	2023-12-06 19:12:42.639519	87f05a85-8bdd-4a54-b501-8419c66a5e1f	85
89	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	\N	2023-12-06 19:12:42.649494	2023-12-06 19:12:42.649465	b9d02555-4ffd-4f0f-acd6-bc65f2390539	89
93	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	\N	2023-12-06 19:12:42.656095	2023-12-06 19:12:42.65607	6e3f05bf-7dfd-4a89-a426-cca102ed6345	93
95	uri://ed-fi.org/SurveyLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.685977	2023-12-06 19:12:42.684815	1398f554-01dd-4266-84a9-663cfa8aa988	95
101	uri://ed-fi.org/SurveyLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:42.695601	2023-12-06 19:12:42.695579	0c094d95-06c2-4beb-a9b5-7c9c75f73bb9	101
103	uri://ed-fi.org/SurveyLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:42.702199	2023-12-06 19:12:42.702171	a729ab10-2323-47f8-bf9b-fe7f93a8fc62	103
108	uri://ed-fi.org/SurveyLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:42.709249	2023-12-06 19:12:42.709226	f0e9d5ee-1c70-4b8e-a801-f78995056560	108
115	uri://ed-fi.org/SurveyLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-12-06 19:12:42.722704	2023-12-06 19:12:42.72267	3b91a29a-ec91-49af-9f80-51b7a3ece143	115
118	uri://ed-fi.org/SurveyLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	\N	2023-12-06 19:12:42.729685	2023-12-06 19:12:42.729652	bf82d6cc-5a16-46a0-b56c-3ca41abf0817	118
122	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	\N	2023-12-06 19:12:42.762025	2023-12-06 19:12:42.760982	967e5606-7a44-4b13-b13d-6ee9f097ee03	122
129	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.814192	2023-12-06 19:12:42.813087	2320791d-8abf-4dd6-a1cd-a813b4240630	129
132	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.825473	2023-12-06 19:12:42.825368	3e3e7e48-6316-4700-ab00-e72d52f863ac	132
134	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.833094	2023-12-06 19:12:42.833058	5eb9f5f3-8bc9-4e68-b6ea-2c7a853d2203	134
136	uri://ed-fi.org/SourceSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:42.864169	2023-12-06 19:12:42.862296	a3ca69f0-9b51-498c-bb0c-87a52500c5a4	136
143	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	\N	2023-12-06 19:12:42.922356	2023-12-06 19:12:42.921031	84a69e42-7486-4be0-b863-72a91e36e593	143
146	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-12-06 19:12:42.933384	2023-12-06 19:12:42.9332	ef93f996-b2c0-4e1e-aa0a-847f354af353	146
148	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:42.965117	2023-12-06 19:12:42.964235	c46d59b2-3182-410d-858e-d944bcd39dd9	147
151	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	\N	2023-12-06 19:12:42.973793	2023-12-06 19:12:42.973775	c1443dbc-109b-4466-87fc-0fc497d38170	151
153	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	\N	2023-12-06 19:12:42.978127	2023-12-06 19:12:42.978097	e37e3244-1c61-4fcc-a2f0-b9db26eed7ac	153
38	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Average	Average	Average	\N	\N	\N	\N	2023-12-06 19:12:42.416055	2023-12-06 19:12:42.415009	2d61fbda-9a3c-423d-9300-e97a7faf6ab0	38
40	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Unsatisfactory	Unsatisfactory	Unsatisfactory	\N	\N	\N	\N	2023-12-06 19:12:42.425077	2023-12-06 19:12:42.425037	cd2d5f0f-f0f3-4e61-92c2-b89cf5b264cf	40
44	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-12-06 19:12:42.454986	2023-12-06 19:12:42.453976	f2eea527-0e49-4ac9-b194-4e49146cdab5	44
50	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	\N	2023-12-06 19:12:42.478163	2023-12-06 19:12:42.478114	ece509a2-f34a-4fb9-be5f-80c2432809ee	50
56	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	\N	2023-12-06 19:12:42.494231	2023-12-06 19:12:42.494203	e6df2d13-c5c3-4cff-9dde-d8a07a1e565a	56
58	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	\N	2023-12-06 19:12:42.498908	2023-12-06 19:12:42.498858	4377ac44-f6cf-4dfb-8544-45b8cce25cbd	58
60	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.534881	2023-12-06 19:12:42.533585	d28f863b-df7a-4f59-bf79-6db1224d8443	60
66	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:42.544747	2023-12-06 19:12:42.54468	46f7f84a-a8eb-4e76-9d5f-7a40c6374a2f	66
69	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	\N	2023-12-06 19:12:42.580037	2023-12-06 19:12:42.579046	bbd9ee67-ae44-41da-85e7-e29ea55d5355	69
73	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-12-06 19:12:42.589312	2023-12-06 19:12:42.589275	67f88b0a-b056-46e6-a1af-44074e82f2a4	73
80	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	\N	2023-12-06 19:12:42.60457	2023-12-06 19:12:42.604542	fb29964a-30d7-40ab-ac06-b89b71c27048	80
88	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	\N	2023-12-06 19:12:42.640558	2023-12-06 19:12:42.639507	d33cbbae-a305-4e40-8ab0-16ea39533581	88
92	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:42.650129	2023-12-06 19:12:42.64984	a2f776a7-7f28-4d81-81be-9c19f55438a6	92
96	uri://ed-fi.org/SurveyLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:42.686175	2023-12-06 19:12:42.684828	0d920c7c-7cc2-4fcf-bd13-4f54c36e7f1a	96
99	uri://ed-fi.org/SurveyLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:42.695139	2023-12-06 19:12:42.695088	0faa22b6-f07a-4071-8c92-f798b784e243	99
106	uri://ed-fi.org/SurveyLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:42.702828	2023-12-06 19:12:42.702811	46d63e97-3541-47ad-bc17-76c53539035e	106
107	uri://ed-fi.org/SurveyLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:42.708021	2023-12-06 19:12:42.70769	1b3a4c06-787f-4be5-b107-a62bec3221e0	107
114	uri://ed-fi.org/SurveyLevelDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-12-06 19:12:42.717715	2023-12-06 19:12:42.717689	091b1eea-e3d9-4205-b89b-59cd0a568001	114
119	uri://ed-fi.org/SurveyLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:42.72986	2023-12-06 19:12:42.729366	6fe4867f-c395-40ef-9df4-0971d485313e	119
123	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	\N	2023-12-06 19:12:42.762025	2023-12-06 19:12:42.760948	dd99ef34-1956-4bee-9a82-89fafa854e40	123
128	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.814196	2023-12-06 19:12:42.813093	057fd696-8a7b-480c-9613-02b252465691	128
130	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	\N	2023-12-06 19:12:42.823969	2023-12-06 19:12:42.823848	578270df-56bf-4061-b7db-54daea495662	130
135	uri://ed-fi.org/SourceSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:42.864259	2023-12-06 19:12:42.862293	fc2ac8a9-7e2b-479b-9ddc-4c63a1372803	135
139	uri://ed-fi.org/SourceSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:42.892993	2023-12-06 19:12:42.892959	d10e3ba8-1a70-492e-b63f-533194f9c254	139
142	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	\N	2023-12-06 19:12:42.922527	2023-12-06 19:12:42.921015	06f5d433-347b-4259-b923-732d108bb079	142
144	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	\N	2023-12-06 19:12:42.931785	2023-12-06 19:12:42.931627	9202063f-a0b5-4a12-b3a6-52094dd1e703	144
147	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:12:42.965075	2023-12-06 19:12:42.964211	a6864e63-1f40-46da-b964-9d295c2cd785	148
152	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:42.974225	2023-12-06 19:12:42.974211	5aeb0d14-4264-4928-ba9c-29621333d06c	152
156	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:42.984458	2023-12-06 19:12:42.984427	e8af965f-69c8-40df-b16c-c5171fd77487	156
158	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	\N	2023-12-06 19:12:42.987741	2023-12-06 19:12:42.987709	00841709-8da6-4411-855b-0ecdc43d6e2b	158
161	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	\N	2023-12-06 19:12:42.99718	2023-12-06 19:12:42.997136	05f29a98-6cd7-4d86-8cdf-86f72dec09d9	161
164	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	\N	2023-12-06 19:12:43.038761	2023-12-06 19:12:43.037022	f2b29e42-114f-4201-a088-ad5d0f954aec	164
171	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	\N	2023-12-06 19:12:43.059179	2023-12-06 19:12:43.058844	c170e4a9-99bf-495c-a6eb-04ee5dadad87	171
822	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	\N	2023-12-06 19:12:45.520155	2023-12-06 19:12:45.520091	67fa0b0d-ef26-4bc4-a0eb-ffae30963a83	822
159	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	\N	2023-12-06 19:12:42.991522	2023-12-06 19:12:42.991471	d1f501a7-99ea-4b97-a6ee-9812cd72e252	159
166	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	\N	2023-12-06 19:12:43.043738	2023-12-06 19:12:43.042645	a5fe108c-7d78-4e76-91ba-bf1ac24f21c0	166
167	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	\N	2023-12-06 19:12:43.05007	2023-12-06 19:12:43.049906	f65e3d51-1794-49c4-9a31-c8a539edadb2	167
173	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	\N	2023-12-06 19:12:43.063243	2023-12-06 19:12:43.063007	cfaa8ed5-1d49-49ff-b9d9-9100d6b81ee3	173
175	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:43.093731	2023-12-06 19:12:43.093703	4f8c1a6b-06bb-47f7-8b73-bb65ae2886eb	175
182	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	\N	2023-12-06 19:12:43.109182	2023-12-06 19:12:43.109151	19d142f9-5bda-499d-b7fd-95234654e495	182
187	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	\N	2023-12-06 19:12:43.119356	2023-12-06 19:12:43.119055	5aa0de71-4214-4cf3-9f35-b7e36ba9ebcb	187
190	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:43.12603	2023-12-06 19:12:43.126003	f83b9a8b-96c7-4e29-be22-20a2baed6b05	190
193	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	\N	2023-12-06 19:12:43.129631	2023-12-06 19:12:43.129603	4a63dffc-abe9-43de-8405-5a19f461b4ec	193
197	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	\N	2023-12-06 19:12:43.136577	2023-12-06 19:12:43.13655	7ba2e458-c9bc-40fa-9de8-23abd50c3228	197
198	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	\N	2023-12-06 19:12:43.142292	2023-12-06 19:12:43.142136	dc623c92-4bf7-4f3d-bb1b-509c3eac1088	198
203	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	\N	2023-12-06 19:12:43.149794	2023-12-06 19:12:43.149751	af72c283-1b30-41f9-95d0-695453669906	203
210	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	\N	2023-12-06 19:12:43.162471	2023-12-06 19:12:43.162442	a924e857-23a3-40d0-9bf8-82de151af261	210
212	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	\N	2023-12-06 19:12:43.168621	2023-12-06 19:12:43.168601	c5221655-d192-469a-afc2-7666f6aa4f3e	212
217	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	\N	2023-12-06 19:12:43.175929	2023-12-06 19:12:43.175869	2bcfa7a8-3429-4a38-b6af-136b1a8cab9a	217
220	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.205185	2023-12-06 19:12:43.20512	662aafb7-b868-4aba-b72d-1e1c74c189a6	220
223	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	\N	2023-12-06 19:12:43.214185	2023-12-06 19:12:43.214154	5544ac2e-41de-4165-98e9-4e1df0d62e95	223
230	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	\N	2023-12-06 19:12:43.225379	2023-12-06 19:12:43.225351	0e1575e0-55cd-4d08-89d8-d436f7edb8e2	230
234	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	\N	2023-12-06 19:12:43.232885	2023-12-06 19:12:43.232763	5c72f0f6-45cb-4445-9ac7-118bda46287a	234
242	uri://ed-fi.org/RelationDescriptor	Guardian	DEPRECATED: Guardian	DEPRECATED: Guardian	\N	\N	\N	\N	2023-12-06 19:12:43.247971	2023-12-06 19:12:43.247941	8e767621-c97c-458b-85d2-67480574bc0e	242
247	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.25684	2023-12-06 19:12:43.256694	d423c173-291d-4480-821f-ddfa25e6427b	247
249	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	\N	2023-12-06 19:12:43.2619	2023-12-06 19:12:43.261869	a71a5fbc-ed9a-4516-bf82-3fa0e9000ed5	249
252	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	\N	2023-12-06 19:12:43.266537	2023-12-06 19:12:43.266508	daf2bd7f-3d4f-42aa-9761-1b8bc59c9ad1	252
255	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	\N	2023-12-06 19:12:43.273888	2023-12-06 19:12:43.273845	32829b36-e578-4b60-bbed-b6d3526326ec	255
257	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	\N	2023-12-06 19:12:43.276356	2023-12-06 19:12:43.276338	4bc39eda-1c24-4d11-9d41-f1a47b105912	257
262	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.285416	2023-12-06 19:12:43.285387	c193fee9-f078-4368-8e9e-b1977ddd9e68	262
263	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	\N	2023-12-06 19:12:43.288155	2023-12-06 19:12:43.28814	d73fefbc-cbee-491b-a874-96f95983b26c	263
266	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	\N	2023-12-06 19:12:43.291589	2023-12-06 19:12:43.29157	1f509ff5-e833-412b-97fc-56a58708530e	266
268	uri://ed-fi.org/StaffClassificationDescriptor	Kindergarten Teacher	Kindergarten Teacher	Kindergarten Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.323357	2023-12-06 19:12:43.322316	de546a01-50b1-4302-8b4c-23287428585a	268
273	uri://ed-fi.org/StaffClassificationDescriptor	Secondary School Counselor	Secondary School Counselor	Secondary School Counselor	\N	\N	\N	\N	2023-12-06 19:12:43.3314	2023-12-06 19:12:43.331349	1e98bd13-9b06-48d5-b502-d2a89b1cde27	273
276	uri://ed-fi.org/StaffClassificationDescriptor	School Counselor	School Counselor	School Counselor	\N	\N	\N	\N	2023-12-06 19:12:43.337401	2023-12-06 19:12:43.337384	2e17e5bf-6584-4b30-99d7-8102713eb8b6	276
283	uri://ed-fi.org/StaffClassificationDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-12-06 19:12:43.347485	2023-12-06 19:12:43.347456	edf19f13-399b-40ad-a624-573ded40aba9	283
291	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	DEPRECATED: Instructional Aide	DEPRECATED: Instructional Aide	\N	\N	\N	\N	2023-12-06 19:12:43.362278	2023-12-06 19:12:43.362251	ad98eb53-d351-4fed-b0c5-090516f2122b	291
160	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-12-06 19:12:42.996741	2023-12-06 19:12:42.996699	914c1511-822b-4d4d-965d-aa1e8c8cd723	160
163	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-12-06 19:12:43.038616	2023-12-06 19:12:43.036994	50798945-c3c5-4e3d-9699-a1a248d8cf6c	163
169	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.050227	2023-12-06 19:12:43.050198	13d79e7f-04a2-4491-b802-422a5722cb41	169
170	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	\N	2023-12-06 19:12:43.057475	2023-12-06 19:12:43.057439	7e0d0850-6036-48b3-9cd3-86a167635c53	170
174	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	\N	2023-12-06 19:12:43.093638	2023-12-06 19:12:43.092644	da4b3f62-ee00-4537-9308-462555103978	174
178	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	\N	2023-12-06 19:12:43.104006	2023-12-06 19:12:43.103972	d7c68e62-3376-4a4b-82bf-885cb234e385	178
181	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	\N	2023-12-06 19:12:43.106367	2023-12-06 19:12:43.106269	b5a2b75b-5819-40be-8589-c884048aef78	181
185	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	\N	2023-12-06 19:12:43.116084	2023-12-06 19:12:43.116066	93f43655-bfd4-433f-8a50-3e471cef5f11	185
195	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	\N	2023-12-06 19:12:43.135051	2023-12-06 19:12:43.135029	3cfc0114-7472-479c-8aba-59ee5e984e3c	195
199	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	\N	2023-12-06 19:12:43.14273	2023-12-06 19:12:43.142674	8fb312c2-ea69-41aa-942c-fbded3714c61	199
205	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	\N	2023-12-06 19:12:43.150858	2023-12-06 19:12:43.150482	a401821b-2c5b-46f1-854a-5ce7d9743bd6	205
206	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	\N	2023-12-06 19:12:43.155338	2023-12-06 19:12:43.155311	e818ee53-5367-437f-b459-0c3a95dcc8c9	206
207	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	\N	2023-12-06 19:12:43.160635	2023-12-06 19:12:43.160598	b744dce2-0855-4c9f-93cc-84837c8632e6	207
211	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	\N	2023-12-06 19:12:43.166981	2023-12-06 19:12:43.166952	0271b44b-f858-42ee-a709-ed3775aa66be	211
218	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	\N	2023-12-06 19:12:43.20483	2023-12-06 19:12:43.203883	af11b9e0-c1de-4211-8fca-66be7eb09e58	218
222	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	\N	2023-12-06 19:12:43.213973	2023-12-06 19:12:43.213944	ece2f780-8b2c-43ac-bee0-ca841b271501	222
227	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	\N	2023-12-06 19:12:43.220248	2023-12-06 19:12:43.220213	88c67ea9-1527-4ced-9377-fe659db21fc0	227
229	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	\N	2023-12-06 19:12:43.22403	2023-12-06 19:12:43.224002	ae0448c1-04c6-4415-9961-5b06ffb61863	229
235	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	\N	2023-12-06 19:12:43.23484	2023-12-06 19:12:43.234786	1a3658ef-cb68-4a76-8b4b-e44cb34be2b5	235
237	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	\N	2023-12-06 19:12:43.239606	2023-12-06 19:12:43.239563	b69145d8-190f-428b-89b0-583ab9f20f1e	237
243	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	\N	2023-12-06 19:12:43.248561	2023-12-06 19:12:43.248486	3a17c12d-3fda-4471-b5ff-707ceafe641b	243
244	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	\N	2023-12-06 19:12:43.252178	2023-12-06 19:12:43.252151	0d3c7f09-b8df-4f99-8e40-bf42dd1810c7	244
246	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	\N	2023-12-06 19:12:43.25619	2023-12-06 19:12:43.256153	36aeee1e-23ba-44a5-af31-b65ab94c42f4	246
251	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	\N	2023-12-06 19:12:43.265612	2023-12-06 19:12:43.265303	d6e92851-04b3-4f0e-bbac-ed4b175d88c3	251
253	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.269331	2023-12-06 19:12:43.2693	35bbe2cd-769d-4fc9-9054-e74d1a088b3d	253
258	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	\N	2023-12-06 19:12:43.277068	2023-12-06 19:12:43.277051	67352c6a-e4c5-42cb-91a8-da934cd42b30	258
265	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:43.289554	2023-12-06 19:12:43.289429	dc7f90bb-845f-4772-886c-b0c5630052b9	265
267	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	\N	2023-12-06 19:12:43.29476	2023-12-06 19:12:43.294732	9c0fce8d-720c-4a98-82b0-4caa944e0133	267
270	uri://ed-fi.org/StaffClassificationDescriptor	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.323464	2023-12-06 19:12:43.322333	6aa46997-639a-4426-bfb9-2e277d27283c	270
272	uri://ed-fi.org/StaffClassificationDescriptor	Elementary School Counselor	Elementary School Counselor	Elementary School Counselor	\N	\N	\N	\N	2023-12-06 19:12:43.3314	2023-12-06 19:12:43.331349	6709c6c8-6d57-44b9-8cba-22d46e11eb21	272
279	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	\N	2023-12-06 19:12:43.340198	2023-12-06 19:12:43.340171	10ec6d1d-1d92-4253-a03d-c7c4450ad0ae	279
282	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	\N	2023-12-06 19:12:43.346609	2023-12-06 19:12:43.34658	a13b4d45-df2e-4ae0-bd98-ba72eec81695	282
287	uri://ed-fi.org/StaffClassificationDescriptor	All Other Support Staff	All Other Support Staff	All Other Support Staff	\N	\N	\N	\N	2023-12-06 19:12:43.35411	2023-12-06 19:12:43.354064	c5c3bee7-a7b4-4288-8c6a-933b20c18518	287
168	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	\N	2023-12-06 19:12:43.050509	2023-12-06 19:12:43.050481	99a9cda7-7071-4550-9013-c52feee96a83	168
172	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	\N	2023-12-06 19:12:43.060419	2023-12-06 19:12:43.060391	87c5a495-e1f4-4625-bf07-3578a7762c3e	172
177	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	\N	2023-12-06 19:12:43.096123	2023-12-06 19:12:43.096095	04ef0bc4-55e6-496b-afe2-2419687626f9	177
179	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	\N	2023-12-06 19:12:43.104024	2023-12-06 19:12:43.103941	cb98e018-27e8-4c49-8ce9-8926766f26f7	179
183	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	\N	2023-12-06 19:12:43.113056	2023-12-06 19:12:43.113027	11823b8a-c8cc-4309-94f5-c7e7d4e792f8	183
186	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	\N	2023-12-06 19:12:43.116864	2023-12-06 19:12:43.11685	065a59cf-1d92-43b9-be7c-cbfa01224f0c	186
189	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	\N	2023-12-06 19:12:43.124021	2023-12-06 19:12:43.123993	af3a4475-97d6-4a11-b6d9-f1c2e1f9a063	189
192	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	\N	2023-12-06 19:12:43.128231	2023-12-06 19:12:43.128199	78ddb897-93db-4fc1-ac93-d71ba30748e3	192
196	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	\N	2023-12-06 19:12:43.13562	2023-12-06 19:12:43.135592	612d008a-2c15-4b69-b798-9fe24c037d93	196
201	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	\N	2023-12-06 19:12:43.143379	2023-12-06 19:12:43.143352	fb1dd816-9764-4c34-8332-12dcbff5b0cc	201
204	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	\N	2023-12-06 19:12:43.150739	2023-12-06 19:12:43.150712	d5a7a7a3-24a4-4b37-9a4b-642f07b75048	204
208	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	\N	2023-12-06 19:12:43.161575	2023-12-06 19:12:43.161542	badbe14a-31f2-4999-91f8-290b979d73dd	208
214	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	\N	2023-12-06 19:12:43.169549	2023-12-06 19:12:43.169466	392ba9f1-dac0-4257-9afb-7fd769af5b45	214
216	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.175079	2023-12-06 19:12:43.175052	a917566c-0c30-4e4a-ad2e-30a6c8a0050e	216
221	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	\N	2023-12-06 19:12:43.205344	2023-12-06 19:12:43.204962	0712f3e9-9f2f-4fcf-a321-15716aa276f4	221
224	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.214039	2023-12-06 19:12:43.214008	48e040d3-a9bd-4695-a93e-469bfef9c840	224
226	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	\N	2023-12-06 19:12:43.21995	2023-12-06 19:12:43.219922	ddd6301a-9ba2-4489-9ec9-d570b0a669eb	226
231	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	\N	2023-12-06 19:12:43.22743	2023-12-06 19:12:43.227392	f09080e2-509f-459d-8f3b-9c6573e6e224	231
233	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	\N	2023-12-06 19:12:43.23146	2023-12-06 19:12:43.231444	aab55770-70a8-4a06-a38c-1adf8f30b06d	233
236	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	\N	2023-12-06 19:12:43.237874	2023-12-06 19:12:43.237779	25249677-f060-4d29-b26a-ec35b2252a17	236
239	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	\N	2023-12-06 19:12:43.241777	2023-12-06 19:12:43.241712	927a231d-0757-44ad-b836-a98c280125d5	239
241	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	\N	2023-12-06 19:12:43.247154	2023-12-06 19:12:43.247096	dbace86d-5889-4f0b-b880-a319c28a2825	241
248	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	\N	2023-12-06 19:12:43.259382	2023-12-06 19:12:43.259349	193ef635-c8a1-4c83-afe6-41ad81abeffd	248
259	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	\N	2023-12-06 19:12:43.279063	2023-12-06 19:12:43.279034	69f9aeb2-5c21-43b6-9540-bad5ca039c50	259
261	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	\N	2023-12-06 19:12:43.283397	2023-12-06 19:12:43.283372	1a68085c-1185-4a62-89bf-e2429b04f06b	261
264	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	\N	2023-12-06 19:12:43.288179	2023-12-06 19:12:43.288169	d2fef748-9faa-45e7-b254-4d6eb442acaa	264
271	uri://ed-fi.org/StaffClassificationDescriptor	Elementary Teacher	Elementary Teacher	Elementary Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.323468	2023-12-06 19:12:43.322327	e3743741-31d4-40b8-b182-f46bddea2b52	271
275	uri://ed-fi.org/StaffClassificationDescriptor	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	\N	\N	\N	\N	2023-12-06 19:12:43.332443	2023-12-06 19:12:43.332414	6aa326cd-ac33-416a-9fb3-3cd18d32e881	275
277	uri://ed-fi.org/StaffClassificationDescriptor	Librarian/Media Specialist	Librarian/Media Specialist	Librarian/Media Specialist	\N	\N	\N	\N	2023-12-06 19:12:43.338492	2023-12-06 19:12:43.338454	f02ff435-c190-4d52-9ca9-2d35118d02bc	277
280	uri://ed-fi.org/StaffClassificationDescriptor	School Administrative Support Staff	School Administrative Support Staff	School Administrative Support Staff	\N	\N	\N	\N	2023-12-06 19:12:43.346386	2023-12-06 19:12:43.346356	f811336b-36e3-4eb8-b7bd-6d425b2115c0	280
285	uri://ed-fi.org/StaffClassificationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:43.354142	2023-12-06 19:12:43.353977	e1bd37cb-85c2-4d3a-9cf1-c9ef9921c104	285
288	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	DEPRECATED: Assistant Superintendent	DEPRECATED: Assistant Superintendent	\N	\N	\N	\N	2023-12-06 19:12:43.360008	2023-12-06 19:12:43.359966	0bbc5560-74fb-4a9e-9319-73ec1623c7c3	288
180	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	\N	2023-12-06 19:12:43.105217	2023-12-06 19:12:43.105192	14ca5cbc-03c1-4a28-929a-67280ca40a42	180
184	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	\N	2023-12-06 19:12:43.113356	2023-12-06 19:12:43.113326	0d91347c-4699-4e08-9356-e97e913e6b4c	184
188	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	\N	2023-12-06 19:12:43.120523	2023-12-06 19:12:43.12044	91ee42a9-f153-4e1e-a5a8-0881ae09f3af	188
191	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	\N	2023-12-06 19:12:43.127709	2023-12-06 19:12:43.127681	0e725ea9-83d9-4763-99e0-61ce4e3cf928	191
194	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	\N	2023-12-06 19:12:43.13502	2023-12-06 19:12:43.134992	5b370a61-5187-4f39-9fde-76dc83c035af	194
200	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	\N	2023-12-06 19:12:43.143348	2023-12-06 19:12:43.14332	e91a1ef7-8dec-4349-b7b6-ddc8e0775159	200
202	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	\N	2023-12-06 19:12:43.149482	2023-12-06 19:12:43.149442	9531a052-5a1b-46ef-a6a3-baf4d551025d	202
209	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	\N	2023-12-06 19:12:43.161623	2023-12-06 19:12:43.161481	de9293dd-ffb7-4bf2-8a7b-f86b9ae117e8	209
213	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	\N	2023-12-06 19:12:43.169171	2023-12-06 19:12:43.169144	33a6df6b-607f-404b-90fc-ce30b48a1f7a	213
215	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	\N	2023-12-06 19:12:43.17494	2023-12-06 19:12:43.174884	79d26a0c-6732-49b2-af37-6f7f9aa68db0	215
219	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	\N	2023-12-06 19:12:43.205007	2023-12-06 19:12:43.204979	1db3f300-9653-4d7d-97fc-ba311e0c7d8a	219
225	uri://ed-fi.org/RelationDescriptor	Emergency	DEPRECATED: Emergency	DEPRECATED: Emergency	\N	\N	\N	\N	2023-12-06 19:12:43.214565	2023-12-06 19:12:43.214533	a1b4867f-0c74-4052-bf2b-6808a221dc1c	225
228	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.223394	2023-12-06 19:12:43.223364	57af6a27-e878-42b1-a7f6-33e59e6c251f	228
232	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	\N	2023-12-06 19:12:43.230605	2023-12-06 19:12:43.230566	d7a8300f-9543-4f62-a4b8-284b931b5b3e	232
238	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	\N	2023-12-06 19:12:43.241006	2023-12-06 19:12:43.240974	7ad4fc6a-c2c1-4b2f-b415-4d8c1be0b008	238
240	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	\N	2023-12-06 19:12:43.246831	2023-12-06 19:12:43.246688	5943102c-843a-4975-83d8-f47740e0f90a	240
245	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	\N	2023-12-06 19:12:43.254908	2023-12-06 19:12:43.254872	46847f6b-0f13-4d96-90d2-8f3c4f3d1a0a	245
250	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	\N	2023-12-06 19:12:43.262488	2023-12-06 19:12:43.262448	50c67506-11ad-44bb-8294-554e4182fa30	250
254	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-12-06 19:12:43.270314	2023-12-06 19:12:43.270088	58abf136-04bb-4965-a875-a9eb47c954b8	254
256	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	\N	2023-12-06 19:12:43.27411	2023-12-06 19:12:43.273611	7e742ff3-cd47-4434-9d3a-9f3292359f82	256
260	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	\N	2023-12-06 19:12:43.280857	2023-12-06 19:12:43.280837	89a67c9d-059d-4112-924e-e6e26a8b6b9f	260
269	uri://ed-fi.org/StaffClassificationDescriptor	Secondary Teacher	Secondary Teacher	Secondary Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.323357	2023-12-06 19:12:43.322307	838488f5-fd30-48ce-be58-342c4604e7f0	269
274	uri://ed-fi.org/StaffClassificationDescriptor	Ungraded Teacher	Ungraded Teacher	Ungraded Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.331876	2023-12-06 19:12:43.331847	d6dd53cc-8962-49a2-8768-c541abb0a6b6	274
278	uri://ed-fi.org/StaffClassificationDescriptor	Library/Media Support Staff	Library/Media Support Staff	Library/Media Support Staff	\N	\N	\N	\N	2023-12-06 19:12:43.339536	2023-12-06 19:12:43.339343	49cfe754-ec1f-4e6c-bb9f-8a35fcebe661	278
281	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrative Support Staff	LEA Administrative Support Staff	LEA Administrative Support Staff	\N	\N	\N	\N	2023-12-06 19:12:43.346352	2023-12-06 19:12:43.346323	a2b09aeb-2c41-470f-b8dd-b6901eda2f41	281
284	uri://ed-fi.org/StaffClassificationDescriptor	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	\N	\N	\N	\N	2023-12-06 19:12:43.353309	2023-12-06 19:12:43.353272	47b74a56-6da4-4e7f-ade2-687c03f614da	284
290	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	DEPRECATED: Counselor	DEPRECATED: Counselor	\N	\N	\N	\N	2023-12-06 19:12:43.360357	2023-12-06 19:12:43.360322	93529e5d-69e3-4f27-8244-c5b4caa6b8c9	290
295	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	DEPRECATED: Operational Support	DEPRECATED: Operational Support	\N	\N	\N	\N	2023-12-06 19:12:43.36934	2023-12-06 19:12:43.369301	9ae9a661-8efb-4876-8ec6-e4742901afb9	295
299	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	DEPRECATED: School Leader	DEPRECATED: School Leader	\N	\N	\N	\N	2023-12-06 19:12:43.376989	2023-12-06 19:12:43.376959	c31ecb3c-fa0b-41a4-af84-b4d38a67a01a	299
300	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	DEPRECATED: Substitute Teacher	DEPRECATED: Substitute Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.382181	2023-12-06 19:12:43.382132	d833aae6-0c9a-4b63-a7f7-6008086659e9	300
307	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-12-06 19:12:43.423696	2023-12-06 19:12:43.422568	c8aa85b7-614a-458c-a500-64a4b1736a93	307
313	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	\N	2023-12-06 19:12:43.433891	2023-12-06 19:12:43.433832	d25680f3-4dea-4791-9055-8dd23a999b2d	313
286	uri://ed-fi.org/StaffClassificationDescriptor	Instr Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	\N	\N	\N	\N	2023-12-06 19:12:43.354169	2023-12-06 19:12:43.353848	13e412bb-6aaa-4824-aeb5-869afe2ae96a	286
289	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	DEPRECATED: Assistant Principal	DEPRECATED: Assistant Principal	\N	\N	\N	\N	2023-12-06 19:12:43.360137	2023-12-06 19:12:43.360106	def0e4c4-d722-4ac9-a3b1-a648c425732c	289
293	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	DEPRECATED: LEA Specialist	DEPRECATED: LEA Specialist	\N	\N	\N	\N	2023-12-06 19:12:43.367662	2023-12-06 19:12:43.367615	00088c83-5dcb-4d0a-905e-2cd0600483cc	293
296	uri://ed-fi.org/StaffClassificationDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-12-06 19:12:43.37445	2023-12-06 19:12:43.374367	7652d908-25af-4bf0-b027-f0f4633b7ee0	296
303	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	DEPRECATED: Superintendent	DEPRECATED: Superintendent	\N	\N	\N	\N	2023-12-06 19:12:43.383543	2023-12-06 19:12:43.383531	c2d7469a-3ad2-45ee-9595-0abb07d37658	303
306	uri://ed-fi.org/AssignmentLateStatusDescriptor	Not Late	Not Late	The assignment was not submitted after the due date and/or is not marked as late.	\N	\N	\N	\N	2023-12-06 19:12:43.418452	2023-12-06 19:12:43.417353	5785e4f4-7ea0-44d5-9810-202e61c9412f	306
310	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	\N	2023-12-06 19:12:43.427348	2023-12-06 19:12:43.427308	a4d7ad4a-ac6e-4bac-819b-6460bfb8dcf1	310
315	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	\N	2023-12-06 19:12:43.438992	2023-12-06 19:12:43.438965	aa0fabec-ac63-48b0-bf1e-b814ec665b29	315
316	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:43.441843	2023-12-06 19:12:43.441788	78208d28-10ac-420c-bd35-d21bc64ead76	316
323	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:43.481162	2023-12-06 19:12:43.480215	3fde7abf-fe8d-4cbc-9f08-19bc1ff64e2a	323
327	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:43.489998	2023-12-06 19:12:43.489983	f9f164a0-9382-4f01-841e-c48fa52683bc	327
332	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:43.497823	2023-12-06 19:12:43.497794	75f53dd5-ecb1-4a1d-af69-a821110bf21f	332
334	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	\N	2023-12-06 19:12:43.539112	2023-12-06 19:12:43.538161	49184225-b35d-415f-bc65-292d2e4be64d	335
340	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	\N	2023-12-06 19:12:43.547845	2023-12-06 19:12:43.547657	ff7c4fa6-97bd-4d01-9e1e-f24a97b93306	340
342	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	\N	2023-12-06 19:12:43.583808	2023-12-06 19:12:43.582874	3f8dec5b-f267-4f41-a5ae-604b238fea1a	342
346	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	\N	2023-12-06 19:12:43.591894	2023-12-06 19:12:43.591875	207e1652-e628-4b0e-8086-0fdf3c0df5e3	346
351	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	\N	2023-12-06 19:12:43.600608	2023-12-06 19:12:43.600568	0ba9a0d7-987b-4035-a90c-994d2a2d879d	351
353	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	\N	2023-12-06 19:12:43.606984	2023-12-06 19:12:43.606954	fc046d71-5416-45e6-9059-db6de808c7f1	353
356	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	\N	2023-12-06 19:12:43.611752	2023-12-06 19:12:43.611567	e41424b7-ede6-4738-95d3-9c43412a93d6	356
362	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	\N	2023-12-06 19:12:43.620971	2023-12-06 19:12:43.620873	2c1caa28-57a2-4379-8575-25e4722bd3d1	362
366	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	\N	2023-12-06 19:12:43.629749	2023-12-06 19:12:43.628788	258c3729-59c4-490c-aed7-083dc94025a9	366
370	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	\N	2023-12-06 19:12:43.638544	2023-12-06 19:12:43.638504	0eedbb80-9a11-45ef-8ff6-a41ab2c1efe1	370
371	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	\N	2023-12-06 19:12:43.643044	2023-12-06 19:12:43.642998	169dbbfe-cd7b-43f9-ac0a-c8cd0b1930b6	371
374	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:43.676699	2023-12-06 19:12:43.675822	7e93272a-64f2-4793-995e-fa94ae4e0cd6	374
379	uri://ed-fi.org/PerformanceLevelDescriptor	Did Not Meet Standard	Did Not Meet Standard	Did Not Meet Standard	\N	\N	\N	\N	2023-12-06 19:12:43.685293	2023-12-06 19:12:43.685258	aade13f7-87f3-4056-8f2c-3fd9af402ccc	379
385	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	DEPRECATED: Commended Performance	DEPRECATED: Commended Performance	\N	\N	\N	\N	2023-12-06 19:12:43.695187	2023-12-06 19:12:43.695171	5ba5078e-ae7c-4b58-959e-14845cab7663	385
387	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	DEPRECATED: Unsatisfactory	DEPRECATED: Unsatisfactory	\N	\N	\N	\N	2023-12-06 19:12:43.701889	2023-12-06 19:12:43.701845	106a5a1a-dd88-4f28-84db-dd1b9cb93f69	387
389	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	\N	2023-12-06 19:12:43.728341	2023-12-06 19:12:43.727433	5a5fee07-9b4d-4ea4-987d-693a34e34569	389
394	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	\N	2023-12-06 19:12:43.737717	2023-12-06 19:12:43.737667	3798730b-1b81-493f-99df-968d8b61c7d6	394
396	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	\N	2023-12-06 19:12:43.744849	2023-12-06 19:12:43.744813	53b306e3-3cec-471c-95c6-2906c78fac82	396
398	uri://ed-fi.org/SubmissionStatusDescriptor	Not Submitted	Not Submitted	The assignment has not been submitted by the student/received by the teacher.	\N	\N	\N	\N	2023-12-06 19:12:43.772958	2023-12-06 19:12:43.772004	3ef6609e-3cfa-4f85-af23-e602f688c6d7	398
292	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	DEPRECATED: Instructional Coordinator	DEPRECATED: Instructional Coordinator	\N	\N	\N	\N	2023-12-06 19:12:43.367346	2023-12-06 19:12:43.367112	86e8369b-729f-4819-8ea1-82aec0e19d92	292
297	uri://ed-fi.org/StaffClassificationDescriptor	Principal	DEPRECATED: Principal	DEPRECATED: Principal	\N	\N	\N	\N	2023-12-06 19:12:43.375233	2023-12-06 19:12:43.375216	67421326-857d-4672-9951-6df23b37e1df	297
302	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	DEPRECATED: Support Services Staff	DEPRECATED: Support Services Staff	\N	\N	\N	\N	2023-12-06 19:12:43.383402	2023-12-06 19:12:43.383348	674283c1-c003-4325-a60e-94ecef1756c0	302
308	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:43.424318	2023-12-06 19:12:43.423479	75f67a5b-bdd8-45c6-b596-46ed17fd4619	308
312	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.433372	2023-12-06 19:12:43.43334	1bbedff7-1430-474b-8cf9-ceb660d49bb9	312
319	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-12-06 19:12:43.445982	2023-12-06 19:12:43.445902	08805d63-0f35-4cd5-a00a-818b73bbd380	319
322	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:43.481142	2023-12-06 19:12:43.480221	6d2fe073-9e18-4f60-80ce-c453bba79565	322
329	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:43.491877	2023-12-06 19:12:43.491723	48f82bc1-4458-44c5-88bf-b5736802400f	329
330	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:43.497175	2023-12-06 19:12:43.49716	a1c5f451-063b-4276-b3a5-aa7d7f2ea63f	330
335	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:43.539065	2023-12-06 19:12:43.538187	86d4ae18-c037-4b54-8c78-27fd4c3b5b39	334
338	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-12-06 19:12:43.547914	2023-12-06 19:12:43.547874	9c4e4985-87f0-473c-9428-d3aaca78e3fe	338
345	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	\N	2023-12-06 19:12:43.584252	2023-12-06 19:12:43.582868	74ec4e13-5456-4504-942b-86ea5aaab91f	345
349	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	\N	2023-12-06 19:12:43.597908	2023-12-06 19:12:43.597765	351e4d8a-ffc5-4b79-81d3-2bd38db163a1	349
355	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	\N	2023-12-06 19:12:43.609858	2023-12-06 19:12:43.609778	a3040d9f-594c-45f4-a5d8-287c0f99ffcc	355
357	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.613294	2023-12-06 19:12:43.613256	90dbf76b-e650-4ddb-a98f-8143073b2ff2	357
360	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	\N	2023-12-06 19:12:43.620798	2023-12-06 19:12:43.620767	12bb2609-15c6-4eb3-90cb-dec275215303	360
363	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	\N	2023-12-06 19:12:43.627766	2023-12-06 19:12:43.626987	b31304b0-0731-4916-99d3-157a3cd8a150	363
369	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	\N	2023-12-06 19:12:43.636965	2023-12-06 19:12:43.636951	c56dd42c-5241-428b-bd01-b54a2ab01d1f	369
372	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	\N	2023-12-06 19:12:43.643959	2023-12-06 19:12:43.643941	55763f33-7439-47a9-bdb7-4e8876863cac	372
377	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:43.676846	2023-12-06 19:12:43.675817	c56d0ec9-9624-47d9-a564-372884ae579c	377
380	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:43.685388	2023-12-06 19:12:43.685369	7ae8105a-1748-43f2-b1b0-861b20a91591	380
384	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	DEPRECATED: Proficient	DEPRECATED: Proficient	\N	\N	\N	\N	2023-12-06 19:12:43.693893	2023-12-06 19:12:43.693857	9d57ff0c-a55f-49fc-895f-447eeb67d86c	384
390	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	\N	2023-12-06 19:12:43.72835	2023-12-06 19:12:43.72741	dd4c12ef-68b6-43c6-8f13-7cf6266f5c67	390
395	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:43.738551	2023-12-06 19:12:43.738537	cafc6054-3e04-415e-bad2-15628071761a	395
397	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	\N	2023-12-06 19:12:43.746168	2023-12-06 19:12:43.746095	184142b6-d776-4565-b7e5-b86f294af756	397
400	uri://ed-fi.org/SubmissionStatusDescriptor	Graded	Graded	Assignment has been graded by the teacher.	\N	\N	\N	\N	2023-12-06 19:12:43.772955	2023-12-06 19:12:43.772021	80adc14e-2f09-4673-96d4-86ee4efdb117	400
406	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Desktop Computer	Desktop Computer	A desktop computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.817683	2023-12-06 19:12:43.814829	0542b057-3141-4ad2-a55e-65cb3601f81e	406
410	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Other	Other	The type of device the student uses most often to complete learning activities away from school is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:43.827668	2023-12-06 19:12:43.827634	d68f4402-4f5b-45a8-9be9-fba4752fd367	410
413	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	\N	2023-12-06 19:12:43.858032	2023-12-06 19:12:43.857104	5f9519cf-c6f6-4d11-b81a-eb3db990dd22	413
420	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	\N	2023-12-06 19:12:43.894464	2023-12-06 19:12:43.894314	b3cf84cc-124d-4070-b603-0d164b6dd91b	420
421	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	\N	2023-12-06 19:12:43.920034	2023-12-06 19:12:43.919977	09dcdc68-5bb7-430c-a8fa-03c2cc71c31e	421
294	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	DEPRECATED: LEA System Administrator	DEPRECATED: LEA System Administrator	\N	\N	\N	\N	2023-12-06 19:12:43.368341	2023-12-06 19:12:43.368108	3530389a-e8eb-4bbc-82b9-0727c797bf00	294
298	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	DEPRECATED: School Specialist	DEPRECATED: School Specialist	\N	\N	\N	\N	2023-12-06 19:12:43.375676	2023-12-06 19:12:43.375644	e4c2fe5c-bb1d-4f70-9fb1-eec2363cf784	298
301	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	DEPRECATED: State Administrator	DEPRECATED: State Administrator	\N	\N	\N	\N	2023-12-06 19:12:43.383029	2023-12-06 19:12:43.382876	c1d7be0f-a0c9-48bf-bca4-ab6de1a83811	301
304	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	DEPRECATED: Teacher	DEPRECATED: Teacher	\N	\N	\N	\N	2023-12-06 19:12:43.389835	2023-12-06 19:12:43.389765	212a549c-85ac-45df-9cb9-bab640e1e420	304
305	uri://ed-fi.org/AssignmentLateStatusDescriptor	Late	Late	The assignment was submitted by the student after the due date/time and marked as late and the score may or may not be affected.	\N	\N	\N	\N	2023-12-06 19:12:43.418443	2023-12-06 19:12:43.417359	fc9fdaeb-dc8c-4dc4-8c52-88da62029979	305
309	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:43.426806	2023-12-06 19:12:43.426779	d52c2f49-0540-43ef-8174-7c3f156e01e7	309
311	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	\N	2023-12-06 19:12:43.431545	2023-12-06 19:12:43.431527	2622ba11-6943-4a23-a410-adeadbade2dc	311
317	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	\N	2023-12-06 19:12:43.441605	2023-12-06 19:12:43.441561	06d0b9bd-8a20-4e3b-8719-9d575d410040	317
321	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	\N	2023-12-06 19:12:43.450803	2023-12-06 19:12:43.450702	67ba39a8-c2b7-47ed-8afa-f3711fa96e5f	321
325	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:43.48182	2023-12-06 19:12:43.480247	96b1d4d5-e246-4427-a545-20c696eecdf4	325
326	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:43.48857	2023-12-06 19:12:43.488556	e9bc802b-0dc9-416a-96b7-c2fe431b8f46	326
331	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:43.497688	2023-12-06 19:12:43.497553	eaec1e18-ce68-43d4-bb14-7c59337b4b48	331
337	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	\N	2023-12-06 19:12:43.540591	2023-12-06 19:12:43.538222	d9509097-6a4c-439f-bc54-57e8c2f201d2	337
343	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	\N	2023-12-06 19:12:43.583808	2023-12-06 19:12:43.58289	4d5771b4-f608-440a-a4a4-bed510e25eb3	343
347	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	\N	2023-12-06 19:12:43.594103	2023-12-06 19:12:43.594077	5bfe7c8d-8c66-4269-a6d5-3bb8743bc629	347
350	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-12-06 19:12:43.599881	2023-12-06 19:12:43.599853	0bb185ed-ca68-4f15-82f9-5d05d3fb25c2	350
354	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	\N	2023-12-06 19:12:43.606502	2023-12-06 19:12:43.606194	1c0cea4f-bea7-49ad-851c-e569edeb81ee	354
358	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	\N	2023-12-06 19:12:43.614975	2023-12-06 19:12:43.614961	91357b6a-ede7-483b-8e77-b81125a96d7d	358
361	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	\N	2023-12-06 19:12:43.621087	2023-12-06 19:12:43.621041	69f4b25a-6db2-49e8-b38e-efd19c41c530	361
365	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	\N	2023-12-06 19:12:43.628855	2023-12-06 19:12:43.628827	631f4ac1-b7fd-45e6-bc0c-c5f702103a67	365
367	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	\N	2023-12-06 19:12:43.635506	2023-12-06 19:12:43.635471	37b272fe-28d5-407c-b558-5b0287fa7b1c	367
376	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:43.676718	2023-12-06 19:12:43.675797	d5866885-ee43-4340-badf-4bedcf510ff3	376
381	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-12-06 19:12:43.685272	2023-12-06 19:12:43.685084	302a5b9c-b149-4822-bb8f-8a6d14b13c47	381
383	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	DEPRECATED: Minimum	DEPRECATED: Minimum	\N	\N	\N	\N	2023-12-06 19:12:43.693914	2023-12-06 19:12:43.693891	5d6d84d9-fcaf-4bc2-8c77-b7dff232d043	383
386	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	DEPRECATED: Satisfactory	DEPRECATED: Satisfactory	\N	\N	\N	\N	2023-12-06 19:12:43.696961	2023-12-06 19:12:43.69687	13e1b7e9-3329-4ca4-bfe3-73eab390bea0	386
391	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	\N	2023-12-06 19:12:43.729064	2023-12-06 19:12:43.727415	464bb110-8784-4a2b-ae30-c98ba41cd48f	391
392	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	\N	2023-12-06 19:12:43.736961	2023-12-06 19:12:43.736824	15f2011c-8836-4644-875d-059bed1be7fa	392
401	uri://ed-fi.org/SubmissionStatusDescriptor	Returned	Returned	Assignment is returned by the teacher or reclaimed by the student for revision. Assignment needs to be submitted again after revisions have been made.	\N	\N	\N	\N	2023-12-06 19:12:43.773058	2023-12-06 19:12:43.772035	9f89bb5a-c448-4d34-93d5-7b236cad70a0	401
402	uri://ed-fi.org/SubmissionStatusDescriptor	Submitted	Submitted	The assignment has been submitted by the student but has not been graded.	\N	\N	\N	\N	2023-12-06 19:12:43.781019	2023-12-06 19:12:43.780974	3d7f12c4-d8a3-48fa-a0b3-aa4287166157	402
405	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	\N	2023-12-06 19:12:43.810326	2023-12-06 19:12:43.809331	b62ec762-3468-4896-a793-c17e123d36a9	405
409	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Tablet	Tablet	A Tablet is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.821856	2023-12-06 19:12:43.821827	fb5033df-4a07-4e23-9a40-1135449124f6	409
314	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:43.438695	2023-12-06 19:12:43.438671	e6bbb3d0-59ae-4ef6-ba32-7a3f1ced305e	314
318	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	\N	2023-12-06 19:12:43.44545	2023-12-06 19:12:43.445434	0fc0eae5-9e29-40d1-a135-9bc754289262	318
320	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:43.449399	2023-12-06 19:12:43.449371	6d9ea35f-e646-471e-b3d8-7cfaca0d78c9	320
324	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:43.481365	2023-12-06 19:12:43.480237	d143e995-8ada-4732-bdcb-f9f67b4396ef	324
328	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:43.490553	2023-12-06 19:12:43.490537	53745375-3796-4b3f-b214-2e9018070529	328
333	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:43.499179	2023-12-06 19:12:43.49915	04786c55-3f56-4c47-a013-376facea4dd9	333
336	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	\N	2023-12-06 19:12:43.539122	2023-12-06 19:12:43.538207	e1ce36ff-0401-4714-890d-49ee78cddd53	336
339	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	\N	2023-12-06 19:12:43.548461	2023-12-06 19:12:43.548434	efd5a43b-c8f6-4cca-9179-f6746e94acdb	339
341	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	\N	2023-12-06 19:12:43.55152	2023-12-06 19:12:43.551479	869f6114-14fd-4c3e-865d-d58e8cd52917	341
344	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	\N	2023-12-06 19:12:43.583799	2023-12-06 19:12:43.582859	f17c5b3a-f88f-4200-8d52-eab2e12b22bc	344
348	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	\N	2023-12-06 19:12:43.59464	2023-12-06 19:12:43.594609	740fad2e-01a0-4209-a918-a6a2d30e90ea	348
352	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	\N	2023-12-06 19:12:43.603208	2023-12-06 19:12:43.603195	33bc52fb-77a2-4ac8-b9d5-ec01974b01e9	352
359	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	\N	2023-12-06 19:12:43.617492	2023-12-06 19:12:43.617464	3b9dbe30-cb0e-485b-aa1d-5a40c6a782ac	359
364	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	\N	2023-12-06 19:12:43.628285	2023-12-06 19:12:43.627689	c3971154-4519-437f-ad28-7f34a1ae45d1	364
368	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	\N	2023-12-06 19:12:43.636648	2023-12-06 19:12:43.636602	a4cc5f0b-3dc4-4f54-adeb-920efd6c127f	368
373	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	\N	2023-12-06 19:12:43.644963	2023-12-06 19:12:43.64492	0eaa1a80-72ee-4645-b018-26b6f03f0625	373
375	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:43.676748	2023-12-06 19:12:43.675787	6856051b-516e-43f8-800b-61068c47e2a0	375
378	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:43.685121	2023-12-06 19:12:43.685093	84732b43-fce0-40e4-83cf-4c042871f577	378
382	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	DEPRECATED: Above Benchmark	DEPRECATED: Above Benchmark	\N	\N	\N	\N	2023-12-06 19:12:43.691459	2023-12-06 19:12:43.691309	aae61991-05be-4d2d-9b2e-cc411a382e7d	382
388	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	\N	2023-12-06 19:12:43.728278	2023-12-06 19:12:43.727441	4469bd1f-06f2-4efd-9cc2-13c2ca2a2eb0	388
393	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	\N	2023-12-06 19:12:43.737575	2023-12-06 19:12:43.7375	aab2688a-38de-40af-8d24-ffbdf618447a	393
399	uri://ed-fi.org/SubmissionStatusDescriptor	Exempt	Exempt	The student is exempted from the assignment and the assignment's score will not affect the student's grade calculations.	\N	\N	\N	\N	2023-12-06 19:12:43.772967	2023-12-06 19:12:43.772014	47e93252-8f66-4ded-9eb2-6ac6514e6e85	399
404	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	\N	2023-12-06 19:12:43.810327	2023-12-06 19:12:43.809253	e1dac12c-c877-4bc3-9a0d-4b9796301d2e	404
407	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Laptop Computer	Laptop Computer	A Laptop Computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.820558	2023-12-06 19:12:43.820516	13202728-a926-40a5-8f1a-4356d811e5ee	407
412	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Smartphone	Smartphone	A Smartphone is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.830901	2023-12-06 19:12:43.830873	079d2055-3615-4952-985e-bfcc710f2b02	412
416	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:43.858023	2023-12-06 19:12:43.857129	2cef6f9c-2794-4bca-a0b8-f7ae9a798c12	416
418	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	\N	2023-12-06 19:12:43.893718	2023-12-06 19:12:43.893697	4d006119-e162-426e-83b9-a9f8fb9fa839	418
424	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	\N	2023-12-06 19:12:43.955093	2023-12-06 19:12:43.95279	beba70ae-7b01-4159-9491-7e6c6db3e152	424
430	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:43.986759	2023-12-06 19:12:43.986719	ceafe7cc-e3bb-46f0-a7c0-1df632aaab58	430
435	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	\N	2023-12-06 19:12:43.997108	2023-12-06 19:12:43.996955	038c005c-ed68-4dfb-b0a2-637dbf934e25	435
437	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	\N	2023-12-06 19:12:44.003448	2023-12-06 19:12:44.003433	26904af1-2ec7-43b1-95b4-229dd9086663	437
442	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.013363	2023-12-06 19:12:44.013337	c2275c48-57e7-4802-9572-ad9c1bc728a0	442
403	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	\N	2023-12-06 19:12:43.810338	2023-12-06 19:12:43.809343	402d8888-8447-484b-a533-e55f510912de	403
408	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Chromebook	Chromebook	A Chromebook is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.82051	2023-12-06 19:12:43.820453	6f5ba736-9523-4c54-b5ca-ec81b0f21d5c	408
411	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	None	None	There is not a device the student uses to complete learning activities away from school.	\N	\N	\N	\N	2023-12-06 19:12:43.830011	2023-12-06 19:12:43.829968	315dfd53-72e9-4b4e-b8cd-3c90c729d7d9	411
415	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-12-06 19:12:43.857993	2023-12-06 19:12:43.857114	ca01e9a9-41d3-421f-b7ae-b6c246e58ba3	415
417	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	\N	2023-12-06 19:12:43.893494	2023-12-06 19:12:43.892521	e5d8e855-4ac7-4b4e-a44f-9f5b143fa04f	417
423	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-12-06 19:12:43.954308	2023-12-06 19:12:43.952687	be6eaf62-05fc-4462-9e98-0a902d8498b9	423
426	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	\N	2023-12-06 19:12:43.976683	2023-12-06 19:12:43.975814	aefb8130-d429-4895-9dcd-42c309710965	426
428	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:43.986118	2023-12-06 19:12:43.986082	d327f7a8-9d18-452c-ae14-19d73d3f92b9	428
434	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	\N	2023-12-06 19:12:43.997541	2023-12-06 19:12:43.997508	f7f42436-eaa2-45d5-8f95-f2c5886d84d2	434
438	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-12-06 19:12:44.003283	2023-12-06 19:12:44.003196	dceb1469-b2eb-4dfa-9745-a4e0ba314063	438
440	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	\N	2023-12-06 19:12:44.009704	2023-12-06 19:12:44.009675	128cce7b-ff6b-4059-89e7-3c0a2be53ca0	440
443	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	\N	2023-12-06 19:12:44.014462	2023-12-06 19:12:44.014448	b961aed4-c1b1-45fa-ab13-3c3a572246aa	443
444	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	\N	2023-12-06 19:12:44.017801	2023-12-06 19:12:44.017679	45cbc302-b4c6-48a0-9bf8-ef3b77c84322	444
447	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	\N	2023-12-06 19:12:44.023262	2023-12-06 19:12:44.02324	4240e502-aa58-4cf6-86d8-56ea3bc5f008	447
450	uri://ed-fi.org/ProviderCategoryDescriptor	Community care	Community care	Community care	\N	\N	\N	\N	2023-12-06 19:12:44.054772	2023-12-06 19:12:44.053893	ad25fbd7-1141-426f-aa8b-6b3ed62e51ec	450
455	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home - large	Family child care home - large	Family child care home - large	\N	\N	\N	\N	2023-12-06 19:12:44.066974	2023-12-06 19:12:44.066641	38172070-10bf-43b4-8de5-cd96ade819c1	455
460	uri://ed-fi.org/ProviderCategoryDescriptor	School-based child care	School-based child care	School-based child care	\N	\N	\N	\N	2023-12-06 19:12:44.077742	2023-12-06 19:12:44.07766	8f0dd822-2171-4d9a-b2c5-241e8ed62ed7	460
464	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	DEPRECATED: Center-SA Only	DEPRECATED: Center-SA Only	\N	\N	\N	\N	2023-12-06 19:12:44.086395	2023-12-06 19:12:44.086367	b8154bd4-dd3c-4632-aa15-375097f9b3b3	464
466	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.092077	2023-12-06 19:12:44.091888	3da80bfc-23c8-4ebf-a45b-d873d373e16b	466
471	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-12-06 19:12:44.124086	2023-12-06 19:12:44.122838	48f05af4-9e56-47bb-b76f-a7ccfef44e6a	471
477	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	\N	2023-12-06 19:12:44.137638	2023-12-06 19:12:44.1376	055238fc-0d59-4916-9a4a-ddeabe0641c9	477
480	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	\N	2023-12-06 19:12:44.142323	2023-12-06 19:12:44.14185	dfaa85a3-6679-405e-ac89-68d70f6eaed3	480
485	uri://ed-fi.org/QuestionFormDescriptor	Checkbox	Checkbox	Checkbox	\N	\N	\N	\N	2023-12-06 19:12:44.176682	2023-12-06 19:12:44.175598	72fc03c3-735a-4604-b1c0-c2c0ca67ffc6	485
489	uri://ed-fi.org/QuestionFormDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-12-06 19:12:44.186809	2023-12-06 19:12:44.186795	1549ba1a-ece5-4f4e-9477-0a141b1f6b36	489
493	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	\N	2023-12-06 19:12:44.227681	2023-12-06 19:12:44.226259	1cfca975-6f0c-4156-b003-d207dcdba44a	493
497	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-12-06 19:12:44.263862	2023-12-06 19:12:44.262728	d04586b6-14e0-404a-b6cf-4593f7d87383	498
500	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-12-06 19:12:44.272401	2023-12-06 19:12:44.272358	1ce2f813-2404-4760-b629-90054e9107df	500
506	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-12-06 19:12:44.280026	2023-12-06 19:12:44.27977	314ca61a-b509-4636-87c3-b2a06d4fc74e	506
510	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-12-06 19:12:44.289296	2023-12-06 19:12:44.289273	677f8b35-ba5d-4aac-8631-8553c9d92f5c	510
513	uri://ed-fi.org/AssessmentPeriodDescriptor	Beginning of Year	Beginning of Year	Beginning of Year	\N	\N	\N	\N	2023-12-06 19:12:44.324181	2023-12-06 19:12:44.323119	0dab6ff1-cb88-498a-8e41-ded1318fb408	514
518	uri://ed-fi.org/AssessmentPeriodDescriptor	Summer	Summer	Summer	\N	\N	\N	\N	2023-12-06 19:12:44.334476	2023-12-06 19:12:44.334447	959de3e5-4e8b-4785-96c5-d1cf1ebdf871	518
414	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-12-06 19:12:43.858035	2023-12-06 19:12:43.857136	1e5a2573-ec72-4c08-8545-6495a8fb16eb	414
419	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	\N	2023-12-06 19:12:43.894349	2023-12-06 19:12:43.894305	d4b64e8b-1738-4980-9109-34005ef8fcdc	419
425	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:43.976692	2023-12-06 19:12:43.975805	d4816581-02a0-4cc0-93e0-221056066e0c	425
427	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:43.984083	2023-12-06 19:12:43.984035	05eb8631-e639-4c8c-945b-9df0fe68a2ca	427
432	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	\N	2023-12-06 19:12:43.995499	2023-12-06 19:12:43.995469	557952a2-deb6-4dac-a4bf-b0830ca9ce6d	432
439	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-12-06 19:12:44.007452	2023-12-06 19:12:44.007241	7ba49467-3b54-45a4-87cf-30f384d74eeb	439
441	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:44.011879	2023-12-06 19:12:44.011847	66ca8619-a1bd-4e4e-932d-93835b9f07d9	441
446	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	\N	2023-12-06 19:12:44.022455	2023-12-06 19:12:44.022414	1a89cfdb-1513-4544-acd3-7ff3e0e63115	446
449	uri://ed-fi.org/ProviderCategoryDescriptor	Care in your own home	Care in your own home	Care in your own home	\N	\N	\N	\N	2023-12-06 19:12:44.054732	2023-12-06 19:12:44.053868	aaf76f87-4160-4904-9465-91e7a0e48969	449
452	uri://ed-fi.org/ProviderCategoryDescriptor	Head Start and Early Head Start	Head Start and Early Head Start	Head Start and Early Head Start	\N	\N	\N	\N	2023-12-06 19:12:44.063284	2023-12-06 19:12:44.063243	b69ccfe0-cc99-4ca7-beb7-36c80a2ec3f9	452
458	uri://ed-fi.org/ProviderCategoryDescriptor	Resident camps	Resident camps	Resident camps	\N	\N	\N	\N	2023-12-06 19:12:44.071491	2023-12-06 19:12:44.071477	7a3a16a0-13ec-4131-bcbc-ef3559cf97f4	458
462	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	DEPRECATED: Center-EC	DEPRECATED: Center-EC	\N	\N	\N	\N	2023-12-06 19:12:44.080531	2023-12-06 19:12:44.080483	47469c90-0fe6-43ba-93e0-92dafe09b21e	462
467	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.092544	2023-12-06 19:12:44.092487	3cf36a61-d957-49b8-8de3-ec39d5955bc7	467
472	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	\N	2023-12-06 19:12:44.124059	2023-12-06 19:12:44.122861	7dfe3005-dced-4bab-b96b-0e416796e0c8	472
474	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	\N	2023-12-06 19:12:44.132572	2023-12-06 19:12:44.132547	39b982b8-1584-40a4-a39e-4e4e545bbc14	474
479	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	\N	2023-12-06 19:12:44.142219	2023-12-06 19:12:44.142189	30d0f9b4-1d58-43c7-84aa-8f543ca48874	479
481	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	\N	2023-12-06 19:12:44.147715	2023-12-06 19:12:44.147681	3555069e-b918-47dd-a1ed-501f5285f9d2	481
484	uri://ed-fi.org/QuestionFormDescriptor	Radio box	Radio box	Radio box	\N	\N	\N	\N	2023-12-06 19:12:44.176682	2023-12-06 19:12:44.175631	02ab57dc-b4bd-42b8-896f-f91a72049a49	484
488	uri://ed-fi.org/QuestionFormDescriptor	Matrix of textboxes	Matrix of textboxes	Matrix of textboxes	\N	\N	\N	\N	2023-12-06 19:12:44.185919	2023-12-06 19:12:44.185745	1f12cee1-8305-4f0b-867f-c57b81c68767	488
490	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	\N	2023-12-06 19:12:44.221625	2023-12-06 19:12:44.220374	15d257ff-ac0c-4f8e-bc33-b2b9a7dc25d4	490
494	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-12-06 19:12:44.229331	2023-12-06 19:12:44.229229	3495f36d-b439-43ed-8d43-fda65dfe949d	494
496	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-12-06 19:12:44.263862	2023-12-06 19:12:44.262735	42259614-b278-4eb2-bd5a-d80a3f1b10da	496
501	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-12-06 19:12:44.272587	2023-12-06 19:12:44.272559	4318d356-19e7-462d-ab25-bdf330e45fd7	501
505	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-12-06 19:12:44.28004	2023-12-06 19:12:44.280012	76d606cf-d03a-49bf-805a-bee1a7e365fd	505
511	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-12-06 19:12:44.289396	2023-12-06 19:12:44.289269	4de52a65-337e-4e14-ac24-cdbbcc2423b9	511
515	uri://ed-fi.org/AssessmentPeriodDescriptor	Middle of Year	Middle of Year	Middle of Year	\N	\N	\N	\N	2023-12-06 19:12:44.324181	2023-12-06 19:12:44.323109	b0fcdfb5-c2ca-4ccc-8c27-4e5b81a4477b	515
521	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	\N	2023-12-06 19:12:44.360936	2023-12-06 19:12:44.359928	a15609aa-7bd3-41dd-bf01-c1aa53cdc6cd	521
524	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:44.36965	2023-12-06 19:12:44.369593	617f1ca8-5888-484a-ac10-cc41b66c9652	524
529	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-12-06 19:12:44.378639	2023-12-06 19:12:44.378612	6fa454c5-e553-40d4-ba40-281d2b4b04b9	529
532	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	\N	2023-12-06 19:12:44.40887	2023-12-06 19:12:44.407823	aa9236b0-83bd-4054-ab38-01dbabc8c735	531
534	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	\N	2023-12-06 19:12:44.417126	2023-12-06 19:12:44.417097	7ef02115-6d64-44dc-b98e-6661feacc84e	534
888	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	\N	2023-12-06 19:12:45.658005	2023-12-06 19:12:45.657991	25016594-3629-46ff-816c-660a22840388	888
422	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	\N	2023-12-06 19:12:43.954286	2023-12-06 19:12:43.952779	cdfd021c-dfc6-46b4-8042-58c563d40aa0	422
429	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	\N	2023-12-06 19:12:43.985847	2023-12-06 19:12:43.985744	ce402419-aeb2-4d67-bc9d-b717eae3bcbe	429
431	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	\N	2023-12-06 19:12:43.992274	2023-12-06 19:12:43.992249	f30f1bb4-b11e-48ff-b237-3fe29cb68989	431
433	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	\N	2023-12-06 19:12:43.995863	2023-12-06 19:12:43.995432	c1636754-4415-42bf-a449-2f9c9d1e69f8	433
436	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	\N	2023-12-06 19:12:44.001925	2023-12-06 19:12:44.001886	ce19832d-5040-4b48-9f71-a65424935e35	436
448	uri://ed-fi.org/ProviderCategoryDescriptor	Child care center	Child care center	Child care center	\N	\N	\N	\N	2023-12-06 19:12:44.054766	2023-12-06 19:12:44.053899	2ac7bf66-be97-467f-9d64-c9d057837eb2	448
454	uri://ed-fi.org/ProviderCategoryDescriptor	On-premise child care	On-premise child care	On-premise child care	\N	\N	\N	\N	2023-12-06 19:12:44.06543	2023-12-06 19:12:44.065415	53751b2f-21d6-44ea-8cf8-7869086702d9	454
457	uri://ed-fi.org/ProviderCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.0711	2023-12-06 19:12:44.071071	0748095a-84e9-41c7-b2a0-78b2c7209b7e	457
459	uri://ed-fi.org/ProviderCategoryDescriptor	School-age child care	School-age child care	School-age child care	\N	\N	\N	\N	2023-12-06 19:12:44.076185	2023-12-06 19:12:44.076156	d5d25f42-25fe-444a-b0a0-249fbb5e48a9	459
463	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	DEPRECATED: Center-EC with SA	DEPRECATED: Center-EC with SA	\N	\N	\N	\N	2023-12-06 19:12:44.083333	2023-12-06 19:12:44.083267	b2783946-0bea-4725-a315-dd95bbba9da7	463
469	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:44.123926	2023-12-06 19:12:44.122844	69e5f13f-6eee-46c1-b589-a848cdce9a37	469
475	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	\N	2023-12-06 19:12:44.133603	2023-12-06 19:12:44.133591	b915aab6-a3e7-4aac-aba6-0709dd641444	475
478	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	\N	2023-12-06 19:12:44.139825	2023-12-06 19:12:44.139782	c290936f-9840-4595-8c06-b124fe956856	478
482	uri://ed-fi.org/QuestionFormDescriptor	Matrix of numeric ratings	Matrix of numeric ratings	Matrix of numeric ratings	\N	\N	\N	\N	2023-12-06 19:12:44.17668	2023-12-06 19:12:44.175604	e938247f-6480-4873-8e2c-4484c1567da6	482
486	uri://ed-fi.org/QuestionFormDescriptor	Textbox	Textbox	Textbox	\N	\N	\N	\N	2023-12-06 19:12:44.185867	2023-12-06 19:12:44.185801	6c2516e5-b820-4eb5-9842-d627dff2131b	486
492	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	\N	2023-12-06 19:12:44.227682	2023-12-06 19:12:44.226395	9c09c192-c9c9-4ddc-aa08-d07b9081029a	492
499	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-12-06 19:12:44.263869	2023-12-06 19:12:44.262743	51049ffa-d263-4a82-8cb7-34c500cbd195	499
503	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-12-06 19:12:44.273671	2023-12-06 19:12:44.273657	175bb59e-413f-44ff-a414-bdfed32b5fd7	503
507	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-12-06 19:12:44.281403	2023-12-06 19:12:44.281257	c23754d1-eeac-41b1-881f-cf42492b398c	507
508	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-12-06 19:12:44.28707	2023-12-06 19:12:44.287036	26f4e904-00a7-49f3-bfbc-fe82f28e6582	508
514	uri://ed-fi.org/AssessmentPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-12-06 19:12:44.324181	2023-12-06 19:12:44.323142	841f0707-4154-441e-8716-92717250be2f	513
520	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	\N	2023-12-06 19:12:44.36091	2023-12-06 19:12:44.359944	e5ff42a2-3b98-44a7-9029-31c00d9867bb	520
523	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-12-06 19:12:44.368152	2023-12-06 19:12:44.368116	3140d8c2-73c3-40fb-95e3-6d106b39159a	523
527	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:44.375705	2023-12-06 19:12:44.375108	4e282aa4-1f14-4acc-aca2-61c935db9624	527
533	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:12:44.408865	2023-12-06 19:12:44.40784	ee782e5d-496f-4f00-b544-7d95e79e2952	533
535	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	\N	2023-12-06 19:12:44.417383	2023-12-06 19:12:44.417348	8964d9ed-f857-49b6-a92a-32af0f9514d9	535
540	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.424665	2023-12-06 19:12:44.424636	8bb2f3e6-86a3-4ca1-90f5-68fc2ab086bf	540
542	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.429187	2023-12-06 19:12:44.429158	eec55c0f-8104-40d3-b92f-338f6892f664	542
548	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.439049	2023-12-06 19:12:44.439018	9623a82e-1b5d-4a17-b5d1-be355286cbd9	548
550	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-12-06 19:12:44.471255	2023-12-06 19:12:44.470336	3571942b-fe02-440e-b6d3-17bb934e0419	550
558	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:12:44.513637	2023-12-06 19:12:44.511196	017ae259-cd8c-44db-9bc5-aee61fa7d357	558
561	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	\N	2023-12-06 19:12:44.548528	2023-12-06 19:12:44.547568	6f988af9-fdb4-4819-8c41-68e7d79a5689	561
567	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	\N	2023-12-06 19:12:44.557607	2023-12-06 19:12:44.55697	036dcb4b-0bc4-4343-ad47-5ddd86d187f4	567
445	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-12-06 19:12:44.022455	2023-12-06 19:12:44.02243	3770b83b-5a8a-4717-8c14-15251ee4d24a	445
451	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home	Family child care home	Family child care home	\N	\N	\N	\N	2023-12-06 19:12:44.05477	2023-12-06 19:12:44.053875	c7055d57-ef79-4923-b7fa-4704853153f8	451
453	uri://ed-fi.org/ProviderCategoryDescriptor	Ministry care	Ministry care	Ministry care	\N	\N	\N	\N	2023-12-06 19:12:44.063469	2023-12-06 19:12:44.063394	95f5b141-4f08-449b-b9a3-87ee6ceca04c	453
456	uri://ed-fi.org/ProviderCategoryDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-12-06 19:12:44.069756	2023-12-06 19:12:44.069706	3ceacc52-cfa6-4437-a47f-105783f4dda4	456
461	uri://ed-fi.org/ProviderCategoryDescriptor	Residential treatment care	Residential treatment care	Residential treatment care	\N	\N	\N	\N	2023-12-06 19:12:44.07908	2023-12-06 19:12:44.079048	6f79b49a-6301-4d46-b584-a0632f3ecda4	461
465	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	\N	\N	\N	\N	2023-12-06 19:12:44.087181	2023-12-06 19:12:44.087033	4f99a53f-35c4-4e9f-9c0f-d3b8e601a984	465
468	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	DEPRECATED: Not Applicable	DEPRECATED: Not Applicable	\N	\N	\N	\N	2023-12-06 19:12:44.093794	2023-12-06 19:12:44.093759	2937fce5-c4fb-48d7-89a5-4fb1f7d6dd97	468
470	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	\N	2023-12-06 19:12:44.12407	2023-12-06 19:12:44.122873	203f4d0f-23da-4230-b8be-794fec40511b	470
473	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	\N	2023-12-06 19:12:44.130729	2023-12-06 19:12:44.130692	122bdcd1-e827-4f47-ae01-0f8f3ca0d3ab	473
476	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	\N	2023-12-06 19:12:44.135386	2023-12-06 19:12:44.134855	bc0647f0-c736-465a-9de9-16763d435214	476
483	uri://ed-fi.org/QuestionFormDescriptor	Dropdown	Dropdown	Dropdown	\N	\N	\N	\N	2023-12-06 19:12:44.17668	2023-12-06 19:12:44.175612	076a3471-bba4-48df-8b9d-af7af652f2da	483
487	uri://ed-fi.org/QuestionFormDescriptor	Matrix of dropdowns	Matrix of dropdowns	Matrix of dropdowns	\N	\N	\N	\N	2023-12-06 19:12:44.186009	2023-12-06 19:12:44.185996	d3b45f1a-0c44-4c1e-a143-f2b799c4e972	487
491	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	\N	2023-12-06 19:12:44.221646	2023-12-06 19:12:44.220394	b32230e6-e751-42ea-ac46-e6d13664bf2a	491
495	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	\N	2023-12-06 19:12:44.229675	2023-12-06 19:12:44.229493	bebc7ddd-7558-46be-aaa0-5487c38003a4	495
498	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-12-06 19:12:44.263881	2023-12-06 19:12:44.262759	7be85cae-c607-47ef-b118-783eaf6a38ef	497
502	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-12-06 19:12:44.272976	2023-12-06 19:12:44.272952	0b08625e-9af5-4487-ae2f-f11570140659	502
504	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-12-06 19:12:44.279356	2023-12-06 19:12:44.279338	f044b88f-9b1a-4a00-a8cb-206b44baeaf8	504
509	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.288408	2023-12-06 19:12:44.288337	932bba83-680c-4505-8b79-e20249b5f77c	509
512	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-12-06 19:12:44.292862	2023-12-06 19:12:44.29282	182d5a2d-eebd-41c4-a3ca-bd1255ed049f	512
516	uri://ed-fi.org/AssessmentPeriodDescriptor	Fall	Fall	Fall	\N	\N	\N	\N	2023-12-06 19:12:44.324204	2023-12-06 19:12:44.323124	f1fec8d6-cf21-4c12-98e3-753c8eb40894	516
517	uri://ed-fi.org/AssessmentPeriodDescriptor	Spring	Spring	Spring	\N	\N	\N	\N	2023-12-06 19:12:44.334385	2023-12-06 19:12:44.334348	99f0b85d-e705-4229-9bc7-7c4d4e3b3697	517
519	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:44.36091	2023-12-06 19:12:44.359917	48e49ac8-1c58-4584-bae9-242bcb98b3b1	519
525	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	\N	2023-12-06 19:12:44.369827	2023-12-06 19:12:44.369812	a02f8eed-cd39-4fec-9b23-eebfe960d86e	525
528	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	\N	2023-12-06 19:12:44.376587	2023-12-06 19:12:44.376426	c308516b-7392-42e8-88e9-8d4b6a7ee971	528
531	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	\N	2023-12-06 19:12:44.408853	2023-12-06 19:12:44.407813	977e6337-6942-4e9b-ba3b-2889fb05bb2d	530
536	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-12-06 19:12:44.417071	2023-12-06 19:12:44.416924	ecf8878a-4212-4e88-9eeb-de40f45e09b1	536
538	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-12-06 19:12:44.422837	2023-12-06 19:12:44.422784	12952571-16f0-4e97-bf35-418a337213ee	538
544	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.431177	2023-12-06 19:12:44.431149	6e75732b-2c01-4b0f-8ace-c611c6f288cb	544
546	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.436117	2023-12-06 19:12:44.435904	3a5fea9c-2840-4b14-ae45-02795623075d	546
551	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:44.471272	2023-12-06 19:12:44.470329	be615587-3cb7-4422-ae68-9049d2f7b908	551
554	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	\N	2023-12-06 19:12:44.482319	2023-12-06 19:12:44.481907	8cdb16ef-1952-4dfa-b514-892c4064072f	554
555	uri://ed-fi.org/DiagnosisDescriptor	Low Attendance	DEPRECATED: Low Attendance	DEPRECATED: Low Attendance	\N	\N	\N	\N	2023-12-06 19:12:44.507559	2023-12-06 19:12:44.506522	15aac821-6eb1-433d-9436-e60ac5d2e209	555
559	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:44.515856	2023-12-06 19:12:44.515809	9e7a6984-8df6-4d32-b639-85b87263fc27	559
522	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	\N	2023-12-06 19:12:44.36091	2023-12-06 19:12:44.359937	f83abb52-b67f-41d0-bd59-d057182c5941	522
526	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.371857	2023-12-06 19:12:44.371832	bd058359-03e2-4886-817f-ab75b050c2f8	526
530	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	\N	2023-12-06 19:12:44.408865	2023-12-06 19:12:44.407807	7047e787-682f-4582-be0c-fca2eba7d5f2	532
537	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-12-06 19:12:44.418167	2023-12-06 19:12:44.418053	02ec1ea2-64b6-4cd9-8c69-98c3982ad2e4	537
541	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.424806	2023-12-06 19:12:44.424481	1885e09d-43b2-45ce-af2a-645797544a9b	541
543	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.430468	2023-12-06 19:12:44.43044	0df3e99e-b53e-45dd-927f-de2e459d751a	543
545	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.433867	2023-12-06 19:12:44.43369	55a3b77c-32a4-4b57-ba38-a92a5bb3c945	545
549	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-12-06 19:12:44.439938	2023-12-06 19:12:44.439894	48a161dd-0dc8-4ad2-a3df-85d548eee7fa	549
553	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-12-06 19:12:44.471927	2023-12-06 19:12:44.470351	ddd80b68-a4d9-4b2b-b2f2-a317b0cc90b2	553
556	uri://ed-fi.org/DiagnosisDescriptor	Dropout Risk	DEPRECATED: Dropout Risk	DEPRECATED: Dropout Risk	\N	\N	\N	\N	2023-12-06 19:12:44.507557	2023-12-06 19:12:44.50653	453763fb-88fb-4582-8b53-350295efc090	556
560	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:44.516385	2023-12-06 19:12:44.51629	983c19b8-38da-418e-a539-f31e4bfc0399	560
564	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	\N	2023-12-06 19:12:44.548907	2023-12-06 19:12:44.547598	baca4878-71b8-4a4d-88b0-00c60537300d	564
565	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.557703	2023-12-06 19:12:44.557648	e87c37f0-d656-4ec0-a529-70d5152428d7	565
570	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	\N	2023-12-06 19:12:44.590457	2023-12-06 19:12:44.589609	f2f1d207-b217-40bf-b915-1b384461b620	571
575	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	\N	2023-12-06 19:12:44.626436	2023-12-06 19:12:44.625544	e7c3f3a5-3f4f-4dc1-aaf8-048f968464a5	575
579	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	\N	2023-12-06 19:12:44.662565	2023-12-06 19:12:44.661695	838628c1-dc00-46a1-80d1-d34b46e3da81	579
583	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Cellular Network	Cellular Network	The type of internet service used in the student’s primary place of residence is a cellular network that creates a hot spot using a cell phone for additional device access or access to the internet is only available through a cellular device.	\N	\N	\N	\N	2023-12-06 19:12:44.699233	2023-12-06 19:12:44.698202	be3ff7f6-f3b4-4aed-87e1-4cc5ad32abb3	583
586	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Dial-up	Dial-up	The type of internet service used in the student’s primary place of residence is dial-up.	\N	\N	\N	\N	2023-12-06 19:12:44.708559	2023-12-06 19:12:44.708522	3a8f343c-9acc-488b-9f9e-4d39f0ade648	586
592	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	\N	2023-12-06 19:12:44.74445	2023-12-06 19:12:44.743415	487ccd72-0c23-42f2-8e90-3e5d6c686b1e	592
594	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	\N	2023-12-06 19:12:44.752899	2023-12-06 19:12:44.752873	1a5d119d-0443-415e-b85e-a53ea3fec72b	594
597	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	\N	2023-12-06 19:12:44.759001	2023-12-06 19:12:44.75897	65aae492-5f7c-455d-8bd4-f0fa01cacd96	597
601	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-12-06 19:12:44.76733	2023-12-06 19:12:44.767304	377562b1-012b-438f-8f6a-d03d9fc52a3b	601
604	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Desired	Not Desired	The student cannot access the internet in their primary place of residence because the parent or guardian chooses not to subscribe to internet service.	\N	\N	\N	\N	2023-12-06 19:12:44.802111	2023-12-06 19:12:44.801015	e0edb1a6-6ff6-4cfb-afa3-6b134a84ae3c	604
610	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	\N	2023-12-06 19:12:44.839027	2023-12-06 19:12:44.837985	ba2f4052-f41a-48e6-a6ef-c846d2599d06	610
615	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	\N	2023-12-06 19:12:44.848482	2023-12-06 19:12:44.848469	504581c9-f4f0-4508-a8be-5b97476fa43b	615
618	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	\N	2023-12-06 19:12:44.855996	2023-12-06 19:12:44.855928	6f7fc069-990b-43b3-b94a-db51b325c47d	618
619	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	\N	2023-12-06 19:12:44.887736	2023-12-06 19:12:44.886523	38999003-73c2-4ed6-b791-6da505dbd842	619
623	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	\N	2023-12-06 19:12:44.896864	2023-12-06 19:12:44.89683	8043bbcd-341e-4d88-b30f-a867eab25398	623
626	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	\N	2023-12-06 19:12:44.926442	2023-12-06 19:12:44.925426	f41b0962-cf33-410f-8ecd-04fff768306a	626
631	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	\N	2023-12-06 19:12:44.935629	2023-12-06 19:12:44.935575	9ec34eb6-a6b5-46d1-89fa-dd6dcaa82cad	631
632	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	\N	2023-12-06 19:12:44.941643	2023-12-06 19:12:44.941612	0f923569-e325-4b0e-999b-ea822c8740fd	632
641	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-12-06 19:12:44.999376	2023-12-06 19:12:44.998177	7c09d0f9-e09f-40a8-a84c-27cdac3660ee	641
643	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-12-06 19:12:45.009968	2023-12-06 19:12:45.009897	f5aee967-80bf-43f0-928e-7c2c9bc3fef8	643
539	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.423766	2023-12-06 19:12:44.423752	5c88ef31-e45e-4dc4-9654-ada62a6a81d0	539
547	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	\N	2023-12-06 19:12:44.437645	2023-12-06 19:12:44.437615	fa42d23f-a1f1-406f-9d70-be2758120e56	547
552	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-12-06 19:12:44.47212	2023-12-06 19:12:44.470321	0753ce4d-44d8-4802-a671-cc77ba599edc	552
557	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:44.513171	2023-12-06 19:12:44.511177	78a58df3-ab80-4609-8c79-2eb4067f5c2e	557
562	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	\N	2023-12-06 19:12:44.548493	2023-12-06 19:12:44.54759	a6540128-617f-46f8-bb2e-83b1f34b2afe	562
566	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	\N	2023-12-06 19:12:44.557676	2023-12-06 19:12:44.55766	3f90f2d7-815e-4fc6-b424-4c9fca62b9c9	566
571	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	\N	2023-12-06 19:12:44.590448	2023-12-06 19:12:44.589572	e6d06cb7-c220-4f89-8c98-3efd197fcb61	570
573	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	\N	2023-12-06 19:12:44.626446	2023-12-06 19:12:44.625496	60b5a01e-7ea1-4977-ba83-ca042839f7b5	573
576	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	\N	2023-12-06 19:12:44.662574	2023-12-06 19:12:44.661702	da67b7bb-72d4-4937-a22b-4073a14e4413	576
582	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Hot Spot	Hot Spot	The type of internet service used in the student’s primary place of residence is a standalone hot spot device that is not a cell phone that allows for additional device access.	\N	\N	\N	\N	2023-12-06 19:12:44.699233	2023-12-06 19:12:44.698179	b495708b-62f2-48a1-a9c8-279db0315893	582
585	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Other	Other	The type of internet service used in the student’s primary place of residence is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:44.708269	2023-12-06 19:12:44.708241	62a0a708-1f88-4404-871d-e536ec629fd5	585
591	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	\N	2023-12-06 19:12:44.744455	2023-12-06 19:12:44.743387	9d514a11-564c-4cb7-bc27-b80dd9b4fc4b	591
596	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:44.753787	2023-12-06 19:12:44.753759	fc840c88-fdda-4e8e-be75-d9ab2ccf395e	596
598	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-12-06 19:12:44.759403	2023-12-06 19:12:44.75935	b7eb31db-77ac-4a66-9304-ea782eb3d25e	598
602	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	\N	2023-12-06 19:12:44.76741	2023-12-06 19:12:44.766999	c0ce7953-9f43-4b15-aae2-5c759adca264	602
605	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Available	Not Available	The student cannot access the internet in their primary place of residence because internet service is not available.	\N	\N	\N	\N	2023-12-06 19:12:44.802107	2023-12-06 19:12:44.801023	0e3080f6-d966-4d27-b845-6f244ecd9e06	605
609	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	\N	2023-12-06 19:12:44.839036	2023-12-06 19:12:44.837981	10283663-d0f3-4ec4-9f97-ed5970540717	609
613	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	\N	2023-12-06 19:12:44.847968	2023-12-06 19:12:44.847954	8ba13914-c729-4182-a00e-b20c49f5f705	613
617	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	\N	2023-12-06 19:12:44.855357	2023-12-06 19:12:44.855221	b86f5c2b-7c2e-4fbd-9e28-3b2e32a96c44	617
621	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	\N	2023-12-06 19:12:44.887761	2023-12-06 19:12:44.886496	74573b17-626c-4a5e-9471-71557b7351f8	621
625	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	\N	2023-12-06 19:12:44.926442	2023-12-06 19:12:44.925435	d2db9370-73e2-4d01-88a7-90febc85cb96	625
629	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	\N	2023-12-06 19:12:44.935201	2023-12-06 19:12:44.935172	82302377-7974-42a8-baea-cf5e8d37df43	628
635	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	\N	2023-12-06 19:12:44.943671	2023-12-06 19:12:44.943506	1a1e929d-442e-4f04-a270-a66e642c29d9	635
636	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	\N	2023-12-06 19:12:44.947695	2023-12-06 19:12:44.947506	499966c4-4018-470a-aacd-d5e040a3e811	636
642	uri://ed-fi.org/GradeLevelDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-12-06 19:12:44.9994	2023-12-06 19:12:44.99819	281fe9e1-bfa1-42d5-aec1-ef3539e79330	642
644	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-12-06 19:12:45.011747	2023-12-06 19:12:45.011733	692f65f0-a06d-45fd-87f5-c030f816acdc	644
648	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-12-06 19:12:45.019607	2023-12-06 19:12:45.019548	1bae1c59-1740-4b29-b135-ff4617d90872	648
653	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-12-06 19:12:45.029323	2023-12-06 19:12:45.029282	7875d60c-2e0b-4d99-a951-ba57262ecab2	653
657	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-12-06 19:12:45.040534	2023-12-06 19:12:45.040487	b6adaa7a-dcbf-4775-a60f-8cf73e1edfa8	657
662	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:45.048341	2023-12-06 19:12:45.048271	e235b441-e97a-44f5-9ee6-e29f57a5f79a	662
669	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	\N	2023-12-06 19:12:45.099639	2023-12-06 19:12:45.098185	9eba78d6-0c75-4e78-b046-90082f40e062	669
673	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	\N	2023-12-06 19:12:45.108328	2023-12-06 19:12:45.108277	71058faa-448a-4a91-a2f2-10835080a488	673
675	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	\N	2023-12-06 19:12:45.113298	2023-12-06 19:12:45.113267	779f6b12-aad2-4dba-bad5-c1603102aa42	675
563	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	\N	2023-12-06 19:12:44.548648	2023-12-06 19:12:44.547576	46f71997-1d34-484b-8666-a8bfc6215b83	563
568	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	\N	2023-12-06 19:12:44.590456	2023-12-06 19:12:44.589591	f747bdda-d428-4d33-ab67-9f1e8c52ab46	569
572	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	\N	2023-12-06 19:12:44.626446	2023-12-06 19:12:44.625538	100e9176-1725-46a5-9e88-923f767ba0e6	572
577	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	\N	2023-12-06 19:12:44.66257	2023-12-06 19:12:44.661727	7177485a-e757-4c8b-ae00-d1659d899f8c	577
580	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Residential Broadband	Residential Broadband	The type of internet service used in the student’s primary place of residence is residential broadband.	\N	\N	\N	\N	2023-12-06 19:12:44.699236	2023-12-06 19:12:44.698195	3a3b17aa-d3ec-4d7f-a293-5b6d91ee9818	580
587	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	None	None	There is no internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:44.708679	2023-12-06 19:12:44.708613	647e9286-7132-4862-88b9-63078eceb9eb	587
588	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Unknown	Unknown	It is not known whether there is internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:44.71475	2023-12-06 19:12:44.714694	7ab11a7a-6153-4eb6-b4da-2d99dfe22d9e	588
589	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	\N	2023-12-06 19:12:44.74444	2023-12-06 19:12:44.74341	fc0651d0-614f-4913-a83f-37d793b5f4fa	590
593	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	\N	2023-12-06 19:12:44.75266	2023-12-06 19:12:44.752587	cb11bf8b-371c-40eb-994b-eef2c89b6ab7	593
600	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	\N	2023-12-06 19:12:44.762427	2023-12-06 19:12:44.762398	744db10b-6880-4dc8-9c02-fc3598355e67	600
603	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	\N	2023-12-06 19:12:44.768058	2023-12-06 19:12:44.768029	e5279e5d-b86b-47b6-9557-6750edeb0d43	603
606	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Other	Other	The reason why a student cannot access the internet in their primary place of residence is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:44.802123	2023-12-06 19:12:44.801041	8a44794e-3a0b-4a9d-8e9e-813ee7c50937	606
611	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	\N	2023-12-06 19:12:44.839028	2023-12-06 19:12:44.837965	e95eb538-2341-401c-9740-bf856c31677c	611
614	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	\N	2023-12-06 19:12:44.847825	2023-12-06 19:12:44.847796	069a8d7c-4d20-41fe-b376-48e857f4b71a	614
622	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	\N	2023-12-06 19:12:44.891625	2023-12-06 19:12:44.890329	c14db170-cfde-4e74-988a-bd1b3734a551	622
627	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	\N	2023-12-06 19:12:44.92643	2023-12-06 19:12:44.925421	46c27b8e-15c8-4697-85dc-684e906db0cf	627
628	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	\N	2023-12-06 19:12:44.935182	2023-12-06 19:12:44.934924	a82da34e-bba5-4db1-8164-541d7f64f2b6	629
633	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	\N	2023-12-06 19:12:44.941664	2023-12-06 19:12:44.941228	0e18e662-306a-4dc9-9a11-eab7f7632659	633
637	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	\N	2023-12-06 19:12:44.95026	2023-12-06 19:12:44.950227	ee1fc7b9-6a62-4e7f-bf65-6220f2d072e8	637
640	uri://ed-fi.org/GradeLevelDescriptor	Transitional Kindergarten	Transitional Kindergarten	Transitional Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:44.999376	2023-12-06 19:12:44.998177	cd0d5001-221c-49e4-96b8-b86675add665	640
645	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-12-06 19:12:45.011455	2023-12-06 19:12:45.011379	c25e90d6-35c4-4509-b5f7-83f4e2846373	645
647	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-12-06 19:12:45.01921	2023-12-06 19:12:45.019164	9817af07-56a6-40f1-a61f-8fad4e85b6c4	647
652	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-12-06 19:12:45.026615	2023-12-06 19:12:45.026554	bd8233a1-e562-4165-a714-1c79314f2e1b	652
656	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-12-06 19:12:45.037735	2023-12-06 19:12:45.03763	891aac61-94d9-4620-83a5-39d1c2e6a306	656
659	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.04421	2023-12-06 19:12:45.044133	be392774-93d0-457d-9bce-8838435253be	659
661	uri://ed-fi.org/GradeLevelDescriptor	Early Education	DEPRECATED: Early Education	DEPRECATED: Early Education	\N	\N	\N	\N	2023-12-06 19:12:45.047594	2023-12-06 19:12:45.047565	08b83676-819b-422b-97a4-bfaa2de065a5	661
663	uri://ed-fi.org/GradeLevelDescriptor	No grade level	DEPRECATED: No grade level	DEPRECATED: No grade level	\N	\N	\N	\N	2023-12-06 19:12:45.050271	2023-12-06 19:12:45.050242	4a597ab6-3af3-4293-9b29-2c251c492079	663
665	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-12-06 19:12:45.086074	2023-12-06 19:12:45.085179	92e76fd0-cc4d-493a-97eb-0e9103dd76bd	666
668	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	\N	2023-12-06 19:12:45.09914	2023-12-06 19:12:45.098222	5ed3bc06-423b-4cf9-894b-1e8ec15138c4	668
672	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	\N	2023-12-06 19:12:45.10799	2023-12-06 19:12:45.107963	bd0fa307-dfd2-4e27-8161-3ee3f6a58842	672
676	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	\N	2023-12-06 19:12:45.115873	2023-12-06 19:12:45.11573	a29cafb8-a708-4681-8d74-0dd4a22e2077	676
681	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	\N	2023-12-06 19:12:45.125064	2023-12-06 19:12:45.125027	fd6ecd07-d5f0-43de-a8a2-dd05e44c13d4	681
685	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	\N	2023-12-06 19:12:45.133789	2023-12-06 19:12:45.133774	4193964c-62de-47f7-bd56-9e09619447c0	685
569	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	\N	2023-12-06 19:12:44.590445	2023-12-06 19:12:44.589581	35bc9cb7-856b-4533-8071-16575acd20f9	568
574	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	\N	2023-12-06 19:12:44.626524	2023-12-06 19:12:44.625503	62ec46da-a2d1-402e-970a-c1727b17cbd7	574
578	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	\N	2023-12-06 19:12:44.663632	2023-12-06 19:12:44.66171	d84666a8-804b-4f70-8b72-22d69008107e	578
581	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Community Provided Wi-Fi	Community Provided Wi-Fi	The type of internet service used in the student’s primary place of residence is community provided Wi-Fi.	\N	\N	\N	\N	2023-12-06 19:12:44.699236	2023-12-06 19:12:44.698169	33712803-f588-42a5-a3e4-12d3bb18116b	581
584	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Satellite	Satellite	The type of internet service used in the student’s primary place of residence is satellite.	\N	\N	\N	\N	2023-12-06 19:12:44.708149	2023-12-06 19:12:44.708116	4923e02b-6676-477b-ae23-5291c5ad1946	584
590	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	\N	2023-12-06 19:12:44.744455	2023-12-06 19:12:44.743396	05b0da19-9f80-49dc-ad6b-fbc4eaf0d52b	589
595	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	\N	2023-12-06 19:12:44.753904	2023-12-06 19:12:44.75389	54409a1a-c749-4dc3-96e2-ce258fe16cc4	595
599	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	\N	2023-12-06 19:12:44.759977	2023-12-06 19:12:44.759951	23da0ae0-d360-4a0f-93f4-9014f895e2f6	599
607	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Affordable	Not Affordable	The student cannot access the internet in their primary place of residence because internet service is not affordable.	\N	\N	\N	\N	2023-12-06 19:12:44.802107	2023-12-06 19:12:44.801009	18f60281-ea1a-44e4-8c36-01c4fd0a9fb2	607
608	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	\N	2023-12-06 19:12:44.839031	2023-12-06 19:12:44.83796	a3aea740-fa17-44e1-b78c-6cc94cca8255	608
612	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	\N	2023-12-06 19:12:44.847062	2023-12-06 19:12:44.847043	284ec875-a93c-480e-9982-0436475d9fd7	612
616	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	\N	2023-12-06 19:12:44.855375	2023-12-06 19:12:44.855318	e8d5de87-f239-4d31-b3f9-59ea953fbe28	616
620	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	\N	2023-12-06 19:12:44.887864	2023-12-06 19:12:44.886514	8eccb70a-2cf2-4b56-b19d-4f1c49e35583	620
624	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	\N	2023-12-06 19:12:44.926441	2023-12-06 19:12:44.925451	9787345c-5d1c-4c07-a00d-248f597e5625	624
630	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	\N	2023-12-06 19:12:44.935587	2023-12-06 19:12:44.935536	223a07b8-bbe3-4287-9f40-e88a33482975	630
634	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	\N	2023-12-06 19:12:44.943525	2023-12-06 19:12:44.943498	c1492db8-3857-41c5-9d44-c78c9381580c	634
638	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	\N	2023-12-06 19:12:44.950376	2023-12-06 19:12:44.950306	0d4b81b5-be96-42dd-9094-af680fc946b2	638
639	uri://ed-fi.org/GradeLevelDescriptor	Prekindergarten	Prekindergarten	Prekindergarten	\N	\N	\N	\N	2023-12-06 19:12:44.999426	2023-12-06 19:12:44.998206	b97c22c7-8769-432c-b4e6-bc3e999d877b	639
646	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-12-06 19:12:45.012566	2023-12-06 19:12:45.012536	73ed0864-32ed-4ec9-a5dc-c8cea36b16cd	646
650	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-12-06 19:12:45.021281	2023-12-06 19:12:45.021265	1e2d912b-0c94-48a6-a65c-74b994c2fbb4	650
654	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-12-06 19:12:45.032103	2023-12-06 19:12:45.031815	70ba5c53-5fe4-4f54-8c49-17a3c9daa58f	654
658	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:45.041948	2023-12-06 19:12:45.041815	9ba5eb85-13ea-4564-bce1-837376ae9c04	658
666	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	\N	2023-12-06 19:12:45.086089	2023-12-06 19:12:45.085184	acdff2a5-702d-48b9-afd4-720c4c49499f	665
667	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	\N	2023-12-06 19:12:45.099144	2023-12-06 19:12:45.098203	91c327d1-67fe-45a9-a461-9a5f60851be8	667
674	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	\N	2023-12-06 19:12:45.109277	2023-12-06 19:12:45.109226	09d2ef1b-6fa8-4914-b7a6-cbb70a1111d5	674
680	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	\N	2023-12-06 19:12:45.122242	2023-12-06 19:12:45.122102	4e310ec1-a2ce-4a4a-b9f8-94ee6149432e	680
686	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	\N	2023-12-06 19:12:45.135779	2023-12-06 19:12:45.13573	fd9816e0-df78-45ba-a510-315b05dc7c8f	686
692	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-12-06 19:12:45.171846	2023-12-06 19:12:45.170975	cdd24845-3307-42c1-8808-221cf19e90b2	692
696	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	School	School	The provider of the primary learning device is the school.	\N	\N	\N	\N	2023-12-06 19:12:45.214197	2023-12-06 19:12:45.212092	a89e6c7b-e15b-4a87-88e2-72fc36d32147	696
699	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.223351	2023-12-06 19:12:45.223132	89d0eab6-889f-4f04-9755-cdca07f617e6	699
702	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-12-06 19:12:45.229246	2023-12-06 19:12:45.229216	41910f8e-646c-43d8-ac8e-27f3712afecc	702
706	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-12-06 19:12:45.236874	2023-12-06 19:12:45.236859	508fc3fd-1cb2-4455-9cd7-107ffb311f72	706
820	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	\N	2023-12-06 19:12:45.515441	2023-12-06 19:12:45.515255	2e5d0382-aad9-497d-88a1-6ebee7c25ab9	820
649	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-12-06 19:12:45.020691	2023-12-06 19:12:45.020662	5a929234-3a42-4f15-a6ff-38bd0b670fa2	649
651	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-12-06 19:12:45.025318	2023-12-06 19:12:45.025188	bd652f88-2c71-4b2f-abe8-43cde564f12f	651
655	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-12-06 19:12:45.034045	2023-12-06 19:12:45.03403	0623b271-debe-4ade-92be-ef14d736f58d	655
660	uri://ed-fi.org/GradeLevelDescriptor	Out of School	Out of School	Out of School	\N	\N	\N	\N	2023-12-06 19:12:45.044333	2023-12-06 19:12:45.044256	dc07e3c4-9565-444f-961b-5051027485fa	660
664	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	DEPRECATED: Adult Education	DEPRECATED: Adult Education	\N	\N	\N	\N	2023-12-06 19:12:45.054739	2023-12-06 19:12:45.054723	89c7f659-ff0f-4d08-adb8-aea2ff1782aa	664
670	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	\N	2023-12-06 19:12:45.099135	2023-12-06 19:12:45.098197	2242f53b-8e0f-4840-ac55-823d9fee8d40	670
671	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	\N	2023-12-06 19:12:45.107614	2023-12-06 19:12:45.107567	4160dbc4-f12d-4f8d-8168-da3cbb9ca441	671
677	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.117062	2023-12-06 19:12:45.117004	e9000a6d-da20-4be3-8eb4-ee80e25d07b5	677
683	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	\N	2023-12-06 19:12:45.128722	2023-12-06 19:12:45.128692	6d5868d6-db9c-4106-b374-8b8da3d250eb	683
687	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	\N	2023-12-06 19:12:45.135972	2023-12-06 19:12:45.135944	d16fd5d6-a161-41ac-9a05-fa48e9a9de4f	687
691	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-12-06 19:12:45.171855	2023-12-06 19:12:45.170949	013044fe-deed-4105-b0fb-67b5dc802a06	691
694	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Personal	Personal	The provider of the primary learning device is the student or guardian.	\N	\N	\N	\N	2023-12-06 19:12:45.213367	2023-12-06 19:12:45.212073	91c9b2b2-5320-49c2-91d2-0c15ac5a84e2	694
698	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-12-06 19:12:45.223551	2023-12-06 19:12:45.223521	55200eb4-f9b9-47ee-99f2-b1e5810123ec	698
703	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-12-06 19:12:45.230655	2023-12-06 19:12:45.230517	ba497e0f-a1fc-4adc-b999-31d8d13485e3	703
707	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-12-06 19:12:45.238916	2023-12-06 19:12:45.238887	63dc31f0-f8b5-46e1-b682-3b1178b356c7	707
711	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	\N	2023-12-06 19:12:45.275228	2023-12-06 19:12:45.273597	b110fa65-71d2-446c-8d00-a1019d71f6e1	711
717	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	\N	2023-12-06 19:12:45.313015	2023-12-06 19:12:45.311944	3d0f5354-7f57-4db3-a5c2-dc922cb1aa77	716
721	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	\N	2023-12-06 19:12:45.321776	2023-12-06 19:12:45.321712	c5312634-6583-49ac-9030-6c78389efda0	721
723	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	\N	2023-12-06 19:12:45.328122	2023-12-06 19:12:45.328095	c7367f3a-7d9a-4e2b-87eb-c8d1739f3c20	723
728	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	\N	2023-12-06 19:12:45.335722	2023-12-06 19:12:45.33561	75e1a971-0575-4eb8-aaea-8a8fa13be876	728
731	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	\N	2023-12-06 19:12:45.340395	2023-12-06 19:12:45.340356	1abfa232-5da5-4d9b-858c-3b33d1353625	731
733	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	\N	2023-12-06 19:12:45.343927	2023-12-06 19:12:45.343676	ac2c9b26-7479-427e-8f38-4b43b3e34bd3	733
737	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	\N	2023-12-06 19:12:45.351151	2023-12-06 19:12:45.351137	259c4bfc-4723-4705-8001-a7f0eb6c1a28	737
739	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	\N	2023-12-06 19:12:45.355438	2023-12-06 19:12:45.355406	47cf83bf-533c-455d-8bee-864d7e511ba2	739
743	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	\N	2023-12-06 19:12:45.36325	2023-12-06 19:12:45.363221	c1789c5b-e77a-44ba-8ca6-47658cea6f48	743
757	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	\N	2023-12-06 19:12:45.38958	2023-12-06 19:12:45.389551	48c4f0f2-0838-4f7a-b83a-99e85f6aa4e0	757
760	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	\N	2023-12-06 19:12:45.395923	2023-12-06 19:12:45.395853	8f75eee3-6d89-4932-827d-a29b374b3d51	760
764	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	\N	2023-12-06 19:12:45.403246	2023-12-06 19:12:45.402958	c9fafc5f-7fa4-45d0-9166-8a01f10c81d9	764
770	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	\N	2023-12-06 19:12:45.412414	2023-12-06 19:12:45.412386	46641179-ea0d-406c-8ce2-ea05bcba5d5c	770
773	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	\N	2023-12-06 19:12:45.418969	2023-12-06 19:12:45.418424	1f9d6eef-cb93-457e-b3d7-ba44e815f58c	773
777	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	\N	2023-12-06 19:12:45.427016	2023-12-06 19:12:45.426989	ad6203ea-f7bc-46c9-ac1e-1b94e14e1d45	777
782	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	\N	2023-12-06 19:12:45.431757	2023-12-06 19:12:45.431408	d710f9ce-eaaa-4bff-b02c-614d7dbdd3ba	782
786	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	\N	2023-12-06 19:12:45.445162	2023-12-06 19:12:45.445091	94ae9ccb-1ff9-495b-9b6e-981a345168f1	786
789	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	\N	2023-12-06 19:12:45.449659	2023-12-06 19:12:45.44962	23c35423-a58c-4cf6-a992-e54025951386	789
792	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	\N	2023-12-06 19:12:45.455203	2023-12-06 19:12:45.455175	a64c5b4b-7ac3-4ad3-b15b-35033ffebb1f	792
794	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	\N	2023-12-06 19:12:45.461626	2023-12-06 19:12:45.461559	059badb6-ba1e-4dd2-85a6-1aa7bfa1b1ec	794
801	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	\N	2023-12-06 19:12:45.472362	2023-12-06 19:12:45.472208	c9c69afb-c276-436f-90bb-ed8dc7c52de4	801
806	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	\N	2023-12-06 19:12:45.48229	2023-12-06 19:12:45.48221	52bd828b-e96d-41f9-9602-944fab3046e9	806
811	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	\N	2023-12-06 19:12:45.492694	2023-12-06 19:12:45.492431	fb67426a-e30c-44da-982d-e32b07e5a87b	811
813	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	\N	2023-12-06 19:12:45.496241	2023-12-06 19:12:45.496159	40485946-ed8d-4542-8c58-d0e75e95577f	813
678	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	\N	2023-12-06 19:12:45.117336	2023-12-06 19:12:45.117322	35bdb469-37fe-4a2a-ad17-a462cf155970	678
679	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	\N	2023-12-06 19:12:45.121823	2023-12-06 19:12:45.121777	659e9b09-2602-4b40-804b-00d89959b44d	679
682	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	\N	2023-12-06 19:12:45.128166	2023-12-06 19:12:45.127834	29c72c54-431e-4391-a34b-5e2150a641be	682
684	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	\N	2023-12-06 19:12:45.132289	2023-12-06 19:12:45.132251	073e4865-dd9e-4dac-824f-2773f0aed597	684
688	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	\N	2023-12-06 19:12:45.138564	2023-12-06 19:12:45.138535	899db4ce-6b85-41b9-9e92-c98291550c87	688
689	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-12-06 19:12:45.171891	2023-12-06 19:12:45.170954	39602084-1f5f-44aa-8eaf-d3bca9ad054d	689
695	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Other	Other	The provider of the primary learning device is not yet defined.	\N	\N	\N	\N	2023-12-06 19:12:45.214185	2023-12-06 19:12:45.21208	3dd783be-5100-4390-919a-6a37cd5a5881	695
700	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-12-06 19:12:45.223932	2023-12-06 19:12:45.223915	ef71de99-7c3f-477c-b771-01861232b8d6	700
705	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-12-06 19:12:45.232034	2023-12-06 19:12:45.232021	9b59d5c3-1369-4cb8-8374-b2078611f372	705
709	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	\N	2023-12-06 19:12:45.27267	2023-12-06 19:12:45.271233	83738327-580d-4557-8627-1e7f63b20a1b	709
712	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	\N	2023-12-06 19:12:45.281262	2023-12-06 19:12:45.281247	469ed329-2ff6-4047-ba1e-9d9db72501e2	712
718	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	\N	2023-12-06 19:12:45.313014	2023-12-06 19:12:45.311967	ab176cdc-8cf2-4619-8af8-7269c2d8b756	718
720	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	\N	2023-12-06 19:12:45.321312	2023-12-06 19:12:45.321256	d73841f5-0fda-49e9-9d54-0d82496f37dc	720
726	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	\N	2023-12-06 19:12:45.329478	2023-12-06 19:12:45.329377	0ecb767a-375e-4afd-8f26-fd9bf301b69b	726
727	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	\N	2023-12-06 19:12:45.334469	2023-12-06 19:12:45.334443	7693e3e7-f5e7-4c56-ad6e-bef5d61951d3	727
734	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	\N	2023-12-06 19:12:45.345117	2023-12-06 19:12:45.345104	fdd55baf-02f8-42b1-89a8-70fd863ec05b	734
736	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	\N	2023-12-06 19:12:45.350341	2023-12-06 19:12:45.350314	c5d355b6-4d74-47d8-9ea7-003edf50c9bd	736
741	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	\N	2023-12-06 19:12:45.358092	2023-12-06 19:12:45.358064	7209598d-c3e7-41f2-8ebc-8d80b094c47e	741
744	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	\N	2023-12-06 19:12:45.36479	2023-12-06 19:12:45.364763	46af3c10-453d-4a53-a5d4-3e863e26f2d1	744
747	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	\N	2023-12-06 19:12:45.368891	2023-12-06 19:12:45.368864	3e9515b9-867f-4a82-8407-8e33da86cd19	747
751	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	\N	2023-12-06 19:12:45.377639	2023-12-06 19:12:45.37761	dacf8eaa-8e3f-4edf-bc96-42ad6c0129f3	751
754	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	\N	2023-12-06 19:12:45.381314	2023-12-06 19:12:45.381284	abb4b7c9-03ff-4602-bfcf-736028ad330c	754
758	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	\N	2023-12-06 19:12:45.388713	2023-12-06 19:12:45.388695	8cd96cf8-dd61-4b45-9940-e10825e8d0db	758
762	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	\N	2023-12-06 19:12:45.397463	2023-12-06 19:12:45.397342	4119ca72-c78f-4681-ac5d-58d660c8b5f9	762
765	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	\N	2023-12-06 19:12:45.403925	2023-12-06 19:12:45.40367	47659950-aceb-4439-9d61-29a89bd61be9	765
768	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	\N	2023-12-06 19:12:45.410705	2023-12-06 19:12:45.41064	da3484e1-ff74-41e5-9ea7-a63398d47793	768
771	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	\N	2023-12-06 19:12:45.418152	2023-12-06 19:12:45.418039	a17ccf9e-4ace-404b-b618-369975979668	771
775	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	\N	2023-12-06 19:12:45.425953	2023-12-06 19:12:45.425927	887d96be-1070-4561-9dc6-894efb323c0b	775
780	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	\N	2023-12-06 19:12:45.433471	2023-12-06 19:12:45.433445	b8cf6451-7d5b-4ad4-b42e-b92d1c032c57	780
783	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	\N	2023-12-06 19:12:45.437896	2023-12-06 19:12:45.437515	02aeadde-e11e-4296-bd98-bea8085804a4	783
785	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	\N	2023-12-06 19:12:45.441934	2023-12-06 19:12:45.441895	131bf592-f4c0-46e9-8a7e-980ffc56bc0f	785
787	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	\N	2023-12-06 19:12:45.445571	2023-12-06 19:12:45.445209	10344799-edd3-410e-800a-7c946584e73d	787
791	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	\N	2023-12-06 19:12:45.454177	2023-12-06 19:12:45.454142	799ce433-43c3-4826-89da-80f42a6d4072	791
797	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	\N	2023-12-06 19:12:45.463769	2023-12-06 19:12:45.463732	50aa9753-4d97-4964-94cf-be83b9771964	797
798	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	\N	2023-12-06 19:12:45.468178	2023-12-06 19:12:45.468149	756df455-4947-41c5-9cb5-72ffdba5b8c6	798
804	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	\N	2023-12-06 19:12:45.47834	2023-12-06 19:12:45.478327	519123ac-5bfb-459d-b0ff-7fca5eba2765	804
808	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	\N	2023-12-06 19:12:45.487002	2023-12-06 19:12:45.486863	c52385aa-a55a-4ba1-83a5-729fe9599b67	808
814	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	\N	2023-12-06 19:12:45.496478	2023-12-06 19:12:45.49645	54ca9f15-07a0-4ee7-85de-0409b9c5d6a2	814
815	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	\N	2023-12-06 19:12:45.500244	2023-12-06 19:12:45.500218	1a5d1281-09fe-4b21-b1e7-af7fa4c843c0	815
824	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	\N	2023-12-06 19:12:45.523323	2023-12-06 19:12:45.52321	d1c9cd2f-9960-4255-ba7f-c9c4a2820d4f	824
690	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-12-06 19:12:45.171901	2023-12-06 19:12:45.170971	2094a56b-29e1-413a-a6af-3d6102f5bbbd	690
693	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-12-06 19:12:45.209425	2023-12-06 19:12:45.20754	58b1874f-ce2f-417a-aaa0-08045f51f246	693
697	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-12-06 19:12:45.217241	2023-12-06 19:12:45.217194	125b318b-7589-4ec8-a91d-ca11cc8137a0	697
701	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-12-06 19:12:45.224362	2023-12-06 19:12:45.224334	6756b693-d142-414b-81de-5e3bcd2c1ff7	701
704	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-12-06 19:12:45.231898	2023-12-06 19:12:45.231673	6ae42a8e-ee0c-4544-93cb-1a71ab8a3d73	704
708	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	\N	2023-12-06 19:12:45.272369	2023-12-06 19:12:45.271236	e19283f1-5e84-4d29-9139-c3e929462314	708
715	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	\N	2023-12-06 19:12:45.313005	2023-12-06 19:12:45.311938	1a70c41d-1fb1-438a-8153-7f2d7e8e7ae0	717
722	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	\N	2023-12-06 19:12:45.321499	2023-12-06 19:12:45.321486	547ed768-d80b-4bcd-9aaf-e03d035684c3	722
725	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	\N	2023-12-06 19:12:45.329033	2023-12-06 19:12:45.329004	c0c1018c-c20b-4a13-a138-b447b8dbd648	725
729	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	\N	2023-12-06 19:12:45.33677	2023-12-06 19:12:45.336684	0134bad1-b084-4197-bb8a-c316f2d13130	729
732	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	\N	2023-12-06 19:12:45.343923	2023-12-06 19:12:45.343894	5d4c14c1-6cb4-4934-a0e8-61cf66f2e849	732
738	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	\N	2023-12-06 19:12:45.352094	2023-12-06 19:12:45.352032	5ac7839f-f34e-4898-9b9a-39a9663512ab	738
740	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	\N	2023-12-06 19:12:45.357892	2023-12-06 19:12:45.357805	78bc0e9f-9a76-4911-a171-e2fa2de87221	740
746	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	\N	2023-12-06 19:12:45.367694	2023-12-06 19:12:45.367674	e09aeeb4-af5b-4508-bbcc-27a3aab406c1	746
748	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	\N	2023-12-06 19:12:45.372505	2023-12-06 19:12:45.371925	1594e213-2ca3-4d84-b5ab-ee18c465ecd4	748
752	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	\N	2023-12-06 19:12:45.379836	2023-12-06 19:12:45.379641	8f3103dd-16bc-46af-ae7b-4d9299e4142d	752
756	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	\N	2023-12-06 19:12:45.388274	2023-12-06 19:12:45.387984	e7a97f0d-9814-4a25-8929-bd1aa6858b1a	756
759	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	\N	2023-12-06 19:12:45.39306	2023-12-06 19:12:45.392638	0b1b3420-2783-44b4-b452-25b3b7940801	759
761	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	\N	2023-12-06 19:12:45.396306	2023-12-06 19:12:45.396253	ebda45f7-67b2-4904-82c0-6c892c87f598	761
769	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	\N	2023-12-06 19:12:45.4116	2023-12-06 19:12:45.411568	147b6529-aa9d-4c2b-8424-2257f9a11a1a	769
772	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	\N	2023-12-06 19:12:45.418607	2023-12-06 19:12:45.418585	0ce5e565-c0ae-4d45-aa9d-4e49baf0bbe9	772
776	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	\N	2023-12-06 19:12:45.425924	2023-12-06 19:12:45.425895	2c7052e7-2a40-4b6f-b5a4-d36641184d81	776
779	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	\N	2023-12-06 19:12:45.431656	2023-12-06 19:12:45.431631	06488993-dbdf-4136-bff8-1df6ebfe4cb8	779
781	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	\N	2023-12-06 19:12:45.434716	2023-12-06 19:12:45.434678	c9a318d0-47e4-458f-a970-2cc249778fab	781
788	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	\N	2023-12-06 19:12:45.447949	2023-12-06 19:12:45.447928	83cf9d9e-5c55-40f9-8961-92789af17bf6	788
790	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	\N	2023-12-06 19:12:45.453781	2023-12-06 19:12:45.453602	56aec757-152c-4ad7-a9f3-78ef0b2b229d	790
795	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	\N	2023-12-06 19:12:45.462202	2023-12-06 19:12:45.462184	8bcedb10-c2e1-440f-bad8-aa6fe27ff498	795
799	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	\N	2023-12-06 19:12:45.470379	2023-12-06 19:12:45.470233	3b0836b9-c229-4922-b8e8-7d8648b2b72e	799
805	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	\N	2023-12-06 19:12:45.479539	2023-12-06 19:12:45.479511	a4f1f63f-548e-42f8-81f1-cbc5aff5ee5d	805
807	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	\N	2023-12-06 19:12:45.485302	2023-12-06 19:12:45.485132	84099d95-1c91-458f-980e-8baf69fed114	807
810	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	\N	2023-12-06 19:12:45.490495	2023-12-06 19:12:45.48964	4c91849c-30f8-4c83-985e-cf8cbf324747	810
812	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	\N	2023-12-06 19:12:45.494047	2023-12-06 19:12:45.493974	df409b8b-d597-4309-aaa3-e6d6e485913d	812
817	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	\N	2023-12-06 19:12:45.503751	2023-12-06 19:12:45.503725	5edf64f8-8553-4d4b-9079-00016b2a8f2f	817
823	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	\N	2023-12-06 19:12:45.522019	2023-12-06 19:12:45.52197	354fe8a8-9a04-43c6-a117-7ccefccd5499	823
825	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	\N	2023-12-06 19:12:45.52752	2023-12-06 19:12:45.526923	a45b7763-36e4-4387-8333-39a0aa095c15	825
833	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	\N	2023-12-06 19:12:45.543862	2023-12-06 19:12:45.543372	b16612b2-96b3-40c6-acc5-2839fc8678be	833
838	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	\N	2023-12-06 19:12:45.551785	2023-12-06 19:12:45.551603	dc232b3e-9e8b-47de-8821-531c51b0e9bc	838
841	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	\N	2023-12-06 19:12:45.55885	2023-12-06 19:12:45.558681	f0ef831a-d80e-4d28-a3f0-de8602cad790	841
843	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	\N	2023-12-06 19:12:45.564867	2023-12-06 19:12:45.564805	354184a5-28db-442d-8cf8-8c013b87aded	843
845	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	\N	2023-12-06 19:12:45.568826	2023-12-06 19:12:45.568418	677ad19f-ed26-4a35-8627-3d492fa21218	845
850	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	\N	2023-12-06 19:12:45.580341	2023-12-06 19:12:45.580306	fe4b8c88-56a6-47e4-a930-7810e35d2bbc	850
858	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.59448	2023-12-06 19:12:45.594453	f763a91f-c895-4f20-826d-f2da1a1f3232	858
710	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	\N	2023-12-06 19:12:45.272523	2023-12-06 19:12:45.271246	488b2591-3fb8-4854-882f-34d04b7334ea	710
713	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	\N	2023-12-06 19:12:45.28123	2023-12-06 19:12:45.2812	59a982de-67ff-4bff-bc55-d2ffdfbc1a58	713
714	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	\N	2023-12-06 19:12:45.285666	2023-12-06 19:12:45.285625	48fff7a8-30da-4226-aead-c8647a79975c	714
716	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	\N	2023-12-06 19:12:45.313012	2023-12-06 19:12:45.311951	68fa672d-bc31-45ac-8478-9bc80c24c936	715
719	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	\N	2023-12-06 19:12:45.321347	2023-12-06 19:12:45.32132	33f4a53c-a255-4bcb-b515-9bec44011cc5	719
724	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	\N	2023-12-06 19:12:45.328229	2023-12-06 19:12:45.328054	06283529-83d7-4ddc-9ac0-d704e730841d	724
730	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	\N	2023-12-06 19:12:45.337148	2023-12-06 19:12:45.337028	5d4111fd-055a-4f20-80eb-bcd74ac4d0d4	730
735	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	\N	2023-12-06 19:12:45.347956	2023-12-06 19:12:45.347928	75e38239-3134-417a-9e5c-6e50e6f82fed	735
742	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	\N	2023-12-06 19:12:45.360255	2023-12-06 19:12:45.360226	b47d32fa-b834-46dd-9048-e6c7ef05882d	742
745	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	\N	2023-12-06 19:12:45.367057	2023-12-06 19:12:45.367029	6d638530-b01d-48b9-b03c-418b2ec2238d	745
749	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	\N	2023-12-06 19:12:45.372602	2023-12-06 19:12:45.37258	d317d3ff-278c-4bb9-a531-370887dc5181	749
750	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	\N	2023-12-06 19:12:45.375278	2023-12-06 19:12:45.375192	642a7e82-917b-46a2-89dd-5c73c79fe9eb	750
753	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	\N	2023-12-06 19:12:45.380913	2023-12-06 19:12:45.380737	0cb85a1c-6c82-497a-9911-8fc5760c100c	753
755	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	\N	2023-12-06 19:12:45.38541	2023-12-06 19:12:45.38538	51aeff0b-1309-4d4e-90e7-17b0f85538f7	755
763	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	\N	2023-12-06 19:12:45.400429	2023-12-06 19:12:45.400245	881220ad-bc9e-4238-8fba-1f605c44b505	763
766	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	\N	2023-12-06 19:12:45.406013	2023-12-06 19:12:45.405984	39cbed92-852c-4766-8115-e9dc99fdb373	766
767	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	\N	2023-12-06 19:12:45.409807	2023-12-06 19:12:45.409755	66178fff-1b08-47f4-b65d-4fe5cb59b0d2	767
774	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	\N	2023-12-06 19:12:45.420168	2023-12-06 19:12:45.420153	3cebb2a0-5ba0-4310-94bd-c46589969be8	774
778	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	\N	2023-12-06 19:12:45.427114	2023-12-06 19:12:45.4271	9c9b6835-4500-489a-a0cc-1ff8e37f06f3	778
784	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	\N	2023-12-06 19:12:45.44099	2023-12-06 19:12:45.440962	e30ae16d-2498-4406-b6ce-15eee5bc1ad4	784
793	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	\N	2023-12-06 19:12:45.456572	2023-12-06 19:12:45.456362	4b4e9367-e8cf-4321-97cc-91b8ed2175fe	793
796	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	\N	2023-12-06 19:12:45.462889	2023-12-06 19:12:45.462836	78f5d47d-d48f-4e4b-ac2c-a165ad4c7069	796
800	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	\N	2023-12-06 19:12:45.471169	2023-12-06 19:12:45.471137	36cb61d6-689e-4f09-ac18-0881d3dc4a2a	800
802	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	\N	2023-12-06 19:12:45.473803	2023-12-06 19:12:45.473777	111c55e7-bdd0-445a-b00d-60768f1610b5	802
803	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	\N	2023-12-06 19:12:45.478036	2023-12-06 19:12:45.477999	71fa35a6-cff7-49c8-9957-e2763c297a2a	803
809	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	\N	2023-12-06 19:12:45.486947	2023-12-06 19:12:45.486917	39e9a863-51f2-4a32-852c-66394406bce2	809
816	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	\N	2023-12-06 19:12:45.502331	2023-12-06 19:12:45.50229	6c5b45c1-bf13-4671-8c5e-5665070c2eaa	816
818	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	\N	2023-12-06 19:12:45.505612	2023-12-06 19:12:45.505582	7080a687-9dfc-4d55-a9af-d73fbe18f731	818
819	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	\N	2023-12-06 19:12:45.514645	2023-12-06 19:12:45.5146	9a9665fb-ffe2-4560-a68d-c12ec6077310	819
821	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.51871	2023-12-06 19:12:45.518657	f4ba3dc6-b1d2-419a-98be-0085219b1bde	821
826	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	\N	2023-12-06 19:12:45.529562	2023-12-06 19:12:45.529328	d33af89a-63d0-4b54-a6cf-167a1b905fe3	826
830	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	\N	2023-12-06 19:12:45.536505	2023-12-06 19:12:45.536475	0240c613-96a9-40fe-bfa7-5bb17c0c370d	830
835	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	\N	2023-12-06 19:12:45.547291	2023-12-06 19:12:45.54579	2722c0d9-3159-4bd0-a6ae-d02119bbba77	835
840	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	\N	2023-12-06 19:12:45.558585	2023-12-06 19:12:45.558557	6bb08309-df22-46d0-8502-0ec45334cf5a	840
842	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	\N	2023-12-06 19:12:45.561947	2023-12-06 19:12:45.561933	21dd1091-dc29-49bf-864b-69688754cbc8	842
855	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	\N	2023-12-06 19:12:45.589886	2023-12-06 19:12:45.589723	9d7020ef-4701-4f84-a20f-acdd7ca53d3f	855
860	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	\N	2023-12-06 19:12:45.597568	2023-12-06 19:12:45.597514	aa92e70e-d1dc-412e-b7fc-7b8b34c17f5c	860
862	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	\N	2023-12-06 19:12:45.601304	2023-12-06 19:12:45.60122	2b4aa436-5c68-445d-b85b-c52563ea28fe	862
866	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	\N	2023-12-06 19:12:45.609659	2023-12-06 19:12:45.609632	f0619f69-fd29-4ad0-b6db-e3521eef1374	866
878	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	\N	2023-12-06 19:12:45.632858	2023-12-06 19:12:45.632829	04de53db-b4d7-4759-a351-ac6361473cda	878
884	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	\N	2023-12-06 19:12:45.649846	2023-12-06 19:12:45.649816	7515e94e-098b-4d91-8f21-d86c74a47a56	884
827	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	\N	2023-12-06 19:12:45.529823	2023-12-06 19:12:45.52979	ce9135fc-0726-4937-af7a-831eaf04ab2e	827
829	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	\N	2023-12-06 19:12:45.535484	2023-12-06 19:12:45.53533	b320a824-7fc5-4974-a4b5-c53db7de3a51	829
839	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	\N	2023-12-06 19:12:45.555256	2023-12-06 19:12:45.554307	aae64186-c1ba-4b9e-b254-2583d7e83ed5	839
844	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	\N	2023-12-06 19:12:45.566954	2023-12-06 19:12:45.566923	0d089174-a946-4a37-a4a7-64f6c7522682	844
847	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	\N	2023-12-06 19:12:45.571962	2023-12-06 19:12:45.571905	d4083d16-60f4-4299-a034-c28c555fdc05	847
849	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	\N	2023-12-06 19:12:45.577058	2023-12-06 19:12:45.576311	1837f700-d29d-48c8-bae1-b7ebd34aa209	849
851	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	\N	2023-12-06 19:12:45.580542	2023-12-06 19:12:45.580516	68b9903a-bab5-4887-98b2-02dceb8acd2e	851
853	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.584413	2023-12-06 19:12:45.584387	4c9015ce-aff1-455c-a967-61292219b3e1	853
857	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	\N	2023-12-06 19:12:45.591438	2023-12-06 19:12:45.591424	3c5a5cb0-0546-4964-9ef3-8d2846063522	857
861	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	\N	2023-12-06 19:12:45.599944	2023-12-06 19:12:45.599917	0dba8271-6866-40ec-a49e-f52e592d0d3f	861
863	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	\N	2023-12-06 19:12:45.603028	2023-12-06 19:12:45.602913	da2b37df-c89a-4cd5-a3b0-9b7c46dbb2b0	863
865	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	\N	2023-12-06 19:12:45.606095	2023-12-06 19:12:45.606054	c6e77102-3290-40c0-8578-440e5b07f831	865
870	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	\N	2023-12-06 19:12:45.615892	2023-12-06 19:12:45.615831	15821194-eab2-47d4-b4e3-4c40b45b9586	870
873	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	\N	2023-12-06 19:12:45.622878	2023-12-06 19:12:45.622824	0b9794ed-628c-4923-87b2-51218e76c14b	873
876	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	\N	2023-12-06 19:12:45.630713	2023-12-06 19:12:45.630688	29f70a1a-f94c-4d3f-a671-26460ea580ed	876
880	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	\N	2023-12-06 19:12:45.639084	2023-12-06 19:12:45.63901	036265f2-6483-419d-a945-d661a417dc10	880
883	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	\N	2023-12-06 19:12:45.646452	2023-12-06 19:12:45.646418	c2fe6b21-1164-4651-8eee-69fab2816b80	883
887	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	\N	2023-12-06 19:12:45.653075	2023-12-06 19:12:45.653053	fbf3f642-d44f-4a8e-94a6-a1bcd6c97ab6	887
889	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	\N	2023-12-06 19:12:45.659359	2023-12-06 19:12:45.659296	5de5a859-5f8e-41a0-9664-855366f9c37e	889
894	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	\N	2023-12-06 19:12:45.667747	2023-12-06 19:12:45.667626	30258376-4fc3-4279-950e-b4c757ec8a55	894
901	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	\N	2023-12-06 19:12:45.68137	2023-12-06 19:12:45.681299	64ab2cb1-ac65-4a90-8284-5c58e0a0acab	901
904	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	\N	2023-12-06 19:12:45.687994	2023-12-06 19:12:45.687969	3c4af47c-5098-4bfa-8068-686660cc19d2	904
910	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	\N	2023-12-06 19:12:45.698377	2023-12-06 19:12:45.698349	b4328c31-0efc-49e8-ab03-896cd0af6003	910
914	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	\N	2023-12-06 19:12:45.710133	2023-12-06 19:12:45.709627	caf889b1-f966-4ed8-94ce-bd3343d62fef	914
920	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	\N	2023-12-06 19:12:45.719721	2023-12-06 19:12:45.719706	4bdf4041-dbce-4a5d-9be5-27beca73e565	920
932	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	\N	2023-12-06 19:12:45.740975	2023-12-06 19:12:45.740961	86ebe198-60cf-4a0f-8aee-a7aabc5265bb	932
935	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	\N	2023-12-06 19:12:45.748866	2023-12-06 19:12:45.748854	87dc102b-3583-4e06-8c41-74f67f2e953b	935
937	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	\N	2023-12-06 19:12:45.753268	2023-12-06 19:12:45.753254	e2ff1681-2a77-4e9e-99f5-dacc9ee5f5cc	937
943	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.764369	2023-12-06 19:12:45.764344	463a315d-7a34-4319-897a-fefd41e40e99	943
947	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	\N	2023-12-06 19:12:45.772217	2023-12-06 19:12:45.772192	e32713cf-bdba-48d2-97fc-fae8ba94b3d0	947
950	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	\N	2023-12-06 19:12:45.779621	2023-12-06 19:12:45.779596	d820f179-5487-4f6e-8aec-a5115414663d	950
953	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	\N	2023-12-06 19:12:45.786655	2023-12-06 19:12:45.786609	f3a83000-f71d-4173-9cd1-c0d1c12700c5	953
957	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	\N	2023-12-06 19:12:45.793171	2023-12-06 19:12:45.793037	e789cb03-3082-4bfc-9491-1b09e4145211	957
959	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	\N	2023-12-06 19:12:45.797055	2023-12-06 19:12:45.797027	2c1917eb-e6af-48f4-82d0-2e409d7413df	959
963	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	\N	2023-12-06 19:12:45.805702	2023-12-06 19:12:45.805677	0f7ebad7-00a8-463c-8782-0dc21a002d18	963
965	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	\N	2023-12-06 19:12:45.837845	2023-12-06 19:12:45.836904	6254d6a9-aa1b-4c25-89e0-8e9d713ed9cc	966
970	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:45.874462	2023-12-06 19:12:45.873253	552223f5-a5bd-41bf-8e1e-5a8ff3b511b8	969
977	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	\N	2023-12-06 19:12:45.912204	2023-12-06 19:12:45.911248	1fb2cfbb-0711-4476-8c2a-7017e7d6a80f	976
982	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	\N	2023-12-06 19:12:45.921702	2023-12-06 19:12:45.921689	30b1408a-4b13-4e4a-8460-bfb6e81cb088	982
985	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	\N	2023-12-06 19:12:45.928782	2023-12-06 19:12:45.928528	92f75093-bfbe-48f4-aaca-08ee19491408	985
989	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:45.958427	2023-12-06 19:12:45.957339	d98548b2-57eb-4d41-a23a-04b6443ff1d6	989
991	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	\N	2023-12-06 19:12:45.968393	2023-12-06 19:12:45.968353	78bf10b4-ceb7-4ce3-bbcb-7b54d5e3f905	991
828	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	\N	2023-12-06 19:12:45.53151	2023-12-06 19:12:45.53148	68f7c719-d2e2-46e7-bd4a-2a32151b57bb	828
831	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	\N	2023-12-06 19:12:45.536929	2023-12-06 19:12:45.536899	999c4aef-5156-47ad-b808-8e6fb5745d01	831
832	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	\N	2023-12-06 19:12:45.540546	2023-12-06 19:12:45.540505	60c8b73b-c677-48d6-8dc0-e3afa79f8491	832
834	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.544832	2023-12-06 19:12:45.544676	3570283a-733f-418f-a0c4-de96cfe24fde	834
836	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.548611	2023-12-06 19:12:45.548571	7d771e57-81b6-4e48-8985-2db8685d1e63	836
837	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	\N	2023-12-06 19:12:45.551067	2023-12-06 19:12:45.551038	4b38afc1-61b6-4605-b71a-17b7b9353239	837
846	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	\N	2023-12-06 19:12:45.570367	2023-12-06 19:12:45.570194	965bc0b1-164c-44b6-baa6-6bdac6a6cc73	846
848	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	\N	2023-12-06 19:12:45.576408	2023-12-06 19:12:45.576293	0bd46071-6c06-4f10-9fd5-248fede7eca1	848
852	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	\N	2023-12-06 19:12:45.583528	2023-12-06 19:12:45.583515	ff2012f2-f346-4719-b37c-78814f9eaf6d	852
854	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	\N	2023-12-06 19:12:45.587526	2023-12-06 19:12:45.58749	2ad9f69c-51b7-4b2a-b998-b7651be77aff	854
856	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	\N	2023-12-06 19:12:45.590961	2023-12-06 19:12:45.590926	5a6f085b-f91b-4e92-aac2-d4b205b74e5b	856
859	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	\N	2023-12-06 19:12:45.59662	2023-12-06 19:12:45.596587	b322b0c5-118b-40b5-ac54-34a7645018e7	859
864	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	\N	2023-12-06 19:12:45.603415	2023-12-06 19:12:45.603382	1ae1f0a3-2376-4f6f-9953-e52fda906ead	864
868	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	\N	2023-12-06 19:12:45.61361	2023-12-06 19:12:45.61358	cad2a470-a698-4903-8dc9-99c51bd6b769	868
871	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	\N	2023-12-06 19:12:45.61848	2023-12-06 19:12:45.618453	62681483-fedc-4f6b-b1b5-02a2717dbb09	871
872	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	\N	2023-12-06 19:12:45.622397	2023-12-06 19:12:45.622384	7738ebb9-3323-4639-8c37-3e25a4162261	872
877	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	\N	2023-12-06 19:12:45.630804	2023-12-06 19:12:45.630474	e0d4a009-00d8-4078-8986-e1db5b3fb21c	877
879	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	\N	2023-12-06 19:12:45.638179	2023-12-06 19:12:45.638165	017987ae-6caf-46f0-8c54-2aa0d6eabf6a	879
882	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	\N	2023-12-06 19:12:45.645426	2023-12-06 19:12:45.645401	05e385b9-c63d-49c4-85b0-350590b429d0	882
885	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	\N	2023-12-06 19:12:45.651992	2023-12-06 19:12:45.65186	f3144e7d-9db6-40d3-bec1-fae26b48c7ac	885
892	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	\N	2023-12-06 19:12:45.666253	2023-12-06 19:12:45.666163	caf05899-9605-4a8a-84b5-bf293a9e6c84	892
897	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	\N	2023-12-06 19:12:45.674151	2023-12-06 19:12:45.674137	d3467e50-a921-47bc-86ea-0b753e941e0c	897
899	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	\N	2023-12-06 19:12:45.677718	2023-12-06 19:12:45.677671	a70d196a-eac4-48fe-907a-a985e789ab79	899
905	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	\N	2023-12-06 19:12:45.689428	2023-12-06 19:12:45.689415	fa048a31-65a1-4937-9640-327ea9efcec9	905
909	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	\N	2023-12-06 19:12:45.69795	2023-12-06 19:12:45.697815	e78ec2ff-b41a-44b5-8edd-932e2fe1eb98	909
913	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	\N	2023-12-06 19:12:45.705257	2023-12-06 19:12:45.705243	48acfe35-0fa4-4b61-ba62-cd48d3530669	913
916	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	\N	2023-12-06 19:12:45.712024	2023-12-06 19:12:45.711943	f72f9934-36c0-4a8c-b050-e322804752e3	916
918	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	\N	2023-12-06 19:12:45.718165	2023-12-06 19:12:45.718139	b6fbfb17-3648-42dd-8524-50bdb5ef973a	918
923	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	\N	2023-12-06 19:12:45.727222	2023-12-06 19:12:45.727198	c330fd7b-da04-48f3-8678-2fe5712d986f	923
927	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	\N	2023-12-06 19:12:45.735039	2023-12-06 19:12:45.735025	fc1d85b2-1c7b-465f-bbc2-707997fc6639	927
933	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	\N	2023-12-06 19:12:45.74617	2023-12-06 19:12:45.746154	e123a273-e9a7-43f0-97f4-4e917dc882ef	933
938	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	\N	2023-12-06 19:12:45.756108	2023-12-06 19:12:45.756081	0f671876-7051-4e49-bea8-d6b7b9950cba	938
941	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-12-06 19:12:45.760049	2023-12-06 19:12:45.760022	4e88a245-ef97-4c19-8d0f-b1326b55b3f3	941
945	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	\N	2023-12-06 19:12:45.769967	2023-12-06 19:12:45.769888	05b89171-f5b8-462c-890f-5b4872f12d8a	945
948	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	\N	2023-12-06 19:12:45.774545	2023-12-06 19:12:45.774471	828ddfd3-d9b7-428b-be33-9b2678384af7	948
949	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	\N	2023-12-06 19:12:45.779118	2023-12-06 19:12:45.779066	df3b7ed2-3b87-4e55-9605-06fc87e08dca	949
952	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	\N	2023-12-06 19:12:45.785621	2023-12-06 19:12:45.78558	7f5ab8cc-4157-4e5f-bf76-f5124acad218	952
956	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	\N	2023-12-06 19:12:45.792267	2023-12-06 19:12:45.792224	6cec4355-6155-4f82-a042-3a8e4d7f73a1	956
960	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	\N	2023-12-06 19:12:45.800708	2023-12-06 19:12:45.800666	32cc3c09-cb7b-4e08-afda-8f39b39ef1f0	960
966	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	\N	2023-12-06 19:12:45.837842	2023-12-06 19:12:45.836894	0a3823ef-ff0b-4e77-81d3-782239f6e93d	965
969	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:45.874466	2023-12-06 19:12:45.873258	b5d5b609-7128-4224-b2cd-3f75dad7b0a6	968
972	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:45.883296	2023-12-06 19:12:45.883271	73a7a0f3-8e26-4612-b4e0-0379b7e453d5	972
975	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	\N	2023-12-06 19:12:45.912204	2023-12-06 19:12:45.911268	2b91e62c-7ff4-4b45-8a16-db4b9c1382a9	975
867	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	\N	2023-12-06 19:12:45.607274	2023-12-06 19:12:45.60723	53ff7241-d603-47e9-81eb-a6d3790ec4e3	867
869	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	\N	2023-12-06 19:12:45.614768	2023-12-06 19:12:45.614754	8dd8e350-b394-40ed-b116-53466031870a	869
874	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	\N	2023-12-06 19:12:45.623121	2023-12-06 19:12:45.623045	ab34d07c-dd29-4494-8acc-b2a8bb216cad	874
875	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	\N	2023-12-06 19:12:45.627872	2023-12-06 19:12:45.627816	da27d43e-0e90-4307-bcb3-d1106a506ed0	875
881	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	\N	2023-12-06 19:12:45.640409	2023-12-06 19:12:45.6403	cc181f12-e3e7-407d-9145-02e8447bc7ce	881
886	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	\N	2023-12-06 19:12:45.652542	2023-12-06 19:12:45.652516	90bff1f5-1426-4875-8ada-a5f5786cef67	886
890	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	\N	2023-12-06 19:12:45.660035	2023-12-06 19:12:45.660007	75428677-bab1-4a19-9375-b08c216b9bdb	890
896	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	\N	2023-12-06 19:12:45.672311	2023-12-06 19:12:45.672297	e5cf17dc-1262-4b40-9eec-226fefdba95f	896
902	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	\N	2023-12-06 19:12:45.681114	2023-12-06 19:12:45.681076	60276579-9bed-4521-877f-c43421187cc2	902
903	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	\N	2023-12-06 19:12:45.687771	2023-12-06 19:12:45.687725	4a9f4fcd-6eb1-4b89-abda-12ec63bfa191	903
907	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	\N	2023-12-06 19:12:45.692457	2023-12-06 19:12:45.692444	4ce58f4a-156c-4003-b622-25f59cc2773d	907
908	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	\N	2023-12-06 19:12:45.696929	2023-12-06 19:12:45.696897	7d8e389f-aeda-4afa-9d95-686e0fe3c46a	908
911	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	\N	2023-12-06 19:12:45.703174	2023-12-06 19:12:45.703045	2359e392-141d-4df3-9ef0-99992f461352	911
915	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	\N	2023-12-06 19:12:45.710261	2023-12-06 19:12:45.71024	d9fe11bf-4c67-4b01-87cd-4c48989bd891	915
921	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	\N	2023-12-06 19:12:45.72011	2023-12-06 19:12:45.72007	e5fb3506-6a6a-40fe-b80e-f11028f53275	921
924	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	\N	2023-12-06 19:12:45.727125	2023-12-06 19:12:45.727099	2835b5fd-73dc-4df7-9184-a2e6bab13db5	924
926	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	\N	2023-12-06 19:12:45.732589	2023-12-06 19:12:45.732443	d0578664-cc4d-4f5c-bf0a-d3d63bfd6adc	926
930	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	\N	2023-12-06 19:12:45.740356	2023-12-06 19:12:45.740094	bb622eb1-29ee-42e8-927b-c630223bde9b	930
934	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	\N	2023-12-06 19:12:45.748233	2023-12-06 19:12:45.748198	1ffc70ea-75b4-48cb-bfc7-ef58a65a5fde	934
939	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	\N	2023-12-06 19:12:45.757478	2023-12-06 19:12:45.757447	0f816e4b-6b7d-443b-bb92-4cd4d5fe8030	939
944	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	\N	2023-12-06 19:12:45.769126	2023-12-06 19:12:45.769113	a53e1a04-1278-48a5-90c6-a70b4857a45d	944
946	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	\N	2023-12-06 19:12:45.771955	2023-12-06 19:12:45.771936	9f9a03e6-8a71-44d5-b501-9e7ddfd59d8e	946
951	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	\N	2023-12-06 19:12:45.780329	2023-12-06 19:12:45.780305	8ef18b11-849a-48b4-b994-ccab5b37d4a4	951
955	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	\N	2023-12-06 19:12:45.786877	2023-12-06 19:12:45.786713	1f4d972e-61d6-4ba6-a928-cffb334b2ea7	955
958	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	\N	2023-12-06 19:12:45.795937	2023-12-06 19:12:45.795922	89b27536-3d3e-4133-9aec-6b2280856d7b	958
962	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	\N	2023-12-06 19:12:45.805238	2023-12-06 19:12:45.805196	30259fd7-612e-44d9-8358-29c339b9d506	962
967	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	\N	2023-12-06 19:12:45.838249	2023-12-06 19:12:45.836906	118b3fe3-3626-49f9-afa2-a3d873be8842	967
971	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:45.874462	2023-12-06 19:12:45.873263	0853d68c-d5ca-48ca-a46f-7a82e4014a63	971
973	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:45.883603	2023-12-06 19:12:45.883562	a40a80c7-3fa2-467e-9e0b-d7b6f41fad47	973
976	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	\N	2023-12-06 19:12:45.912199	2023-12-06 19:12:45.911245	e02d01c1-1653-4d4f-86fc-d3591aa57bd2	977
981	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	\N	2023-12-06 19:12:45.920506	2023-12-06 19:12:45.920453	85d6e844-23cf-40a3-8e92-e1492a55790c	981
983	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	\N	2023-12-06 19:12:45.927878	2023-12-06 19:12:45.927862	e0bb643e-9c42-47b3-b41d-59a8029e3636	983
988	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	\N	2023-12-06 19:12:45.958421	2023-12-06 19:12:45.957353	79d4aae0-5b4f-4c6e-a86d-37e7e669ea68	988
990	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	\N	2023-12-06 19:12:45.967097	2023-12-06 19:12:45.967067	ab9addac-f13a-4d4a-bc10-9d911361c192	990
993	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	\N	2023-12-06 19:12:45.995764	2023-12-06 19:12:45.994786	80d7875a-32ce-422f-99c7-34c9666e3c2e	993
996	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	\N	2023-12-06 19:12:46.034522	2023-12-06 19:12:46.033344	9de94fb6-193f-403a-b6ad-989996a11720	996
1001	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	\N	2023-12-06 19:12:46.044706	2023-12-06 19:12:46.044651	aa511a10-c9ff-425c-93e5-6c17c496e5c9	1001
1006	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	\N	2023-12-06 19:12:46.05281	2023-12-06 19:12:46.052753	8b6a2d56-1ff5-431f-a692-731129f060e1	1006
1009	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	\N	2023-12-06 19:12:46.05945	2023-12-06 19:12:46.059394	1ccc0c58-7e0c-4b3e-8bae-0707f892b82a	1009
891	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	\N	2023-12-06 19:12:45.661286	2023-12-06 19:12:45.661266	796ec0b6-d353-405a-83b5-0fc5c954dec9	891
893	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	\N	2023-12-06 19:12:45.66768	2023-12-06 19:12:45.667669	341d9e74-b126-4a27-a064-e3124bf2dd80	893
895	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	\N	2023-12-06 19:12:45.670421	2023-12-06 19:12:45.670288	4d4fe492-ae7f-4b18-a943-9b2c344404b7	895
898	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	\N	2023-12-06 19:12:45.675929	2023-12-06 19:12:45.675903	175dea75-a6c9-4cbc-8d5a-390251c62723	898
900	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	\N	2023-12-06 19:12:45.68136	2023-12-06 19:12:45.681334	bdd84221-0103-4e7c-8e2b-3cae1836aac2	900
906	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	\N	2023-12-06 19:12:45.691916	2023-12-06 19:12:45.6919	9bf0c8e1-bf78-4cfe-8118-f6b23305527a	906
912	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	\N	2023-12-06 19:12:45.705354	2023-12-06 19:12:45.705329	712f6797-ab74-4acf-a12b-2ee16a3e9458	912
917	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	\N	2023-12-06 19:12:45.713108	2023-12-06 19:12:45.713035	c0bd0c4f-41b6-4960-b5b1-b22a3932c7d7	917
919	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	\N	2023-12-06 19:12:45.718185	2023-12-06 19:12:45.717871	3999a494-beb6-420b-bcad-38b5707b40a9	919
922	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	\N	2023-12-06 19:12:45.725871	2023-12-06 19:12:45.72583	e4a7164f-93a9-46a3-96ac-baf2ee89fd22	922
925	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	\N	2023-12-06 19:12:45.729068	2023-12-06 19:12:45.729042	2fe3bdd6-dc4c-499f-88a7-98d3428047c4	925
928	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	\N	2023-12-06 19:12:45.735522	2023-12-06 19:12:45.735492	26bc5ac7-5b7c-47b8-b8a3-150a2046d9f0	928
929	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	\N	2023-12-06 19:12:45.738838	2023-12-06 19:12:45.738791	15d9fc80-4dde-4d42-9e06-e95648e87d16	929
931	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	\N	2023-12-06 19:12:45.741423	2023-12-06 19:12:45.741409	7c18b852-29fc-4d6a-94d1-5718c06100e0	931
936	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	\N	2023-12-06 19:12:45.751265	2023-12-06 19:12:45.751248	0cf2c298-ad78-4887-8a36-978955654265	936
940	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	\N	2023-12-06 19:12:45.75847	2023-12-06 19:12:45.758443	76509b40-7677-46d1-bda8-574dbca731d5	940
942	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	\N	2023-12-06 19:12:45.762918	2023-12-06 19:12:45.762905	e64bb77d-c80b-4acf-90b6-aaec74dadeb8	942
954	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	\N	2023-12-06 19:12:45.787033	2023-12-06 19:12:45.787019	aba459c5-9f4d-4e70-9d4b-fbeec53c5814	954
961	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	\N	2023-12-06 19:12:45.803034	2023-12-06 19:12:45.803017	7eac411a-c86e-4dbd-9a8b-cca8891e4b26	961
964	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	\N	2023-12-06 19:12:45.837842	2023-12-06 19:12:45.836886	736f5476-fbdd-4ade-b166-601b8fd3d2c0	964
968	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:45.874457	2023-12-06 19:12:45.873233	5f600b3d-c385-4975-ab56-d2f160d7fa1c	970
974	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:45.884864	2023-12-06 19:12:45.884837	0da67bb7-a6f8-4481-a9f6-b9e63826b558	974
978	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	\N	2023-12-06 19:12:45.912206	2023-12-06 19:12:45.911271	f011981c-4f0e-4282-93aa-6760fce20b31	978
979	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-12-06 19:12:45.92046	2023-12-06 19:12:45.920431	81eb055c-fb85-49bc-9d20-757be599d7c1	979
984	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	\N	2023-12-06 19:12:45.928779	2023-12-06 19:12:45.928752	c70c8ee0-073e-4ad1-8948-36c88c033820	984
986	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-12-06 19:12:45.958412	2023-12-06 19:12:45.957371	8c1b326b-4648-4502-91db-afea1e3e8fef	986
992	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	\N	2023-12-06 19:12:45.995757	2023-12-06 19:12:45.994804	4be05822-1ddb-46e8-8859-1865d7564ff7	992
999	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	\N	2023-12-06 19:12:46.036979	2023-12-06 19:12:46.035531	83a5dd31-cfb2-407b-b599-81ae8a6a2a25	999
1002	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	\N	2023-12-06 19:12:46.045188	2023-12-06 19:12:46.045146	f84c9a7e-56e5-446c-a1e2-6034e07ffb38	1002
1007	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	\N	2023-12-06 19:12:46.053808	2023-12-06 19:12:46.053781	2de80911-5de5-486f-bd43-5e7374e95e44	1007
1011	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	\N	2023-12-06 19:12:46.091391	2023-12-06 19:12:46.090002	9643d613-48ef-4b1f-826b-fd92d9295574	1010
1015	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	\N	2023-12-06 19:12:46.117182	2023-12-06 19:12:46.116488	f1c76bbb-1357-4082-a9fc-aba3e8e3f190	1015
1018	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	\N	2023-12-06 19:12:46.125345	2023-12-06 19:12:46.125303	4bf584e8-d079-4c1c-b673-7ce7babbfc2e	1018
1019	uri://ed-fi.org/CreditCategoryDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:46.156508	2023-12-06 19:12:46.155551	32313e33-4069-419f-8d23-ea714ac1fbee	1019
1025	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	\N	2023-12-06 19:12:46.196771	2023-12-06 19:12:46.195867	c2b51e65-701b-48d3-bda8-bdbe39cb5fca	1025
1029	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	\N	2023-12-06 19:12:46.205772	2023-12-06 19:12:46.205727	b640cdfa-e5cc-4ea0-84d3-f96917763b0d	1029
1035	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.243643	2023-12-06 19:12:46.241693	9264f4e3-bd4b-47b3-b96a-2451b27583f9	1035
1037	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	\N	2023-12-06 19:12:46.251789	2023-12-06 19:12:46.251752	0868f4e2-aa2e-467d-9616-6c5e0de292a5	1037
980	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	\N	2023-12-06 19:12:45.920792	2023-12-06 19:12:45.920767	dea9ca19-423a-4fc5-bc8d-9d633d2e52c7	980
987	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:45.958421	2023-12-06 19:12:45.957346	aefa8d8b-345e-4a67-bc0e-1ee619e280fe	987
994	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	\N	2023-12-06 19:12:45.995755	2023-12-06 19:12:45.994809	bc1cf659-06ec-4d56-9e23-ddb413a9052b	994
998	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	\N	2023-12-06 19:12:46.036999	2023-12-06 19:12:46.035542	973f760f-2ad4-499e-9cf4-c9922f7733fb	998
1003	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	\N	2023-12-06 19:12:46.046182	2023-12-06 19:12:46.046148	c6095b5d-52ca-4fb1-8edd-33d6f668390c	1003
1005	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	\N	2023-12-06 19:12:46.052794	2023-12-06 19:12:46.05272	00873f2c-0b02-425e-8457-66a4c3a85dbb	1005
1010	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	\N	2023-12-06 19:12:46.091267	2023-12-06 19:12:46.090016	ca301bd0-3216-4f27-b980-221d67df3b48	1011
1017	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.117213	2023-12-06 19:12:46.116831	037a0cc0-dc68-413f-abb5-28b13cd6f2db	1017
1020	uri://ed-fi.org/CreditCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:46.156498	2023-12-06 19:12:46.155533	9910f55c-94e8-43fa-845e-d8e403b7b9b3	1020
1024	uri://ed-fi.org/CreditCategoryDescriptor	Dual Credit	DEPRECATED: Dual Credit	DEPRECATED: Dual Credit	\N	\N	\N	\N	2023-12-06 19:12:46.167952	2023-12-06 19:12:46.167704	d856a52b-fe00-486d-8f2d-e17aa78ba3da	1024
1028	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	\N	2023-12-06 19:12:46.197391	2023-12-06 19:12:46.195886	a60214be-820c-4666-b822-9f2994cbea7b	1028
1032	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	\N	2023-12-06 19:12:46.20697	2023-12-06 19:12:46.206954	e97bb92a-1bb8-4acd-b0d8-8defd1059330	1032
1034	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	\N	2023-12-06 19:12:46.243167	2023-12-06 19:12:46.241682	7d1b885c-77a5-49b8-9c2a-0f8e87117033	1034
1041	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	\N	2023-12-06 19:12:46.286388	2023-12-06 19:12:46.285495	4604b303-636a-4346-85ea-31ef973306f2	1041
1044	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:46.295458	2023-12-06 19:12:46.29539	91a3aa82-d307-4b0b-8c2c-68ae7404d435	1044
1045	uri://tpdm.ed-fi.org/IndicatorDescriptor	Administrators Employed	Number of administrators employed	The number of administrators employed by the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.342212	2023-12-06 19:12:46.341129	34a3c9a8-912b-4676-878f-48aa48e87740	1045
1049	uri://tpdm.ed-fi.org/IndicatorDescriptor	Hiring Rate	Percent of staff hired	The percent of staff hired for the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.35095	2023-12-06 19:12:46.350915	86d15557-8ed1-4429-bc00-717178dc22df	1049
1056	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Salary	Average of salaries	The average of salaries collected at the aggregate level	\N	\N	\N	\N	2023-12-06 19:12:46.360568	2023-12-06 19:12:46.36054	586e0bf3-cf81-4b35-8fe1-d2859608725d	1056
1060	uri://ed-fi.org/ReportingTagDescriptor	ESSA	Every Student Succeeds Act	Every Student Succeeds Act	\N	\N	\N	\N	2023-12-06 19:12:46.414953	2023-12-06 19:12:46.413012	f8cc3661-6b6f-45ec-bedf-dc0c69b1ba97	1060
1063	uri://ed-fi.org/ReportingTagDescriptor	SEA	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:46.440273	2023-12-06 19:12:46.440223	75c6b64c-7928-4688-8576-9ad04e0ebc67	1063
1066	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	\N	2023-12-06 19:12:46.483577	2023-12-06 19:12:46.483495	0bd3a8ca-6a1c-4927-bde2-74b24f82daae	1066
1070	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Demographics	Staff Demographics	Staff Demographics	\N	\N	\N	\N	2023-12-06 19:12:46.498797	2023-12-06 19:12:46.497866	ca0bb5c9-ba75-4ea0-8f6e-b95561fc0858	1070
1074	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Assessment	Student Assessment	Student Assessment	\N	\N	\N	\N	2023-12-06 19:12:46.505905	2023-12-06 19:12:46.505886	0ef200b1-b9c5-45a8-919d-ea6075d792d1	1074
1078	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.558615	2023-12-06 19:12:46.558583	48038f27-57c8-487b-8fad-1939c253b286	1078
1080	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	\N	2023-12-06 19:12:46.5702	2023-12-06 19:12:46.57018	75594ee5-aad1-4f2a-8953-c0588bed9944	1080
1084	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	\N	2023-12-06 19:12:46.600766	2023-12-06 19:12:46.599881	7cc9a9c0-a876-49df-9b76-1acf532606a5	1084
1087	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	\N	2023-12-06 19:12:46.610448	2023-12-06 19:12:46.610423	c5259052-c5e7-4758-95f4-1c19bda7cae6	1087
1091	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	\N	2023-12-06 19:12:46.617877	2023-12-06 19:12:46.617841	138a4919-61b2-4383-a9d2-6d0232faf313	1091
1093	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	\N	2023-12-06 19:12:46.621732	2023-12-06 19:12:46.621698	591f91ac-5e66-4d2c-9c9f-3f6f468854e0	1093
1095	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	\N	2023-12-06 19:12:46.624441	2023-12-06 19:12:46.62435	71952fc2-88f3-431d-ad9d-35cf07deba86	1095
1098	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	\N	2023-12-06 19:12:46.630331	2023-12-06 19:12:46.630317	5e1d213a-73bf-4f78-b00f-fc7746ff4a30	1098
1109	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	\N	2023-12-06 19:12:46.650795	2023-12-06 19:12:46.650741	072046d7-f8e4-459d-bef0-2ebe474bcad6	1109
1110	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	\N	2023-12-06 19:12:46.653375	2023-12-06 19:12:46.65334	19ef3622-83c5-4d6c-b36a-ea71c753d7c1	1110
1119	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	\N	2023-12-06 19:12:46.669889	2023-12-06 19:12:46.669863	79ad4a9f-4c02-4b24-a0f5-7316b99bd3a8	1119
1122	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	\N	2023-12-06 19:12:46.675624	2023-12-06 19:12:46.675589	8c20a4dd-0d6c-4c92-8e81-5d10186466a4	1122
1123	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	\N	2023-12-06 19:12:46.678217	2023-12-06 19:12:46.678204	b9815bb2-5b80-4b97-8857-fb73be98f7c3	1123
995	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	\N	2023-12-06 19:12:45.995764	2023-12-06 19:12:45.994779	a1686d6e-d47d-477b-90ed-af59e2d833de	995
997	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	\N	2023-12-06 19:12:46.034522	2023-12-06 19:12:46.033377	c36ec1ec-30a8-471d-a000-4e30838dd8dc	997
1000	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	\N	2023-12-06 19:12:46.044071	2023-12-06 19:12:46.044032	faefabb9-29d3-4f3c-962a-d7f38badc8b9	1000
1004	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	\N	2023-12-06 19:12:46.052314	2023-12-06 19:12:46.052279	a1e7673e-e894-45fa-b36a-df84862d11ab	1004
1008	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	\N	2023-12-06 19:12:46.05922	2023-12-06 19:12:46.059153	c70acb5e-a3df-481a-a011-c4e23489facc	1008
1012	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	\N	2023-12-06 19:12:46.091271	2023-12-06 19:12:46.090026	1b4fa9b8-c1fb-443e-b66a-22bda8d870c0	1012
1014	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	\N	2023-12-06 19:12:46.116632	2023-12-06 19:12:46.116587	dc83a87b-9f36-4005-b432-1c5b52e3aacc	1014
1021	uri://ed-fi.org/CreditCategoryDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-12-06 19:12:46.156501	2023-12-06 19:12:46.155527	277fb1aa-7c2f-4d0b-9326-afb2329fbd68	1021
1027	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	\N	2023-12-06 19:12:46.196977	2023-12-06 19:12:46.195863	951f1e70-488d-40a6-a6e3-504faf52cd77	1027
1030	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	\N	2023-12-06 19:12:46.206317	2023-12-06 19:12:46.206303	2d1a67c2-65a4-455a-a476-09993b72816a	1030
1033	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	\N	2023-12-06 19:12:46.242945	2023-12-06 19:12:46.241678	deb8d7e9-0770-41cf-85ef-36ecabda0902	1033
1039	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	\N	2023-12-06 19:12:46.253107	2023-12-06 19:12:46.252952	baa09082-1c7e-4be2-aaa6-42555f2624c0	1039
1042	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-12-06 19:12:46.286364	2023-12-06 19:12:46.28547	a02b9b35-9151-4891-9b12-4923a23960b1	1042
1046	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Eligible for Free Reduced Price Lunches	Percent of students eligible for free and reduced lunches	The percent of students eligible for free and reduced lunches in the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.342216	2023-12-06 19:12:46.341104	68289185-fa54-4675-9ebe-6f74e6bd8a47	1046
1051	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students in Special Education	Percent of students in a special education program	The percent of students in a special education program in the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.352044	2023-12-06 19:12:46.352031	bc22ee3b-2b99-4ef4-9d84-6c8adf83e6c1	1051
1054	uri://tpdm.ed-fi.org/IndicatorDescriptor	Projected Vacancies	Number of projected vacancies	The number of projected vacancies associated with the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.359228	2023-12-06 19:12:46.359199	0585209c-5cae-45f9-a778-8e89d3065718	1054
1058	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Years Employed in District	Average number of years employed in the district	The average number of years that all staff have been employed in the current district of employment	\N	\N	\N	\N	2023-12-06 19:12:46.36814	2023-12-06 19:12:46.368094	5404a072-acde-4e0a-8ffe-5c91e4c5f2db	1058
1061	uri://ed-fi.org/ReportingTagDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:46.415059	2023-12-06 19:12:46.413149	c322c9b5-2508-45a5-bf27-62125eadcc30	1061
1067	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Enrollment	Student Enrollment	Student Enrollment	\N	\N	\N	\N	2023-12-06 19:12:46.486236	2023-12-06 19:12:46.484524	ef3ba38e-b6ba-4a98-accf-c08fa79c340b	1067
1072	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Academics	Student Academics	Student Academics	\N	\N	\N	\N	2023-12-06 19:12:46.500656	2023-12-06 19:12:46.500403	a4c5a28c-1a3c-449d-b206-24106597dd80	1072
1075	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	\N	2023-12-06 19:12:46.555313	2023-12-06 19:12:46.555087	a1cd66c8-0bd2-4f7a-8aa6-15795a1e0118	1075
1081	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	\N	2023-12-06 19:12:46.570308	2023-12-06 19:12:46.569196	74597cea-bffd-4b71-802d-2537de41d7d1	1081
1083	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	\N	2023-12-06 19:12:46.600725	2023-12-06 19:12:46.599859	9d9e34ba-9efc-4dc3-a4b4-1206784c7518	1083
1089	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	\N	2023-12-06 19:12:46.611708	2023-12-06 19:12:46.61153	3815dd9f-b589-4800-a1fd-a4bd88dcd0e1	1089
1094	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	\N	2023-12-06 19:12:46.622862	2023-12-06 19:12:46.622806	6246478b-fa12-412b-b701-bbf374e159f2	1094
1096	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	\N	2023-12-06 19:12:46.626929	2023-12-06 19:12:46.626883	1697493e-65e8-48bf-9cf2-2ccdeb4611fe	1096
1101	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	\N	2023-12-06 19:12:46.63653	2023-12-06 19:12:46.636516	2aaf96fe-ad3c-436f-9496-8019fbb6110d	1101
1104	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	\N	2023-12-06 19:12:46.641184	2023-12-06 19:12:46.641158	b14d0880-dc4e-4072-b32e-042bcdbb255b	1104
1105	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	\N	2023-12-06 19:12:46.643906	2023-12-06 19:12:46.643877	24e31d70-4e83-4c83-9cf2-6ff281bbc9bd	1105
1107	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	\N	2023-12-06 19:12:46.648042	2023-12-06 19:12:46.648027	0b53de4c-a86f-4323-9002-dca38e3b3c80	1107
1108	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	\N	2023-12-06 19:12:46.650814	2023-12-06 19:12:46.650712	5205df66-677e-40aa-8cf8-a5ad5e9de034	1108
1112	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	\N	2023-12-06 19:12:46.656605	2023-12-06 19:12:46.656578	acdc71b8-0f38-4072-b73c-d67ada0dbca2	1112
1114	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	\N	2023-12-06 19:12:46.659823	2023-12-06 19:12:46.659811	066467c6-142d-49f2-93c9-a224e55b612d	1114
1115	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	\N	2023-12-06 19:12:46.663423	2023-12-06 19:12:46.66337	4bf27e23-c210-4ac5-aeaf-1c395a4dab75	1115
1013	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	\N	2023-12-06 19:12:46.091256	2023-12-06 19:12:46.089996	90846c5b-988a-4f80-a147-e4ab16362a51	1013
1016	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	\N	2023-12-06 19:12:46.117108	2023-12-06 19:12:46.117084	5600eaa1-e254-42e6-9aef-0e9a8c37f5d5	1016
1022	uri://ed-fi.org/CreditCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:46.157706	2023-12-06 19:12:46.155555	aef43c84-4666-4c69-99fc-07ebe72b8037	1022
1023	uri://ed-fi.org/CreditCategoryDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-12-06 19:12:46.166512	2023-12-06 19:12:46.16649	899a2e18-510b-477d-8c3d-ffe84a90ba5e	1023
1026	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	\N	2023-12-06 19:12:46.196758	2023-12-06 19:12:46.195891	0751e62a-e5e6-4dd3-ba3b-31b52539dac2	1026
1031	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	\N	2023-12-06 19:12:46.206562	2023-12-06 19:12:46.206549	33ceefe9-73fa-4a17-a2df-e492336365af	1031
1036	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	\N	2023-12-06 19:12:46.245758	2023-12-06 19:12:46.244572	ce8dabea-c023-4051-96d2-3bb8f862aafa	1036
1038	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	\N	2023-12-06 19:12:46.251692	2023-12-06 19:12:46.251659	e427767a-64e6-4841-9826-0ab9733eca79	1038
1043	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-12-06 19:12:46.286375	2023-12-06 19:12:46.285498	2459bf27-753b-450b-a61f-e1cb7436d928	1043
1048	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Enrolled	Number of students enrolled	The number of students enrolled in the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.342323	2023-12-06 19:12:46.341131	e7864753-2945-406c-a968-db3c0308e552	1048
1050	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students with Limited English Proficiency	Percent of students with limited English proficiency	The percent of students with limited English proficiency in the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.351756	2023-12-06 19:12:46.351702	d661da55-ed03-475b-a6d4-597c12d28f8a	1050
1053	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retirement Rate	Percent of staff retired	The percent of staff retired for the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.358283	2023-12-06 19:12:46.358209	085de658-14b0-4e65-9a83-d052abfbb594	1053
1057	uri://tpdm.ed-fi.org/IndicatorDescriptor	Application Count	Number of applications received	The number of applications received for the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.367135	2023-12-06 19:12:46.367102	7531bb9e-c756-42f3-a847-19388359fb66	1057
1062	uri://ed-fi.org/ReportingTagDescriptor	CMO	Charter Management Organization	Charter Management Organization	\N	\N	\N	\N	2023-12-06 19:12:46.415527	2023-12-06 19:12:46.412856	c5e6e960-f332-4e79-a950-47e84b7de2c2	1062
1065	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.483133	2023-12-06 19:12:46.483093	aafab85e-d5fd-44ce-b3e1-f13390a65731	1065
1069	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Programs	Student Programs	Student Programs	\N	\N	\N	\N	2023-12-06 19:12:46.495717	2023-12-06 19:12:46.495362	577cbfca-6b89-4d9b-a39a-162e4747f486	1069
1077	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	\N	2023-12-06 19:12:46.555327	2023-12-06 19:12:46.553885	7ee6cde9-dfb2-4aa0-8bb9-36b6a5e4d504	1077
1079	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	\N	2023-12-06 19:12:46.564522	2023-12-06 19:12:46.564487	d26bec2f-8acd-4c05-aaa5-aaa7ca66b462	1079
1085	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	\N	2023-12-06 19:12:46.600774	2023-12-06 19:12:46.599875	b84a0d16-9f58-40dd-8d31-d2487ee94ecf	1085
1086	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	\N	2023-12-06 19:12:46.610135	2023-12-06 19:12:46.61004	e96018de-316c-4cf1-a591-545bb5ffbc7c	1086
1092	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	\N	2023-12-06 19:12:46.619941	2023-12-06 19:12:46.619904	9584e7df-9d6b-46c4-8f53-40b869ecc831	1092
1099	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	\N	2023-12-06 19:12:46.631877	2023-12-06 19:12:46.631863	2f8aa890-99f9-4242-b5c7-b29739325d9c	1099
1103	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	\N	2023-12-06 19:12:46.639756	2023-12-06 19:12:46.639742	ca269901-3766-4c9a-b64f-4fa61c0d0e00	1103
1106	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	\N	2023-12-06 19:12:46.645829	2023-12-06 19:12:46.645713	3318942e-59b8-454e-ad60-3c0a06f2e056	1106
1111	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	\N	2023-12-06 19:12:46.65387	2023-12-06 19:12:46.653796	62c9399f-a47b-4d8e-8787-6736a21cbb8c	1111
1116	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	\N	2023-12-06 19:12:46.6645	2023-12-06 19:12:46.664456	c9f7dd66-50bd-47c0-8db9-c1858da1a021	1116
1120	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	\N	2023-12-06 19:12:46.674295	2023-12-06 19:12:46.674261	43aed677-c719-4054-b7a2-e54ee6476d80	1120
1125	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	\N	2023-12-06 19:12:46.681879	2023-12-06 19:12:46.681802	86f09654-a2c6-450c-a81e-4451c6bdcb42	1125
1135	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	\N	2023-12-06 19:12:46.703564	2023-12-06 19:12:46.703504	d3fd4cce-0efe-4a6c-be46-fda27a42bf01	1135
1138	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	\N	2023-12-06 19:12:46.710388	2023-12-06 19:12:46.710328	e8844f5e-9360-4571-a1b7-b2092b071e68	1138
1143	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	\N	2023-12-06 19:12:46.719553	2023-12-06 19:12:46.71954	626007f0-4833-4f4a-a1a4-b59096137942	1143
1146	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	\N	2023-12-06 19:12:46.750335	2023-12-06 19:12:46.749389	52137743-eeba-4227-a277-a50cfaefa550	1146
1148	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	\N	2023-12-06 19:12:46.759743	2023-12-06 19:12:46.759695	673a27a5-7c7d-434c-8e5b-e92df7c3191d	1148
1154	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:46.787824	2023-12-06 19:12:46.786914	744e9dc0-bf08-431e-83ef-67411103b5ec	1154
1156	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:46.79644	2023-12-06 19:12:46.796365	c7cd4440-0436-4e05-b872-918c776becf0	1156
1040	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	\N	2023-12-06 19:12:46.286378	2023-12-06 19:12:46.285477	de80731d-c176-4b97-98d8-10947c41608d	1040
1124	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	\N	2023-12-06 19:12:46.680002	2023-12-06 19:12:46.679969	50b76340-afd4-46ca-b0a6-9eea5921e1e8	1124
1047	uri://tpdm.ed-fi.org/IndicatorDescriptor	Teachers Employed	Number of teachers employed	The number of teachers employed by the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.342206	2023-12-06 19:12:46.341123	3e14f3fc-b5ff-4753-a2f3-e22094ee6e23	1047
1052	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retention Rate	Percent of staff retained	The percent of staff retained for the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.351852	2023-12-06 19:12:46.35164	7ab35ff7-26b9-4b6c-b0bb-1762183f809e	1052
1055	uri://tpdm.ed-fi.org/IndicatorDescriptor	Actual Vacancies	Number of actual vacancies	The number of actual vacancies associated with the education organization	\N	\N	\N	\N	2023-12-06 19:12:46.359573	2023-12-06 19:12:46.359547	469b48e4-b599-4c34-bf10-50bf55565f2c	1055
1059	uri://ed-fi.org/ReportingTagDescriptor	LEA	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:46.414718	2023-12-06 19:12:46.412856	9346b685-eb45-48a4-9275-17089487dc34	1059
1064	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	\N	2023-12-06 19:12:46.482075	2023-12-06 19:12:46.480765	0e6fbce8-d82a-4b34-a0bc-0094bc0cc485	1064
1068	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Employment	Staff Employment	Staff Employment	\N	\N	\N	\N	2023-12-06 19:12:46.492648	2023-12-06 19:12:46.492614	69793161-f5b9-4f29-baf7-672293df2c3c	1068
1071	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Demographics	Student Demographics	Student Demographics	\N	\N	\N	\N	2023-12-06 19:12:46.499412	2023-12-06 19:12:46.499356	d01e1f56-46fa-4a75-98b9-d5445cba1c51	1071
1073	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Survey Response	Survey Response	Survey Response	\N	\N	\N	\N	2023-12-06 19:12:46.503874	2023-12-06 19:12:46.503848	ce3a8501-ba4f-4570-9761-41b4bb5682fd	1073
1076	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	\N	2023-12-06 19:12:46.555727	2023-12-06 19:12:46.555674	c124e871-c7f9-4a7f-94dc-b2e4a7292a80	1076
1082	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	\N	2023-12-06 19:12:46.600714	2023-12-06 19:12:46.599852	f90ac317-c953-4bcb-9bea-ee455ae7f3e9	1082
1088	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	\N	2023-12-06 19:12:46.61103	2023-12-06 19:12:46.611	27f9a9a4-d403-48bf-abbf-534a9d7d04a7	1088
1090	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	\N	2023-12-06 19:12:46.617312	2023-12-06 19:12:46.617276	768fcf6b-8419-4a50-b7ca-5344ea52b59c	1090
1097	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	\N	2023-12-06 19:12:46.629667	2023-12-06 19:12:46.629656	5c342002-fe43-49e4-ab3e-8b7c1cf9349e	1097
1100	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	\N	2023-12-06 19:12:46.634134	2023-12-06 19:12:46.634097	006b3b1a-ce9a-4162-a5b0-edbc7c32c742	1100
1102	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	\N	2023-12-06 19:12:46.639106	2023-12-06 19:12:46.639093	e69b89e0-92da-4408-9e1c-8ff4a2303ca3	1102
1113	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	\N	2023-12-06 19:12:46.65927	2023-12-06 19:12:46.659228	52ec0254-a681-4618-8afb-0989ad046e9b	1113
1117	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	\N	2023-12-06 19:12:46.666996	2023-12-06 19:12:46.666914	a2ec389e-c075-49bf-92e0-11e18b656c8d	1117
1121	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	\N	2023-12-06 19:12:46.674872	2023-12-06 19:12:46.674831	f2ee6b2b-df35-40e1-b7e8-381d886aebd6	1121
1127	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	\N	2023-12-06 19:12:46.687215	2023-12-06 19:12:46.687202	f9ab5acf-d0cc-4020-98f1-e48b207ac50d	1127
1131	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	\N	2023-12-06 19:12:46.696166	2023-12-06 19:12:46.696131	907c33b2-4fc1-4e9c-a1c2-cf30ea5f1023	1131
1133	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	\N	2023-12-06 19:12:46.699589	2023-12-06 19:12:46.69952	2a116856-9310-47c4-a860-79707bd1d33b	1133
1137	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	\N	2023-12-06 19:12:46.708489	2023-12-06 19:12:46.708462	b3b49c32-feeb-4380-902d-a96199478326	1137
1140	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	\N	2023-12-06 19:12:46.7129	2023-12-06 19:12:46.712875	880a3163-8c10-4a47-887c-37a2f73b7352	1140
1144	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	\N	2023-12-06 19:12:46.750324	2023-12-06 19:12:46.749367	5e84763e-c773-41c6-983e-aef1cce7e834	1144
1149	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	\N	2023-12-06 19:12:46.760725	2023-12-06 19:12:46.760708	7525c27b-e438-43cf-b3dc-f47b3557c614	1149
1153	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:46.788027	2023-12-06 19:12:46.786945	31425dba-9797-4a67-9025-91557d8ae612	1153
1157	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:46.796981	2023-12-06 19:12:46.796961	e24eb56f-17eb-4868-a22c-b3b04d376b1a	1157
1159	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	\N	2023-12-06 19:12:46.831831	2023-12-06 19:12:46.830907	2918d1e9-1917-42c4-a35c-5d476b08046a	1159
1164	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	\N	2023-12-06 19:12:46.841719	2023-12-06 19:12:46.841693	fc4b76cc-6aa9-4739-9098-50c4642ee3a0	1164
1167	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	\N	2023-12-06 19:12:46.848796	2023-12-06 19:12:46.848782	ecef8149-fb7e-46ab-8ef1-0b5f879e88fd	1167
1173	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	\N	2023-12-06 19:12:46.883846	2023-12-06 19:12:46.883	5300aa55-0ce2-4a42-8d64-7a20066b7329	1173
1181	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	\N	2023-12-06 19:12:46.921928	2023-12-06 19:12:46.920807	0c48aedb-dfb2-40fc-b6b4-dc56e355a908	1181
1186	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-12-06 19:12:46.95911	2023-12-06 19:12:46.958169	fb590aac-0ef6-4330-b1af-1d69da02d229	1185
1194	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	\N	2023-12-06 19:12:46.998214	2023-12-06 19:12:46.997189	6b03bec1-5f8b-4cc1-8c3f-f58a0e941bae	1193
1118	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	\N	2023-12-06 19:12:46.667132	2023-12-06 19:12:46.66711	1c5347f2-a4a3-420a-9497-0ced7e801280	1118
1128	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	\N	2023-12-06 19:12:46.689197	2023-12-06 19:12:46.68903	86f8c359-2c6d-4799-bc9e-294ba2ceb7c6	1128
1130	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	\N	2023-12-06 19:12:46.693179	2023-12-06 19:12:46.692513	2913c2f9-4dce-46b9-b636-19c5f7ed6cb2	1130
1132	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	\N	2023-12-06 19:12:46.699513	2023-12-06 19:12:46.699489	5b930bb7-0bab-4651-91f5-c485c026d629	1132
1139	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	\N	2023-12-06 19:12:46.710671	2023-12-06 19:12:46.708507	27835480-1055-4d00-98da-5b58ded65919	1139
1142	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	\N	2023-12-06 19:12:46.716941	2023-12-06 19:12:46.716926	5baf969a-e04e-453a-8804-79c2d848a4a9	1142
1147	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	\N	2023-12-06 19:12:46.750525	2023-12-06 19:12:46.749359	05a1c07d-87b5-4679-90ef-bc48c283a30d	1147
1152	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-12-06 19:12:46.78783	2023-12-06 19:12:46.78693	5ef74a07-b33a-4d24-a555-dfa3bd53f9d3	1152
1158	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	\N	2023-12-06 19:12:46.798192	2023-12-06 19:12:46.79818	d63e48d6-3f4f-4ab6-8fe4-fb84993f7e28	1158
1162	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	\N	2023-12-06 19:12:46.832212	2023-12-06 19:12:46.830926	f89d93e4-905e-47e8-a3ab-6bdc22f99d3a	1162
1163	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	\N	2023-12-06 19:12:46.84078	2023-12-06 19:12:46.840766	0566437e-77b2-4daa-8243-28067f081d0b	1163
1169	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	\N	2023-12-06 19:12:46.850255	2023-12-06 19:12:46.850182	2696cf7f-236f-4742-9ff9-199e07c09931	1169
1171	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	\N	2023-12-06 19:12:46.883838	2023-12-06 19:12:46.882992	e4b71b1a-3670-47ef-ada7-b7c9f6938b41	1171
1175	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:46.89159	2023-12-06 19:12:46.891571	7c3ff88a-f552-465b-8add-81cc495eccc9	1175
1180	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	\N	2023-12-06 19:12:46.921909	2023-12-06 19:12:46.920799	975bc286-ae7d-441d-bcf4-e0bee0b5b2d8	1180
1184	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	\N	2023-12-06 19:12:46.930915	2023-12-06 19:12:46.930888	de28cfa5-c3bd-40a8-b582-258d5b376404	1184
1188	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-12-06 19:12:46.959113	2023-12-06 19:12:46.95815	9a72f37e-d407-4523-906f-c8b596caeada	1188
1189	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:12:46.968456	2023-12-06 19:12:46.968387	c30da1eb-4401-439f-8e9e-9d266e1a2399	1189
1192	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	\N	2023-12-06 19:12:46.998194	2023-12-06 19:12:46.997219	d69f3299-ac1e-46ce-ba50-e095e2e4b197	1194
1197	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	\N	2023-12-06 19:12:47.006847	2023-12-06 19:12:47.006704	f1057b45-ab50-4cdc-9d75-ddd6c82eb036	1197
1201	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	\N	2023-12-06 19:12:47.014317	2023-12-06 19:12:47.014291	f305807c-c5d0-4613-a6b2-30e775191b78	1201
1204	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	\N	2023-12-06 19:12:47.04267	2023-12-06 19:12:47.041695	f35fa290-d1fa-4297-bf20-107777aa1614	1203
1208	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	\N	2023-12-06 19:12:47.079416	2023-12-06 19:12:47.078451	9c9d92c5-5f97-4503-bdd0-1f5e119697b2	1208
1212	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	\N	2023-12-06 19:12:47.089092	2023-12-06 19:12:47.089023	1abb4135-853f-41d5-b4cd-785ef75e8db3	1212
1215	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	\N	2023-12-06 19:12:47.118044	2023-12-06 19:12:47.117127	b7731095-ffb8-49c4-a765-d134d151836f	1215
1218	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:47.128663	2023-12-06 19:12:47.128632	95092efd-6c76-4fbd-aefd-4e25bece61de	1218
1221	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	\N	2023-12-06 19:12:47.133966	2023-12-06 19:12:47.133949	ef43b64a-6fb1-4da2-816c-4a39b9cc7a3a	1221
1224	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-12-06 19:12:47.138612	2023-12-06 19:12:47.138561	f9c24e06-5a30-4210-876e-b5d47eb43416	1224
1226	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	\N	2023-12-06 19:12:47.145803	2023-12-06 19:12:47.145752	90f109de-2d7e-4681-96a3-1d8311e2b75e	1226
1230	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	\N	2023-12-06 19:12:47.153322	2023-12-06 19:12:47.152121	33601093-1704-41e7-a29b-0a9ed5275a06	1230
1233	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	\N	2023-12-06 19:12:47.157493	2023-12-06 19:12:47.157478	8f4fd96d-43dc-4a76-a662-d11fe7a72003	1233
1235	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-12-06 19:12:47.161734	2023-12-06 19:12:47.161705	dc005b31-d926-4627-9cde-59b3eb06d0c2	1235
1321	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	\N	2023-12-06 19:12:47.499545	2023-12-06 19:12:47.499518	94adf00b-a8e0-4a92-8079-0180d6ed9c5a	1321
1126	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	\N	2023-12-06 19:12:46.682776	2023-12-06 19:12:46.68275	92c37d55-79d6-460f-9554-b35876e92509	1126
1129	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	\N	2023-12-06 19:12:46.690215	2023-12-06 19:12:46.690173	954f3112-06ac-49b5-9622-96ba11b25814	1129
1134	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	\N	2023-12-06 19:12:46.696858	2023-12-06 19:12:46.696832	a7490d20-a584-4e5c-8ba5-411136c802b9	1134
1136	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	\N	2023-12-06 19:12:46.706388	2023-12-06 19:12:46.706337	8c7d759f-8715-4d5c-873a-0c6baefd53c5	1136
1141	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	\N	2023-12-06 19:12:46.716643	2023-12-06 19:12:46.716514	26d590bf-3794-464e-8a88-5dfe533025d4	1141
1145	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	\N	2023-12-06 19:12:46.750332	2023-12-06 19:12:46.749379	0a6d9bab-c4ff-432b-805a-d74976ce3ef1	1145
1150	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-12-06 19:12:46.761008	2023-12-06 19:12:46.760854	81f708e0-0ec5-4cd5-bd11-ce9afb61add5	1150
1151	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	\N	2023-12-06 19:12:46.787795	2023-12-06 19:12:46.786923	3204e4f9-c721-4a77-89a1-53672a719a2d	1151
1155	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Organization Department	Organization Department	An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.	\N	\N	\N	\N	2023-12-06 19:12:46.795809	2023-12-06 19:12:46.79578	67216a8b-4149-4318-b5d8-e4c94f122cec	1155
1161	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	\N	2023-12-06 19:12:46.831857	2023-12-06 19:12:46.830916	5a8a70b4-7f57-4612-aa18-05c73ac735a1	1161
1165	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	\N	2023-12-06 19:12:46.841963	2023-12-06 19:12:46.84195	bf985bb1-a710-4513-a090-fe64a4ef63a8	1165
1168	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	\N	2023-12-06 19:12:46.84946	2023-12-06 19:12:46.849446	a7e1fd06-1392-473f-a26e-64460df12f12	1168
1172	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	\N	2023-12-06 19:12:46.883834	2023-12-06 19:12:46.883015	b47ea136-2d18-4bcb-88eb-59ac6384d74d	1172
1177	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	\N	2023-12-06 19:12:46.895076	2023-12-06 19:12:46.895063	a3c6b471-3289-478d-a294-00cfcb68ce68	1177
1179	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	\N	2023-12-06 19:12:46.921899	2023-12-06 19:12:46.920816	076f0116-692e-475c-8e40-7c7bb13c7c9f	1179
1183	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	\N	2023-12-06 19:12:46.930447	2023-12-06 19:12:46.930272	0ea49cd5-c332-488b-b011-3027bdb626ae	1183
1187	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-12-06 19:12:46.95911	2023-12-06 19:12:46.958143	0e8610f2-9e22-4963-a39d-17dadc6f4138	1187
1190	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-12-06 19:12:46.968641	2023-12-06 19:12:46.968585	d697fbda-fc37-4839-ae85-63edd4d10f19	1190
1193	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	\N	2023-12-06 19:12:46.998204	2023-12-06 19:12:46.997194	6ae95b62-da09-4835-b276-da00254bbe95	1192
1198	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.007106	2023-12-06 19:12:47.007084	106f5392-9bb3-440c-8751-2b13f1afb685	1198
1203	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.042669	2023-12-06 19:12:47.041718	1b5bda48-9bc1-434a-9ac6-ac0334f82be9	1204
1210	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	\N	2023-12-06 19:12:47.079427	2023-12-06 19:12:47.078424	a749270b-bb3b-4aea-8036-01770efb7beb	1210
1216	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	\N	2023-12-06 19:12:47.118985	2023-12-06 19:12:47.117133	a5b4b31f-720e-4940-bd4a-2029276d43c6	1216
1219	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	\N	2023-12-06 19:12:47.128679	2023-12-06 19:12:47.128658	267621f1-ca5b-4007-9663-7a4256861de7	1219
1228	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	\N	2023-12-06 19:12:47.147456	2023-12-06 19:12:47.147415	fb7a299c-8a77-4d83-9b70-ca4362c48c0e	1228
1238	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-12-06 19:12:47.167809	2023-12-06 19:12:47.167468	16e40db5-81c7-4147-8dea-30696b411eee	1238
1239	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	\N	2023-12-06 19:12:47.172313	2023-12-06 19:12:47.172298	526a4391-a1af-42e8-bc0c-9e5a0c7eb37c	1239
1242	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	\N	2023-12-06 19:12:47.178963	2023-12-06 19:12:47.178949	9c2661b2-d018-46bc-a83b-717879bf1fb0	1242
1245	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	\N	2023-12-06 19:12:47.186785	2023-12-06 19:12:47.186746	35699230-b14a-4a8f-b14b-8a12999c5031	1245
1248	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	\N	2023-12-06 19:12:47.193953	2023-12-06 19:12:47.193917	f61d9139-3e9c-4635-84e8-4e729ecc431e	1248
1249	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	\N	2023-12-06 19:12:47.210699	2023-12-06 19:12:47.21065	6bee06d1-b653-468c-9e63-f8e15219a81b	1249
1255	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	\N	2023-12-06 19:12:47.222376	2023-12-06 19:12:47.222236	10b1d1d9-b528-4b96-b1eb-a9e27b32ff1f	1255
1160	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	\N	2023-12-06 19:12:46.831945	2023-12-06 19:12:46.830943	0f680b8b-deff-4b63-8a3f-b64750004cb7	1160
1166	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	\N	2023-12-06 19:12:46.84209	2023-12-06 19:12:46.842034	a026975c-e6ae-4ad0-a1a9-efc0832e5868	1166
1170	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	\N	2023-12-06 19:12:46.85045	2023-12-06 19:12:46.850376	734ec35f-93e2-4f55-b6d7-c5a3d34ed7fc	1170
1174	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	\N	2023-12-06 19:12:46.883831	2023-12-06 19:12:46.882983	981af68f-4070-444a-be42-5d3c024a5237	1174
1176	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	\N	2023-12-06 19:12:46.894585	2023-12-06 19:12:46.894558	4e57b854-5691-42a2-a541-5f32b832893f	1176
1178	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	\N	2023-12-06 19:12:46.921914	2023-12-06 19:12:46.920831	86b95fd8-50cb-443d-b43c-299e191fc279	1178
1182	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	\N	2023-12-06 19:12:46.930346	2023-12-06 19:12:46.930316	b8954c93-aa30-423c-935e-182bdaade662	1182
1185	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:12:46.959113	2023-12-06 19:12:46.958176	580c1553-ec97-4d0d-8881-4dd6cf3da466	1186
1191	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:46.968531	2023-12-06 19:12:46.9685	db62f408-692d-44da-bf82-c3875d2f035f	1191
1195	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	\N	2023-12-06 19:12:46.998199	2023-12-06 19:12:46.997202	2fa74583-fec6-47a3-92e5-e628d80edfd4	1195
1199	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	\N	2023-12-06 19:12:47.007516	2023-12-06 19:12:47.00747	ec332d66-eef8-459b-8e2a-56dc2fa1b2e7	1199
1200	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	\N	2023-12-06 19:12:47.013194	2023-12-06 19:12:47.012781	75815a9e-3441-46df-af7f-59174d371f14	1200
1205	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	\N	2023-12-06 19:12:47.042669	2023-12-06 19:12:47.041724	1afa21a1-9bc8-45f4-a6d5-a26b2e61582f	1205
1206	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	\N	2023-12-06 19:12:47.05174	2023-12-06 19:12:47.051694	5925675a-9474-49e8-94b5-88b4c3e4571d	1206
1209	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	\N	2023-12-06 19:12:47.079421	2023-12-06 19:12:47.078444	ecf3123f-d7bf-446e-95c7-fc2e558afd1e	1209
1214	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:12:47.11799	2023-12-06 19:12:47.117112	c4e6aa58-4474-412a-b694-4b8530e9ea30	1214
1220	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	\N	2023-12-06 19:12:47.128697	2023-12-06 19:12:47.128668	b9e064be-4123-49b3-8603-900b81d592ee	1220
1223	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	\N	2023-12-06 19:12:47.136277	2023-12-06 19:12:47.135743	81b88503-f9ee-421d-b730-6813e6206d3a	1223
1225	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	\N	2023-12-06 19:12:47.141959	2023-12-06 19:12:47.14194	0fe6f6c5-6c00-4edd-bffa-c78e66181661	1225
1229	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	\N	2023-12-06 19:12:47.147879	2023-12-06 19:12:47.147844	9b5ff7f4-73d2-45a9-9a44-c927659fd9c0	1229
1231	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	\N	2023-12-06 19:12:47.154043	2023-12-06 19:12:47.154029	4be01c0a-4dfc-4cf1-9c0f-7241b9366acb	1231
1237	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	\N	2023-12-06 19:12:47.167726	2023-12-06 19:12:47.167699	ef3a2206-d13b-454b-985f-7fbfadec1c23	1237
1243	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	\N	2023-12-06 19:12:47.179115	2023-12-06 19:12:47.178949	4fee84de-864b-4e20-b9cc-519017b0984f	1243
1246	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	\N	2023-12-06 19:12:47.189035	2023-12-06 19:12:47.188753	f49c5e2b-24ec-4d0c-b692-55dae1d7494b	1246
1250	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	\N	2023-12-06 19:12:47.212004	2023-12-06 19:12:47.211964	1bde731e-2594-4369-aa18-3560aef7d50e	1250
1254	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.221672	2023-12-06 19:12:47.221652	a12e5273-a9b6-4cf5-8573-92a766873d67	1254
1258	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	\N	2023-12-06 19:12:47.231622	2023-12-06 19:12:47.231539	df3d5725-43bf-48e0-b30c-21ee70cf9829	1258
1265	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	\N	2023-12-06 19:12:47.243473	2023-12-06 19:12:47.243315	86f4208d-0825-4c4f-b8c0-b790206d17cf	1265
1268	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	\N	2023-12-06 19:12:47.250831	2023-12-06 19:12:47.250782	52a385ea-d7bc-431b-a7e7-4069a64c0fe2	1268
1276	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	\N	2023-12-06 19:12:47.303225	2023-12-06 19:12:47.301109	994c0672-619d-4884-9092-56d52ab43c49	1276
1281	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.312257	2023-12-06 19:12:47.312238	3c2167c3-2242-48ce-9436-9ba61e352a42	1281
1196	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	\N	2023-12-06 19:12:47.006691	2023-12-06 19:12:47.006655	1d6a344a-cba1-4b8e-98b4-7948c452b0f0	1196
1202	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	\N	2023-12-06 19:12:47.042669	2023-12-06 19:12:47.041703	86f14c01-1c1a-43f6-8a9a-f57091629e8e	1202
1207	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	\N	2023-12-06 19:12:47.079437	2023-12-06 19:12:47.07842	23df3db5-44e9-4055-8adf-43dff4eb14ae	1207
1211	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-12-06 19:12:47.087742	2023-12-06 19:12:47.087706	021e9639-399e-4ea3-8648-26dbf7485e63	1211
1213	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	\N	2023-12-06 19:12:47.118032	2023-12-06 19:12:47.117105	125c0b81-3df6-4fbb-b85a-61be05b25b33	1213
1217	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	\N	2023-12-06 19:12:47.126726	2023-12-06 19:12:47.126703	275fd0b9-f59f-4b07-a0ae-2c36dd41915b	1217
1222	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	\N	2023-12-06 19:12:47.13617	2023-12-06 19:12:47.136137	d9e140ec-980d-4d2b-b4ef-2c361ca22dde	1222
1227	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	\N	2023-12-06 19:12:47.145699	2023-12-06 19:12:47.145669	cf250ed7-bdf4-4856-9bb4-8b82192d93cf	1227
1232	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	\N	2023-12-06 19:12:47.154477	2023-12-06 19:12:47.154448	44b692a9-574d-47ed-854a-7a025e04400f	1232
1234	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	\N	2023-12-06 19:12:47.160151	2023-12-06 19:12:47.160122	5e4e5f29-dbd3-43f5-9453-f0015fc5ce14	1234
1236	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	\N	2023-12-06 19:12:47.163871	2023-12-06 19:12:47.163842	03c5c32d-e547-4ad5-9b71-c859a52a4edc	1236
1240	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	\N	2023-12-06 19:12:47.173584	2023-12-06 19:12:47.173558	fda12587-6d52-41d2-ab66-d5932a726803	1240
1241	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	\N	2023-12-06 19:12:47.178656	2023-12-06 19:12:47.178627	940be651-6197-4eb1-ae7b-da359cb8578c	1241
1247	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	\N	2023-12-06 19:12:47.189956	2023-12-06 19:12:47.189939	494e35aa-90ea-467c-bfd2-4b0f744a35b3	1247
1252	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	\N	2023-12-06 19:12:47.213353	2023-12-06 19:12:47.213113	5937542a-da8a-4314-84d7-2cca3073a3ab	1252
1256	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	\N	2023-12-06 19:12:47.223455	2023-12-06 19:12:47.223427	d47338ad-3154-4f03-af11-69bd2d6833b1	1256
1260	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	\N	2023-12-06 19:12:47.233034	2023-12-06 19:12:47.232869	0fca4578-dbc6-4b95-9092-ba952ec3e669	1260
1261	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	\N	2023-12-06 19:12:47.237001	2023-12-06 19:12:47.236973	8f394553-6e30-41be-8cb9-9a85dd017c58	1261
1263	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	\N	2023-12-06 19:12:47.241719	2023-12-06 19:12:47.241704	c27349ec-edcb-44a9-a989-0c5e108ba1ed	1263
1273	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Shared	Shared	The primary learning device is shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:47.295181	2023-12-06 19:12:47.293863	4b845a42-6e8a-49c8-b153-64257961cf3f	1273
1278	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	\N	2023-12-06 19:12:47.30477	2023-12-06 19:12:47.304594	5fdfa4f9-bbc2-4a9d-80fc-11d283b86a47	1278
1280	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.311472	2023-12-06 19:12:47.311449	9f1943f6-b3e8-46d8-85af-1adb8e1891d4	1280
1287	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	\N	2023-12-06 19:12:47.320383	2023-12-06 19:12:47.320336	fa422e67-e6dc-46c3-b0c5-4b162dfae693	1287
1289	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	\N	2023-12-06 19:12:47.355201	2023-12-06 19:12:47.354124	a1d23428-1743-4ddb-8294-9eb9fdadab0d	1289
1294	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	\N	2023-12-06 19:12:47.363852	2023-12-06 19:12:47.363839	073807da-4b12-47fe-8aac-031f18d34b5e	1294
1296	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	\N	2023-12-06 19:12:47.370667	2023-12-06 19:12:47.370635	78384f6e-1ccb-46f5-9fa7-65378d17b801	1296
1301	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-12-06 19:12:47.408997	2023-12-06 19:12:47.408017	1cc283d1-6358-4ca1-89ae-1b2f39cee590	1301
1306	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	\N	2023-12-06 19:12:47.446045	2023-12-06 19:12:47.44506	255a22ac-fb6a-4a1e-9fb6-689ec4e125ce	1306
1310	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	\N	2023-12-06 19:12:47.454688	2023-12-06 19:12:47.454564	d3c946af-dcb8-44fd-8b17-463233efcc6a	1310
1313	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	\N	2023-12-06 19:12:47.484867	2023-12-06 19:12:47.483856	3cbd7ccd-dafe-4062-b842-382c2ea97323	1313
1318	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	\N	2023-12-06 19:12:47.493825	2023-12-06 19:12:47.49379	acb72a3a-3134-49b5-b146-ba483cd5738c	1318
1244	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:47.181087	2023-12-06 19:12:47.181029	67ba25ec-2848-4879-bd5d-075c144c5853	1244
1328	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	\N	2023-12-06 19:12:47.540008	2023-12-06 19:12:47.539154	f39f4035-90d8-4c64-916f-a05883584b19	1327
1251	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	\N	2023-12-06 19:12:47.213268	2023-12-06 19:12:47.213243	cdae4263-50f3-4685-bb49-0b3fcf39bdd8	1251
1253	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	\N	2023-12-06 19:12:47.221634	2023-12-06 19:12:47.221603	99532b76-8bed-4201-aaf3-ecbeb0ac78fe	1253
1259	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	\N	2023-12-06 19:12:47.232625	2023-12-06 19:12:47.232423	973d5d49-8ca6-4af1-988c-f60295db8927	1259
1264	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:47.242677	2023-12-06 19:12:47.242649	7c2c4918-0442-40c3-a138-3bebe796fcc5	1264
1267	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	\N	2023-12-06 19:12:47.250625	2023-12-06 19:12:47.250588	af653f3f-0915-4d94-a5d9-e720fd42715f	1267
1270	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	\N	2023-12-06 19:12:47.256456	2023-12-06 19:12:47.256353	8e9ddfdb-0cf9-4bc8-a65a-c665c5e2719f	1270
1272	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	\N	2023-12-06 19:12:47.261387	2023-12-06 19:12:47.261356	f68b826b-e1ab-4991-9bb9-023421075f0f	1272
1275	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Unknown	Unknown	It is not known whether the primary learning device is shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:47.295204	2023-12-06 19:12:47.29387	66f9ecd1-9c50-4dfb-ab9d-710b96612e9a	1275
1279	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	\N	2023-12-06 19:12:47.304843	2023-12-06 19:12:47.304824	9e97f84e-a895-47ba-9278-d524086d1c06	1279
1282	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	\N	2023-12-06 19:12:47.31214	2023-12-06 19:12:47.312095	bbac2442-8cf8-4251-a69d-ae7262b78bcb	1282
1285	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-12-06 19:12:47.320011	2023-12-06 19:12:47.319943	cafc2b68-096c-4854-8a68-92839f3b259a	1285
1290	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	\N	2023-12-06 19:12:47.355186	2023-12-06 19:12:47.354108	2c7426d4-dfe9-4719-9692-a587d04f35da	1290
1292	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	\N	2023-12-06 19:12:47.36367	2023-12-06 19:12:47.363641	5c6ae1be-b2d4-4b7c-8974-14320c4abe1f	1292
1298	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	\N	2023-12-06 19:12:47.371372	2023-12-06 19:12:47.371349	f63755ae-d579-43db-9a67-e48b71208a96	1298
1302	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	\N	2023-12-06 19:12:47.408996	2023-12-06 19:12:47.408031	86f5acd0-d27f-46c4-956c-dea109852e59	1302
1309	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-12-06 19:12:47.446042	2023-12-06 19:12:47.445085	1b804db4-6639-4dd8-a729-bf81e287d897	1309
1314	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	\N	2023-12-06 19:12:47.484864	2023-12-06 19:12:47.483849	9b2782e2-914d-48bf-8351-654a753c59c7	1314
1317	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	\N	2023-12-06 19:12:47.493364	2023-12-06 19:12:47.493335	051923f8-dd44-454b-9ed6-712ada0b02fe	1317
1320	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.499511	2023-12-06 19:12:47.499483	e0a9815a-3456-4c01-8f2d-011a8451456f	1320
1324	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	\N	2023-12-06 19:12:47.505144	2023-12-06 19:12:47.505114	5cca21a4-789d-4230-9d38-5fc796d02a3c	1324
1327	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	\N	2023-12-06 19:12:47.540007	2023-12-06 19:12:47.539177	1d699ed9-16a4-4369-a107-05a4afa83e85	1328
1333	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	\N	2023-12-06 19:12:47.550355	2023-12-06 19:12:47.550341	e10db794-5b99-48bf-822d-a73752fcbf25	1333
1336	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-12-06 19:12:47.586584	2023-12-06 19:12:47.585655	7e812c95-ca5e-4f09-a5b5-34f9f4b9dedc	1336
1340	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-12-06 19:12:47.596019	2023-12-06 19:12:47.595992	7f688fe8-8380-4d7c-82a7-adf35f9410d3	1340
1342	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	\N	2023-12-06 19:12:47.62445	2023-12-06 19:12:47.623552	6a7f477d-7be4-457b-a32c-d65de2acb7c7	1342
1346	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	\N	2023-12-06 19:12:47.635656	2023-12-06 19:12:47.634846	f52660b0-a761-484a-ae18-24d2049ef57a	1346
1350	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	\N	2023-12-06 19:12:47.644674	2023-12-06 19:12:47.644641	5dffe2e1-a056-4005-9a4e-ee317fcc042c	1350
1355	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	\N	2023-12-06 19:12:47.680516	2023-12-06 19:12:47.679623	e6e42565-bd88-4309-acd8-15cd50d9965d	1355
1357	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	\N	2023-12-06 19:12:47.689176	2023-12-06 19:12:47.689132	d59ab9fd-6df5-4784-a9a6-72c20546069e	1357
1364	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	\N	2023-12-06 19:12:47.697653	2023-12-06 19:12:47.697617	b2059baa-bb51-48b8-92bd-72d0bea8f0bd	1364
1257	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-12-06 19:12:47.23056	2023-12-06 19:12:47.230485	f738d3dc-374b-46d1-acfa-17e2ad5fae80	1257
1262	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	\N	2023-12-06 19:12:47.241198	2023-12-06 19:12:47.241168	17186252-a903-48f7-91f1-018cb13d37e2	1262
1266	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	\N	2023-12-06 19:12:47.248394	2023-12-06 19:12:47.247707	a42e3c70-ad8d-4e91-8dca-dccdc1788dc3	1266
1269	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	\N	2023-12-06 19:12:47.251958	2023-12-06 19:12:47.251933	a51b7738-b578-4cd9-9c88-3d6a5ce93409	1269
1271	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	\N	2023-12-06 19:12:47.25825	2023-12-06 19:12:47.258223	a2bad4d0-2dd3-4f5d-851e-2c9f1a5d00b7	1271
1274	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Not Shared	Not Shared	The primary learning device is not shared with another individual.	\N	\N	\N	\N	2023-12-06 19:12:47.295198	2023-12-06 19:12:47.293889	36e6bbb2-aa1e-4e2a-802c-bde87d7f125f	1274
1277	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-12-06 19:12:47.304409	2023-12-06 19:12:47.304372	eab8e981-03b5-40ec-a421-e3eaa24287af	1277
1283	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	\N	2023-12-06 19:12:47.312961	2023-12-06 19:12:47.312947	fdc0d9c3-e377-4fe3-a86d-1c5ccbf7797d	1283
1286	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:47.31998	2023-12-06 19:12:47.319957	fc288549-8604-40e0-a825-193cd6726d91	1286
1291	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	\N	2023-12-06 19:12:47.355187	2023-12-06 19:12:47.354132	ad5a1147-d591-4713-b284-777437537cda	1291
1295	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	\N	2023-12-06 19:12:47.364506	2023-12-06 19:12:47.36447	0c2917ef-0fb0-4e00-87ad-a6285a7e9142	1295
1299	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	\N	2023-12-06 19:12:47.37214	2023-12-06 19:12:47.372101	ab03d1c2-d630-4ce7-9f16-c5cb17c80657	1299
1303	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:47.409097	2023-12-06 19:12:47.408036	e6d043d6-9987-47be-8677-0f29df9ef1ff	1303
1305	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.418055	2023-12-06 19:12:47.418025	0670e160-5396-4603-b994-31f4d73e3d7c	1305
1307	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	\N	2023-12-06 19:12:47.446045	2023-12-06 19:12:47.445068	02043cc1-14a4-43a8-8378-575637324e30	1307
1311	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-12-06 19:12:47.454687	2023-12-06 19:12:47.454598	64c1494e-d272-4f78-aa47-12c319c81a17	1311
1312	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	\N	2023-12-06 19:12:47.484864	2023-12-06 19:12:47.483825	ff0aa72c-82d1-4d4a-b785-817fcdf55a42	1312
1319	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	\N	2023-12-06 19:12:47.494684	2023-12-06 19:12:47.494655	8d30e795-cfcf-40ac-bf2c-c4b4115901da	1319
1322	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	\N	2023-12-06 19:12:47.499682	2023-12-06 19:12:47.499201	ea579e5f-37a5-456d-a1b4-271528620c36	1322
1325	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-12-06 19:12:47.506954	2023-12-06 19:12:47.506924	31bde09c-8830-4789-b9e5-ced47ffb1057	1325
1329	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	\N	2023-12-06 19:12:47.540124	2023-12-06 19:12:47.539188	9e5bd4b5-fa20-434b-8105-b227fbe848be	1329
1332	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	\N	2023-12-06 19:12:47.549732	2023-12-06 19:12:47.549705	98d27cbd-0d89-4c94-93bd-d67a1dd30518	1332
1337	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	\N	2023-12-06 19:12:47.586576	2023-12-06 19:12:47.585682	17699d87-6e44-495f-a770-bba9e8c7b50f	1337
1348	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	\N	2023-12-06 19:12:47.635917	2023-12-06 19:12:47.635677	a0b76ca9-91af-431a-8874-070417e2480a	1348
1352	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	\N	2023-12-06 19:12:47.646634	2023-12-06 19:12:47.64662	5fea05f6-6767-4939-a1d2-fc828ab41451	1352
1356	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	\N	2023-12-06 19:12:47.682114	2023-12-06 19:12:47.679644	ce030834-646c-464f-b384-c730b7ef842b	1356
1360	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	\N	2023-12-06 19:12:47.69021	2023-12-06 19:12:47.690181	33a63d77-1612-4638-b6f6-570bdc61a439	1360
1363	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	\N	2023-12-06 19:12:47.697321	2023-12-06 19:12:47.697274	73d7e000-6035-409a-a791-6489d310b9cc	1363
1365	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	\N	2023-12-06 19:12:47.733828	2023-12-06 19:12:47.732625	86f4fb8e-f132-4a22-868a-dbc6e0c91b2d	1365
1370	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	\N	2023-12-06 19:12:47.743784	2023-12-06 19:12:47.743743	0e935003-3be3-45eb-947d-4a29f2a34358	1370
1374	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	\N	2023-12-06 19:12:47.780384	2023-12-06 19:12:47.779547	56caa5ef-173a-423e-8496-05138702739a	1374
1379	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	\N	2023-12-06 19:12:47.79073	2023-12-06 19:12:47.790715	9982ece3-9606-4815-9361-f9ad0c8a833d	1379
1381	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	\N	2023-12-06 19:12:47.825733	2023-12-06 19:12:47.824818	c8042917-5a1a-4682-9449-8d7f8d62efff	1381
1284	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	\N	2023-12-06 19:12:47.318148	2023-12-06 19:12:47.31812	0d013df1-4d35-429f-88a6-38574052089b	1284
1288	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	\N	2023-12-06 19:12:47.355199	2023-12-06 19:12:47.354098	570f9371-9bca-4b24-848e-12307d8c65e1	1288
1293	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	\N	2023-12-06 19:12:47.363672	2023-12-06 19:12:47.363556	65cf99ef-2685-4cd9-bbb5-a1e42c0b2764	1293
1297	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	\N	2023-12-06 19:12:47.371349	2023-12-06 19:12:47.371293	66c0a10c-4357-4482-9605-b342f60676fb	1297
1300	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	\N	2023-12-06 19:12:47.3764	2023-12-06 19:12:47.376368	50fd459a-9998-4cce-b0af-f90312c4623b	1300
1304	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:47.409099	2023-12-06 19:12:47.408021	ab556e63-c6e6-420f-a5fd-73707e8973d5	1304
1308	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	At-Risk Programs	At-Risk Programs	At-Risk Programs	\N	\N	\N	\N	2023-12-06 19:12:47.446048	2023-12-06 19:12:47.445054	7c725f10-aea5-4c35-911e-1956d3e600f9	1308
1315	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	\N	2023-12-06 19:12:47.484867	2023-12-06 19:12:47.483831	6ee63d8a-8e9e-4661-8d32-3b9fbafe7dd4	1315
1316	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:47.493127	2023-12-06 19:12:47.493072	3e652a0d-1309-49b7-95d7-d2231809415a	1316
1323	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	\N	2023-12-06 19:12:47.5028	2023-12-06 19:12:47.502755	57cc2cec-726b-479a-8d14-6d6a7d780585	1323
1330	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-12-06 19:12:47.540108	2023-12-06 19:12:47.539162	faba43f8-9b58-4a69-ac5c-709543f06874	1330
1331	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-12-06 19:12:47.548742	2023-12-06 19:12:47.548711	e55f22ac-c77b-47a5-9f93-d12d93b24631	1331
1338	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	\N	2023-12-06 19:12:47.586806	2023-12-06 19:12:47.585663	954b5d57-6edc-4236-b885-792d38d1f929	1338
1339	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-12-06 19:12:47.595504	2023-12-06 19:12:47.59529	c9ad95e7-fc2f-44c4-9f31-40700a7a5f58	1339
1343	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	\N	2023-12-06 19:12:47.624472	2023-12-06 19:12:47.623565	157f02ed-d5ab-457d-95d6-118de005b187	1343
1347	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:47.635972	2023-12-06 19:12:47.632923	127be99c-9c19-4667-afcd-613d14150b15	1347
1351	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:47.646033	2023-12-06 19:12:47.645992	89a362c3-ec3c-4103-9063-61d690ff44c2	1351
1354	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	\N	2023-12-06 19:12:47.680569	2023-12-06 19:12:47.679616	9ca94b86-e7bb-4de1-8e8f-dc9c6918713e	1354
1358	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	\N	2023-12-06 19:12:47.689378	2023-12-06 19:12:47.689277	012b0274-db9d-4840-8fbe-be4b169704fa	1358
1361	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	\N	2023-12-06 19:12:47.695423	2023-12-06 19:12:47.695372	a46ee590-8118-413d-8ec6-2a8a07db8ec4	1361
1368	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	\N	2023-12-06 19:12:47.739967	2023-12-06 19:12:47.736916	f35fc0fa-a3bb-4041-b2d0-2f219b0f34ec	1368
1373	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-12-06 19:12:47.78043	2023-12-06 19:12:47.779533	4d5de054-85e1-434b-afc3-b8a0cf89c5eb	1373
1380	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.791359	2023-12-06 19:12:47.791078	33e22b02-37bb-4840-86ce-9b5276e6fd56	1380
1383	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.825871	2023-12-06 19:12:47.824787	0401555d-c781-485b-9951-3107926ed414	1383
1386	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-12-06 19:12:47.834861	2023-12-06 19:12:47.834781	be0a0b55-210c-421e-b14f-a125fc4cebdd	1386
1387	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-12-06 19:12:47.864801	2023-12-06 19:12:47.863877	c0e2f831-643b-45dc-baf1-f9970c05fc78	1387
1392	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	\N	2023-12-06 19:12:47.874914	2023-12-06 19:12:47.874876	1d0c49e9-200c-4d9c-b286-c360e8028900	1392
1396	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	\N	2023-12-06 19:12:47.908511	2023-12-06 19:12:47.907475	d444212c-71c6-4e0b-b9c6-043ed5cbfd1a	1396
1398	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	\N	2023-12-06 19:12:47.917892	2023-12-06 19:12:47.917854	7844d1a8-ce70-4e4c-8020-b4cb3760cfc4	1399
1402	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:47.925136	2023-12-06 19:12:47.9251	df02549e-48c0-4e95-9409-85b87bf8f8c8	1402
1404	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	\N	2023-12-06 19:12:47.956386	2023-12-06 19:12:47.955361	3fdb0c32-40af-494b-878e-93dca972e07d	1404
1411	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	\N	2023-12-06 19:12:47.965837	2023-12-06 19:12:47.965683	3f7794d5-d698-425b-9419-813ea051526f	1411
1326	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:47.508738	2023-12-06 19:12:47.508659	dc17446b-2b09-4023-9791-32674c9e8236	1326
1334	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	\N	2023-12-06 19:12:47.551123	2023-12-06 19:12:47.551051	29f113a9-c046-4ed9-82eb-b0d2ba25e651	1334
1335	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-12-06 19:12:47.586566	2023-12-06 19:12:47.585686	48d8183f-c67e-4be2-9b39-b4bba2b53bdb	1335
1341	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	\N	2023-12-06 19:12:47.597943	2023-12-06 19:12:47.597927	500110a6-13af-4609-9bd5-ac29af542460	1341
1344	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	\N	2023-12-06 19:12:47.624884	2023-12-06 19:12:47.623579	6e4ac5fa-3e7e-4d0f-9d8d-ae1d5477bd25	1344
1345	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	\N	2023-12-06 19:12:47.635813	2023-12-06 19:12:47.635029	7dc43ba3-ccde-4633-a64f-ac78602735d4	1345
1349	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	\N	2023-12-06 19:12:47.643598	2023-12-06 19:12:47.643531	7e3f35e3-5d3b-4ebd-a23a-898bc57885b4	1349
1353	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	\N	2023-12-06 19:12:47.680506	2023-12-06 19:12:47.67964	cf4fa6cd-bdc1-4eba-9323-ebc7e0e10284	1353
1359	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	\N	2023-12-06 19:12:47.689634	2023-12-06 19:12:47.689604	2e372b84-eea7-430d-b033-4f094079e45a	1359
1362	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	\N	2023-12-06 19:12:47.696803	2023-12-06 19:12:47.696738	83cf4f61-0473-47b4-8d0b-b320f41e1179	1362
1367	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	\N	2023-12-06 19:12:47.733958	2023-12-06 19:12:47.73261	106a7cb5-0ed6-46c4-b3a4-313b94c56899	1367
1371	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	\N	2023-12-06 19:12:47.743996	2023-12-06 19:12:47.743886	e4de4498-8d94-4132-bfad-abc4ff1eef4c	1371
1376	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-12-06 19:12:47.780466	2023-12-06 19:12:47.779542	67d198a2-43e4-4f1e-a71e-de387cf7c7b5	1376
1377	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	\N	2023-12-06 19:12:47.789613	2023-12-06 19:12:47.789572	7885bb87-fa8f-4f9a-967f-4ae79ad4ab29	1377
1382	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	\N	2023-12-06 19:12:47.825771	2023-12-06 19:12:47.824792	a4974fc4-00a7-4a7a-b513-bb84113fdf59	1382
1390	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	\N	2023-12-06 19:12:47.865272	2023-12-06 19:12:47.86387	5a7aef4b-1298-4638-bd14-48f773ac0f86	1390
1393	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	\N	2023-12-06 19:12:47.874917	2023-12-06 19:12:47.874839	1b554be9-a7ef-489b-b101-6655e83f27d6	1393
1397	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	\N	2023-12-06 19:12:47.908503	2023-12-06 19:12:47.907448	0173afb7-afb5-4738-8bb1-37f4eb95e566	1397
1401	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	\N	2023-12-06 19:12:47.918565	2023-12-06 19:12:47.918521	e8454d22-9e7d-4c18-89c1-9912c6792093	1401
1405	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	\N	2023-12-06 19:12:47.956404	2023-12-06 19:12:47.955357	5e4ebb1d-3023-486f-9c43-fd9b969da555	1407
1408	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	\N	2023-12-06 19:12:47.965483	2023-12-06 19:12:47.965465	b3c3895d-e2a5-4ba3-9233-5c52cd072ba9	1408
1413	uri://ed-fi.org/SchoolCategoryDescriptor	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	\N	\N	\N	\N	2023-12-06 19:12:47.97297	2023-12-06 19:12:47.972956	2c92f36f-8a12-4f98-b76d-a78435183e9e	1413
1418	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-12-06 19:12:47.983417	2023-12-06 19:12:47.983381	01fff855-81df-47b9-adcc-b9acdc18591a	1418
1422	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-12-06 19:12:48.016116	2023-12-06 19:12:48.014983	2c7fbb59-6975-4500-8960-e4e511c5361f	1422
1424	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:48.052615	2023-12-06 19:12:48.05164	f2f756a2-efe5-4d9b-8937-86e1d9b6ee49	1424
1428	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-12-06 19:12:48.091502	2023-12-06 19:12:48.090525	4b7982c0-d685-4d4e-b6a2-790474012d7a	1429
1433	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-12-06 19:12:48.100711	2023-12-06 19:12:48.100558	396592b3-5a8e-4313-9984-568e76d6b93b	1433
1438	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-12-06 19:12:48.108833	2023-12-06 19:12:48.108446	b3e272ae-092b-4efe-914a-a1654127d0d9	1438
1443	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:48.146647	2023-12-06 19:12:48.144741	127f4de5-65a6-4f50-bf29-b2a629777d1b	1443
1445	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	\N	2023-12-06 19:12:48.155112	2023-12-06 19:12:48.155069	e52bd10c-1c8d-49b0-a4cc-e1603f3f209d	1445
1450	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.163447	2023-12-06 19:12:48.163434	8af61d71-3f64-4c3b-ad4a-700e818f75e5	1450
1454	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-12-06 19:12:48.170547	2023-12-06 19:12:48.170521	2337c290-d918-4672-bc09-23cc8596141e	1454
1366	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	\N	2023-12-06 19:12:47.734053	2023-12-06 19:12:47.732637	862cbcbf-01f5-45ff-88cc-c5230a5bd1cc	1366
1395	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	\N	2023-12-06 19:12:47.908514	2023-12-06 19:12:47.907458	ffd371a6-5549-48d3-825b-bb14b5e0ebe8	1395
1369	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	\N	2023-12-06 19:12:47.743395	2023-12-06 19:12:47.743346	ddfbcf34-a610-4326-ab0d-b9d4a999cd9a	1369
1372	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	\N	2023-12-06 19:12:47.750144	2023-12-06 19:12:47.75009	b10e8bd1-c7d3-4f45-be21-7d92619d08b1	1372
1375	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-12-06 19:12:47.780459	2023-12-06 19:12:47.77964	ba2f334b-efb1-407c-9bf8-26d229076a4f	1375
1378	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	\N	2023-12-06 19:12:47.790449	2023-12-06 19:12:47.790414	479ea377-35de-479b-a003-1861704e60c7	1378
1384	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	\N	2023-12-06 19:12:47.825723	2023-12-06 19:12:47.824802	2e22c587-ecea-406a-9aab-717c993dc21e	1384
1385	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-12-06 19:12:47.834827	2023-12-06 19:12:47.834744	e6634dd5-3c3a-4222-9d00-beb6f022fdaf	1385
1388	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	\N	2023-12-06 19:12:47.864799	2023-12-06 19:12:47.863886	4b6414b6-8628-4ae0-bdb7-0eaebb084208	1388
1391	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	\N	2023-12-06 19:12:47.874466	2023-12-06 19:12:47.874349	9f32757b-0d4e-4d7d-854f-ece8155a86c1	1391
1394	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:47.908511	2023-12-06 19:12:47.907443	eca22f76-6c54-4915-be20-92e7e1aaf3c2	1394
1400	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	\N	2023-12-06 19:12:47.917737	2023-12-06 19:12:47.917464	0fbe0bd3-8799-4987-bce8-033d4cbf8041	1400
1407	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	\N	2023-12-06 19:12:47.956389	2023-12-06 19:12:47.95534	38fb2942-1f9b-406e-9cde-0d9b8dab3ea9	1406
1409	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	\N	2023-12-06 19:12:47.965542	2023-12-06 19:12:47.965489	820c0091-ccd6-400f-820d-f3a1e6442098	1409
1415	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	\N	2023-12-06 19:12:47.974892	2023-12-06 19:12:47.974862	5fb9f43b-5c03-45d7-8fe3-7b6ba03136a6	1415
1416	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	\N	2023-12-06 19:12:47.978598	2023-12-06 19:12:47.97856	a4e780cc-32b2-4274-a3bf-913405177731	1416
1419	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	\N	\N	\N	\N	2023-12-06 19:12:47.983525	2023-12-06 19:12:47.983497	82c2de9c-93ef-43a8-9138-df6d39b981e9	1419
1420	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-12-06 19:12:48.016116	2023-12-06 19:12:48.015005	f8ca43f1-0357-4622-86b3-27381725c513	1420
1427	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	\N	2023-12-06 19:12:48.05261	2023-12-06 19:12:48.051627	9e29573c-178e-4b88-be04-9e333f9dc60c	1427
1431	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-12-06 19:12:48.091512	2023-12-06 19:12:48.090529	4f104fea-b402-42b5-ad77-db97be4036f9	1431
1434	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-12-06 19:12:48.101101	2023-12-06 19:12:48.101088	01179511-e32a-489c-ad57-bee4ee486154	1434
1437	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:48.107145	2023-12-06 19:12:48.107115	0d2db9da-5172-4bcc-9248-87a120c0d02d	1437
1440	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	\N	2023-12-06 19:12:48.14571	2023-12-06 19:12:48.144759	9b5bb7ed-75ce-4eef-b9ed-ff6f57bb983a	1440
1446	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	\N	2023-12-06 19:12:48.155396	2023-12-06 19:12:48.155382	d53f651b-da0e-4af0-aa9a-9050441fd261	1446
1449	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	\N	2023-12-06 19:12:48.163215	2023-12-06 19:12:48.163187	fca4f39d-cef5-441f-bc74-143b0d20b3b2	1449
1452	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:48.167996	2023-12-06 19:12:48.167984	308d98ef-4c0e-4730-8b2d-b79d02c6b98d	1452
1458	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-12-06 19:12:48.203635	2023-12-06 19:12:48.202747	00c5c7df-e319-4efb-be1a-482007efe14b	1458
1462	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	\N	2023-12-06 19:12:48.239964	2023-12-06 19:12:48.23898	839e3d29-5a03-44ec-bd1f-7d9e50c55803	1462
1465	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	\N	2023-12-06 19:12:48.249829	2023-12-06 19:12:48.249786	cca4630c-39ca-45ef-964d-4cc1e43c752c	1465
1470	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	\N	2023-12-06 19:12:48.257927	2023-12-06 19:12:48.257751	6df6b723-f644-40dc-b8c9-7576d4b7e32e	1470
1472	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	\N	2023-12-06 19:12:48.263902	2023-12-06 19:12:48.263888	e5a4eff9-0e8c-4754-ac08-0f43bc11b116	1472
1475	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	\N	2023-12-06 19:12:48.268106	2023-12-06 19:12:48.268054	87870072-6c73-432b-b900-f254e3366973	1475
1477	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	\N	2023-12-06 19:12:48.273089	2023-12-06 19:12:48.273059	c30e3acc-d81c-4968-b48d-00f4118d98ac	1477
1480	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	\N	2023-12-06 19:12:48.280661	2023-12-06 19:12:48.280616	ff7912b3-05ae-45d7-b9e1-f80d07e9db30	1480
1482	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	\N	2023-12-06 19:12:48.283733	2023-12-06 19:12:48.283721	f2d077c9-2449-4005-9f0e-e70fab0c4527	1482
1486	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	\N	2023-12-06 19:12:48.291585	2023-12-06 19:12:48.291408	bfcd5c7c-0517-4839-8cd4-f006a29ca029	1486
1489	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	\N	2023-12-06 19:12:48.298733	2023-12-06 19:12:48.298705	baef16f4-529d-4f00-b406-f889923f05d5	1489
1494	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	\N	2023-12-06 19:12:48.30982	2023-12-06 19:12:48.309806	8911b549-ec8a-44ba-9eba-76a85f405f6c	1494
1389	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-12-06 19:12:47.864789	2023-12-06 19:12:47.863903	f3317988-7d26-420e-a221-1da554bd9a8a	1389
1399	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	\N	2023-12-06 19:12:47.917622	2023-12-06 19:12:47.917588	b117fe8b-7a1a-4f19-bb09-f49adf28c995	1398
1403	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	\N	2023-12-06 19:12:47.925373	2023-12-06 19:12:47.925345	b38416e2-65cb-43cd-ad47-5b6103af3630	1403
1406	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	\N	2023-12-06 19:12:47.956403	2023-12-06 19:12:47.955335	598a2883-a1e6-41de-aeae-43124ba3c79a	1405
1410	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	\N	2023-12-06 19:12:47.965483	2023-12-06 19:12:47.965453	afdbb48d-4795-46d3-ad6d-957dd6c5c97c	1410
1414	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	\N	2023-12-06 19:12:47.973665	2023-12-06 19:12:47.973584	3011dc9c-2fcd-434f-8d7d-cef532e245d9	1414
1423	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-12-06 19:12:48.016117	2023-12-06 19:12:48.014988	55d5347e-bdbf-4c3b-b58c-14c46f46462d	1423
1425	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:48.05261	2023-12-06 19:12:48.051656	29e06f69-2f65-4474-8f36-2d374d78f342	1425
1429	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-12-06 19:12:48.091498	2023-12-06 19:12:48.090546	e89cddf8-9910-414c-b97c-cd72447780a3	1428
1432	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-12-06 19:12:48.099658	2023-12-06 19:12:48.0995	07b2ee23-eeb9-4e1a-ade6-587bfc270963	1432
1436	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	\N	2023-12-06 19:12:48.106595	2023-12-06 19:12:48.106096	323f4cd2-f0ed-493c-bc61-f109529c9610	1436
1442	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:12:48.145662	2023-12-06 19:12:48.144767	6a02bf84-5c3a-4f16-89fe-b9ede114f3ec	1442
1447	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	\N	2023-12-06 19:12:48.156155	2023-12-06 19:12:48.156139	d8366512-f735-411f-a4f1-16f1e2eca5f2	1447
1451	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	\N	2023-12-06 19:12:48.163914	2023-12-06 19:12:48.163889	42046162-a54a-4302-9bbc-e3f2de84a837	1451
1456	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-12-06 19:12:48.203672	2023-12-06 19:12:48.20272	a211ad6c-11d3-43ec-8cef-ce7a3f27b65f	1456
1461	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	\N	2023-12-06 19:12:48.239851	2023-12-06 19:12:48.23896	e976eb9d-5dad-4230-ada5-ed0bdd085433	1461
1463	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	\N	2023-12-06 19:12:48.249032	2023-12-06 19:12:48.248967	bc64ca35-4006-43d9-892c-2c31aa5f9dc4	1463
1469	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	\N	2023-12-06 19:12:48.256101	2023-12-06 19:12:48.256086	4c8a91c2-8f4b-4db6-b97b-554e26f30603	1469
1471	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	\N	2023-12-06 19:12:48.262647	2023-12-06 19:12:48.262618	9de0918c-68f9-415e-9967-f680b5098f88	1471
1479	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	\N	2023-12-06 19:12:48.275893	2023-12-06 19:12:48.275732	b3a27a90-ae57-413e-bc80-b95341cbc1e8	1479
1483	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	\N	2023-12-06 19:12:48.285084	2023-12-06 19:12:48.285053	95904518-1bdd-44bc-8b16-fe85879a9105	1483
1487	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	\N	2023-12-06 19:12:48.293897	2023-12-06 19:12:48.293868	2ace9f34-4516-484a-8fba-34248195b149	1487
1492	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	\N	2023-12-06 19:12:48.306096	2023-12-06 19:12:48.306069	1a3ff847-b4ef-4bb3-b56a-fd691d95d985	1492
1496	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	\N	2023-12-06 19:12:48.316758	2023-12-06 19:12:48.316733	2c486050-09f5-4416-981e-9e4866ee4cef	1496
1501	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	\N	2023-12-06 19:12:48.32536	2023-12-06 19:12:48.325343	69f3118e-027c-4e67-8f85-0d2f87b23e68	1501
1504	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	\N	2023-12-06 19:12:48.333498	2023-12-06 19:12:48.3329	c6a1eaa8-8160-4095-8c8f-02eacf917ef8	1504
1508	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	\N	2023-12-06 19:12:48.345048	2023-12-06 19:12:48.345014	06687164-2b8d-4e8a-bfe9-f84a54f24c43	1508
1511	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	\N	2023-12-06 19:12:48.353113	2023-12-06 19:12:48.353085	39f24570-c4f4-4b04-b56e-80167b1c9039	1511
1512	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	\N	2023-12-06 19:12:48.358442	2023-12-06 19:12:48.358427	0e369679-36ac-4d2f-a5c3-17a1fc25dec3	1512
1516	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	\N	2023-12-06 19:12:48.367588	2023-12-06 19:12:48.367521	7f92b42a-6869-4058-9c81-9ff03dee5d5c	1516
1520	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	\N	2023-12-06 19:12:48.375788	2023-12-06 19:12:48.375275	433feb3c-c957-47f9-b8da-bbed9679e720	1520
1527	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	\N	2023-12-06 19:12:48.390803	2023-12-06 19:12:48.39077	0863e5eb-09d7-4d81-b1cf-9e0d42e758f7	1527
1529	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	\N	2023-12-06 19:12:48.395497	2023-12-06 19:12:48.395416	e7106ddc-088d-422e-a9a2-c9e242e63a99	1529
1541	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	\N	2023-12-06 19:12:48.423164	2023-12-06 19:12:48.423032	fe6e9e01-235a-4d5c-987b-3771687cc73b	1541
1543	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:48.434969	2023-12-06 19:12:48.434912	23a067df-a901-41a2-ac29-8a2a86c22cd6	1543
1549	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	\N	2023-12-06 19:12:48.45149	2023-12-06 19:12:48.451436	90ca6809-a2b3-4f80-9802-479a145ed6bb	1549
1551	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	\N	2023-12-06 19:12:48.458445	2023-12-06 19:12:48.458429	98a69d8d-7c9e-482b-85ca-72c958e4999e	1551
1557	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	\N	2023-12-06 19:12:48.467626	2023-12-06 19:12:48.467613	6383fd6f-bff3-43ee-b304-3fdb05ae0b1e	1557
1561	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	\N	2023-12-06 19:12:48.475469	2023-12-06 19:12:48.475444	7009595a-78ec-4af4-acc8-0f6a8d3e04c5	1561
1412	uri://ed-fi.org/SchoolCategoryDescriptor	Secondary School	Secondary School	Secondary School	\N	\N	\N	\N	2023-12-06 19:12:47.972287	2023-12-06 19:12:47.972249	2d244ddb-57f7-406f-b4c8-62c5c761e19f	1412
1417	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	\N	2023-12-06 19:12:47.98017	2023-12-06 19:12:47.980017	a88a7645-7ce1-4e46-9bf6-f0479d40ea30	1417
1421	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-12-06 19:12:48.016116	2023-12-06 19:12:48.015008	fc2a4c28-1292-47d2-b385-49e9e8aab812	1421
1426	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Remote	Remote	Outside the school or district	\N	\N	\N	\N	2023-12-06 19:12:48.052619	2023-12-06 19:12:48.051634	252bc93e-44dc-4534-ac7b-3b97d7adfcb5	1426
1430	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	\N	2023-12-06 19:12:48.091497	2023-12-06 19:12:48.09055	e261d4ea-7667-400b-8b17-22f6ef6be496	1430
1435	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	\N	2023-12-06 19:12:48.10233	2023-12-06 19:12:48.102318	0dccc1ae-ec72-4503-885d-72580d4716b5	1435
1439	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-12-06 19:12:48.109934	2023-12-06 19:12:48.10992	a5efe92d-7048-44da-a477-2279cabf68cd	1439
1441	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	\N	2023-12-06 19:12:48.145671	2023-12-06 19:12:48.144737	4e75f52d-ee6a-49b1-8e56-14283807e52d	1441
1444	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	\N	2023-12-06 19:12:48.154859	2023-12-06 19:12:48.154807	1051faba-a8cb-4c56-8b9c-7789cbabc62d	1444
1448	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	\N	2023-12-06 19:12:48.16311	2023-12-06 19:12:48.163048	17cf2a14-c823-4554-9287-2c0be3681d30	1448
1453	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	\N	2023-12-06 19:12:48.169637	2023-12-06 19:12:48.16961	1da5f950-264f-463a-9138-4ab0157d485c	1453
1455	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-12-06 19:12:48.203581	2023-12-06 19:12:48.202713	befa1f9b-5383-498b-abb9-339ed043b8d0	1455
1459	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	\N	2023-12-06 19:12:48.239865	2023-12-06 19:12:48.238997	d6a67cda-25c0-4d08-b21c-c1bf8bf10c5d	1459
1466	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	\N	2023-12-06 19:12:48.249845	2023-12-06 19:12:48.249731	2ad23147-ff63-4611-bc1b-4c29b6a88fe0	1466
1467	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	\N	2023-12-06 19:12:48.255802	2023-12-06 19:12:48.255496	fc53489d-85d4-4132-9195-2b7a4c2cfc2d	1467
1473	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	\N	2023-12-06 19:12:48.264126	2023-12-06 19:12:48.264075	839e2e66-5e64-44e1-badf-206374fdc228	1473
1476	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	\N	2023-12-06 19:12:48.272165	2023-12-06 19:12:48.272127	bd3585b2-c37d-459a-84e1-3b496a263d2b	1476
1481	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	\N	2023-12-06 19:12:48.281908	2023-12-06 19:12:48.281882	2e190b1d-cca0-401a-9431-141ed9d4da81	1481
1491	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	\N	2023-12-06 19:12:48.304695	2023-12-06 19:12:48.304672	832cfd05-b1d0-44b3-94fd-4ee434db5f06	1491
1499	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	\N	2023-12-06 19:12:48.323054	2023-12-06 19:12:48.323026	47166cfd-0391-42f9-8676-8c6dcb0bf4da	1499
1502	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	\N	2023-12-06 19:12:48.326293	2023-12-06 19:12:48.326214	bff68a94-b45b-46a7-af73-feab4ab7eb37	1502
1503	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	\N	2023-12-06 19:12:48.331825	2023-12-06 19:12:48.331771	3bfaac09-3572-4f6b-882b-7d2419e4b98d	1503
1505	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	\N	2023-12-06 19:12:48.341833	2023-12-06 19:12:48.341329	82a06f13-8cd5-4049-ac18-b01176076152	1505
1510	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	\N	2023-12-06 19:12:48.353077	2023-12-06 19:12:48.353048	32056e6f-1213-42ff-b15c-56b29f660ac7	1510
1513	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	\N	2023-12-06 19:12:48.359181	2023-12-06 19:12:48.359029	601e1ac0-bba6-4515-b523-13bf7eed5714	1513
1519	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	\N	2023-12-06 19:12:48.37281	2023-12-06 19:12:48.37277	400eabbf-8378-480e-90b7-b4eb8e3ec706	1519
1526	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	\N	2023-12-06 19:12:48.388131	2023-12-06 19:12:48.388086	3c371de1-ce1d-4bce-8795-9e833b98ada1	1526
1534	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	\N	2023-12-06 19:12:48.408498	2023-12-06 19:12:48.406833	b84ede56-a491-4c17-9348-e5b9a0557652	1534
1537	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	\N	2023-12-06 19:12:48.413434	2023-12-06 19:12:48.413395	65946959-7f9d-46f8-8b14-106b577a623c	1537
1539	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	\N	2023-12-06 19:12:48.421407	2023-12-06 19:12:48.421362	5ec9e1ca-0124-48c3-ab54-4eac071f0a88	1539
1542	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	\N	2023-12-06 19:12:48.430625	2023-12-06 19:12:48.430546	6b65d644-e88b-42f3-bd83-02f69a93608b	1542
1547	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	\N	2023-12-06 19:12:48.450973	2023-12-06 19:12:48.450954	ac816b8b-ebb7-47a6-84f6-c01badc03283	1547
1553	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	\N	2023-12-06 19:12:48.459857	2023-12-06 19:12:48.459741	9c4b413a-2895-4a88-94aa-f6f78fc5d39d	1553
1554	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	\N	2023-12-06 19:12:48.466811	2023-12-06 19:12:48.466781	f90357b0-3970-4e0c-b07d-ccdd163156ec	1554
1559	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	\N	2023-12-06 19:12:48.473826	2023-12-06 19:12:48.47379	53ecd220-d7f8-4b38-8c6c-87a76bf44322	1559
1563	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	\N	2023-12-06 19:12:48.494268	2023-12-06 19:12:48.494252	bb9bd3a2-6123-4fa5-8801-bccbe74f021a	1564
1566	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	\N	2023-12-06 19:12:48.508569	2023-12-06 19:12:48.508512	6a18de70-6522-448f-9086-e481a86c8588	1566
1572	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	\N	2023-12-06 19:12:48.523163	2023-12-06 19:12:48.523135	4ffdcbcf-e4d2-4572-9ba3-2e78182ddc7b	1572
1579	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	\N	2023-12-06 19:12:48.54392	2023-12-06 19:12:48.543905	249b9c5d-825d-464f-9465-9590e4cfcc92	1579
1583	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	\N	2023-12-06 19:12:48.555551	2023-12-06 19:12:48.555537	36339c25-7c75-4f4d-a73e-96f6c5ec8b93	1583
1589	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	\N	2023-12-06 19:12:48.566609	2023-12-06 19:12:48.566595	60cfcc0c-de58-410f-998b-1cceccde514c	1589
1593	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	\N	2023-12-06 19:12:48.576138	2023-12-06 19:12:48.576085	b5aae3ea-8f48-40fd-b0f6-00f35270a621	1593
1457	uri://ed-fi.org/SexDescriptor	Non-binary	Non-binary	Non-binary	\N	\N	\N	\N	2023-12-06 19:12:48.203686	2023-12-06 19:12:48.202729	478601f8-6605-48fc-a9a1-f64b9652d296	1457
1460	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	\N	2023-12-06 19:12:48.239866	2023-12-06 19:12:48.23897	6208aa2a-25d8-484d-b2e2-da0769bd46ba	1460
1464	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	\N	2023-12-06 19:12:48.248895	2023-12-06 19:12:48.248856	74216035-1c6c-46ee-95d2-7ba456e6566f	1464
1468	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	\N	2023-12-06 19:12:48.25582	2023-12-06 19:12:48.255694	7ac319e1-3032-4c76-95e4-60b8e6dbc2a1	1468
1474	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	\N	2023-12-06 19:12:48.267169	2023-12-06 19:12:48.267138	40be28bc-fd45-443a-87b1-7b541b144b28	1474
1478	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	\N	2023-12-06 19:12:48.273749	2023-12-06 19:12:48.273726	25f6ee01-b1bf-4dab-a612-fde91898ab1f	1478
1484	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	\N	2023-12-06 19:12:48.288102	2023-12-06 19:12:48.288052	c0101e42-35e0-4eb1-b968-f258b5992a10	1484
1485	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	\N	2023-12-06 19:12:48.290751	2023-12-06 19:12:48.290721	f959e858-df4e-46bd-8934-a8794b6ae495	1485
1488	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	\N	2023-12-06 19:12:48.297029	2023-12-06 19:12:48.297	07d3aea6-4fb8-4259-bb51-5a6c9d7a728e	1488
1490	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	\N	2023-12-06 19:12:48.300556	2023-12-06 19:12:48.300527	5cd82407-ff95-46aa-b4e7-9e65600a9e0f	1490
1493	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	\N	2023-12-06 19:12:48.307235	2023-12-06 19:12:48.307205	adea3873-aec9-43d8-8091-6554ad481b91	1493
1498	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	\N	2023-12-06 19:12:48.319978	2023-12-06 19:12:48.319937	9bb3a54b-48ba-49aa-a6b4-bd960b1f67ce	1498
1507	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	\N	2023-12-06 19:12:48.344704	2023-12-06 19:12:48.344669	b91cb266-b486-42ff-9207-19d7058272fd	1507
1509	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	\N	2023-12-06 19:12:48.350823	2023-12-06 19:12:48.350792	6e7384c0-2cbb-4275-80d7-4ad50020fb3b	1509
1515	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	\N	2023-12-06 19:12:48.363948	2023-12-06 19:12:48.363918	c9e2ff5a-e421-46ad-aab8-98d859c38300	1515
1518	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	\N	2023-12-06 19:12:48.370205	2023-12-06 19:12:48.369034	220e3a1f-8cc2-402d-bbfd-1c28d62b5ea6	1518
1522	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	\N	2023-12-06 19:12:48.378953	2023-12-06 19:12:48.378527	2ca56a23-0105-4c4f-929d-968ae67cf1c8	1522
1524	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	\N	2023-12-06 19:12:48.386175	2023-12-06 19:12:48.385819	3958f075-0338-4941-bf20-cd1752c28c42	1524
1528	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	\N	2023-12-06 19:12:48.39316	2023-12-06 19:12:48.393016	04962959-1a79-4d3b-af85-67c022a555df	1528
1532	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	\N	2023-12-06 19:12:48.40408	2023-12-06 19:12:48.404024	2b257f43-70d4-4f6d-a22c-745dbb324d4a	1532
1536	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	\N	2023-12-06 19:12:48.411002	2023-12-06 19:12:48.410682	ed3b11b3-ad7b-47ae-88ec-3aff6bf3218a	1536
1540	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	\N	2023-12-06 19:12:48.423742	2023-12-06 19:12:48.423718	d1b69eca-6dc4-4e94-b148-73827c6b14e1	1540
1544	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	\N	2023-12-06 19:12:48.435971	2023-12-06 19:12:48.435716	a321be56-35cd-4fc8-981a-4264c071e795	1544
1548	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	\N	2023-12-06 19:12:48.45098	2023-12-06 19:12:48.45074	49b0942d-7372-4df9-a593-a0c8ebc40bc7	1548
1550	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	\N	2023-12-06 19:12:48.458237	2023-12-06 19:12:48.458072	328bbd0d-6ecd-431f-a557-ca6ddb1885b3	1550
1555	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	\N	2023-12-06 19:12:48.467134	2023-12-06 19:12:48.467119	5fc9a371-cb3d-4190-9615-a146eb9a3e62	1555
1560	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	\N	2023-12-06 19:12:48.475276	2023-12-06 19:12:48.475241	b5c8e847-76fb-4350-800d-197a29f8e2e8	1560
1562	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	\N	2023-12-06 19:12:48.494191	2023-12-06 19:12:48.494041	f1eb6917-4508-4579-a653-ddf8d59bf286	1562
1567	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	\N	2023-12-06 19:12:48.510774	2023-12-06 19:12:48.510731	9c83d481-09ec-41c4-bc4b-7964dc0f0127	1567
1570	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	\N	2023-12-06 19:12:48.519555	2023-12-06 19:12:48.519386	b0e9a3df-735b-4c55-ab34-d66d1a238623	1570
1575	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	\N	2023-12-06 19:12:48.533111	2023-12-06 19:12:48.533084	d16f7f94-7ee9-4ecc-b498-a8ddede816f2	1575
1580	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	\N	2023-12-06 19:12:48.544351	2023-12-06 19:12:48.544334	af7121cf-ff51-4814-845d-cbad42c0cb6f	1580
1585	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	\N	2023-12-06 19:12:48.556319	2023-12-06 19:12:48.555347	cae327a4-44c8-4965-bcdb-aeae177db321	1585
1586	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	\N	2023-12-06 19:12:48.564704	2023-12-06 19:12:48.56467	71f1f9f3-6ba4-4b00-8d0a-4f8998ef326d	1586
1590	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	\N	2023-12-06 19:12:48.572428	2023-12-06 19:12:48.572407	f2eff52f-dba0-4759-823b-c339023ad458	1590
1592	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	\N	2023-12-06 19:12:48.575384	2023-12-06 19:12:48.575344	836b769f-5736-4ea3-a376-501d3ade6b71	1592
1597	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	\N	2023-12-06 19:12:48.585056	2023-12-06 19:12:48.585029	fad411d7-4a89-48c3-97d2-861e193627f5	1597
1600	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	\N	2023-12-06 19:12:48.596078	2023-12-06 19:12:48.596037	b619213b-0cf6-4422-b447-28d3f51c9db5	1600
1604	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	\N	2023-12-06 19:12:48.604197	2023-12-06 19:12:48.60411	4edac874-0558-4d0e-b1d3-946b686eb8e8	1604
1606	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	\N	2023-12-06 19:12:48.609185	2023-12-06 19:12:48.609171	f2a0bbc3-17be-4d14-81f5-339f05d379bc	1606
1616	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	\N	2023-12-06 19:12:48.626934	2023-12-06 19:12:48.626686	f0b88997-386e-42a8-91ab-38310037833f	1616
1620	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	\N	2023-12-06 19:12:48.634457	2023-12-06 19:12:48.634429	7a0626d7-1f76-4cb2-aa1e-be22a68d70cf	1620
1623	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	\N	2023-12-06 19:12:48.64186	2023-12-06 19:12:48.641685	a5cd6142-6b27-4ada-b57c-8e0b81782a35	1623
1626	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	\N	2023-12-06 19:12:48.649669	2023-12-06 19:12:48.6491	67f963b6-911f-468e-8c00-90fde502f460	1626
1495	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	\N	2023-12-06 19:12:48.313095	2023-12-06 19:12:48.313016	4194ee62-8e7c-4a01-8e64-9f99a6e0934a	1495
1497	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	\N	2023-12-06 19:12:48.31705	2023-12-06 19:12:48.317032	1173378b-a3b5-41b3-8510-cd1e258eab49	1497
1500	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	\N	2023-12-06 19:12:48.324761	2023-12-06 19:12:48.324738	0a669ea2-9688-463a-a80e-dd73db92a996	1500
1506	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	\N	2023-12-06 19:12:48.343435	2023-12-06 19:12:48.343157	293f626a-9629-4662-a3db-8a519ef54617	1506
1514	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	\N	2023-12-06 19:12:48.361686	2023-12-06 19:12:48.361658	b28644db-c568-435e-9228-300667b19aea	1514
1517	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	\N	2023-12-06 19:12:48.368514	2023-12-06 19:12:48.368366	b4c5e1c1-6f40-42a4-83fc-8fca69295d2b	1517
1521	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	\N	2023-12-06 19:12:48.37782	2023-12-06 19:12:48.377792	8c09561e-879c-4a10-b4e5-0f7b3e4bd3b9	1521
1523	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	\N	2023-12-06 19:12:48.383002	2023-12-06 19:12:48.382917	c0720fe2-57bc-4876-9685-e82df7219594	1523
1525	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	\N	2023-12-06 19:12:48.387109	2023-12-06 19:12:48.386912	89fc8f85-37bf-42d1-ba0e-6fe99d5f824e	1525
1530	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	\N	2023-12-06 19:12:48.397668	2023-12-06 19:12:48.397639	eb7200de-23e3-45cd-ac6e-69ac4cbbd63d	1530
1531	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	\N	2023-12-06 19:12:48.401272	2023-12-06 19:12:48.401242	0ddbcdab-f488-4a5c-8183-507f4c3ad463	1531
1533	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	\N	2023-12-06 19:12:48.406976	2023-12-06 19:12:48.406442	816c4226-10d5-471d-9561-1a8a843dac95	1533
1535	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	\N	2023-12-06 19:12:48.410869	2023-12-06 19:12:48.410842	1a6d4c9b-9fb5-4ac7-a5a0-ac204a785ab6	1535
1538	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	\N	2023-12-06 19:12:48.421095	2023-12-06 19:12:48.42106	96fa21c0-4f38-43eb-b3b7-7bddd114a071	1538
1545	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	\N	2023-12-06 19:12:48.438293	2023-12-06 19:12:48.438264	71aa354f-a3ed-4db4-8d82-41d4751f8647	1545
1546	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	\N	2023-12-06 19:12:48.445867	2023-12-06 19:12:48.445829	19d1cb12-15d0-4d76-b31a-3e69648f48ca	1546
1552	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	\N	2023-12-06 19:12:48.460007	2023-12-06 19:12:48.459987	6827ab3b-ce1b-4cda-87d2-3b1f7b7bedb9	1552
1556	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	\N	2023-12-06 19:12:48.467339	2023-12-06 19:12:48.467295	41d72cbe-b224-4d9c-812c-008fc9c77b97	1556
1558	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	\N	2023-12-06 19:12:48.47268	2023-12-06 19:12:48.472648	58037997-5e05-4772-98a0-c13919df2148	1558
1564	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	\N	2023-12-06 19:12:48.494085	2023-12-06 19:12:48.494047	d99c44de-02e4-4f4f-a05c-64b41cb1f941	1563
1569	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	\N	2023-12-06 19:12:48.512507	2023-12-06 19:12:48.512464	2c2462f6-6815-4c49-b68e-c33a30c64860	1569
1571	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	\N	2023-12-06 19:12:48.521356	2023-12-06 19:12:48.521341	a4e8fbf9-7448-4760-af78-5eafb7c8f53a	1571
1574	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	\N	2023-12-06 19:12:48.53306	2023-12-06 19:12:48.532747	3a81b704-b108-4483-a24a-8136bd0843a2	1574
1578	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	\N	2023-12-06 19:12:48.542383	2023-12-06 19:12:48.542366	ece1cdd1-dc66-4d43-9f2f-6d53ed403f37	1578
1581	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	\N	2023-12-06 19:12:48.548514	2023-12-06 19:12:48.548462	0c29f7aa-9939-4bcd-bbe4-860d47c16cde	1581
1582	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	\N	2023-12-06 19:12:48.551986	2023-12-06 19:12:48.551956	b3c3ef60-ecb4-43ca-918e-8d8f2b300b41	1582
1587	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	\N	2023-12-06 19:12:48.565673	2023-12-06 19:12:48.565646	315f9150-3962-4b5a-ba09-ef89a64bc958	1587
1594	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	\N	2023-12-06 19:12:48.577936	2023-12-06 19:12:48.577923	0020316c-2dce-4e00-87c3-6f07a151e375	1594
1601	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	\N	2023-12-06 19:12:48.597109	2023-12-06 19:12:48.597094	52ee4672-a30c-4c97-a107-a06751144244	1601
1609	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	\N	2023-12-06 19:12:48.612807	2023-12-06 19:12:48.612794	ceac19d0-7992-48a2-a859-0adb7cc91c8f	1609
1611	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	\N	2023-12-06 19:12:48.617731	2023-12-06 19:12:48.617704	641a535d-fc05-4625-a305-f69b9cde31a5	1611
1615	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	\N	2023-12-06 19:12:48.626268	2023-12-06 19:12:48.62624	89023573-5919-4714-adf3-249ce6d3a299	1615
1622	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	\N	2023-12-06 19:12:48.640305	2023-12-06 19:12:48.640244	e6578993-0d58-4214-aab9-2d178aed16d6	1622
1629	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	\N	2023-12-06 19:12:48.651074	2023-12-06 19:12:48.651032	25e08a92-e60d-49e9-9db9-19dea13bd92d	1629
1631	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	\N	2023-12-06 19:12:48.657262	2023-12-06 19:12:48.657233	6dfc2aa7-1af2-41fe-99d9-40e06ec93c44	1631
1636	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	\N	2023-12-06 19:12:48.664563	2023-12-06 19:12:48.664535	a564574d-8e52-47cb-9424-3a4d78f2060f	1636
1639	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	\N	2023-12-06 19:12:48.671585	2023-12-06 19:12:48.67144	160538f6-ae06-4fb3-84be-597e1ec15ccd	1639
1643	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	\N	2023-12-06 19:12:48.678878	2023-12-06 19:12:48.678851	8cde58be-2591-4370-9dc9-42651569d3ff	1643
1645	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	\N	2023-12-06 19:12:48.68478	2023-12-06 19:12:48.684648	40d822c4-ad16-4d2b-8507-1f2aee6055cd	1645
1651	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	\N	2023-12-06 19:12:48.693038	2023-12-06 19:12:48.693012	85004d08-b9c7-4310-9612-b93787fa4cc3	1651
1656	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	\N	2023-12-06 19:12:48.701797	2023-12-06 19:12:48.701772	f34fd9ef-e1ca-44e9-b9a7-f6ce808ce4fc	1656
1658	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	\N	2023-12-06 19:12:48.707394	2023-12-06 19:12:48.707369	386116af-47c2-4769-a9b8-1a2e624e35db	1658
1663	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	\N	2023-12-06 19:12:48.71714	2023-12-06 19:12:48.716989	226a617c-1f80-4565-8df5-dca95f0ce43f	1663
1667	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	\N	2023-12-06 19:12:48.7229	2023-12-06 19:12:48.722796	34987342-40b8-4340-a6c0-c04bd02015bb	1667
1670	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	\N	2023-12-06 19:12:48.729213	2023-12-06 19:12:48.729114	dea3d0fd-75f0-4d7d-84fa-fc62d8469171	1670
1565	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	\N	2023-12-06 19:12:48.4962	2023-12-06 19:12:48.496084	8215e2b8-6e80-409f-a2d3-9b5157a487b8	1565
1598	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	\N	2023-12-06 19:12:48.591897	2023-12-06 19:12:48.591419	2ea577fc-4d9c-4fb5-b7c8-ed5bcf195896	1598
1568	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	\N	2023-12-06 19:12:48.512142	2023-12-06 19:12:48.512125	b3f173c6-26b1-443a-b09e-4ac0bfe4ff19	1568
1573	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	\N	2023-12-06 19:12:48.529144	2023-12-06 19:12:48.529028	cb0083a4-eba4-4d21-9b69-d6a7c6e5fd0a	1573
1576	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	\N	2023-12-06 19:12:48.534065	2023-12-06 19:12:48.534038	e792ccd1-5c5a-41ec-bc63-3d9611be29f7	1576
1577	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	\N	2023-12-06 19:12:48.537964	2023-12-06 19:12:48.537879	cf5e3dc7-b035-46a7-a376-5caa32d3bb5a	1577
1584	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	\N	2023-12-06 19:12:48.555171	2023-12-06 19:12:48.555145	c8fb3681-60ac-4bc8-8a78-94030436a987	1584
1588	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	\N	2023-12-06 19:12:48.566368	2023-12-06 19:12:48.566335	5fe8848b-cd91-4f9f-9820-86ba31f6207a	1588
1591	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	\N	2023-12-06 19:12:48.574061	2023-12-06 19:12:48.573008	c18cbab2-75a3-4b28-a5e8-ef1ca5e96fa5	1591
1596	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	\N	2023-12-06 19:12:48.584591	2023-12-06 19:12:48.584544	6f8a261f-b8c9-43fc-a2bf-5b6757a41862	1596
1602	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	\N	2023-12-06 19:12:48.597198	2023-12-06 19:12:48.597176	61ed8392-6904-429b-b355-ba2d9cb7fa53	1602
1603	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	\N	2023-12-06 19:12:48.602646	2023-12-06 19:12:48.602617	6e71c9e8-78af-4d3f-a24d-8e29b2deadbd	1603
1607	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	\N	2023-12-06 19:12:48.609427	2023-12-06 19:12:48.609364	7add9994-0515-4484-9108-6ef792d3fc15	1607
1608	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	\N	2023-12-06 19:12:48.612066	2023-12-06 19:12:48.612052	b2eb5450-b825-4f23-847a-bf7a5c370ba8	1608
1612	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	\N	2023-12-06 19:12:48.620216	2023-12-06 19:12:48.620085	68c37af8-2fb0-430c-a4e5-eb5824d09fe1	1612
1614	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	\N	2023-12-06 19:12:48.625461	2023-12-06 19:12:48.625419	a86044da-16eb-4153-9ef0-3260a24c45dc	1614
1619	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	\N	2023-12-06 19:12:48.633677	2023-12-06 19:12:48.63365	6b34d232-4d62-4a43-a121-aea3d401c404	1619
1625	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	\N	2023-12-06 19:12:48.644619	2023-12-06 19:12:48.644591	f376894a-4836-4e64-8702-966fbf3a49b0	1625
1628	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	\N	2023-12-06 19:12:48.650223	2023-12-06 19:12:48.650125	aa003e83-45fc-4ec5-a3f9-bd1ecb60c30b	1628
1630	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	\N	2023-12-06 19:12:48.657056	2023-12-06 19:12:48.656986	1fa1e467-3786-4cc2-8217-e638cbb769d0	1630
1633	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	\N	2023-12-06 19:12:48.663614	2023-12-06 19:12:48.663566	53dafcf5-8390-4993-90d2-b15223868ec0	1633
1637	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	\N	2023-12-06 19:12:48.67081	2023-12-06 19:12:48.67078	0b8e4cca-0bec-4c31-ac3e-bbbae8e2e882	1637
1644	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	\N	2023-12-06 19:12:48.678745	2023-12-06 19:12:48.678605	4f2ce2fe-909f-4bc5-aa44-c77b0a31065a	1644
1646	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	\N	2023-12-06 19:12:48.685189	2023-12-06 19:12:48.68515	646ea6e6-3a37-4677-9d3e-3d219c1ed13c	1646
1650	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	\N	2023-12-06 19:12:48.692951	2023-12-06 19:12:48.692925	6c349d6f-2a6b-417e-b1e9-3d6e1656a6cc	1650
1655	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	\N	2023-12-06 19:12:48.701722	2023-12-06 19:12:48.701696	9a61fe87-e4d0-4aa2-ab97-aad6870150ea	1655
1660	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	\N	2023-12-06 19:12:48.709909	2023-12-06 19:12:48.709773	5fdb9588-6783-487d-87c3-46a97c037778	1660
1665	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	\N	2023-12-06 19:12:48.719892	2023-12-06 19:12:48.719879	02e4aa84-e223-4ebe-bc6e-9653a7cedfd1	1665
1672	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	\N	2023-12-06 19:12:48.731593	2023-12-06 19:12:48.731494	1fa60733-aaf2-4832-bc7d-db441243123d	1672
1674	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	\N	2023-12-06 19:12:48.736071	2023-12-06 19:12:48.736042	12886c1e-ab2c-4ab0-89d1-be1a2b6d7ce9	1674
1675	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	\N	2023-12-06 19:12:48.738868	2023-12-06 19:12:48.738855	033c25a9-c438-4246-b0e5-b56eb776e405	1675
1680	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	\N	2023-12-06 19:12:48.746791	2023-12-06 19:12:48.746749	2dba1b6f-a596-44da-8a94-e4bb664bcd9a	1680
1685	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	\N	2023-12-06 19:12:48.755065	2023-12-06 19:12:48.755051	c0483eb8-74bd-4b32-833c-92f31424ce31	1685
1687	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	\N	2023-12-06 19:12:48.76264	2023-12-06 19:12:48.762613	9f129e57-07d7-41d4-a962-9d1b75d08558	1687
1691	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	\N	2023-12-06 19:12:48.770836	2023-12-06 19:12:48.770809	423757dd-a73f-4185-9cd4-7ba62d4876c1	1691
1697	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	\N	2023-12-06 19:12:48.78085	2023-12-06 19:12:48.780777	0cb20eed-8fe1-4695-8d21-26dacb43e7b7	1697
1700	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	\N	2023-12-06 19:12:48.789301	2023-12-06 19:12:48.789094	d185a551-771a-43ba-930b-6519f8be4545	1700
1705	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	\N	2023-12-06 19:12:48.7995	2023-12-06 19:12:48.799263	807bd4fe-55de-4bdb-b07c-82fde1978e4c	1705
1707	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	\N	2023-12-06 19:12:48.80555	2023-12-06 19:12:48.805495	cae68280-6225-40fa-9717-822b6f4ecfc3	1707
1716	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-12-06 19:12:48.818632	2023-12-06 19:12:48.818547	8aa3bacc-d91a-4008-9935-fb4a2e3efc2b	1716
1719	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	\N	2023-12-06 19:12:48.830784	2023-12-06 19:12:48.830709	ebfd250a-183c-4211-aad5-1b0447598374	1719
1720	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	\N	2023-12-06 19:12:48.835112	2023-12-06 19:12:48.835055	2974e587-ca57-43fa-b682-5466b94b133c	1720
1723	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	\N	2023-12-06 19:12:48.838634	2023-12-06 19:12:48.838618	690e0e7e-57e8-4c93-a842-672b5e4228c8	1723
1727	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	\N	2023-12-06 19:12:48.847918	2023-12-06 19:12:48.847891	a870f7af-1d3f-4307-867a-f82e619c7018	1727
1729	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	\N	2023-12-06 19:12:48.854304	2023-12-06 19:12:48.854291	d2036ca0-238f-4fc1-bd4f-d59a61a0d0d9	1729
1595	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	\N	2023-12-06 19:12:48.584466	2023-12-06 19:12:48.584378	e2ecd399-cae3-4285-9637-40b173a7c07a	1595
1599	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	\N	2023-12-06 19:12:48.595251	2023-12-06 19:12:48.59493	aac3e7f4-76b0-4e54-988a-7c80e079ea5f	1599
1605	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	\N	2023-12-06 19:12:48.604847	2023-12-06 19:12:48.604833	1e420929-2c75-4767-971e-4ef35cd2b938	1605
1610	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	\N	2023-12-06 19:12:48.614693	2023-12-06 19:12:48.614679	2958048d-7f43-4cf4-9db2-6c5823848768	1610
1613	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	\N	2023-12-06 19:12:48.621157	2023-12-06 19:12:48.621109	cda24e1c-f98c-4168-946d-93e5760e55ed	1613
1617	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	\N	2023-12-06 19:12:48.626936	2023-12-06 19:12:48.626908	570f2e8d-61c9-4256-809a-5a35beaf8ced	1617
1618	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	\N	2023-12-06 19:12:48.631728	2023-12-06 19:12:48.631521	436bdd06-cc37-46c1-a552-f603a452c29e	1618
1621	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	\N	2023-12-06 19:12:48.636046	2023-12-06 19:12:48.63602	e0875260-0a29-4e92-87b5-ebd0f5a074e5	1621
1624	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	\N	2023-12-06 19:12:48.642067	2023-12-06 19:12:48.64201	b0974b43-2693-4424-a7e8-1783f61c61ef	1624
1627	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	\N	2023-12-06 19:12:48.650103	2023-12-06 19:12:48.649505	1d1d92bf-5b5d-4716-94df-723b4e32c6e6	1627
1632	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	\N	2023-12-06 19:12:48.657359	2023-12-06 19:12:48.657302	f47c2ae3-2b91-4823-8f5a-c9ffa4fd1fee	1632
1634	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	\N	2023-12-06 19:12:48.663709	2023-12-06 19:12:48.663344	d1a7125c-c41e-440e-b3df-abc8cae0de83	1634
1638	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	\N	2023-12-06 19:12:48.671287	2023-12-06 19:12:48.671123	9e1af361-7011-4208-97ec-4e3bb8356521	1638
1642	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	\N	2023-12-06 19:12:48.678893	2023-12-06 19:12:48.678822	4ed34f40-d4a4-4bd4-9be1-d7d586b02c3b	1642
1648	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	\N	2023-12-06 19:12:48.686091	2023-12-06 19:12:48.68597	d6ccadcc-50da-4f1f-a0be-4df6ebcf10d6	1648
1649	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:48.692024	2023-12-06 19:12:48.691974	7b2591c7-2dc7-4ca7-b8d0-27c3e2828678	1649
1654	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	\N	2023-12-06 19:12:48.698786	2023-12-06 19:12:48.698727	ca6a4510-1263-41ac-ac27-ce93f6eef39b	1654
1659	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	\N	2023-12-06 19:12:48.709139	2023-12-06 19:12:48.709006	a6af5f92-17a5-494f-a6fe-f9355ed83a40	1659
1664	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	\N	2023-12-06 19:12:48.717608	2023-12-06 19:12:48.717572	82691655-9128-4e13-a77d-8f9ce9a68e9f	1664
1668	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	\N	2023-12-06 19:12:48.724838	2023-12-06 19:12:48.724802	d6da257b-127e-481d-af78-84e128472da1	1668
1671	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	\N	2023-12-06 19:12:48.731155	2023-12-06 19:12:48.731125	d012e7bc-b548-4dfd-9cb7-cdd3015e94b4	1671
1681	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	\N	2023-12-06 19:12:48.747921	2023-12-06 19:12:48.747892	f9e0ee2e-bbcb-4eff-a6e0-ea7e7551d00e	1681
1682	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	\N	2023-12-06 19:12:48.753332	2023-12-06 19:12:48.753285	bcfb5a8c-2c96-4305-a3dd-90d6f6cd64d6	1682
1686	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	\N	2023-12-06 19:12:48.762285	2023-12-06 19:12:48.762258	f8d6463a-75c1-4a02-bd61-ee53a6efd318	1686
1692	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	\N	2023-12-06 19:12:48.771181	2023-12-06 19:12:48.771117	c0133be8-01b3-4c1a-92f3-229a9cfd3544	1692
1696	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	\N	2023-12-06 19:12:48.779457	2023-12-06 19:12:48.77941	16f000f2-858e-4804-87e8-eeff618857fc	1696
1699	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	\N	2023-12-06 19:12:48.788639	2023-12-06 19:12:48.7886	42d988f1-479f-475a-970c-b27f4b0a985b	1699
1704	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	\N	2023-12-06 19:12:48.799475	2023-12-06 19:12:48.799447	cdd1a6c4-5a9f-43e2-a093-f6ce7c9e73e9	1704
1708	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	\N	2023-12-06 19:12:48.805841	2023-12-06 19:12:48.805813	2a9ef10c-8fca-4058-833f-036f419cd172	1708
1711	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	\N	2023-12-06 19:12:48.815574	2023-12-06 19:12:48.815537	7010c67e-86ab-4338-8757-b93418a2ab53	1711
1714	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	\N	2023-12-06 19:12:48.823088	2023-12-06 19:12:48.821474	c9db43e4-81b3-4cb7-96b7-a71273f57a66	1714
1718	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	\N	2023-12-06 19:12:48.829728	2023-12-06 19:12:48.829697	920e5df3-478c-4ece-acb8-e8d733f0dbad	1718
1721	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	\N	2023-12-06 19:12:48.836949	2023-12-06 19:12:48.836907	cffd73b7-5054-454d-8e0d-72184699afc6	1721
1728	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	\N	2023-12-06 19:12:48.853818	2023-12-06 19:12:48.853777	c10300bc-5cdb-4742-b082-51ce4c484eca	1728
1734	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	\N	2023-12-06 19:12:48.865265	2023-12-06 19:12:48.865228	d2b539bd-2391-449a-a33d-947ab9d44c2c	1734
1738	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	\N	2023-12-06 19:12:48.875207	2023-12-06 19:12:48.875192	d0579dfe-84df-425c-a992-63bb274598f9	1738
1740	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	\N	2023-12-06 19:12:48.880794	2023-12-06 19:12:48.880742	2e982e73-e86b-4532-8134-0563da8eb0fc	1740
1743	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	\N	2023-12-06 19:12:48.888719	2023-12-06 19:12:48.888639	deffdc3b-4c75-4c7f-af85-b81d372dba79	1743
1747	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	\N	2023-12-06 19:12:48.895015	2023-12-06 19:12:48.895	5416aec4-9f55-4d8e-bb33-cda1b04ff7f4	1747
1752	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	\N	2023-12-06 19:12:48.90928	2023-12-06 19:12:48.909155	45866507-fe4e-474a-a827-baca549ed3ad	1752
1754	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	\N	2023-12-06 19:12:48.915667	2023-12-06 19:12:48.915639	62fc39c1-d99b-47c5-a809-e4b8e7e2777b	1754
1756	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	\N	2023-12-06 19:12:48.921288	2023-12-06 19:12:48.921273	0e26f7b7-dde7-40e6-9edc-c39c354016b0	1756
1762	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	\N	2023-12-06 19:12:48.933325	2023-12-06 19:12:48.9333	5c32ac9d-e4e8-4d03-ba8a-a733514000b7	1762
1635	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	\N	2023-12-06 19:12:48.664346	2023-12-06 19:12:48.664297	dbdc64f1-a610-449c-9070-e836494d8940	1635
1640	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	\N	2023-12-06 19:12:48.672022	2023-12-06 19:12:48.671961	248a5dfc-6688-4011-a82c-3ff2ac8d957e	1640
1641	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	\N	2023-12-06 19:12:48.678231	2023-12-06 19:12:48.678186	2524149a-c032-4316-a483-e9577c85c9f0	1641
1647	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	\N	2023-12-06 19:12:48.685791	2023-12-06 19:12:48.685584	e96cbd40-338a-42df-95d6-58682e088d27	1647
1652	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	\N	2023-12-06 19:12:48.694058	2023-12-06 19:12:48.694031	832e61e2-8a3b-40c8-894f-a65b3134da0f	1652
1653	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	\N	2023-12-06 19:12:48.698154	2023-12-06 19:12:48.698137	7a18520b-b9bf-4189-87a9-eb2711ac5a32	1653
1657	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	\N	2023-12-06 19:12:48.70548	2023-12-06 19:12:48.705454	b8afd2d0-bc37-4176-bc45-9466c7c4e015	1657
1661	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	\N	2023-12-06 19:12:48.712361	2023-12-06 19:12:48.71232	a45bfbef-9c33-4954-a86a-5bce6420feaa	1661
1662	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	\N	2023-12-06 19:12:48.715168	2023-12-06 19:12:48.715128	d6e6f01e-7531-4ba9-9e88-7b9e76f49661	1662
1666	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	\N	2023-12-06 19:12:48.721685	2023-12-06 19:12:48.721564	47dadced-7b10-44fe-abc1-ee979371b6b2	1666
1669	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	\N	2023-12-06 19:12:48.727693	2023-12-06 19:12:48.727664	941b8958-11a0-49ad-b0d0-8491d52eeca8	1669
1676	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	\N	2023-12-06 19:12:48.740064	2023-12-06 19:12:48.739894	7d45c6e6-6bbd-40dd-8569-1bd86bb63ad5	1676
1678	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	\N	2023-12-06 19:12:48.743201	2023-12-06 19:12:48.743164	330d6b9b-472a-4da0-9928-71b4927e7932	1678
1684	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	\N	2023-12-06 19:12:48.753992	2023-12-06 19:12:48.753938	6035ceb8-b2ca-41bd-9abb-31d6938a5ae9	1684
1688	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	\N	2023-12-06 19:12:48.76203	2023-12-06 19:12:48.761978	d4a2abc9-7e00-4f5e-8a6c-b9c4427d2803	1688
1690	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	\N	2023-12-06 19:12:48.770701	2023-12-06 19:12:48.770665	cd5c05ea-1abf-411b-a969-fa21c59fe858	1690
1695	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	\N	2023-12-06 19:12:48.779067	2023-12-06 19:12:48.779028	3aac66c2-4929-4f00-93b3-667d6710c6d4	1695
1698	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	\N	2023-12-06 19:12:48.78557	2023-12-06 19:12:48.785539	b1709d29-938d-42f9-a513-39dc09a437a6	1698
1701	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	\N	2023-12-06 19:12:48.790306	2023-12-06 19:12:48.790281	f6c882d3-eb03-4777-a4ac-734861ce3571	1701
1703	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	\N	2023-12-06 19:12:48.795923	2023-12-06 19:12:48.795896	a6365c5e-f90e-4c7a-b8fe-205559a85a51	1703
1706	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	\N	2023-12-06 19:12:48.800567	2023-12-06 19:12:48.800494	59fa557a-7628-4917-b62f-60d574234360	1706
1713	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	\N	2023-12-06 19:12:48.818029	2023-12-06 19:12:48.817994	752963a5-4c97-406e-8000-ba710e4f3110	1713
1715	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	\N	2023-12-06 19:12:48.824925	2023-12-06 19:12:48.824909	5f6bdbf3-95b1-4735-8a5c-4dd2d8046d9c	1715
1725	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	\N	2023-12-06 19:12:48.846439	2023-12-06 19:12:48.846409	df5466a0-cbbb-450f-b1ea-cb138256ab01	1725
1735	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	\N	2023-12-06 19:12:48.86875	2023-12-06 19:12:48.868738	b932dab1-df44-4e06-99f5-fb3873a9b041	1735
1746	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	\N	2023-12-06 19:12:48.894517	2023-12-06 19:12:48.89441	82a2e7a0-17be-4cad-9ccd-e7551d949c58	1746
1749	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	\N	2023-12-06 19:12:48.904636	2023-12-06 19:12:48.904621	6b730080-4be8-4042-91b8-ba42783d23d5	1749
1750	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	\N	2023-12-06 19:12:48.907944	2023-12-06 19:12:48.907916	67581c35-84d1-45d5-89fa-c122aeed16fb	1750
1759	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	\N	2023-12-06 19:12:48.929667	2023-12-06 19:12:48.929606	02ba00b4-f784-49d3-b126-665f58687919	1759
1764	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	\N	2023-12-06 19:12:48.940078	2023-12-06 19:12:48.940013	028ac7af-5cb7-4818-b7c1-1205c71c6b1f	1764
1767	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	\N	2023-12-06 19:12:48.945873	2023-12-06 19:12:48.945845	347c2baf-4106-4cb2-a2a0-5f56a5f34e95	1767
1772	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	\N	2023-12-06 19:12:48.955821	2023-12-06 19:12:48.955808	d967d666-3525-48e2-afd0-5f98cdc24eba	1772
1779	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	\N	2023-12-06 19:12:48.969176	2023-12-06 19:12:48.969103	54223d0f-4579-4914-b81b-5dca0d089c30	1779
1780	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	\N	2023-12-06 19:12:48.974048	2023-12-06 19:12:48.973512	37ad833a-3a9e-43f4-b503-b8ec5df13015	1780
1783	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	\N	2023-12-06 19:12:48.979736	2023-12-06 19:12:48.979421	88558096-fb06-40dd-947f-3a1ab9d4e2b8	1783
1786	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	\N	2023-12-06 19:12:48.986208	2023-12-06 19:12:48.986069	9c811de1-0ad7-42b9-8c7a-9a9011951764	1786
1788	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	\N	2023-12-06 19:12:48.990755	2023-12-06 19:12:48.990716	2978c152-7848-4fb2-8b31-431ac465974e	1788
1791	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	\N	2023-12-06 19:12:48.997065	2023-12-06 19:12:48.996994	5db7dc86-081f-4afc-99da-0f51f7be66b8	1791
1792	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	\N	2023-12-06 19:12:49.000577	2023-12-06 19:12:49.000523	32e1aeb7-25fc-4f90-a25e-197947a8d903	1792
1794	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	\N	2023-12-06 19:12:49.004581	2023-12-06 19:12:49.004553	2f1ed053-ed9b-4214-88c5-6408b205b084	1794
1797	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	\N	2023-12-06 19:12:49.009781	2023-12-06 19:12:49.009655	614a393b-72f1-4d16-93f5-ef2d38a52dab	1797
1801	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	\N	2023-12-06 19:12:49.019784	2023-12-06 19:12:49.019755	bca9e97f-db81-4433-a7db-9ef15f33cf23	1801
1805	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	\N	2023-12-06 19:12:49.03068	2023-12-06 19:12:49.030652	20bc36fb-0652-41fa-98be-72a23da22195	1805
1810	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	\N	2023-12-06 19:12:49.040028	2023-12-06 19:12:49.040002	bcb0e4e3-9425-4758-9134-1bc21a29054d	1810
1814	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	\N	2023-12-06 19:12:49.049325	2023-12-06 19:12:49.049192	9505106e-8b2b-4835-97e1-4e4b556baabf	1814
1673	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	\N	2023-12-06 19:12:48.733553	2023-12-06 19:12:48.733496	174f8373-ea6d-4f0f-a77b-3f0a976c24c0	1673
1677	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	\N	2023-12-06 19:12:48.740045	2023-12-06 19:12:48.739928	83e49973-51d2-4417-b13e-6df177e8ab68	1677
1679	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	\N	2023-12-06 19:12:48.744349	2023-12-06 19:12:48.744313	52804afe-0eee-4f90-8fce-6e2821708e36	1679
1683	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	\N	2023-12-06 19:12:48.753699	2023-12-06 19:12:48.753683	717791e5-7054-4853-b9f6-7da517a21a61	1683
1689	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	\N	2023-12-06 19:12:48.763698	2023-12-06 19:12:48.763575	46b8df9e-ab04-4ae4-b2ac-95ab8d0058a8	1689
1693	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	\N	2023-12-06 19:12:48.772949	2023-12-06 19:12:48.772857	809749a2-d875-4052-b513-feafbc6c3dd9	1693
1694	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	\N	2023-12-06 19:12:48.779084	2023-12-06 19:12:48.779064	0dc0ea66-beb9-4df6-8c3e-2fa8dde81b3d	1694
1702	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	\N	2023-12-06 19:12:48.793144	2023-12-06 19:12:48.792844	6f0be509-7b20-4d10-ad77-3cd40fe0924e	1702
1709	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	\N	2023-12-06 19:12:48.806567	2023-12-06 19:12:48.806441	8fc8e563-47d5-47cc-a790-7df1f7c26a88	1709
1710	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	\N	2023-12-06 19:12:48.812719	2023-12-06 19:12:48.812697	668e6786-ee01-42b0-ac67-7586c22ae775	1710
1712	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	\N	2023-12-06 19:12:48.8164	2023-12-06 19:12:48.81636	cac907dc-a423-4550-afb0-2fe394255e24	1712
1717	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	\N	2023-12-06 19:12:48.825841	2023-12-06 19:12:48.825829	c7021a9f-0185-4de3-8feb-89d95bb63fb7	1717
1722	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	\N	2023-12-06 19:12:48.837995	2023-12-06 19:12:48.837914	6fda999c-2757-4b0a-93f4-58466974d634	1722
1724	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	\N	2023-12-06 19:12:48.844241	2023-12-06 19:12:48.84421	0445aecc-a252-43ae-be8b-0f991732b40f	1724
1726	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	\N	2023-12-06 19:12:48.847724	2023-12-06 19:12:48.847663	c72d54ba-d4ea-4314-8af9-d564fa1d9121	1726
1730	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	\N	2023-12-06 19:12:48.856526	2023-12-06 19:12:48.856513	ffc61788-d4ce-484d-86d2-2bb81bf777e1	1730
1733	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	\N	2023-12-06 19:12:48.866039	2023-12-06 19:12:48.866009	bbcbfed7-526b-4f5b-8135-1969b6404f08	1733
1737	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	\N	2023-12-06 19:12:48.872024	2023-12-06 19:12:48.871987	deaafe61-cb7e-4951-b79f-ecd8829750af	1737
1741	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	\N	2023-12-06 19:12:48.885782	2023-12-06 19:12:48.885742	22c4e553-be4e-4304-824e-ee770d47186c	1741
1744	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	\N	2023-12-06 19:12:48.890423	2023-12-06 19:12:48.890128	782e354a-9677-434e-a984-1d78f2301cb3	1744
1755	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	\N	2023-12-06 19:12:48.9165	2023-12-06 19:12:48.91527	abedefc8-7bfe-4b15-bc77-01ae62c43ceb	1755
1758	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	\N	2023-12-06 19:12:48.924061	2023-12-06 19:12:48.92403	d9bcc425-9d48-4739-b623-92878c277bca	1758
1760	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	\N	2023-12-06 19:12:48.931898	2023-12-06 19:12:48.931858	16fe028b-a592-4b14-a388-1c2c7c5b566c	1760
1763	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	\N	2023-12-06 19:12:48.936083	2023-12-06 19:12:48.936037	62291963-0e9c-441c-9364-2a74d4a48d98	1763
1771	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	\N	2023-12-06 19:12:48.954655	2023-12-06 19:12:48.95463	ed420106-4f9d-467b-a63a-501d28f52341	1771
1773	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	\N	2023-12-06 19:12:48.959265	2023-12-06 19:12:48.959237	3f53110f-05cc-42c4-b365-e308cd3ce597	1773
1776	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	\N	2023-12-06 19:12:48.968104	2023-12-06 19:12:48.968043	e54e59ff-8d65-4110-8625-b7f86d713b9b	1776
1790	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	\N	2023-12-06 19:12:48.993306	2023-12-06 19:12:48.993276	1f8b4712-01b7-4c49-863e-2807bf98c5ca	1790
1799	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	\N	2023-12-06 19:12:49.016852	2023-12-06 19:12:49.016817	ee570725-54ad-4f70-8953-4c575d35a7c8	1799
1802	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	\N	2023-12-06 19:12:49.020362	2023-12-06 19:12:49.020263	b19964f1-c907-437c-b8ce-485dc0086343	1802
1804	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	\N	2023-12-06 19:12:49.0298	2023-12-06 19:12:49.029704	e616d6fd-16b7-485c-ab60-3ee232ed93e0	1804
1808	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	\N	2023-12-06 19:12:49.039018	2023-12-06 19:12:49.038986	60e07163-fea5-442f-91b5-cd20656805cc	1808
1812	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	\N	2023-12-06 19:12:49.047783	2023-12-06 19:12:49.047752	099653ee-5cf1-47a5-8359-504b3e53e0af	1812
1817	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	\N	2023-12-06 19:12:49.056577	2023-12-06 19:12:49.056549	0ed79d75-f65a-48b3-a1c3-0cb4b2120f98	1817
1820	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	\N	2023-12-06 19:12:49.064885	2023-12-06 19:12:49.064852	05c6fa0b-4183-417d-940d-a337fbd02c3d	1820
1825	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	\N	2023-12-06 19:12:49.074761	2023-12-06 19:12:49.074674	56917e4a-9a50-4e83-9d5c-cb4e4ac333af	1825
1830	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	\N	2023-12-06 19:12:49.08419	2023-12-06 19:12:49.084151	94633a8a-fa12-46f3-8120-81e13ee05a7f	1830
1832	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	\N	2023-12-06 19:12:49.089709	2023-12-06 19:12:49.0892	9fbd2174-afa8-4371-a25c-cc9e57af7241	1832
1835	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	\N	2023-12-06 19:12:49.095973	2023-12-06 19:12:49.09586	79f63799-2a71-4e02-b1fd-49d6bda01d83	1835
1839	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	\N	2023-12-06 19:12:49.104217	2023-12-06 19:12:49.103996	234d0675-ad7d-486f-9b94-b7b2b9da6c3d	1839
1843	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	\N	2023-12-06 19:12:49.112136	2023-12-06 19:12:49.112067	6d9a69f7-0abd-4fe6-9795-83f21cd5f2d9	1843
1845	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	\N	2023-12-06 19:12:49.118369	2023-12-06 19:12:49.118341	1fdc3be2-260e-4aee-a55a-4cc66a20ecd8	1845
1848	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	\N	2023-12-06 19:12:49.124375	2023-12-06 19:12:49.124339	e845a710-3e08-4570-89d8-e1ca0ec6d4f4	1848
1854	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	\N	2023-12-06 19:12:49.137374	2023-12-06 19:12:49.137347	975d88cf-2ba7-42f9-adc6-44b8303b9e1a	1854
1731	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	\N	2023-12-06 19:12:48.85881	2023-12-06 19:12:48.858781	985e84f6-0ef8-4053-b984-9b5d1a8f55f1	1731
1732	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	\N	2023-12-06 19:12:48.863554	2023-12-06 19:12:48.86354	faeff110-ff98-49fd-8cdf-32c217fa7d6b	1732
1736	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	\N	2023-12-06 19:12:48.868684	2023-12-06 19:12:48.868654	243b0cc9-cdbb-4624-b454-02bb8f174f05	1736
1739	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	\N	2023-12-06 19:12:48.877933	2023-12-06 19:12:48.877897	bea8bbe6-ac73-45df-a171-deb32dcd04e3	1739
1742	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	\N	2023-12-06 19:12:48.886667	2023-12-06 19:12:48.885889	e55d4515-e56a-401c-8bd1-c2db58285a88	1742
1745	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	\N	2023-12-06 19:12:48.892934	2023-12-06 19:12:48.892906	8094cac1-6dde-455c-88f6-8f68a9306691	1745
1748	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	\N	2023-12-06 19:12:48.901162	2023-12-06 19:12:48.901123	5e8362de-b185-4b32-8c37-76dbb05e5ddd	1748
1751	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	\N	2023-12-06 19:12:48.908473	2023-12-06 19:12:48.908447	a14f0ee3-b72f-43a3-bc75-b1ccd78cb43b	1751
1753	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	\N	2023-12-06 19:12:48.912066	2023-12-06 19:12:48.912004	31c0385b-a02b-4f44-a4ce-be7501255fea	1753
1757	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	\N	2023-12-06 19:12:48.921384	2023-12-06 19:12:48.921361	9de7475c-193b-4fda-b36d-f60cf92a69cc	1757
1761	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	\N	2023-12-06 19:12:48.93313	2023-12-06 19:12:48.933002	f76a982b-6456-414e-ae8a-20ca57769424	1761
1765	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	\N	2023-12-06 19:12:48.940507	2023-12-06 19:12:48.940494	b38c9c15-5665-4c90-9317-115d799bc5e5	1765
1766	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	\N	2023-12-06 19:12:48.944473	2023-12-06 19:12:48.944442	1f66df2a-86a4-4ff4-8712-14356508640c	1766
1769	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	\N	2023-12-06 19:12:48.949246	2023-12-06 19:12:48.948184	8c42e280-64cd-4b64-bdc6-16e1e3f2f671	1769
1770	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	\N	2023-12-06 19:12:48.95341	2023-12-06 19:12:48.953143	445717b2-f633-48a9-b4cb-b6b0eb5dec41	1770
1774	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	\N	2023-12-06 19:12:48.962289	2023-12-06 19:12:48.96226	3ab233f7-30dc-46f6-8005-cf53504b4ac8	1774
1777	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	\N	2023-12-06 19:12:48.967925	2023-12-06 19:12:48.967816	75e5eabd-4905-424e-9c67-6fc6e33a0b41	1777
1782	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	\N	2023-12-06 19:12:48.976195	2023-12-06 19:12:48.976083	d8b52cef-0195-462b-9742-274e54ae4969	1782
1784	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	\N	2023-12-06 19:12:48.981978	2023-12-06 19:12:48.981736	1c765892-15da-49ab-aa49-81703b42fc47	1784
1787	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	\N	2023-12-06 19:12:48.989096	2023-12-06 19:12:48.989068	6191f8c8-c80b-456e-b0ca-0d38bdfe62f6	1787
1793	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	\N	2023-12-06 19:12:49.002267	2023-12-06 19:12:49.001985	6b21066c-0820-41f9-95cc-f6494c4a31b4	1793
1795	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	\N	2023-12-06 19:12:49.00934	2023-12-06 19:12:49.009281	baab6d79-469c-46c2-8d7f-95cad56c17bf	1795
1798	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	\N	2023-12-06 19:12:49.012082	2023-12-06 19:12:49.012056	f41f4278-fc30-48a6-82d4-acaf1b13dab2	1798
1800	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	\N	2023-12-06 19:12:49.018121	2023-12-06 19:12:49.018105	6c8f6735-ce59-41d0-bdd8-83b1d8123ed5	1800
1806	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	\N	2023-12-06 19:12:49.031147	2023-12-06 19:12:49.03108	50388b93-a697-48d0-ab35-335878d4ce17	1806
1811	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	\N	2023-12-06 19:12:49.040135	2023-12-06 19:12:49.04011	2712ca2a-19a8-4735-b11b-6f6fb894ea39	1811
1815	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	\N	2023-12-06 19:12:49.04936	2023-12-06 19:12:49.049283	cb919615-7e34-4bc4-922e-6fb2af80f719	1815
1818	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	\N	2023-12-06 19:12:49.057975	2023-12-06 19:12:49.057948	74af1b60-0dfc-497e-9044-ceb1efdf9e4a	1818
1822	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	\N	2023-12-06 19:12:49.065896	2023-12-06 19:12:49.065854	7e5bd9ee-c5fc-4f43-9256-a84460b782be	1822
1826	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	\N	2023-12-06 19:12:49.074548	2023-12-06 19:12:49.074447	313d38b2-dc01-429c-ad13-077b71d58291	1826
1828	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	\N	2023-12-06 19:12:49.077615	2023-12-06 19:12:49.077542	08e3c5e5-4af7-43c8-9c7b-dd7ee5c28500	1828
1829	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	\N	2023-12-06 19:12:49.083172	2023-12-06 19:12:49.083141	ccfbb872-1c92-4480-a2a3-672946e60fda	1829
1833	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	\N	2023-12-06 19:12:49.092184	2023-12-06 19:12:49.092156	ed3b1792-f80f-4019-ab31-1179a5ba884d	1833
1837	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	\N	2023-12-06 19:12:49.100645	2023-12-06 19:12:49.100598	69b9caee-527c-40e2-839f-32cb2400cb0d	1837
1841	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	\N	2023-12-06 19:12:49.110331	2023-12-06 19:12:49.110303	1868a49a-0971-4a6f-a2ee-671c4bf304b8	1841
1846	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	\N	2023-12-06 19:12:49.119096	2023-12-06 19:12:49.119084	321f9567-40cc-4c41-b626-b6f51ab1c58a	1846
1849	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	\N	2023-12-06 19:12:49.125613	2023-12-06 19:12:49.125569	b066a31c-1cbb-4481-a942-865637168344	1849
1853	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	\N	2023-12-06 19:12:49.137349	2023-12-06 19:12:49.137308	929c3576-252b-49a5-b5a0-17ec4de48c9b	1853
1857	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	\N	2023-12-06 19:12:49.14516	2023-12-06 19:12:49.145145	61282ecd-f470-4c60-abd9-a3e942154262	1857
1860	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	\N	2023-12-06 19:12:49.152075	2023-12-06 19:12:49.152049	1e27076d-6d46-41ae-af44-62e1f230da76	1860
1867	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	\N	2023-12-06 19:12:49.163685	2023-12-06 19:12:49.163657	e50997af-85b4-4125-934c-db5e6a887e15	1867
1871	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	\N	2023-12-06 19:12:49.172914	2023-12-06 19:12:49.172886	c70e49ce-c322-4ad2-a433-d690a1e9f367	1871
1874	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	\N	2023-12-06 19:12:49.181915	2023-12-06 19:12:49.181888	15027420-56d4-4e5e-af30-59cafcefb449	1874
1883	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	\N	2023-12-06 19:12:49.197774	2023-12-06 19:12:49.197747	ed89879e-b1e2-45aa-aed8-8d2b17198324	1883
1768	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	\N	2023-12-06 19:12:48.947504	2023-12-06 19:12:48.947456	864a2bab-9411-4309-ade3-df736d58540d	1768
1775	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	\N	2023-12-06 19:12:48.962673	2023-12-06 19:12:48.962647	4db7b885-353c-46c7-9b40-cb10c594a3cf	1775
1778	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	\N	2023-12-06 19:12:48.968624	2023-12-06 19:12:48.968546	3260dac5-e262-40be-93ed-b3e0787bfe7c	1778
1781	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	\N	2023-12-06 19:12:48.974893	2023-12-06 19:12:48.974645	6553839d-a7d1-442a-8177-ad26f285f0be	1781
1785	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	\N	2023-12-06 19:12:48.984254	2023-12-06 19:12:48.984226	bce7cf56-87bd-4fe0-98eb-4f765ec19839	1785
1789	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	\N	2023-12-06 19:12:48.992818	2023-12-06 19:12:48.992774	62640df5-7207-4440-b309-4238675875fa	1789
1796	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	\N	2023-12-06 19:12:49.009485	2023-12-06 19:12:49.009057	395e0bba-0b3b-4416-8130-b577baf25db0	1796
1803	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	\N	2023-12-06 19:12:49.024802	2023-12-06 19:12:49.024776	f47915a4-8df4-49d7-9f8d-143b646a11ba	1803
1807	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	\N	2023-12-06 19:12:49.031437	2023-12-06 19:12:49.031387	4098e61a-6673-4b9c-9d0f-17f08feba6f9	1807
1809	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	\N	2023-12-06 19:12:49.039406	2023-12-06 19:12:49.039204	55df44b1-6e0c-4428-80d9-b5b4aa3e541d	1809
1813	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	\N	2023-12-06 19:12:49.048586	2023-12-06 19:12:49.048503	f09398fc-9219-41e2-8f00-92e0b5c95e64	1813
1819	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	\N	2023-12-06 19:12:49.058065	2023-12-06 19:12:49.057915	822498af-4034-4534-badc-3878de335606	1819
1823	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	\N	2023-12-06 19:12:49.066913	2023-12-06 19:12:49.066888	b64595b0-4634-4afe-b88a-249cae739c1e	1823
1824	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	\N	2023-12-06 19:12:49.071718	2023-12-06 19:12:49.071689	7dc4926f-c119-4f8c-90ab-83d4f827a8b9	1824
1827	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	\N	2023-12-06 19:12:49.075939	2023-12-06 19:12:49.075765	aed473c5-edaa-4650-b99a-23ee4364aa90	1827
1831	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	\N	2023-12-06 19:12:49.086931	2023-12-06 19:12:49.08685	c65604e7-cbc0-4832-b17a-f3a1166a7bc2	1831
1834	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	\N	2023-12-06 19:12:49.094273	2023-12-06 19:12:49.094226	4e1778ad-e90a-427a-933b-aea6e6dd92fe	1834
1838	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	\N	2023-12-06 19:12:49.102427	2023-12-06 19:12:49.101879	cd431a1b-4666-4ac4-b1ce-2995a939c2ee	1838
1840	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	\N	2023-12-06 19:12:49.108067	2023-12-06 19:12:49.107857	4e541894-53b9-4311-adac-0c28d819718c	1840
1844	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	\N	2023-12-06 19:12:49.118146	2023-12-06 19:12:49.118103	ded9f595-1e5f-4dad-9f18-fa793d2d6604	1844
1850	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	\N	2023-12-06 19:12:49.127541	2023-12-06 19:12:49.127529	7b6786e5-30b6-4379-b395-38193c20a85d	1850
1855	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	\N	2023-12-06 19:12:49.137829	2023-12-06 19:12:49.1378	9815c861-c885-43ef-a26a-736c8fc7c709	1855
1856	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	\N	2023-12-06 19:12:49.14499	2023-12-06 19:12:49.144961	3c03b152-867f-49e4-83db-2306b3e80bca	1856
1863	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	\N	2023-12-06 19:12:49.15492	2023-12-06 19:12:49.154799	09a64929-63b7-4890-a179-c332b3a77c78	1863
1865	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	\N	2023-12-06 19:12:49.161282	2023-12-06 19:12:49.161256	52489e3b-2a46-438c-bf1e-b1e37797c7c8	1865
1868	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	\N	2023-12-06 19:12:49.169217	2023-12-06 19:12:49.169184	523ba8e6-909e-455c-8ad3-131feee31a69	1868
1872	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	\N	2023-12-06 19:12:49.176024	2023-12-06 19:12:49.175957	2695d33c-f2ee-4154-8e96-d26304afbc13	1872
1878	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	\N	2023-12-06 19:12:49.189744	2023-12-06 19:12:49.189638	94280ee5-04f9-48b3-84ea-6c95d773bec3	1878
1881	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	\N	2023-12-06 19:12:49.196468	2023-12-06 19:12:49.196421	fa741d98-b505-490a-b8cf-fc01b8b226f6	1881
1887	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	\N	2023-12-06 19:12:49.207749	2023-12-06 19:12:49.207735	2c358534-7938-43c8-8486-da3656ccc290	1887
1900	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	\N	2023-12-06 19:12:49.238446	2023-12-06 19:12:49.238387	04f7a843-529d-4ea1-b2b8-b0edb72f1434	1900
1904	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	\N	2023-12-06 19:12:49.245918	2023-12-06 19:12:49.245871	064f8d17-79e3-4156-8d14-2641c0d4fadf	1904
1915	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	\N	2023-12-06 19:12:49.268718	2023-12-06 19:12:49.26869	4f134c16-9dc8-4c34-b514-f835a40a1967	1915
1920	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	\N	2023-12-06 19:12:49.277296	2023-12-06 19:12:49.277267	e37065b1-9d4c-450c-a1d1-8ed35cdb95ec	1920
1924	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	\N	2023-12-06 19:12:49.285133	2023-12-06 19:12:49.285103	9fe23e62-78fa-4b8f-a722-89c4c39c11c4	1924
1929	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	\N	2023-12-06 19:12:49.29873	2023-12-06 19:12:49.298683	609f805e-5cf7-42d1-835f-0465b92e76ef	1929
1941	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	\N	2023-12-06 19:12:49.31893	2023-12-06 19:12:49.318811	e9f05864-1340-42db-bf8c-b1c23ecb19eb	1941
1944	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:49.355026	2023-12-06 19:12:49.354001	5a1c2a6a-3676-4b13-b2a1-f1ce9763b287	1943
1949	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	\N	2023-12-06 19:12:49.391567	2023-12-06 19:12:49.390542	093ee199-5124-4bf6-97c5-66c73555d365	1949
1955	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	\N	2023-12-06 19:12:49.428954	2023-12-06 19:12:49.427991	52640fad-821e-44fd-a5e2-6eb6b7cba60c	1955
1956	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	\N	2023-12-06 19:12:49.436927	2023-12-06 19:12:49.436884	22a297fc-144c-4bab-a66b-b78f608b9535	1956
1816	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	\N	2023-12-06 19:12:49.055644	2023-12-06 19:12:49.055605	1ab4706c-26f6-4e79-95ee-6fbf8704b7b2	1816
1821	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	\N	2023-12-06 19:12:49.066063	2023-12-06 19:12:49.066016	502f905b-eb4b-4ab4-9488-a710d16eadbd	1821
1836	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	\N	2023-12-06 19:12:49.096997	2023-12-06 19:12:49.096954	32323ad0-1a9a-4972-8976-0ba33e29c2e9	1836
1842	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	\N	2023-12-06 19:12:49.110475	2023-12-06 19:12:49.110159	6bf11224-99e3-4007-b0f5-b8a1d6a3e373	1842
1847	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	\N	2023-12-06 19:12:49.123868	2023-12-06 19:12:49.123834	867f2a19-a94b-45a6-8461-4979810c45c4	1847
1851	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	\N	2023-12-06 19:12:49.130619	2023-12-06 19:12:49.130592	0471c938-731c-4cad-a7e1-fb338725d0b1	1851
1852	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	\N	2023-12-06 19:12:49.135489	2023-12-06 19:12:49.135473	e715f00b-7573-4c24-9983-46f3b3518d19	1852
1859	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	\N	2023-12-06 19:12:49.146957	2023-12-06 19:12:49.146864	ad610a52-b877-48ba-bf20-be2c3a8ee042	1859
1862	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	\N	2023-12-06 19:12:49.153627	2023-12-06 19:12:49.153611	6173c354-b1a1-4ff8-9658-41f9a185306f	1862
1864	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	\N	2023-12-06 19:12:49.157888	2023-12-06 19:12:49.15786	e3fa5959-13ec-4d6a-b238-156b9b05d09a	1864
1869	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	\N	2023-12-06 19:12:49.169469	2023-12-06 19:12:49.169438	7c3efd6b-fead-444d-a772-3ee7a27095dc	1869
1870	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	\N	2023-12-06 19:12:49.172668	2023-12-06 19:12:49.172642	ab443b02-97df-4eca-93af-8e0823c211d8	1870
1875	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	\N	2023-12-06 19:12:49.182917	2023-12-06 19:12:49.1829	687eeeae-c9cf-4262-8dc9-9637f11bc8bb	1875
1877	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	\N	2023-12-06 19:12:49.187253	2023-12-06 19:12:49.187225	b8fc1acb-8046-48e9-818a-55990f129ff1	1877
1882	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	\N	2023-12-06 19:12:49.196898	2023-12-06 19:12:49.19687	0299ceae-8e79-4782-9ddb-ca09546ca8bd	1882
1886	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	\N	2023-12-06 19:12:49.206407	2023-12-06 19:12:49.206377	6a8c767b-3fe0-4d9c-86a1-846f36c3e77a	1885
1890	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	\N	2023-12-06 19:12:49.216	2023-12-06 19:12:49.215987	9745a924-bcdd-425e-ac72-8c0f16e7a896	1890
1892	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	\N	2023-12-06 19:12:49.220624	2023-12-06 19:12:49.220612	d0f21fde-29ef-4a17-babc-825de3f55e30	1892
1897	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	\N	2023-12-06 19:12:49.233751	2023-12-06 19:12:49.231827	3bc9bddf-e889-4d79-bed2-06842750d0c4	1897
1899	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	\N	2023-12-06 19:12:49.236373	2023-12-06 19:12:49.236301	2e86a51e-7397-4b54-83a7-a6f8bd466905	1899
1902	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	\N	2023-12-06 19:12:49.244233	2023-12-06 19:12:49.244207	e54818c0-31ae-4507-a1f0-ca2798658890	1902
1906	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	\N	2023-12-06 19:12:49.250533	2023-12-06 19:12:49.250476	6f8d02e2-3f88-48b1-86dd-29a610274236	1906
1909	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	\N	2023-12-06 19:12:49.254146	2023-12-06 19:12:49.254098	e567b616-0bbb-4d59-b7be-6f6f4a7b8b96	1909
1911	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	\N	2023-12-06 19:12:49.26101	2023-12-06 19:12:49.260994	b2fb8db7-2eed-4e41-8c79-7c65a9022590	1911
1916	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	\N	2023-12-06 19:12:49.26845	2023-12-06 19:12:49.267952	3b5ec150-53ca-48ab-b3db-a00a209527ac	1916
1917	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	\N	2023-12-06 19:12:49.275703	2023-12-06 19:12:49.275628	6230dc35-d944-437c-aef4-080fa11c4d07	1917
1921	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	\N	2023-12-06 19:12:49.282269	2023-12-06 19:12:49.282132	dcd02974-a04c-43e5-97eb-0a4a448dfbc3	1921
1927	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	\N	2023-12-06 19:12:49.29254	2023-12-06 19:12:49.292482	9ac2bf01-44d4-4bf5-b3f4-49d3988bd48a	1927
1928	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	\N	2023-12-06 19:12:49.295383	2023-12-06 19:12:49.295326	5f3aa7da-65f9-420d-a194-ee76ba4b9eac	1928
1932	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	\N	2023-12-06 19:12:49.30273	2023-12-06 19:12:49.302702	e3baf412-9e7d-4c61-8caf-08df8f03fee8	1932
1934	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	\N	2023-12-06 19:12:49.308017	2023-12-06 19:12:49.30794	933f169e-0360-4f80-be58-5d3ba16ea681	1934
1939	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	\N	2023-12-06 19:12:49.316245	2023-12-06 19:12:49.316214	11cfa73c-9c96-48fb-b991-eaa29e6e6e8d	1939
1945	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	\N	2023-12-06 19:12:49.355034	2023-12-06 19:12:49.353993	5b88e4c1-8ad4-4e36-8534-15b7fa0c0afd	1945
1947	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	\N	2023-12-06 19:12:49.391567	2023-12-06 19:12:49.39052	bdf9eaa4-d6ad-4a56-a77e-729cdd20863b	1947
1954	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	\N	2023-12-06 19:12:49.428958	2023-12-06 19:12:49.427994	396406d9-caf2-44c3-b3bf-065a902128a2	1954
1957	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	\N	\N	\N	\N	2023-12-06 19:12:49.43778	2023-12-06 19:12:49.437735	23a3ff74-b6c6-4bff-a0dd-a84484e59f50	1957
1964	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential facility	Residential facility	Residential facility	\N	\N	\N	\N	2023-12-06 19:12:49.450823	2023-12-06 19:12:49.450416	d883fcae-d0b8-4750-b05a-11d3de31c762	1964
1965	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (less than 10 hrs)	Regular early childhood program (less than 10 hrs)	Services in regular early childhood program (less than 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:49.455958	2023-12-06 19:12:49.455922	afcaa117-52c2-447b-9d0d-bd98236e43ee	1965
1967	uri://ed-fi.org/SpecialEducationSettingDescriptor	Service provider location	Service provider location	Service provider location	\N	\N	\N	\N	2023-12-06 19:12:49.46019	2023-12-06 19:12:49.459297	5b844d0e-fc6a-40fd-b9c0-6a20cb4ea72b	1967
1969	uri://ed-fi.org/FinancialCollectionDescriptor	0 to 30 days	0 to 30 days	0 to 30 days	\N	\N	\N	\N	2023-12-06 19:12:49.511201	2023-12-06 19:12:49.510271	c6cc3128-2db4-4313-b37d-316f4fea4a52	1969
1858	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	\N	2023-12-06 19:12:49.145932	2023-12-06 19:12:49.145907	cff84c60-f8ec-452e-b811-daed1b1b096f	1858
1861	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	\N	2023-12-06 19:12:49.152984	2023-12-06 19:12:49.152969	f680e06b-4c97-4546-b38c-e0da97bee07f	1861
1866	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	\N	2023-12-06 19:12:49.16157	2023-12-06 19:12:49.161218	15cc5f1d-409a-428b-9093-0462b1eb29fb	1866
1873	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	\N	2023-12-06 19:12:49.178219	2023-12-06 19:12:49.178194	fa70193b-89b1-421d-8893-55cda88b6595	1873
1876	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	\N	2023-12-06 19:12:49.185682	2023-12-06 19:12:49.185653	08b41363-6dc2-4ebb-aa59-697a963e48bb	1876
1879	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	\N	2023-12-06 19:12:49.190651	2023-12-06 19:12:49.190637	b5dd7cf5-46ba-48f9-9657-d1890e4fd634	1879
1880	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	\N	2023-12-06 19:12:49.194445	2023-12-06 19:12:49.19443	ce2da9bc-3d44-4e47-ab8a-6d7755fc9086	1880
1884	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	\N	2023-12-06 19:12:49.204203	2023-12-06 19:12:49.203927	00044932-61a9-4af2-9a74-a2c3c89796d5	1884
1889	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	\N	2023-12-06 19:12:49.215565	2023-12-06 19:12:49.215552	465aaac7-83e8-412d-a3a5-72584e91a91e	1889
1893	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	\N	2023-12-06 19:12:49.224092	2023-12-06 19:12:49.224008	89c8f173-d4da-4409-a4c4-1dc3bc379cdc	1893
1895	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	\N	2023-12-06 19:12:49.227838	2023-12-06 19:12:49.22776	25a7f89e-b189-4d05-883a-46a58679bcf7	1895
1901	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	\N	2023-12-06 19:12:49.23903	2023-12-06 19:12:49.238996	4e7f0e6e-7c28-4041-a9c1-a48791597bc4	1901
1905	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	\N	2023-12-06 19:12:49.247156	2023-12-06 19:12:49.247142	e4796610-43a1-41eb-a5ff-b4288692234f	1905
1907	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	\N	2023-12-06 19:12:49.255092	2023-12-06 19:12:49.25497	c7701539-a9bc-47a1-9153-cb2d77e218eb	1907
1912	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	\N	2023-12-06 19:12:49.262801	2023-12-06 19:12:49.262767	0ef3c049-0198-45da-aa27-4797e1aadc93	1912
1913	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	\N	2023-12-06 19:12:49.267687	2023-12-06 19:12:49.267547	cd9c7d8d-6e41-4e57-8333-dd542a980539	1913
1918	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	\N	2023-12-06 19:12:49.27635	2023-12-06 19:12:49.276315	90e5c56b-49e4-4f78-b34e-602fdb2652c2	1918
1922	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	\N	2023-12-06 19:12:49.284382	2023-12-06 19:12:49.282903	1370d985-0c64-453d-8291-23258715edd9	1922
1925	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	\N	2023-12-06 19:12:49.290831	2023-12-06 19:12:49.290807	e6d874d9-a30b-491e-8a79-7e0eac54e0d2	1925
1930	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	\N	2023-12-06 19:12:49.299091	2023-12-06 19:12:49.299063	9c047d29-8510-4127-8dcd-e5b109ed5a1e	1930
1933	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	\N	2023-12-06 19:12:49.307316	2023-12-06 19:12:49.307282	be0d62c9-6e10-40c6-80f0-bb391f2f3ee3	1933
1936	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	\N	2023-12-06 19:12:49.309979	2023-12-06 19:12:49.309952	77356c61-11f6-4aca-b454-113e3dd986b7	1936
1938	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	\N	2023-12-06 19:12:49.316053	2023-12-06 19:12:49.315688	95b7264d-e1f1-41b0-8435-7ed2c1337db7	1938
1943	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	\N	2023-12-06 19:12:49.355012	2023-12-06 19:12:49.354008	a2fd246f-9a7b-453f-80c3-59bfe36335c2	1944
1950	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	\N	2023-12-06 19:12:49.391576	2023-12-06 19:12:49.390524	85860c9b-2a4f-4067-a17f-f075aa165701	1950
1952	uri://ed-fi.org/SpecialEducationSettingDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:49.428953	2023-12-06 19:12:49.427974	a79d0b55-7c5f-4d1e-b632-7a7f3f4c5ab5	1952
1959	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class between 40-79% of the day	Inside regular class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	\N	2023-12-06 19:12:49.438497	2023-12-06 19:12:49.438383	c65f1685-cb64-48b1-9e12-68b09f332cbf	1959
1960	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in private schools	Parentally-placed in private schools	Parentally-placed in private schools	\N	\N	\N	\N	2023-12-06 19:12:49.442935	2023-12-06 19:12:49.442895	405766d5-8124-4d51-b2d8-c29bdac64ac8	1960
1962	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate class	Separate class	Separate class	\N	\N	\N	\N	2023-12-06 19:12:49.44712	2023-12-06 19:12:49.447108	ea5231e1-7754-424c-972c-185ec52ccc44	1962
1963	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (10+ hrs)	Regular early childhood program (10+ hrs)	Services in regular early childhood program (at least 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:49.450272	2023-12-06 19:12:49.450257	674c3a6c-7fe6-48cb-9e91-33327a26ad68	1963
1970	uri://ed-fi.org/FinancialCollectionDescriptor	31 to 45 days	31 to 45 days	31 to 45 days	\N	\N	\N	\N	2023-12-06 19:12:49.511362	2023-12-06 19:12:49.510248	09eda131-d862-4e52-a6d7-f027cff9c309	1970
1972	uri://ed-fi.org/FinancialCollectionDescriptor	76 to 90 days	76 to 90 days	76 to 90 days	\N	\N	\N	\N	2023-12-06 19:12:49.523689	2023-12-06 19:12:49.523646	9c6ec928-efe8-42ad-a0ba-5118bf82f62c	1972
1975	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Attribution	Attribution	Indicates the education organization (state, district, and/or school) to which the student's results are attributed to; often used for accountability reporting.	\N	\N	\N	\N	2023-12-06 19:12:49.555274	2023-12-06 19:12:49.552826	e4c3807d-e8c6-4bab-940f-ad06724b7e7b	1975
1981	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:49.603308	2023-12-06 19:12:49.602203	3a4dd04d-f0fb-4137-b7cd-40ae7840c649	1981
1989	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	\N	2023-12-06 19:12:49.648392	2023-12-06 19:12:49.645975	e6693b7f-39cb-4fd6-813c-9f6858d83ed9	1989
1994	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-12-06 19:12:49.658202	2023-12-06 19:12:49.658106	b2432f25-98c8-436c-9481-87c5913f2eac	1994
1999	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	\N	2023-12-06 19:12:49.666053	2023-12-06 19:12:49.666014	250e151d-298a-4766-a731-9b4b4b402358	1999
1885	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	\N	2023-12-06 19:12:49.206439	2023-12-06 19:12:49.206413	174399f4-2868-4823-8a43-9a70a370f76a	1886
1888	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	\N	2023-12-06 19:12:49.214653	2023-12-06 19:12:49.214498	a3cbcd1e-5fa4-4074-b19f-165eaec1ffca	1888
1891	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	\N	2023-12-06 19:12:49.218321	2023-12-06 19:12:49.217865	3223eed5-178c-4c9c-8e9a-ad96925cbd2e	1891
1894	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	\N	2023-12-06 19:12:49.225683	2023-12-06 19:12:49.225645	817693dd-d51a-4443-9cb1-1f67a31d565a	1894
1896	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	\N	2023-12-06 19:12:49.23038	2023-12-06 19:12:49.230353	f7b55899-7295-4254-b119-a731cef6ed07	1896
1898	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	\N	2023-12-06 19:12:49.235607	2023-12-06 19:12:49.235586	8b401955-f8ee-4c42-a289-91cfae79adaa	1898
1903	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	\N	2023-12-06 19:12:49.245686	2023-12-06 19:12:49.245659	3dcf59e9-cdac-4458-8b26-ae1327cb8135	1903
1908	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	\N	2023-12-06 19:12:49.255409	2023-12-06 19:12:49.25538	f83c38ec-a9d9-422a-9ec5-4a7643a372d3	1908
1910	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	\N	2023-12-06 19:12:49.260344	2023-12-06 19:12:49.259571	b956799f-5134-4acb-9cab-ad6c19fadbda	1910
1914	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	\N	2023-12-06 19:12:49.268351	2023-12-06 19:12:49.268338	84889933-897b-4527-bde5-1e77b51ceb4c	1914
1919	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	\N	2023-12-06 19:12:49.27719	2023-12-06 19:12:49.277176	a70bcdc3-66cb-4959-980d-30e069fdff5c	1919
1923	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	\N	2023-12-06 19:12:49.284573	2023-12-06 19:12:49.284496	6c79a861-ca3e-42c2-a525-047fd9629747	1923
1926	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	\N	2023-12-06 19:12:49.292038	2023-12-06 19:12:49.292008	5971fab8-2c7c-40b0-a9b9-781903b52052	1926
1931	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	\N	2023-12-06 19:12:49.299634	2023-12-06 19:12:49.299621	486c0851-af7e-442c-ac4f-4be723b2a2c4	1931
1935	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	\N	2023-12-06 19:12:49.308272	2023-12-06 19:12:49.307888	3773dd74-f6ea-4bf1-9714-64b2464669b0	1935
1937	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	\N	2023-12-06 19:12:49.3125	2023-12-06 19:12:49.31246	0c0c4f8d-b0ee-40ab-9217-58f2ee860fc1	1937
1940	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	\N	2023-12-06 19:12:49.317571	2023-12-06 19:12:49.317438	bdf5c5c5-c18e-4e52-a219-3d25e1108d06	1940
1942	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	\N	2023-12-06 19:12:49.321954	2023-12-06 19:12:49.321794	c5d8961b-565f-4789-8711-042b4aa93010	1942
1946	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	\N	2023-12-06 19:12:49.355126	2023-12-06 19:12:49.354018	ff95a847-1522-401c-bd8d-5df23ee89e97	1946
1948	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:49.391576	2023-12-06 19:12:49.390546	dfe8eb99-1530-4e10-a484-4c6fd20aff1e	1948
1951	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-12-06 19:12:49.398804	2023-12-06 19:12:49.398759	0f862d97-bf31-4b8c-8518-d89ba8b37724	1951
1953	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional facilities	Correctional facilities	Correctional facilities	\N	\N	\N	\N	2023-12-06 19:12:49.428954	2023-12-06 19:12:49.427983	288d9f85-d522-49b0-a166-5d8821027606	1953
1958	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	\N	\N	\N	\N	2023-12-06 19:12:49.438489	2023-12-06 19:12:49.438452	92f1f4a9-8e26-4a5d-aed4-dae01cbede73	1958
1961	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate school	Separate school	Separate school	\N	\N	\N	\N	2023-12-06 19:12:49.446737	2023-12-06 19:12:49.446722	34fd5319-e75d-4cf2-b18f-cc1ac8b339b8	1961
1966	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	\N	\N	\N	\N	2023-12-06 19:12:49.45918	2023-12-06 19:12:49.459166	e2d04428-9fd8-49ed-9c28-fd1f05685fe8	1966
1968	uri://ed-fi.org/FinancialCollectionDescriptor	46 to 60 days	46 to 60 days	46 to 60 days	\N	\N	\N	\N	2023-12-06 19:12:49.511204	2023-12-06 19:12:49.510268	1a6119c6-5298-472e-879b-3360253ff27d	1968
1974	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Enrollment	Enrollment	Indicates the education organization (typically a school) where the student was enrolled at the time the assessment was taken by the student. If dual-enrolled, what the school of record.	\N	\N	\N	\N	2023-12-06 19:12:49.554138	2023-12-06 19:12:49.552841	ffc6ea66-9900-4302-a662-6d3cf0450b7d	1974
1977	uri://ed-fi.org/OldEthnicityDescriptor	Hispanic	Hispanic	Hispanic	\N	\N	\N	\N	2023-12-06 19:12:49.563372	2023-12-06 19:12:49.563346	349fe79b-9cc4-48ac-98c9-6e09a9e30c40	1977
1982	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:49.603308	2023-12-06 19:12:49.602186	a818ef60-c15a-424d-99a8-d533e025ebcc	1982
1986	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	\N	2023-12-06 19:12:49.642094	2023-12-06 19:12:49.640884	9b34800b-bfe4-4039-ad87-328c99b17df8	1986
1990	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	\N	2023-12-06 19:12:49.650824	2023-12-06 19:12:49.6508	76a1e089-4bd9-4b4a-abe4-61246af27a07	1990
1993	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	\N	2023-12-06 19:12:49.658299	2023-12-06 19:12:49.658284	6240e54a-825e-49e5-bd06-04297aff55a7	1993
1996	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	\N	2023-12-06 19:12:49.663939	2023-12-06 19:12:49.663881	0bf84c6b-45e3-4d36-973d-087cbbc70a64	1996
2004	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	\N	2023-12-06 19:12:49.702305	2023-12-06 19:12:49.701252	0b1b9b18-bc60-4da6-b72b-97337fbd5284	2004
2006	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-12-06 19:12:49.738677	2023-12-06 19:12:49.73762	296ba944-0aa3-4370-9f3d-a92e9c5c60e0	2005
2011	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:12:49.747169	2023-12-06 19:12:49.747141	8cccf22b-a630-4d17-b951-90a1ee5e430b	2011
2013	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:12:49.753448	2023-12-06 19:12:49.753402	c3376ec5-8788-4a1a-afac-1defe74a4154	2013
1971	uri://ed-fi.org/FinancialCollectionDescriptor	61 to 75 days	61 to 75 days	61 to 75 days	\N	\N	\N	\N	2023-12-06 19:12:49.511657	2023-12-06 19:12:49.510237	364cef40-59fb-4d7a-acc1-d69efbe56f78	1971
1976	uri://ed-fi.org/OldEthnicityDescriptor	American Indian Or Alaskan Native	American Indian Or Alaskan Native	American Indian Or Alaskan Native	\N	\N	\N	\N	2023-12-06 19:12:49.560374	2023-12-06 19:12:49.558935	a1da5653-7da7-4841-bdb4-ae1a57a7f1b8	1976
1978	uri://ed-fi.org/OldEthnicityDescriptor	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	\N	\N	\N	\N	2023-12-06 19:12:49.564091	2023-12-06 19:12:49.564027	4256b70e-96e0-40bf-9760-ef7743b2dea9	1978
1980	uri://ed-fi.org/OldEthnicityDescriptor	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	\N	\N	\N	\N	2023-12-06 19:12:49.570596	2023-12-06 19:12:49.570567	cfbd0b25-9423-4e6d-868b-1b79fa79d8b4	1980
1983	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-12-06 19:12:49.603423	2023-12-06 19:12:49.602192	eafe2831-5cbc-4dbf-a463-8ec69b9db090	1983
1985	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	\N	2023-12-06 19:12:49.612955	2023-12-06 19:12:49.612919	8bfca618-3fbe-46aa-9e4e-f2abfcb4a48c	1985
1987	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	\N	2023-12-06 19:12:49.642094	2023-12-06 19:12:49.640886	f3d21c47-af2b-489e-969a-f5bcebfca7d3	1987
1991	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	\N	2023-12-06 19:12:49.65105	2023-12-06 19:12:49.651023	a91b791a-9db7-4a1f-8484-5e75bd3b84fa	1991
1995	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	\N	2023-12-06 19:12:49.659285	2023-12-06 19:12:49.659258	2bd58fab-a59a-4e5d-9dfe-e1b81685c5d1	1995
1997	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	\N	2023-12-06 19:12:49.664696	2023-12-06 19:12:49.66467	a1ea8278-ea4a-4623-8c39-1cd2296c47dd	1997
2000	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	\N	2023-12-06 19:12:49.671976	2023-12-06 19:12:49.671945	9cb1f670-995d-4f02-a98d-617c7fce819f	2000
2003	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	\N	2023-12-06 19:12:49.702327	2023-12-06 19:12:49.701244	ebff3a6a-fdff-4878-960e-1b8ce9c9590e	2003
2007	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	\N	2023-12-06 19:12:49.738671	2023-12-06 19:12:49.737635	cef9d95b-f065-4b0b-94d8-0bc4de21de30	2007
2010	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	\N	2023-12-06 19:12:49.747172	2023-12-06 19:12:49.747155	c6354d7a-d434-4f21-953e-3397b82804ef	2010
2017	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	\N	2023-12-06 19:12:49.782803	2023-12-06 19:12:49.78192	1e1ab70e-a7c2-406b-a5f2-a6355af420e5	2017
2018	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	\N	2023-12-06 19:12:49.791676	2023-12-06 19:12:49.79164	0b90485c-cb75-457d-a48e-e44cb1e42e59	2018
2024	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	\N	2023-12-06 19:12:49.799371	2023-12-06 19:12:49.799334	8c9598f7-651d-4420-b80c-127b5f9fcab3	2024
2028	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	\N	2023-12-06 19:12:49.839868	2023-12-06 19:12:49.839393	5d9a4dd9-df9e-4dc6-8277-fbdb412d7249	2028
2032	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	\N	2023-12-06 19:12:49.848983	2023-12-06 19:12:49.84891	f2b0f794-09e0-4274-8323-35ccbddb5336	2032
2037	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	\N	2023-12-06 19:12:49.879085	2023-12-06 19:12:49.878143	2f7e68b7-463d-446b-958c-e412f00e1bed	2037
2039	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	\N	2023-12-06 19:12:49.917275	2023-12-06 19:12:49.916147	484a15c3-525f-42fe-b371-2957fa3f009e	2039
2043	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	\N	2023-12-06 19:12:49.926522	2023-12-06 19:12:49.926509	5830972b-191c-4b38-85cf-0e65518dc63a	2043
2045	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	\N	2023-12-06 19:12:49.933633	2023-12-06 19:12:49.933449	6a07baf0-af68-477f-ab26-b9641b4c872a	2045
2049	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	\N	2023-12-06 19:12:49.941258	2023-12-06 19:12:49.941208	a628b5c8-253c-4a23-acf2-c36814d8f6b7	2049
2053	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	\N	2023-12-06 19:12:49.947675	2023-12-06 19:12:49.947661	db7e8de4-6482-48a6-8898-c19df96f0ca7	2053
2056	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	\N	2023-12-06 19:12:49.952139	2023-12-06 19:12:49.952126	59258bd6-9cf2-4da1-a901-f4ba125a7784	2056
2060	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	\N	2023-12-06 19:12:49.959701	2023-12-06 19:12:49.95949	62fedeaf-6ec5-4181-836c-22a31917cec8	2060
2063	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	\N	2023-12-06 19:12:49.994927	2023-12-06 19:12:49.994034	1908e1c6-7336-49a3-a1ba-11b09c78d727	2063
2068	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	\N	2023-12-06 19:12:50.004034	2023-12-06 19:12:50.003999	d702340b-dab4-4f9c-8e42-62008500bc96	2068
2076	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	\N	2023-12-06 19:12:50.022284	2023-12-06 19:12:50.022267	223fa4ec-e37b-4316-ba2a-22627d230877	2076
2078	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	\N	2023-12-06 19:12:50.026906	2023-12-06 19:12:50.026151	55ad9957-634d-4605-8168-1445f9b05924	2078
2083	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-12-06 19:12:50.061598	2023-12-06 19:12:50.060652	14d19bb1-c18b-42d6-924f-8edd3d9fd26f	2083
1973	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Administration	Administration	Indicates the education organization (typically a school) that administered the assessment.	\N	\N	\N	\N	2023-12-06 19:12:49.554128	2023-12-06 19:12:49.552835	a856b00d-a1e6-4c1a-a4bc-842b6624a6f8	1973
1979	uri://ed-fi.org/OldEthnicityDescriptor	Asian Or Pacific Islander	Asian Or Pacific Islander	Asian Or Pacific Islander	\N	\N	\N	\N	2023-12-06 19:12:49.565073	2023-12-06 19:12:49.565047	61e677d3-ac5e-464d-96ed-38e741cc9f98	1979
1984	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	\N	2023-12-06 19:12:49.606005	2023-12-06 19:12:49.604511	13924a66-5a70-47f2-a222-875b89b2b033	1984
1988	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	\N	2023-12-06 19:12:49.64828	2023-12-06 19:12:49.645961	d228990e-2c5a-440d-9cd7-0b18d43fcb9a	1988
1992	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:49.656978	2023-12-06 19:12:49.656948	2163aa1a-4070-4e81-884d-f5a4ce25a388	1992
1998	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	\N	2023-12-06 19:12:49.66576	2023-12-06 19:12:49.66564	a3878d54-f61a-499c-a90d-a38ca186c400	1998
2001	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	\N	2023-12-06 19:12:49.702298	2023-12-06 19:12:49.701277	a7e0c6e9-339b-4fb4-9ab6-9c20d1164a43	2002
2005	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:49.738692	2023-12-06 19:12:49.737602	6d771021-0050-4b03-9030-3ad170153eaf	2006
2012	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:49.747684	2023-12-06 19:12:49.747636	4879ab7c-8dec-4952-b0f0-d7e576ebd0de	2012
2016	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-12-06 19:12:49.782911	2023-12-06 19:12:49.781943	bbb30d8b-06f4-4ead-bf06-cc3ff72bf6a8	2016
2021	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	\N	2023-12-06 19:12:49.792785	2023-12-06 19:12:49.792771	c0133d11-b411-4529-9e2f-935d9846e657	2021
2023	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	\N	2023-12-06 19:12:49.799352	2023-12-06 19:12:49.798778	20a7caeb-ab3f-4867-9b02-9c2589b933cf	2023
2027	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-12-06 19:12:49.806802	2023-12-06 19:12:49.806785	c6730437-0ebd-46e3-ad84-9b0cc2e97ef9	2027
2031	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	\N	2023-12-06 19:12:49.839876	2023-12-06 19:12:49.838798	7613bbfd-52ca-46f7-84ec-00a35a3f51cd	2031
2035	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	\N	2023-12-06 19:12:49.879111	2023-12-06 19:12:49.878172	917ff357-5343-4e36-9011-2228ddf44854	2035
2038	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	\N	2023-12-06 19:12:49.917286	2023-12-06 19:12:49.916141	88fdaeb1-fc62-42d0-9418-6fc88a85bd7c	2038
2042	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	\N	2023-12-06 19:12:49.926035	2023-12-06 19:12:49.925996	4a7e2f17-8015-4e5d-a1ca-b3f2ced4c4c7	2042
2048	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	\N	2023-12-06 19:12:49.934891	2023-12-06 19:12:49.934829	d92b8a93-f49a-44f0-ac0d-0fe621a9aa7d	2048
2051	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	\N	2023-12-06 19:12:49.94252	2023-12-06 19:12:49.942481	795e818b-f539-4312-9ad9-2c5641934170	2051
2055	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	\N	2023-12-06 19:12:49.951128	2023-12-06 19:12:49.951032	746020d0-ab61-4e70-a88c-f53639e223d7	2055
2058	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	\N	2023-12-06 19:12:49.959278	2023-12-06 19:12:49.959205	b3336788-be9f-4dc1-ae56-bf8d67378597	2058
2064	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	\N	2023-12-06 19:12:49.994923	2023-12-06 19:12:49.994009	1b52de25-fe01-4bc8-8e48-4aeed84276be	2064
2067	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	\N	2023-12-06 19:12:50.004232	2023-12-06 19:12:50.004207	259b2a9a-2dc5-40b4-91ba-8a16d984a9e1	2067
2069	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-12-06 19:12:50.01076	2023-12-06 19:12:50.010718	17879bf7-1e29-4735-9f94-a9ab401e5b59	2069
2072	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.013659	2023-12-06 19:12:50.013622	2721e3b1-ce90-41ca-b20a-8736f5a664c2	2072
2073	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	\N	2023-12-06 19:12:50.017593	2023-12-06 19:12:50.017553	f25c3b2e-cb15-460f-8dc4-2d7687d25c55	2073
2075	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	\N	2023-12-06 19:12:50.020433	2023-12-06 19:12:50.020375	5e1f03f8-0005-467f-918b-c934a6d1fa81	2075
2077	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-12-06 19:12:50.024938	2023-12-06 19:12:50.024854	db859db6-8b4f-46cd-a717-efe81ce22622	2077
2080	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-12-06 19:12:50.061576	2023-12-06 19:12:50.060638	f9634b4f-33f6-4d22-b04e-1f0b81af737c	2080
2086	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-12-06 19:12:50.070321	2023-12-06 19:12:50.070225	0822c1d7-6408-48f5-865d-672949ae6856	2086
2090	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-12-06 19:12:50.077092	2023-12-06 19:12:50.077035	29e05d56-bf69-472e-a8d4-f2641a29a39e	2090
2093	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-12-06 19:12:50.084032	2023-12-06 19:12:50.083977	918b0a23-73d1-433e-ae8e-9272854e46ed	2093
2142	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	\N	2023-12-06 19:12:50.360697	2023-12-06 19:12:50.360683	0ad1f9c8-a193-4bd0-abc4-d7cf7135a92a	2142
2002	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	\N	2023-12-06 19:12:49.702311	2023-12-06 19:12:49.701259	17b3b4b8-858a-4721-88c5-867843160705	2001
2008	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:49.738682	2023-12-06 19:12:49.737613	cea97046-1231-4a6d-a0f1-8249e50c8d6e	2008
2009	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:49.747158	2023-12-06 19:12:49.747125	d425c9b9-d586-4e89-835e-1d6b3a7ea58a	2009
2014	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	\N	2023-12-06 19:12:49.782831	2023-12-06 19:12:49.781925	0ce8d203-7376-402e-884d-76be05d6b75c	2014
2020	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-12-06 19:12:49.792438	2023-12-06 19:12:49.792423	132b80b2-b2af-4b71-aa6a-bfea04615bc4	2020
2025	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:49.800714	2023-12-06 19:12:49.800701	9922fde5-af7d-4da5-abe9-c2354ae18b87	2025
2030	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	\N	2023-12-06 19:12:49.839847	2023-12-06 19:12:49.838785	68762235-645f-4e4a-86ac-05ae0137c2d8	2030
2033	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	\N	2023-12-06 19:12:49.85009	2023-12-06 19:12:49.849915	8372c0d6-8ffc-4c44-bb98-7183cf1f46f8	2033
2036	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	\N	2023-12-06 19:12:49.878995	2023-12-06 19:12:49.878168	0e524ab1-66d9-4590-8aa0-95e306f9d66f	2036
2041	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	\N	2023-12-06 19:12:49.92171	2023-12-06 19:12:49.920291	dcbd4eca-d86a-405d-8cb8-fb3946efd4f9	2041
2047	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	\N	2023-12-06 19:12:49.935048	2023-12-06 19:12:49.934855	23ebcc73-9491-4d72-8611-bce3fd6b9d7a	2047
2050	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:49.942237	2023-12-06 19:12:49.942191	c2f840b1-1a86-42d8-8f53-a3590f9e05d3	2050
2059	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	\N	2023-12-06 19:12:49.95954	2023-12-06 19:12:49.959512	a80c4802-de2e-4a9b-9fbd-8ba463398c7a	2059
2061	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:49.994915	2023-12-06 19:12:49.994041	eafe18ce-87e4-49bb-8d19-5fabcfd4d8fb	2061
2066	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	\N	2023-12-06 19:12:50.003192	2023-12-06 19:12:50.003156	8cb5cbf7-f5c6-4e92-8299-943b2901cdee	2066
2071	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	\N	2023-12-06 19:12:50.012016	2023-12-06 19:12:50.011838	ab65bc9b-be55-4af5-8304-85024d91e338	2071
2074	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	\N	2023-12-06 19:12:50.020081	2023-12-06 19:12:50.020034	470c883d-021b-4fc2-86f3-e8c014b50553	2074
2082	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-12-06 19:12:50.062033	2023-12-06 19:12:50.060648	162c2217-407c-4019-9fa1-51be7787843a	2082
2089	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-12-06 19:12:50.076942	2023-12-06 19:12:50.076887	5de743cf-52c0-443d-869f-da7f4c4e892b	2089
2099	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	\N	2023-12-06 19:12:50.123708	2023-12-06 19:12:50.122585	59dfaef9-ee49-4245-8ac4-191ee352050c	2099
2102	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.13166	2023-12-06 19:12:50.131586	25c4564e-5b80-422d-8e88-3df7364320c2	2102
2105	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	\N	2023-12-06 19:12:50.137129	2023-12-06 19:12:50.137102	af832d67-03d5-4b19-9386-9fbefca47118	2105
2109	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	\N	2023-12-06 19:12:50.169431	2023-12-06 19:12:50.168248	a15b91df-dec7-422a-8f84-ff0dfd98627c	2109
2110	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	\N	2023-12-06 19:12:50.206186	2023-12-06 19:12:50.205136	77111617-a425-4161-b740-953933ebe645	2111
2117	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	\N	2023-12-06 19:12:50.244272	2023-12-06 19:12:50.243308	0bebf207-feed-4aec-8ccb-aed0be85442b	2117
2119	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	\N	2023-12-06 19:12:50.252693	2023-12-06 19:12:50.252614	5e094865-7893-46ba-914c-961d5424bcb9	2119
2124	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	\N	2023-12-06 19:12:50.291095	2023-12-06 19:12:50.28998	725c801b-b246-4388-a6d2-4f3e79248281	2124
2129	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	\N	2023-12-06 19:12:50.301352	2023-12-06 19:12:50.301315	c24cd3d5-c54e-4b7d-af2d-6aae36c216a6	2129
2133	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	\N	2023-12-06 19:12:50.308318	2023-12-06 19:12:50.308197	7c84d37e-1dde-4eb1-b65c-e0d176bf9995	2133
2135	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	\N	2023-12-06 19:12:50.313921	2023-12-06 19:12:50.313853	56a711d0-efd2-4dd3-b532-0eea4421db0c	2135
2140	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	\N	2023-12-06 19:12:50.355263	2023-12-06 19:12:50.354161	5d39b9b1-22fd-4e03-92fb-3d307762ac07	2140
2143	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.360369	2023-12-06 19:12:50.360355	424b9b58-a2da-46c7-b7e4-3f0afb55c0de	2143
2148	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:50.398316	2023-12-06 19:12:50.397277	5e15cfc0-e2bc-437c-a7aa-7e18b84de59d	2148
2280	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.039838	2023-12-06 19:12:51.039811	62678a0f-bd94-4ff0-8ba4-44cebb2c1dec	2280
2015	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	\N	2023-12-06 19:12:49.782807	2023-12-06 19:12:49.78195	d54221c0-6179-4a6a-ad23-d9dbe5be79ab	2015
2019	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	\N	2023-12-06 19:12:49.791983	2023-12-06 19:12:49.791905	5df7ceda-df43-45e9-bf04-0dc1aba1c385	2019
2022	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	\N	2023-12-06 19:12:49.798096	2023-12-06 19:12:49.798021	ee0a370c-ece5-4048-8e8b-e3b5ca277acb	2022
2026	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	\N	2023-12-06 19:12:49.804232	2023-12-06 19:12:49.804219	a7e714ba-2efd-4236-88ee-bf5fd9498b50	2026
2029	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	\N	2023-12-06 19:12:49.839879	2023-12-06 19:12:49.838779	49b4db61-8bf7-41d7-9741-c27634ed0100	2029
2034	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	\N	2023-12-06 19:12:49.879003	2023-12-06 19:12:49.87815	fac1771e-96cc-4fe8-959f-14847228211d	2034
2040	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	\N	2023-12-06 19:12:49.917595	2023-12-06 19:12:49.916158	8b983fdc-432c-449d-b86e-cc7d8da0db45	2040
2044	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	\N	2023-12-06 19:12:49.927565	2023-12-06 19:12:49.927539	7041d23a-566c-4533-a2a5-61247ade662f	2044
2046	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	\N	2023-12-06 19:12:49.934769	2023-12-06 19:12:49.934719	c9c74e90-65aa-465b-a54f-8985121d0542	2046
2052	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	\N	2023-12-06 19:12:49.943547	2023-12-06 19:12:49.943521	14af0f39-dfa2-4d94-8306-18501d724070	2052
2054	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	\N	2023-12-06 19:12:49.949795	2023-12-06 19:12:49.94941	e742242c-4c27-41cb-8157-b02e01e09cef	2054
2057	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	\N	2023-12-06 19:12:49.957205	2023-12-06 19:12:49.957089	043c1cb7-ece5-4f99-986e-d7a3c13adb00	2057
2062	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	\N	2023-12-06 19:12:49.994929	2023-12-06 19:12:49.994017	5ee839c5-cb0b-42be-aea5-2eadf560159c	2062
2065	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	\N	2023-12-06 19:12:50.003051	2023-12-06 19:12:50.002998	844ead8f-966b-4340-9d99-d5fd00f57dc0	2065
2070	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-12-06 19:12:50.011538	2023-12-06 19:12:50.011385	76351785-5115-4e23-bf7d-206eae2c29d6	2070
2079	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	\N	2023-12-06 19:12:50.030959	2023-12-06 19:12:50.030945	2ed2a657-c812-439c-8be1-7e2ee7fb96b4	2079
2081	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-12-06 19:12:50.061611	2023-12-06 19:12:50.060668	38021a2f-bfd3-42eb-b051-8b8942b29b6a	2081
2085	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-12-06 19:12:50.070476	2023-12-06 19:12:50.070453	c1a4f21a-b5e9-4e77-b4fc-71c652957f0e	2085
2087	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-12-06 19:12:50.075299	2023-12-06 19:12:50.075268	c08e8dcc-1498-4180-afb3-55ac8052edf1	2087
2091	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-12-06 19:12:50.081586	2023-12-06 19:12:50.081562	115a2f7d-4935-4598-9993-9ca58057266a	2091
2094	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.085646	2023-12-06 19:12:50.085565	a5f58881-5f0e-494c-a8d1-cd29e7c31642	2094
2097	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	\N	2023-12-06 19:12:50.123596	2023-12-06 19:12:50.122591	d8847fce-770d-454c-8c61-5c8b6e6860e7	2097
2103	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	\N	2023-12-06 19:12:50.132271	2023-12-06 19:12:50.132184	691cbf6a-9efc-44d5-a998-1d4b3fe6bcf5	2103
2108	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.169323	2023-12-06 19:12:50.168261	59010ada-ec9f-4e9b-8a57-1a1d5ed6b00b	2108
2112	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	\N	2023-12-06 19:12:50.206193	2023-12-06 19:12:50.205143	e74c3019-9dcc-4b6d-94b2-dfe418731a4f	2112
2114	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	\N	2023-12-06 19:12:50.216115	2023-12-06 19:12:50.216075	c31b7864-2e8b-46b3-91d2-023b32245591	2114
2115	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	\N	2023-12-06 19:12:50.244257	2023-12-06 19:12:50.243286	813b7d20-18e1-4983-a4fb-5a8020118239	2115
2121	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	\N	2023-12-06 19:12:50.283869	2023-12-06 19:12:50.282927	21a8644f-dad0-49c4-93b1-ae70b6493a6f	2121
2125	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	\N	2023-12-06 19:12:50.293164	2023-12-06 19:12:50.293116	127183eb-5d4b-48ce-b67a-a60330bc3813	2125
2128	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	\N	2023-12-06 19:12:50.300582	2023-12-06 19:12:50.300554	628ed49c-077e-4a56-a8a6-a40e49e84af3	2128
2132	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.308075	2023-12-06 19:12:50.308061	7b44e237-5ed7-498c-8ad3-23bb5575f462	2132
2138	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Sometimes	Sometimes	The student regularly experiences interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:50.35041	2023-12-06 19:12:50.349203	92ec0d79-17f1-445b-83ea-995426d2ceb3	2137
2084	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-12-06 19:12:50.070378	2023-12-06 19:12:50.070352	fd6d3cea-7db0-4e99-9485-ff939adf002e	2084
2088	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-12-06 19:12:50.075355	2023-12-06 19:12:50.07533	96d8b00c-7cef-4e4c-9787-7d9318be133f	2088
2092	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-12-06 19:12:50.081678	2023-12-06 19:12:50.081258	b48ab632-d17a-4164-847e-57613824a7c8	2092
2096	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-12-06 19:12:50.089514	2023-12-06 19:12:50.089461	f237e870-fdba-40bb-97cf-2f86a2491d68	2096
2098	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	\N	2023-12-06 19:12:50.123595	2023-12-06 19:12:50.122617	c9a0c8d5-fac5-4f67-a094-02334a47014d	2098
2104	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	\N	2023-12-06 19:12:50.133356	2023-12-06 19:12:50.13331	369788ea-fd7e-4636-ad6c-24895da2a087	2104
2107	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	\N	2023-12-06 19:12:50.169337	2023-12-06 19:12:50.168228	095efe82-a5b4-4daa-9466-2bbde7fac50d	2107
2111	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	\N	2023-12-06 19:12:50.206207	2023-12-06 19:12:50.205164	9b82ad06-bb09-44b6-880f-61f93ad776a2	2110
2116	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	\N	2023-12-06 19:12:50.244255	2023-12-06 19:12:50.243292	acb4615b-d4e2-459c-bcbf-b271fbc83a03	2116
2122	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:50.283869	2023-12-06 19:12:50.282696	51cd28f5-6ecd-47b7-86b0-df79eefaa14b	2122
2126	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	\N	2023-12-06 19:12:50.293764	2023-12-06 19:12:50.293665	fd543f6a-8fbe-439c-98f7-cd3b8176fa5d	2126
2127	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	\N	2023-12-06 19:12:50.300053	2023-12-06 19:12:50.300037	0f7c6f31-8337-4ef4-806a-211a65bc1b65	2127
2134	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	\N	2023-12-06 19:12:50.309185	2023-12-06 19:12:50.309131	0b3f0a1b-38a5-4072-91e0-fea220a1f13b	2134
2137	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	No	No	The student is unable to complete learning activities due to poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:50.350405	2023-12-06 19:12:50.349217	266db110-a529-4a2d-bf9b-63ef4442e173	2138
2141	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	\N	2023-12-06 19:12:50.359769	2023-12-06 19:12:50.359729	b992f57a-4e1c-4e18-a66e-c7950b551d0c	2141
2145	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	\N	2023-12-06 19:12:50.398259	2023-12-06 19:12:50.397301	f365cf56-0489-4d69-8333-db5ec4775133	2145
2150	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	\N	2023-12-06 19:12:50.409151	2023-12-06 19:12:50.409104	bf670720-ed31-4840-94c6-96f8243dfc7c	2150
2152	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-12-06 19:12:50.438103	2023-12-06 19:12:50.437149	d54bdd1b-6267-45ae-9bfa-cbb8e63dbbc8	2151
2158	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-12-06 19:12:50.448868	2023-12-06 19:12:50.448842	87ac597c-81d2-4307-9632-16575d105067	2158
2159	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	\N	2023-12-06 19:12:50.45476	2023-12-06 19:12:50.454747	0f39df2b-7013-4dd9-8d99-ed6912aabce5	2159
2162	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	\N	2023-12-06 19:12:50.457886	2023-12-06 19:12:50.457863	31ab9c86-c85d-4110-b986-d4ae36b502b0	2162
2163	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	\N	2023-12-06 19:12:50.46329	2023-12-06 19:12:50.462941	8aa85127-223b-4de7-8ad1-01124ab4e1ad	2163
2168	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	\N	2023-12-06 19:12:50.497267	2023-12-06 19:12:50.49634	86425f50-4a36-47cc-80e0-5646707e7d71	2168
2173	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	\N	2023-12-06 19:12:50.536206	2023-12-06 19:12:50.535249	54de6d4b-63d7-4848-8bb3-329270d99c03	2173
2174	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	\N	2023-12-06 19:12:50.591132	2023-12-06 19:12:50.590196	652642e3-ae00-43d8-9d6c-cfc12a805644	2174
2183	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	\N	2023-12-06 19:12:50.639141	2023-12-06 19:12:50.6381	6beeca2d-8890-45ca-9deb-73d24b73e530	2184
2188	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-12-06 19:12:50.676251	2023-12-06 19:12:50.675211	446fd8a8-cf3f-4c7f-ae32-e4cc61f0976b	2188
2192	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-12-06 19:12:50.686243	2023-12-06 19:12:50.686228	717b5c63-4959-4951-b625-16b348b279a6	2192
2195	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	\N	2023-12-06 19:12:50.691566	2023-12-06 19:12:50.691551	2ffe72a5-bc2b-4ad0-a33f-8fe564abbf33	2195
2198	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	\N	2023-12-06 19:12:50.699673	2023-12-06 19:12:50.699596	564e2d46-5f1c-4c54-ab6c-2fbf53a19c7e	2198
2202	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	\N	2023-12-06 19:12:50.737724	2023-12-06 19:12:50.736804	e91cb3d8-776e-4c3b-831a-134f7279003b	2202
2209	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	\N	2023-12-06 19:12:50.748776	2023-12-06 19:12:50.748761	3efaad63-eed1-417f-be36-bdb3483bbde9	2209
2211	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	\N	2023-12-06 19:12:50.75511	2023-12-06 19:12:50.755054	d8d0c7c4-8d9e-4ba0-8777-4bec3cf4f8b8	2211
2095	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-12-06 19:12:50.088231	2023-12-06 19:12:50.088204	8000d0b9-1ead-4595-b6f4-c2fe2957ddde	2095
2100	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	\N	2023-12-06 19:12:50.123714	2023-12-06 19:12:50.122607	61040704-ae27-4175-86c0-fd90ebc5084e	2100
2101	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	\N	2023-12-06 19:12:50.131244	2023-12-06 19:12:50.131207	0f16579b-f5ad-45c4-86da-149b3761b57e	2101
2106	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:50.169339	2023-12-06 19:12:50.168233	38b10bcc-0f77-473b-85d3-83576f82bbdc	2106
2113	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	\N	2023-12-06 19:12:50.20618	2023-12-06 19:12:50.20516	b60a6ddc-c783-4e13-a458-22a80c6998cd	2113
2118	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	\N	2023-12-06 19:12:50.244262	2023-12-06 19:12:50.243318	7b320f6d-730c-4eec-a91e-dcb63fc33957	2118
2120	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	\N	2023-12-06 19:12:50.25434	2023-12-06 19:12:50.254298	e8bcaf56-c1cf-4730-aba8-a0d93efd30ca	2120
2123	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	\N	2023-12-06 19:12:50.291009	2023-12-06 19:12:50.29008	0466e01b-23c8-4781-986c-bf9aa7ec5b2c	2123
2130	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	\N	2023-12-06 19:12:50.301369	2023-12-06 19:12:50.301349	7521478d-509a-4640-b90d-79670521147a	2130
2131	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	\N	2023-12-06 19:12:50.307183	2023-12-06 19:12:50.307157	9e2325bb-47e0-4a83-95fc-c8f04518e677	2131
2136	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	\N	2023-12-06 19:12:50.314084	2023-12-06 19:12:50.313575	180374bd-020a-4a3b-bf33-2bdf8ece6706	2136
2139	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Yes	Yes	The student experiences very few or no interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-12-06 19:12:50.350425	2023-12-06 19:12:50.349187	f973338a-174f-490b-afd2-2b520e8392c7	2139
2144	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	\N	2023-12-06 19:12:50.364997	2023-12-06 19:12:50.36495	454c2eaf-d4e1-41e2-bd14-b09b02e3139e	2144
2147	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:50.398272	2023-12-06 19:12:50.397285	bb836d65-5179-4ec9-97a1-8b152b680452	2147
2149	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	\N	2023-12-06 19:12:50.407282	2023-12-06 19:12:50.407236	fafbae5e-b0b9-44c1-b0ec-a4d564334b3c	2149
2153	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:12:50.438252	2023-12-06 19:12:50.437164	fcb813e2-453f-4094-9a6e-88801e2c814f	2153
2157	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	\N	2023-12-06 19:12:50.448594	2023-12-06 19:12:50.448452	a3dc7005-30a8-4898-9fdc-e395de282ecc	2157
2160	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	\N	2023-12-06 19:12:50.455781	2023-12-06 19:12:50.455766	2f3a481c-aa3a-47ae-982b-db8ac88b5ce2	2160
2169	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	\N	2023-12-06 19:12:50.497212	2023-12-06 19:12:50.496331	6a98aaa4-6c59-4c89-b068-55dbc7ae5506	2169
2172	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	\N	2023-12-06 19:12:50.536443	2023-12-06 19:12:50.535246	6d775ed2-eb35-442b-9770-330309b6a794	2172
2176	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	\N	2023-12-06 19:12:50.593404	2023-12-06 19:12:50.593328	2829c81f-b50e-430e-9de0-05def856b4fb	2176
2179	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	\N	2023-12-06 19:12:50.600561	2023-12-06 19:12:50.600493	adaeac65-b2be-459c-9c6f-29f905aa689d	2179
2182	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	\N	2023-12-06 19:12:50.639126	2023-12-06 19:12:50.63808	229ecdd7-2029-4461-88e4-2cbd9556bf93	2182
2189	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-12-06 19:12:50.676253	2023-12-06 19:12:50.675177	3a436417-5579-4923-b281-663791c4fbdc	2189
2191	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-12-06 19:12:50.685394	2023-12-06 19:12:50.685381	abaa8be3-acc5-4541-b08b-b6f5be5f80b2	2191
2196	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-12-06 19:12:50.691703	2023-12-06 19:12:50.691668	3459fe65-76ed-46c9-87c4-cdc2569cbde3	2196
2197	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-12-06 19:12:50.698088	2023-12-06 19:12:50.69806	d2a14d9c-5923-41bb-8a98-36e86ca66c37	2197
2200	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-12-06 19:12:50.703532	2023-12-06 19:12:50.703495	a68aecde-e6fb-4e27-ae93-a8dac0f27178	2200
2205	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	\N	2023-12-06 19:12:50.738333	2023-12-06 19:12:50.736834	120db3da-967e-4bb3-926b-83c701fc6f26	2205
2206	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	\N	2023-12-06 19:12:50.746471	2023-12-06 19:12:50.746408	e1731cc1-7738-4687-9018-1dc0bfb26935	2206
2214	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	\N	2023-12-06 19:12:50.762252	2023-12-06 19:12:50.762216	5952f4a5-5d51-4dc4-8b7c-138b6e3b2a48	2214
2220	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	\N	2023-12-06 19:12:50.797565	2023-12-06 19:12:50.796545	dce2dc2e-3fe6-40f8-b340-a6bcdac04154	2220
2221	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	\N	2023-12-06 19:12:50.805901	2023-12-06 19:12:50.805829	8f33edc7-7bc0-4e85-9c85-5b7f23719875	2221
2225	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	\N	2023-12-06 19:12:50.81294	2023-12-06 19:12:50.812913	70dd6ec4-8144-4571-b65a-f3fa6cedde6c	2225
2146	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:50.39825	2023-12-06 19:12:50.397307	fe1043f7-5a27-4793-a1e2-56a911c76f26	2146
3178	uri://tpdm.ed-fi.org/GenderDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-12-06 19:28:31.412881	2023-12-06 19:28:31.418593	962715bd-ee91-47a9-8259-99ac6cc8a217	3179
2154	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	\N	2023-12-06 19:12:50.43814	2023-12-06 19:12:50.43714	81afd56a-6296-4f9f-997d-0850ebbdebfc	2154
2155	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-12-06 19:12:50.447496	2023-12-06 19:12:50.44746	415e7ebd-0596-44a0-b6b7-297c1c8d229c	2155
2164	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	\N	2023-12-06 19:12:50.463575	2023-12-06 19:12:50.463513	0609c3e2-8295-46df-ba89-ee54e224c573	2164
2167	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	\N	2023-12-06 19:12:50.497248	2023-12-06 19:12:50.496318	cbb5a6a0-0f42-4dc1-a73c-10105cb33671	2167
2171	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.536213	2023-12-06 19:12:50.535233	e9be69b1-ffc0-4e54-bd6c-d4a85ff6cbc2	2171
2177	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-12-06 19:12:50.591111	2023-12-06 19:12:50.590196	c174737d-9339-4465-9505-384a8b0ae59c	2177
2181	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-12-06 19:12:50.607448	2023-12-06 19:12:50.607247	774b796c-52eb-4355-a5b7-c469780f5b4e	2181
2184	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.639138	2023-12-06 19:12:50.63809	89a5ca15-c7c1-4ce4-9dab-b98df397f81b	2183
2187	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:12:50.676279	2023-12-06 19:12:50.675187	560b8cf6-89c9-4a62-9357-aa2ec31900aa	2187
2193	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	\N	2023-12-06 19:12:50.68757	2023-12-06 19:12:50.687555	9a53e750-b63a-4374-870e-2339dce4865d	2193
2199	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	\N	2023-12-06 19:12:50.699659	2023-12-06 19:12:50.699615	bbdeac3c-36a0-402b-8d54-3a435779f289	2199
2201	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.705054	2023-12-06 19:12:50.705008	df3108da-a199-415e-a028-ade0c3b62416	2201
2203	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	\N	2023-12-06 19:12:50.737718	2023-12-06 19:12:50.736831	3f54c839-ba95-4d88-b1f7-4dbf09984472	2203
2208	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	\N	2023-12-06 19:12:50.747679	2023-12-06 19:12:50.747353	037023a2-f893-4d05-8782-29a1ed1bb5c1	2208
2212	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	\N	2023-12-06 19:12:50.755851	2023-12-06 19:12:50.755762	793a9f10-5cfc-45f8-b7ca-dae0863381c1	2212
2219	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	\N	2023-12-06 19:12:50.797505	2023-12-06 19:12:50.796579	893ef998-424d-4a83-bb97-7cfe47763e72	2219
2222	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	\N	2023-12-06 19:12:50.806457	2023-12-06 19:12:50.80643	0a340caa-4c22-4dad-9faf-69f7f3e95db8	2222
2227	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:50.814349	2023-12-06 19:12:50.8143	21a0b507-ceef-445c-88e8-62c07e4d696b	2227
2231	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	ESL or ELD	ESL or ELD	ESL or ELD	\N	\N	\N	\N	2023-12-06 19:12:50.846155	2023-12-06 19:12:50.845264	6384a044-6451-4623-86d6-97f951570696	2231
2234	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	DEPRECATED: Dual Language	DEPRECATED: Dual Language	\N	\N	\N	\N	2023-12-06 19:12:50.855668	2023-12-06 19:12:50.855644	22a0be78-e086-4b6b-97f5-a5cc54251d92	2234
2237	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	DEPRECATED: Developmental Bilingual	DEPRECATED: Developmental Bilingual	\N	\N	\N	\N	2023-12-06 19:12:50.862134	2023-12-06 19:12:50.86207	9bf88964-4c7b-4aa2-a49b-b72d2376080d	2237
2243	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	DEPRECATED: Content-Based ESL	DEPRECATED: Content-Based ESL	\N	\N	\N	\N	2023-12-06 19:12:50.872588	2023-12-06 19:12:50.872542	6ad922b3-d270-4f55-bd2a-a67f3d9c9ba7	2243
2244	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	DEPRECATED: Pull-Out ESL	DEPRECATED: Pull-Out ESL	\N	\N	\N	\N	2023-12-06 19:12:50.876682	2023-12-06 19:12:50.876665	b91fbcbc-c913-4f12-8a38-e1891e4b6218	2244
2245	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	\N	2023-12-06 19:12:50.909204	2023-12-06 19:12:50.908245	6c9c48e9-b32f-424b-99d8-77f9ded58d14	2245
2249	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	\N	2023-12-06 19:12:50.919286	2023-12-06 19:12:50.919259	bce75f08-3438-4943-aa81-e7a849b5ed8d	2250
2254	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	\N	2023-12-06 19:12:50.925979	2023-12-06 19:12:50.925964	80bcc075-aff5-4b60-b235-0d0fc42499ee	2254
2258	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	\N	2023-12-06 19:12:50.962362	2023-12-06 19:12:50.961501	750d5a13-3144-4b1f-8c0a-11e368700281	2257
2262	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	\N	2023-12-06 19:12:50.972578	2023-12-06 19:12:50.972545	0af852fd-5b4c-45cf-9f6e-c10099c81dbc	2262
2267	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	\N	2023-12-06 19:12:50.979881	2023-12-06 19:12:50.979847	f912784d-9ce2-4f75-a1b0-202ac1f51c5e	2267
2270	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	\N	2023-12-06 19:12:50.990815	2023-12-06 19:12:50.990772	e014014d-77aa-4048-a9ab-88f0db8544ce	2270
2276	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	\N	2023-12-06 19:12:51.030765	2023-12-06 19:12:51.029756	c331a460-0615-445a-b7fe-c968f8b51f7f	2276
2278	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	\N	2023-12-06 19:12:51.039108	2023-12-06 19:12:51.039065	aceeeb71-7a3d-4404-b452-b09e381eb1bd	2278
2354	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	\N	2023-12-06 19:12:51.354495	2023-12-06 19:12:51.354451	1d8db39d-2ee9-42da-af72-77e49da7a093	2354
2566	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	\N	2023-12-06 19:12:52.068743	2023-12-06 19:12:52.06856	546d243f-9e6e-4055-b845-a69fe1fee5b2	2566
2151	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	\N	2023-12-06 19:12:50.438131	2023-12-06 19:12:50.437133	113ebacc-2c21-4ed8-aeac-ef131622c16b	2152
2156	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-12-06 19:12:50.447958	2023-12-06 19:12:50.447945	7c25a70a-2766-4834-9cb4-50507047eca0	2156
2161	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	\N	2023-12-06 19:12:50.456472	2023-12-06 19:12:50.456458	9a4fb3eb-0d35-4d8c-90d1-521470036a18	2161
2165	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	\N	2023-12-06 19:12:50.464048	2023-12-06 19:12:50.464019	d30b92a2-cbd6-4f87-b6b7-be5ab5c962a6	2165
2166	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	\N	2023-12-06 19:12:50.497241	2023-12-06 19:12:50.496309	6a6adbd4-7732-4abf-9c05-b684674b6945	2166
2170	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	\N	2023-12-06 19:12:50.536107	2023-12-06 19:12:50.535226	f58d8b94-280d-42e1-ad7a-5194b9eb690b	2170
2175	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-12-06 19:12:50.591148	2023-12-06 19:12:50.590205	e98e3aee-2bee-4df9-9d60-1a0a88c0fd6c	2175
2178	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	\N	2023-12-06 19:12:50.599936	2023-12-06 19:12:50.599896	be85d25d-addc-412f-9629-b172c6a61435	2178
2180	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.606274	2023-12-06 19:12:50.605791	9e9c26e7-f6d0-4dac-ae25-4e9ee34fdb5c	2180
2185	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	\N	2023-12-06 19:12:50.639124	2023-12-06 19:12:50.638115	08eeb247-abfa-437e-bb04-85df9df9afea	2185
2186	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	\N	2023-12-06 19:12:50.676238	2023-12-06 19:12:50.675204	fcaece6a-7546-4a94-b118-073499304976	2186
2190	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-12-06 19:12:50.685059	2023-12-06 19:12:50.685026	6779c592-8eb1-42b0-8aff-89c598cbbb19	2190
2194	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-12-06 19:12:50.691664	2023-12-06 19:12:50.691641	91e06f78-7798-4d1c-9beb-03d9b5ea0557	2194
2204	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	\N	2023-12-06 19:12:50.737726	2023-12-06 19:12:50.73681	ffc4fee9-0c55-4d70-a07d-57b775af6eb8	2204
2207	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	\N	2023-12-06 19:12:50.746673	2023-12-06 19:12:50.746659	fa40f660-6d31-45ab-99b4-0dd03ac6faa3	2207
2210	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	\N	2023-12-06 19:12:50.754467	2023-12-06 19:12:50.754453	4d40dad4-52c5-40dc-a4e8-bc1c147d13e7	2210
2213	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	\N	2023-12-06 19:12:50.757018	2023-12-06 19:12:50.757002	4f469e7e-92ea-47fb-b343-65bd88bd3871	2213
2216	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.763993	2023-12-06 19:12:50.763964	57d53f71-a67c-48f1-960c-ec4a5565f1b0	2216
2218	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	\N	2023-12-06 19:12:50.797544	2023-12-06 19:12:50.796551	b5d5272c-176e-47a6-9903-90f0722a8d13	2218
2224	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.807163	2023-12-06 19:12:50.807137	b0acb2a9-8cf3-423a-9f58-bf52011403a2	2224
2226	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	\N	2023-12-06 19:12:50.813815	2023-12-06 19:12:50.813802	7ba4da40-731b-4c69-b62d-946cc739379c	2226
2230	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-12-06 19:12:50.846364	2023-12-06 19:12:50.845261	5b42ba85-d957-4b77-b588-0d3d9db8cf93	2230
2232	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.85447	2023-12-06 19:12:50.854438	0b16f6e1-467a-4f6a-a906-1a69a80df69c	2232
2238	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	DEPRECATED: Heritage Language	DEPRECATED: Heritage Language	\N	\N	\N	\N	2023-12-06 19:12:50.863765	2023-12-06 19:12:50.863735	7ab08545-b59a-4c09-bcba-39f839ba3a62	2238
2242	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	DEPRECATED: Specially Designed Academic Instruction Delivered In English	DEPRECATED: SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	\N	2023-12-06 19:12:50.872594	2023-12-06 19:12:50.872496	5fedeb27-a027-43c3-81b4-9d448153b0eb	2242
2248	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	\N	2023-12-06 19:12:50.909646	2023-12-06 19:12:50.908238	659f064a-8090-482b-bf37-3f56ad817c62	2248
2251	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	\N	2023-12-06 19:12:50.919197	2023-12-06 19:12:50.919155	bdaa7a95-07fc-4346-9354-b51632a77694	2251
2253	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	\N	2023-12-06 19:12:50.926075	2023-12-06 19:12:50.926064	6fc0ed42-e022-4184-9e17-59104a649e4c	2253
2257	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	\N	2023-12-06 19:12:50.962354	2023-12-06 19:12:50.961475	a74a417e-977f-4d4b-97ae-33fad12ef8ad	2258
2263	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	\N	2023-12-06 19:12:50.972558	2023-12-06 19:12:50.972523	924b1ef5-d587-4c95-b25b-c6a33668cc35	2263
2272	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	\N	2023-12-06 19:12:50.992447	2023-12-06 19:12:50.992409	3be67124-14cf-4f4f-b454-84d8d5451baa	2272
2273	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	\N	2023-12-06 19:12:50.99731	2023-12-06 19:12:50.997275	435e0f02-3574-4ba1-900e-5b25707408a8	2273
2275	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	\N	2023-12-06 19:12:51.030749	2023-12-06 19:12:51.029789	9597ee28-8b33-476d-8649-e9fe126753c0	2274
2215	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	\N	2023-12-06 19:12:50.763736	2023-12-06 19:12:50.763723	aeaec179-4a97-4bec-9770-eda62087a100	2215
2217	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	\N	2023-12-06 19:12:50.797457	2023-12-06 19:12:50.796565	77f4ab40-118a-4633-906e-0a96946bb7ea	2217
2223	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	\N	2023-12-06 19:12:50.806937	2023-12-06 19:12:50.806871	b6993250-ae30-4c8d-b5b2-7ca889d87770	2223
2229	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	\N	\N	\N	\N	2023-12-06 19:12:50.846136	2023-12-06 19:12:50.845243	ee15d6b1-1537-4fb5-b0fd-447c272ec3be	2229
2233	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual or Early-Exit Bilingual	Transitional Bilingual Education or Early-Exit Bilingual Education	Transitional Bilingual Education or Early-Exit Bilingual Education	\N	\N	\N	\N	2023-12-06 19:12:50.855357	2023-12-06 19:12:50.855318	9374e330-c8b1-4f15-878b-30595d3d6002	2233
2240	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	DEPRECATED: Structured English Immersion	DEPRECATED: Structured English Immersion	\N	\N	\N	\N	2023-12-06 19:12:50.869079	2023-12-06 19:12:50.868683	bc89a32c-06df-4db7-9a5a-24f1abc95d0c	2240
2246	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	\N	2023-12-06 19:12:50.9092	2023-12-06 19:12:50.908266	32ae591a-ab41-4ae1-8fd6-27d0487a085d	2246
2252	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	\N	2023-12-06 19:12:50.919315	2023-12-06 19:12:50.919292	bf256b58-2688-436a-8bc8-81d343b9997f	2252
2255	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	\N	2023-12-06 19:12:50.927197	2023-12-06 19:12:50.92715	48e2f498-1152-4299-9cc3-f8d02ddcfa76	2255
2259	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	\N	2023-12-06 19:12:50.962345	2023-12-06 19:12:50.961484	b3603a8f-9a1b-4bd1-ad5c-74380edc67cd	2259
2264	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	\N	2023-12-06 19:12:50.973	2023-12-06 19:12:50.972979	677ddc53-0313-42fb-af26-05919179f10e	2264
2265	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-12-06 19:12:50.977841	2023-12-06 19:12:50.977758	cff6358b-5335-42a9-a75e-ab47aae51d46	2265
2271	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	\N	2023-12-06 19:12:50.991409	2023-12-06 19:12:50.991393	6af488cf-91ad-439e-b216-00f8f4836433	2271
2277	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with an alternate diploma	Graduated with an alternate diploma	Graduated with an alternate diploma	\N	\N	\N	\N	2023-12-06 19:12:51.030754	2023-12-06 19:12:51.029772	9c3066da-03bf-4651-a5c7-2e966e2dd830	2277
2279	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-12-06 19:12:51.039438	2023-12-06 19:12:51.039412	cd24a8bd-b7fe-4f7a-9337-24a65397f550	2279
2282	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to regular education	Transferred to regular education	Transferred to regular education	\N	\N	\N	\N	2023-12-06 19:12:51.046963	2023-12-06 19:12:51.046923	36e6c4de-ddda-441a-9986-abe29609aacd	2282
2288	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	\N	2023-12-06 19:12:51.085984	2023-12-06 19:12:51.084921	e997761c-acb6-464d-9d67-aafad6ee7d61	2288
2297	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	\N	2023-12-06 19:12:51.101942	2023-12-06 19:12:51.101868	6fd6e028-886d-4ee1-bd8d-c8ebc794b7f8	2297
2299	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	\N	2023-12-06 19:12:51.144136	2023-12-06 19:12:51.143151	c6d0ad7d-be2e-4298-9402-3d1d8e4c5c7f	2299
2305	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-12-06 19:12:51.155088	2023-12-06 19:12:51.155069	37a19754-9d98-4339-8059-09c12d177325	2305
2308	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-12-06 19:12:51.162498	2023-12-06 19:12:51.162462	af450567-958e-45db-9f9b-77a0f586c14e	2308
2311	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-12-06 19:12:51.170552	2023-12-06 19:12:51.170511	1e46ef87-f2ec-46ff-89e5-f638dfbf3439	2311
2318	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-12-06 19:12:51.180115	2023-12-06 19:12:51.180101	6efb1af2-3dd4-4c9c-a9f8-d507df244936	2318
2321	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	\N	2023-12-06 19:12:51.215931	2023-12-06 19:12:51.214743	1db3366c-f82c-4ae5-ab46-6d2e7086f85b	2321
2323	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-12-06 19:12:51.254491	2023-12-06 19:12:51.253635	32a35129-85a2-4737-a674-0dcdd7bf3a89	2323
2332	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	\N	2023-12-06 19:12:51.306159	2023-12-06 19:12:51.304833	92252452-9ca6-4640-b2a4-0f01b2b4fc59	2332
2338	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	\N	2023-12-06 19:12:51.317625	2023-12-06 19:12:51.317612	6730a958-0251-4232-8e0e-0b401e0073dd	2338
2343	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	\N	2023-12-06 19:12:51.330406	2023-12-06 19:12:51.330383	b8087bcf-1549-42da-93bf-22cf6f8be951	2343
2352	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	\N	2023-12-06 19:12:51.347549	2023-12-06 19:12:51.347505	e16333c0-551a-4f6b-8421-540a1dc2788b	2352
2228	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content Classes with integrated ESL support	Content Classes with integrated ESL support	Content Classes with integrated ESL support	\N	\N	\N	\N	2023-12-06 19:12:50.846159	2023-12-06 19:12:50.845237	6a2c5679-2029-44c9-b7c0-e8296a514333	2228
2235	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Newcomer programs	Newcomer programs	Newcomer programs	\N	\N	\N	\N	2023-12-06 19:12:50.856774	2023-12-06 19:12:50.856708	1a67903f-ac81-4f13-ab55-3fb08d9e4a17	2235
2236	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	DEPRECATED: Two-Way Immersion	DEPRECATED: Two-Way Immersion	\N	\N	\N	\N	2023-12-06 19:12:50.861761	2023-12-06 19:12:50.861744	29397c1e-c6a1-4820-836d-96140079172d	2236
2239	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	DEPRECATED: Transitional Bilingual	DEPRECATED: Transitional Bilingual	\N	\N	\N	\N	2023-12-06 19:12:50.865316	2023-12-06 19:12:50.865288	88472c7f-54e6-43be-8b1d-5fbbe3b3aed4	2239
2241	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	\N	\N	\N	\N	2023-12-06 19:12:50.871596	2023-12-06 19:12:50.871577	b2d2770e-9620-40f4-818a-0657bae7d07f	2241
2247	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	\N	2023-12-06 19:12:50.909228	2023-12-06 19:12:50.908261	4e33b041-6e47-4a94-b0ed-e47a91cbf558	2247
2250	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	\N	2023-12-06 19:12:50.919339	2023-12-06 19:12:50.919305	b9a8e946-22f3-4603-8fad-6e59136e5625	2249
2256	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.92735	2023-12-06 19:12:50.927324	e914efb4-cbb3-4113-b92f-6874611fa212	2256
2260	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	\N	2023-12-06 19:12:50.962395	2023-12-06 19:12:50.96147	a2052ba3-0bba-4331-a6a8-089680f08b19	2260
2261	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	\N	2023-12-06 19:12:50.971095	2023-12-06 19:12:50.971079	cbf07f93-350f-4330-960b-437a1a85f3d6	2261
2266	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	\N	2023-12-06 19:12:50.979117	2023-12-06 19:12:50.97909	acbe4245-a8cd-4805-9f67-2d0dcec023f3	2266
2268	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	\N	2023-12-06 19:12:50.983827	2023-12-06 19:12:50.983792	ef8dd136-d697-4af6-9a51-c1e07f0151d1	2268
2269	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:50.990445	2023-12-06 19:12:50.990403	6d1dc986-29a1-4588-859e-a46ab50018a5	2269
2274	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-12-06 19:12:51.030775	2023-12-06 19:12:51.029764	f62ff41f-cefc-4fc2-a91b-f5635bbabc5e	2275
2281	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-12-06 19:12:51.041244	2023-12-06 19:12:51.04123	e38f909f-d702-4981-8442-ec7d1f635273	2281
2285	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	\N	2023-12-06 19:12:51.049241	2023-12-06 19:12:51.049226	e1759e38-debc-44df-be8a-dc629d73e14d	2285
2286	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-12-06 19:12:51.056409	2023-12-06 19:12:51.056361	2edfd81a-7b13-4cd4-b03a-0c3672ee2119	2286
2289	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	\N	2023-12-06 19:12:51.085971	2023-12-06 19:12:51.084912	1fa43d6b-c78a-489c-923b-6e104122e2a3	2289
2292	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	\N	2023-12-06 19:12:51.094672	2023-12-06 19:12:51.09461	353c6c76-732c-4f8f-946b-4765d3c7f710	2292
2294	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.100634	2023-12-06 19:12:51.100577	e0350338-9d11-4bc1-ae08-9790d83c3713	2294
2300	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	\N	2023-12-06 19:12:51.144196	2023-12-06 19:12:51.143174	d2fcb70f-3d91-416b-aeab-0be7a89740a2	2300
2303	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-12-06 19:12:51.153576	2023-12-06 19:12:51.153491	71f98e9c-ca4b-4e9c-a339-8cf1423e32b6	2303
2307	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	\N	2023-12-06 19:12:51.161945	2023-12-06 19:12:51.161467	2ec578f7-af6c-4364-ad26-14c7377f805d	2307
2314	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-12-06 19:12:51.171337	2023-12-06 19:12:51.170495	c340db5e-c27f-4128-8503-6dd012056e0f	2314
2315	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-12-06 19:12:51.176906	2023-12-06 19:12:51.17688	0e426de5-1de5-47a7-aa4b-71a5417b743d	2315
2320	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	\N	2023-12-06 19:12:51.215706	2023-12-06 19:12:51.214735	bef9f9f0-1fca-4350-bbf9-146339ee9e5d	2320
2326	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	\N	2023-12-06 19:12:51.254627	2023-12-06 19:12:51.253649	11c7b905-6846-4a94-84ff-9b0bf4a2f18e	2326
2327	uri://ed-fi.org/SchoolTypeDescriptor	Reportable Program	Reportable Program	Reportable Program	\N	\N	\N	\N	2023-12-06 19:12:51.264134	2023-12-06 19:12:51.264119	7cfe75a0-dac9-4208-8fa5-28cb0955fa20	2327
2328	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	\N	2023-12-06 19:12:51.297702	2023-12-06 19:12:51.296665	6034853b-a3da-460e-bd90-3e249a1528ba	2328
2334	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	\N	2023-12-06 19:12:51.309228	2023-12-06 19:12:51.309146	a538dd5d-56b5-4e6d-9714-1e4cfedd7cd5	2334
2335	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	\N	2023-12-06 19:12:51.316548	2023-12-06 19:12:51.316454	fb1eee6b-a3b0-4204-90ce-e74c2926ae81	2335
2283	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	\N	2023-12-06 19:12:51.047604	2023-12-06 19:12:51.047576	9b67e288-0abb-4e26-a131-72300cb4eb71	2283
2287	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	\N	2023-12-06 19:12:51.085995	2023-12-06 19:12:51.084943	43c4a4c8-b5d0-49ad-a7f7-722085ebdcde	2287
2291	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	\N	2023-12-06 19:12:51.094599	2023-12-06 19:12:51.094563	115f9cc5-d778-41de-b84e-c97ffd3259b4	2291
2296	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	\N	2023-12-06 19:12:51.101222	2023-12-06 19:12:51.101193	d95a6da1-dac3-40ac-b40c-c89ed2c8cfa6	2296
2301	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	\N	2023-12-06 19:12:51.1443	2023-12-06 19:12:51.143164	05fdc3da-d57c-4c52-8ca2-e81faae22391	2301
2306	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-12-06 19:12:51.156023	2023-12-06 19:12:51.156011	86f4544c-f1b3-4a09-8e36-a9ad71ee93c1	2306
2310	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.163695	2023-12-06 19:12:51.163683	87cfabd3-92bd-4fad-94c9-811714e69354	2310
2312	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	\N	2023-12-06 19:12:51.170988	2023-12-06 19:12:51.170964	2ec1b7ef-9e6a-4363-af8a-76b6540202e4	2312
2316	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-12-06 19:12:51.178675	2023-12-06 19:12:51.178636	8320c234-7c61-49d6-8f09-3669185ee863	2316
2322	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	\N	2023-12-06 19:12:51.215713	2023-12-06 19:12:51.214758	a568648d-0fa6-4714-b758-f2a1fab0b67e	2322
2325	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:12:51.255426	2023-12-06 19:12:51.253635	d60d2fbc-840f-4f8d-8d0e-0057502ffc22	2325
2329	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-12-06 19:12:51.297984	2023-12-06 19:12:51.296693	6c93ab4f-59ac-4c48-a5d8-2ef3683f1155	2329
2333	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	\N	2023-12-06 19:12:51.306731	2023-12-06 19:12:51.306718	5b27e048-1220-4048-87e7-66f9939c1ce0	2333
2336	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	\N	2023-12-06 19:12:51.316879	2023-12-06 19:12:51.316845	6ab39a35-215d-4b28-aacb-900e18ac63e2	2336
2341	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	\N	2023-12-06 19:12:51.324738	2023-12-06 19:12:51.324434	5c82e5a2-815f-4852-9142-0b53919e5878	2341
2344	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	\N	2023-12-06 19:12:51.331643	2023-12-06 19:12:51.33163	bd92cc42-bcba-4134-878e-f3c6ff42059c	2344
2355	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	\N	2023-12-06 19:12:51.3546	2023-12-06 19:12:51.354451	ccd7efa6-c454-4a23-9e4a-a499b573c42a	2355
2360	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	\N	2023-12-06 19:12:51.365956	2023-12-06 19:12:51.365929	e0344863-e161-440d-ab1c-966028b373d1	2360
2364	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	\N	2023-12-06 19:12:51.373328	2023-12-06 19:12:51.37327	86b457f2-6016-4b62-b997-7d8bc2f3afe5	2364
2366	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	\N	2023-12-06 19:12:51.376986	2023-12-06 19:12:51.376909	92305358-6a4e-4072-be84-7b285f4e8cb8	2366
2370	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	\N	2023-12-06 19:12:51.385468	2023-12-06 19:12:51.38544	9a9e5ee1-d8b3-43f9-8e70-daecd0eb6749	2370
2372	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	\N	2023-12-06 19:12:51.390804	2023-12-06 19:12:51.390748	066a2b53-4363-48d1-855d-d866939f7cf8	2372
2377	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate/Associate's College	Baccalaureate/Associate's College	Includes four-year colleges (by virtue of having at least one baccalaureate degree program) that conferred more than 50 percent of degrees at the associate's level . Excludes Special Focus Institutions, Tribal Colleges, and institutions that have sufficient master's or doctoral degrees to fall into those categories.	\N	\N	\N	\N	2023-12-06 19:12:51.427085	2023-12-06 19:12:51.426083	86d565d7-223b-48ee-80e0-2ca0393449de	2377
2380	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Four-Year	Special Focus Institution/Four-Year	Four-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.436564	2023-12-06 19:12:51.436484	db24da8b-0cea-493f-a901-1360edbd0018	2380
2389	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	\N	2023-12-06 19:12:51.478011	2023-12-06 19:12:51.476794	7cdf2de5-60f1-4b70-a735-07f4f76860be	2389
2390	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	\N	2023-12-06 19:12:51.486926	2023-12-06 19:12:51.486904	3d8b193b-3636-48d7-836c-5b8fc273b743	2390
2395	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	\N	2023-12-06 19:12:51.494502	2023-12-06 19:12:51.494406	6d4eb3ab-dda6-45bb-a45b-8060005c8a7a	2395
2404	uri://ed-fi.org/SurveyCategoryDescriptor	Applicant	Applicant	Applicant	\N	\N	\N	\N	2023-12-06 19:12:51.537728	2023-12-06 19:12:51.536624	13a47b3c-d2a6-418b-a397-d99fe8215675	2404
2407	uri://ed-fi.org/SurveyCategoryDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:12:51.547119	2023-12-06 19:12:51.547094	cbcf7393-8661-4ba2-b52d-5ff9b55f38ec	2407
2414	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent charter district	Independent charter district	Independent charter district	\N	\N	\N	\N	2023-12-06 19:12:51.585918	2023-12-06 19:12:51.584815	2f9ad451-3cc0-4c07-b430-ba9bb9a55413	2414
2284	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	\N	2023-12-06 19:12:51.04892	2023-12-06 19:12:51.048732	f663a300-e4c8-4028-b2a8-37e8d815ac05	2284
2290	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	\N	2023-12-06 19:12:51.085977	2023-12-06 19:12:51.084952	2d005bc4-94dd-46a5-8fe1-3bc3e1bae4bb	2290
2293	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	\N	2023-12-06 19:12:51.094708	2023-12-06 19:12:51.094684	14bbabe9-f56c-491b-bf54-5e06e12b2b9b	2293
2295	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	\N	2023-12-06 19:12:51.101394	2023-12-06 19:12:51.101351	3de32aaa-2a78-45ce-b66c-7018fe6e394a	2295
2298	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:12:51.138973	2023-12-06 19:12:51.137766	fb3bff9a-f9bc-438a-87f2-77b25ca85116	2298
2302	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	\N	2023-12-06 19:12:51.147263	2023-12-06 19:12:51.147249	42573d39-df51-4034-aa86-ff3b3c2177b3	2302
2304	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	\N	2023-12-06 19:12:51.153819	2023-12-06 19:12:51.153806	3c7be8da-6c9e-4fd9-ba14-2d47dc5bcf70	2304
2309	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	\N	2023-12-06 19:12:51.162909	2023-12-06 19:12:51.162883	73e99108-6b1c-47f1-85f7-21b109ea1c8a	2309
2313	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-12-06 19:12:51.171388	2023-12-06 19:12:51.171374	01208ed6-3d31-4559-a225-202b16ea6755	2313
2317	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-12-06 19:12:51.179213	2023-12-06 19:12:51.179187	24ed5d10-bf0c-47f2-b500-7260731b1d1d	2317
2319	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	\N	2023-12-06 19:12:51.215724	2023-12-06 19:12:51.214762	a8959599-9b7e-4567-96eb-223fc6ed94ed	2319
2324	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	\N	2023-12-06 19:12:51.254535	2023-12-06 19:12:51.253616	6733e777-73b0-4552-815e-6b3c0d358f64	2324
2330	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	\N	2023-12-06 19:12:51.297841	2023-12-06 19:12:51.296674	2c18c3fd-ece2-48e1-b742-17e54be92b2a	2330
2331	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	\N	2023-12-06 19:12:51.306166	2023-12-06 19:12:51.306152	b709d86d-1526-44a2-8171-74f169908363	2331
2337	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	\N	2023-12-06 19:12:51.317079	2023-12-06 19:12:51.317029	7e8e1521-b685-4be4-8641-f63d7b17c58b	2337
2340	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	\N	2023-12-06 19:12:51.324003	2023-12-06 19:12:51.323963	5203761c-6d3d-4355-a9bb-3757e18ebeb7	2340
2342	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	\N	2023-12-06 19:12:51.330572	2023-12-06 19:12:51.330558	369a402b-a10b-4cf1-9265-e57ac7fc9c25	2342
2347	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	\N	2023-12-06 19:12:51.339008	2023-12-06 19:12:51.338982	248dcf62-af66-47f4-bd75-9529e526e23f	2347
2350	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	\N	2023-12-06 19:12:51.345603	2023-12-06 19:12:51.345589	15df376a-73ae-4447-b82c-4a93f8f0884d	2350
2356	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-12-06 19:12:51.355471	2023-12-06 19:12:51.355449	036a3e12-d265-4f0b-8504-c857bd60340e	2356
2357	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	\N	2023-12-06 19:12:51.359232	2023-12-06 19:12:51.359217	2f89c807-fbba-460c-a2e5-1124365add90	2357
2359	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	\N	2023-12-06 19:12:51.364543	2023-12-06 19:12:51.364516	74fea2d5-6d05-4fe9-9c0e-b840adbd3032	2359
2361	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	\N	2023-12-06 19:12:51.367818	2023-12-06 19:12:51.367804	02420e93-4f7f-451c-905e-86f5edf12f07	2361
2365	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	\N	2023-12-06 19:12:51.375687	2023-12-06 19:12:51.375672	3c13e228-9844-456a-9084-cb6d2a29a998	2365
2368	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.380517	2023-12-06 19:12:51.380454	31332b00-bde7-444c-a49b-47f7c08f9420	2368
2371	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	\N	2023-12-06 19:12:51.387262	2023-12-06 19:12:51.387235	3d33a756-fed3-4779-b13a-150d9c151c82	2371
2373	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	\N	2023-12-06 19:12:51.391257	2023-12-06 19:12:51.391108	ebcec64f-e12a-4915-bf6a-aecd13a7280e	2373
2378	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate College	Baccalaureate College	Includes institutions where baccalaureate or higher degrees represent at least 50 percent of all degrees but where fewer than 50 master's degrees or 20 doctoral degrees were awarded during the update year. (Some institutions above the master's degree threshold are also included.) Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.427073	2023-12-06 19:12:51.426046	2d69f659-96cf-4cb7-8a92-c51e8c52d0bd	2378
2382	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Associate's College	Associate's College	Institutions at which the highest level degree awarded is an associate's degree. The institutions are sorted into nine categories based on the intersection of two factors: disciplinary focus (transfer, career and technical or mixed) and dominant student type (traditional, nontraditional or mixed). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.437094	2023-12-06 19:12:51.437067	738a043a-d1d3-4ce7-a0b3-d5dec0a26c46	2382
2339	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	\N	2023-12-06 19:12:51.322719	2023-12-06 19:12:51.322576	9d7ce667-0332-4443-b9d6-8115f9875457	2339
2345	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	\N	2023-12-06 19:12:51.332956	2023-12-06 19:12:51.332937	fa9d214c-f86c-4527-beb2-07918e6d9ef2	2345
2346	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	\N	2023-12-06 19:12:51.337662	2023-12-06 19:12:51.337623	e72be692-6471-432b-a5e6-a718328eaec7	2346
2348	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	\N	2023-12-06 19:12:51.340815	2023-12-06 19:12:51.340786	62c154da-88eb-43c2-9e7e-73ceb5258e99	2348
2349	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-12-06 19:12:51.343983	2023-12-06 19:12:51.343941	eb0bc0a4-a6f6-487b-8b38-50eaced91343	2349
2351	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	\N	2023-12-06 19:12:51.34716	2023-12-06 19:12:51.347132	7ed2791a-5bac-46bc-97b9-eb1e1df40a6b	2351
2353	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	\N	2023-12-06 19:12:51.350304	2023-12-06 19:12:51.350277	3ae8e864-553a-4715-9a7a-f4ce6b86296e	2353
2362	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	\N	2023-12-06 19:12:51.363854	2023-12-06 19:12:51.363771	236ba0e3-8d06-4d78-9935-7a1762ebe719	2362
2363	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	\N	2023-12-06 19:12:51.371872	2023-12-06 19:12:51.371821	651a3003-a111-45b6-a7c4-c217c74d2ae3	2363
2367	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	\N	2023-12-06 19:12:51.379678	2023-12-06 19:12:51.379645	eaa10e68-8c86-4163-8424-14ebbb1e7d4d	2367
2374	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	\N	2023-12-06 19:12:51.392093	2023-12-06 19:12:51.39205	692a6c67-bb1e-4b02-b640-d4964593ec7e	2374
2375	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Doctoral University	Doctoral University	Includes institutions that awarded at least 20 research/scholarship doctoral degrees during the update year and also institutions with below 20 research/scholarship doctoral degrees that awarded at least 30 professional practice doctoral degrees in at least 2 programs. Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.427094	2023-12-06 19:12:51.426063	1e449694-1100-4901-aed0-79247ea6c9ea	2375
2379	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Tribal College	Tribal College	Colleges and universities that are members of the American Indian Higher Education Consortium, as identified in IPEDS Institutional Characteristics.	\N	\N	\N	\N	2023-12-06 19:12:51.436556	2023-12-06 19:12:51.436484	6f274b5f-c54b-4583-bec9-48bffe31753c	2379
2385	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	\N	\N	\N	\N	2023-12-06 19:12:51.444793	2023-12-06 19:12:51.444687	3ddd8869-d2c9-4450-82a9-b342c7a60f68	2385
2387	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	\N	2023-12-06 19:12:51.478004	2023-12-06 19:12:51.476811	75f3ff6c-dea6-46f1-80fa-1a28ec7771e4	2387
2391	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.487017	2023-12-06 19:12:51.486994	83da0e0b-b467-44bd-8403-0e2008152c65	2391
2396	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	\N	2023-12-06 19:12:51.494794	2023-12-06 19:12:51.494751	7bc4a5da-63dc-4f3a-a4ab-562ec6574c13	2396
2398	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	\N	2023-12-06 19:12:51.501735	2023-12-06 19:12:51.501688	60429f72-d78f-41a6-93b3-ee804d18012b	2398
2401	uri://ed-fi.org/SurveyCategoryDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:51.537727	2023-12-06 19:12:51.536597	4a4bc1bd-596c-497c-8c9e-b5513bc73744	2403
2408	uri://ed-fi.org/SurveyCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.548018	2023-12-06 19:12:51.547991	bd48548d-8ab4-4a8f-8ffd-7afbd354a048	2408
2411	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Federal operated agency	Federal operated agency	Federal operated agency	\N	\N	\N	\N	2023-12-06 19:12:51.585914	2023-12-06 19:12:51.584825	73f0cafb-2fea-443d-91a5-3600ccb1bc87	2412
2415	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Regular public school district	Regular public school district	Regular public school district that is not a component of a supervisory union	\N	\N	\N	\N	2023-12-06 19:12:51.594452	2023-12-06 19:12:51.594427	85349c69-2f09-4e55-88c8-0d85c42edf35	2415
2421	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	DEPRECATED: Independent	DEPRECATED: Independent	\N	\N	\N	\N	2023-12-06 19:12:51.603548	2023-12-06 19:12:51.603342	c2653586-0a1f-4b99-890e-fc123e7727e5	2421
2425	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	\N	2023-12-06 19:12:51.656295	2023-12-06 19:12:51.655421	ceb2185f-6d97-4b63-a278-b144b9ff4367	2425
2427	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	\N	2023-12-06 19:12:51.66629	2023-12-06 19:12:51.666262	ce2bb284-2fb9-41d6-8eab-e463a7b14910	2427
2429	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	\N	2023-12-06 19:12:51.668868	2023-12-06 19:12:51.668808	08c18780-17fa-4ac5-9272-21ba7995221c	2429
2431	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	\N	2023-12-06 19:12:51.709272	2023-12-06 19:12:51.708294	a25fbba3-4506-4a1b-8026-d1e71829ff0f	2431
2437	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	\N	2023-12-06 19:12:51.749205	2023-12-06 19:12:51.748359	bf599bbe-a6aa-407b-81d7-d5e026db5d83	2437
2442	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	\N	2023-12-06 19:12:51.788324	2023-12-06 19:12:51.787302	b214e5cf-484f-49bf-b380-23a34d715e6f	2442
2445	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	\N	2023-12-06 19:12:51.798064	2023-12-06 19:12:51.798049	1aa093ea-9afc-45ba-b1ce-1310fbbb1968	2445
2358	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	\N	2023-12-06 19:12:51.361777	2023-12-06 19:12:51.361763	f9328e44-e6c9-4dd1-bf5f-84b01a54aed3	2358
2369	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	\N	2023-12-06 19:12:51.382739	2023-12-06 19:12:51.382701	ef503a4b-4a73-45fd-980c-de9678d8e1a6	2369
2376	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Master's College or University	Master's College or University	Generally includes institutions that awarded at least 50 master's degrees and fewer than 20 doctoral degrees during the update year (with occasional exceptions). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.427075	2023-12-06 19:12:51.426055	4d72d571-bbd0-4fd6-8dd3-cac01972905e	2376
2381	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Two-Year	Special Focus Institution/Two-Year	Two-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-12-06 19:12:51.437294	2023-12-06 19:12:51.43728	569293ab-6e00-4f3d-b212-db693ca015f4	2381
2383	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	\N	\N	\N	\N	2023-12-06 19:12:51.44394	2023-12-06 19:12:51.443909	717c7a3a-1f1d-42e6-a04d-d9c0349c83e8	2383
2388	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	\N	2023-12-06 19:12:51.478001	2023-12-06 19:12:51.476787	0a0a97ee-6b7f-47bd-bb77-569e7fd77a40	2388
2393	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	\N	2023-12-06 19:12:51.487896	2023-12-06 19:12:51.487839	e8fc97c0-521c-4dc0-8779-54c9f651989c	2393
2394	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	\N	2023-12-06 19:12:51.494421	2023-12-06 19:12:51.494374	882e813a-7dd6-4f8a-a774-41d22136f7c0	2394
2400	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	\N	2023-12-06 19:12:51.502656	2023-12-06 19:12:51.502622	ca518f80-7ba7-4605-9cb2-4a394e5d10e3	2400
2403	uri://ed-fi.org/SurveyCategoryDescriptor	Community	Community	Community	\N	\N	\N	\N	2023-12-06 19:12:51.537722	2023-12-06 19:12:51.536604	2f792c1d-deed-47d8-b64e-1dbe42fdd3e0	2402
2406	uri://ed-fi.org/SurveyCategoryDescriptor	Exit	Exit	Exiting staff	\N	\N	\N	\N	2023-12-06 19:12:51.546825	2023-12-06 19:12:51.54679	d440ea41-ea19-43cb-91ab-112ed1339a76	2406
2409	uri://ed-fi.org/SurveyCategoryDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-12-06 19:12:51.554353	2023-12-06 19:12:51.554241	18f1f6f2-2349-49ec-8d7c-d9db7d938f5e	2409
2412	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Other local education agency	Other local education agency	Other local education agency	\N	\N	\N	\N	2023-12-06 19:12:51.585934	2023-12-06 19:12:51.584812	db1db299-5c87-4a60-b061-2f08ba1da8c9	2411
2416	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Service agency	Service agency	Service agency	\N	\N	\N	\N	2023-12-06 19:12:51.595486	2023-12-06 19:12:51.595471	dd571afb-03ea-4de6-a793-bbb0688d87af	2416
2420	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	DEPRECATED: Charter	DEPRECATED: Charter	\N	\N	\N	\N	2023-12-06 19:12:51.603436	2023-12-06 19:12:51.603409	548d47f5-bb1f-427b-8f0a-6a64b0d34133	2420
2423	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	\N	2023-12-06 19:12:51.656326	2023-12-06 19:12:51.65543	0cdc4f1a-0001-4de5-bf23-b91258fd13e0	2423
2434	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	\N	2023-12-06 19:12:51.70927	2023-12-06 19:12:51.708272	b8e9e131-349d-4dd0-a9ac-ffc4f1544ff3	2434
2435	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	\N	2023-12-06 19:12:51.719319	2023-12-06 19:12:51.719258	60e53f6a-64d0-44c7-995d-860d1d19536e	2435
2438	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:12:51.749195	2023-12-06 19:12:51.748364	0849d815-ad88-4c05-a1b6-e738c1214b0e	2438
2443	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.788158	2023-12-06 19:12:51.787322	d09dbaff-f8c7-4461-a460-6ed9aa447191	2443
2444	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community	\N	\N	\N	\N	2023-12-06 19:12:51.797615	2023-12-06 19:12:51.797565	58a00bed-95c8-4832-8ae0-342182029b64	2444
2448	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	\N	2023-12-06 19:12:51.805037	2023-12-06 19:12:51.804965	93383764-c048-4dab-aff8-2e53a21d3e3d	2448
2452	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	\N	2023-12-06 19:12:51.813922	2023-12-06 19:12:51.813883	6d9f2e3b-a5e5-4f50-bd64-54a8fb97c007	2452
2458	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	\N	2023-12-06 19:12:51.825456	2023-12-06 19:12:51.825412	b4303007-7572-43b0-9ff2-d309f23dc26c	2458
2467	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community of the Fort Belknap Reservation of Montana	\N	\N	\N	\N	2023-12-06 19:12:51.841988	2023-12-06 19:12:51.841678	96762209-1737-4ed2-9d43-bb5237d2c171	2467
2468	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	\N	2023-12-06 19:12:51.847491	2023-12-06 19:12:51.847464	a4744613-3ac5-44a7-8d8a-b973525ab265	2468
2473	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:51.855363	2023-12-06 19:12:51.855294	2800b614-3f73-4b90-9e92-b9aa1a613631	2473
2477	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	\N	2023-12-06 19:12:51.860964	2023-12-06 19:12:51.860926	5c5c889a-c87d-4a22-aacb-d9473df8565d	2477
2483	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.874279	2023-12-06 19:12:51.873864	7ab8b6bd-f78a-4e78-b599-2dd4d1645ee8	2483
2487	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	\N	2023-12-06 19:12:51.883407	2023-12-06 19:12:51.883366	7644c266-1937-4c27-8913-cd1d2ea97aba	2487
2384	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	DEPRECATED: Four or more years	DEPRECATED: Four or more years	\N	\N	\N	\N	2023-12-06 19:12:51.444263	2023-12-06 19:12:51.444224	a0c8a0d5-568b-4f29-bcab-566498abffce	2384
2386	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	\N	2023-12-06 19:12:51.477998	2023-12-06 19:12:51.476815	d0fdca4d-c25e-4323-9fd2-a281a62a22b8	2386
2392	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	\N	2023-12-06 19:12:51.486911	2023-12-06 19:12:51.486892	435c33d6-6ad0-4f01-9e14-7f5916b87f72	2392
2397	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	\N	2023-12-06 19:12:51.495697	2023-12-06 19:12:51.495638	d6c653cb-347c-4b7d-a4b0-c6e08389419d	2397
2399	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	\N	2023-12-06 19:12:51.502044	2023-12-06 19:12:51.502029	e8b0a443-bb4a-4f65-8485-685f135e1840	2399
2402	uri://ed-fi.org/SurveyCategoryDescriptor	Administrator	Administrator	Administrator	\N	\N	\N	\N	2023-12-06 19:12:51.537729	2023-12-06 19:12:51.53662	3e6e513b-e7f6-4338-91e5-bfae2ea8d603	2401
2405	uri://ed-fi.org/SurveyCategoryDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-12-06 19:12:51.546483	2023-12-06 19:12:51.546179	d152772f-03ff-4707-856d-01fef4766489	2405
2410	uri://ed-fi.org/SurveyCategoryDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:12:51.555051	2023-12-06 19:12:51.555022	d16c01d3-aac1-47f0-92b1-61b61bdca2ac	2410
2413	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Public school district part of a supervisory union	Public school district part of a supervisory union	Regular public school district that is a component of a supervisory union	\N	\N	\N	\N	2023-12-06 19:12:51.585923	2023-12-06 19:12:51.58483	4562eb6b-ce2f-4676-9457-e56975d6f3ca	2413
2417	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	State operated agency	State operated agency	State operated agency	\N	\N	\N	\N	2023-12-06 19:12:51.595768	2023-12-06 19:12:51.595753	3e6de316-d2be-4129-9f7e-ae1167f16a77	2417
2422	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	\N	2023-12-06 19:12:51.656315	2023-12-06 19:12:51.655446	89a2b086-23b2-4a12-87f5-104d1117c462	2422
2428	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	\N	2023-12-06 19:12:51.668384	2023-12-06 19:12:51.668362	06acf67b-5053-4fd0-85ea-c334aaf28426	2428
2430	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	\N	2023-12-06 19:12:51.674627	2023-12-06 19:12:51.674594	57becdc2-31b5-4ba1-b304-ca3c2c3a4f3b	2430
2433	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	\N	2023-12-06 19:12:51.709262	2023-12-06 19:12:51.708281	7113b6ee-1bf0-4fb2-b27b-00aa05ac5005	2433
2439	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	\N	2023-12-06 19:12:51.749196	2023-12-06 19:12:51.748332	2633b9df-70d8-4328-85e8-6507c6ebac10	2439
2440	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:51.788168	2023-12-06 19:12:51.787317	c3575dd3-468e-4680-9301-8343c91f666f	2440
2446	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	\N	2023-12-06 19:12:51.798316	2023-12-06 19:12:51.798277	6a482fb6-ff98-48c8-92ff-72a541c89261	2446
2450	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:51.807373	2023-12-06 19:12:51.807359	87b6fa12-84fc-49d9-a96d-66ca3182fc20	2450
2453	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	\N	2023-12-06 19:12:51.814086	2023-12-06 19:12:51.814073	185da364-2948-4e45-8c9a-21fcfdda8542	2453
2456	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	\N	2023-12-06 19:12:51.819366	2023-12-06 19:12:51.819354	96503a79-310a-4992-b6f0-1e4c54e0f998	2456
2459	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	\N	2023-12-06 19:12:51.826145	2023-12-06 19:12:51.826132	4e4d2946-14d3-4d6a-8357-b4cbd418bd5e	2459
2463	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	\N	2023-12-06 19:12:51.834578	2023-12-06 19:12:51.834548	cf6aeda7-c270-40fb-ac0e-cbc5b17977a6	2463
2465	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	\N	2023-12-06 19:12:51.838363	2023-12-06 19:12:51.838313	ac2b60e7-8e82-4390-b6c9-85145baee5af	2465
2470	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:51.848608	2023-12-06 19:12:51.847837	2ec519de-946d-4e01-b771-9c19e436a0aa	2470
2474	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of the Lake Superior Tribe of Chippewa Indians of the Bad River Reservation, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:51.856508	2023-12-06 19:12:51.856494	1e476654-e976-483b-86b7-5c865481bd6b	2474
2476	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:51.861752	2023-12-06 19:12:51.861693	57d4bcba-7a0c-46a1-bb7a-be35ab86c57f	2476
2480	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.868345	2023-12-06 19:12:51.86831	677e7763-4e91-465e-8a6d-0383b21fcea8	2480
2482	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.874149	2023-12-06 19:12:51.874123	48b03c7a-5d6d-4004-8966-43b785b5ad11	2482
2499	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	\N	2023-12-06 19:12:51.905282	2023-12-06 19:12:51.905253	ffac20a4-c3e3-4f1e-92b8-46ce683bb4e2	2499
2503	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	\N	2023-12-06 19:12:51.913632	2023-12-06 19:12:51.913597	fbc54622-2ba6-4adc-990c-f6ca04005b05	2503
2418	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Specialized public school district	Specialized public school district	Specialized public school district	\N	\N	\N	\N	2023-12-06 19:12:51.596047	2023-12-06 19:12:51.596035	d93ae510-fd0d-462d-ad80-1578069ca8e0	2418
2419	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Supervisory union	Supervisory union	Supervisory union	\N	\N	\N	\N	2023-12-06 19:12:51.60119	2023-12-06 19:12:51.601144	24addddb-cca7-4010-8c9b-4df2ebcea79c	2419
2424	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	\N	2023-12-06 19:12:51.656476	2023-12-06 19:12:51.655456	d50434c0-5e99-4e99-86db-45224ad5a6a8	2424
2426	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	\N	2023-12-06 19:12:51.666263	2023-12-06 19:12:51.666215	c2687f16-1fff-473c-a549-599d86e35479	2426
2432	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-12-06 19:12:51.709257	2023-12-06 19:12:51.708305	b3490aa2-c049-4194-b076-629e15f96103	2432
2436	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:51.749205	2023-12-06 19:12:51.748349	9b5c76e8-e938-475c-ac4d-737d311c461d	2436
2441	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	\N	2023-12-06 19:12:51.788182	2023-12-06 19:12:51.787295	af7580b4-6be0-48be-a981-fe3757491674	2441
2447	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	\N	2023-12-06 19:12:51.798788	2023-12-06 19:12:51.79876	6a238644-6b68-4e9d-a080-4995eaa6c3bb	2447
2451	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	\N	2023-12-06 19:12:51.807723	2023-12-06 19:12:51.80771	7aa88f3e-429d-4b7b-988e-d701b5aedd34	2451
2455	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	\N	2023-12-06 19:12:51.819048	2023-12-06 19:12:51.819015	90bfb8fe-45b2-464a-a7a2-dacdc74a45d6	2455
2461	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	\N	2023-12-06 19:12:51.829702	2023-12-06 19:12:51.829689	bc1e5acc-a0e2-45e2-92b8-00c6daf64460	2461
2464	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.836869	2023-12-06 19:12:51.836841	ae360a90-a981-446c-875c-3e688f695e84	2464
2469	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	\N	2023-12-06 19:12:51.847826	2023-12-06 19:12:51.847802	ccd8b197-5b10-404a-8ae1-5ba6ee60f395	2469
2472	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	\N	2023-12-06 19:12:51.853827	2023-12-06 19:12:51.853758	cfd40667-4f54-4c03-8717-493614d5bf0b	2472
2479	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.867773	2023-12-06 19:12:51.867745	75e7cbf9-796f-4e6e-aef3-743c1d10a1b5	2479
2485	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.877159	2023-12-06 19:12:51.877114	6882e677-28a3-492c-ac4a-bbdaf6cc4135	2485
2488	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.884154	2023-12-06 19:12:51.884082	3132ca8a-bb16-44ee-a979-ceb9f2ff167f	2488
2491	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	\N	2023-12-06 19:12:51.891031	2023-12-06 19:12:51.890902	473ab1b1-0766-429a-b1c0-4ba251af4428	2491
2493	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	\N	2023-12-06 19:12:51.895204	2023-12-06 19:12:51.895145	383bb121-7373-4fe0-bebf-643fa51f8017	2493
2496	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.897862	2023-12-06 19:12:51.897793	13f6641c-180f-446a-99ad-32776f91113b	2496
2497	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.901577	2023-12-06 19:12:51.901489	f4bd0665-fd72-46ef-8314-6f2e18889edd	2497
2502	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	\N	2023-12-06 19:12:51.910157	2023-12-06 19:12:51.910107	66136d5f-2e25-410a-9fc7-7891ef56a199	2502
2504	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande Band	Capitan Grande Band	Capitan Grande Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.918446	2023-12-06 19:12:51.918259	7775499a-dee0-4fcf-87b9-ed9509a3d0ff	2504
2515	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	\N	2023-12-06 19:12:51.937228	2023-12-06 19:12:51.937203	3d621604-bf5e-4726-883a-1636fa722c9d	2515
2517	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.944411	2023-12-06 19:12:51.944374	02bab3ea-786d-47de-8350-4d836aab2c31	2517
2518	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:51.948941	2023-12-06 19:12:51.94891	bbb47e39-0d48-48f0-a07b-04a15a9619ae	2519
2521	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	\N	2023-12-06 19:12:51.953206	2023-12-06 19:12:51.952162	a86b9491-65ae-499e-ab72-f3143f35f6c3	2521
2527	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	\N	2023-12-06 19:12:51.972954	2023-12-06 19:12:51.972907	a2b624d9-1bb6-482d-a694-d994dfe8661c	2527
2530	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:51.978704	2023-12-06 19:12:51.978666	35193b38-60f7-4bef-817d-2867ce794b30	2530
2533	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	\N	2023-12-06 19:12:51.986738	2023-12-06 19:12:51.986523	4098f9bb-fc8e-46ae-8460-25b792240632	2533
2541	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado River Indian Reservation, Arizona and California	\N	\N	\N	\N	2023-12-06 19:12:52.007562	2023-12-06 19:12:52.00752	e5632478-19b2-48d5-a9d0-f4456149014b	2541
2545	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.014163	2023-12-06 19:12:52.014131	8a970117-67dd-4cf9-8946-5840e70e2fe3	2545
2449	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	\N	2023-12-06 19:12:51.805935	2023-12-06 19:12:51.805824	7c02ccf8-7cd2-4b37-9fbf-816b99680e5b	2449
2454	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	\N	2023-12-06 19:12:51.814373	2023-12-06 19:12:51.814358	55f850c8-cc98-4b84-a172-2efaff45c0a0	2454
2457	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	\N	2023-12-06 19:12:51.82263	2023-12-06 19:12:51.82258	076230ce-a8c6-42d8-9c83-53dd8081ffbc	2457
2460	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.828017	2023-12-06 19:12:51.827992	28d50747-c5ed-4775-8d9a-4572a0f31a8f	2460
2462	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	\N	2023-12-06 19:12:51.831455	2023-12-06 19:12:51.831402	4a8ef3e5-31eb-4bb5-b986-a070e07183fe	2462
2466	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.840565	2023-12-06 19:12:51.840552	65bda727-27ad-4ad2-ab95-d10b7111710d	2466
2471	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:51.850751	2023-12-06 19:12:51.850706	05b6d5d8-9fef-486e-9ac6-45ffa3408d94	2471
2475	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.859409	2023-12-06 19:12:51.859335	f8e06b4e-9b7f-4707-9279-23305c03a103	2475
2478	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	\N	2023-12-06 19:12:51.864531	2023-12-06 19:12:51.864505	39cc7038-c632-4d6b-a53a-b2823c2abef0	2478
2481	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	\N	2023-12-06 19:12:51.869891	2023-12-06 19:12:51.86974	5da1bbfa-9ab6-4974-88fa-02ecf32f0110	2481
2484	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	\N	2023-12-06 19:12:51.876735	2023-12-06 19:12:51.876683	ddcb5f7d-2c8b-4e10-813b-b2a6716cac72	2484
2486	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.881118	2023-12-06 19:12:51.881093	650221ab-1732-407e-a045-0d6adadcc275	2486
2489	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of Montana	\N	\N	\N	\N	2023-12-06 19:12:51.884404	2023-12-06 19:12:51.884391	79852cb2-f4e5-4271-be31-a69b7adc6bad	2489
2490	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	\N	2023-12-06 19:12:51.89045	2023-12-06 19:12:51.890419	66dd1ca5-a9a2-44f5-8076-027e3067268c	2490
2495	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:51.897123	2023-12-06 19:12:51.897088	8386fceb-e83a-4229-bf04-39c127556c41	2495
2498	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Indians	\N	\N	\N	\N	2023-12-06 19:12:51.903731	2023-12-06 19:12:51.903695	fd580d53-6443-4fcf-9a20-1170b3ca7284	2498
2500	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:51.908198	2023-12-06 19:12:51.908059	e0871989-c6f4-4047-afc0-3b3478ac2682	2500
2507	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation (aka Catawba Indian Tribe of South Carolina)	\N	\N	\N	\N	2023-12-06 19:12:51.921612	2023-12-06 19:12:51.921578	790e28bc-2034-44ac-a0eb-69223c1934dc	2507
2509	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	\N	2023-12-06 19:12:51.926444	2023-12-06 19:12:51.925866	41b6419e-3783-4b0c-b870-70b5ae6da15b	2509
2516	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	\N	2023-12-06 19:12:51.941881	2023-12-06 19:12:51.941309	db7f953b-200b-4432-ab5e-cb7713886a12	2516
2519	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.949054	2023-12-06 19:12:51.948991	a6281eea-fc1c-492d-b016-4803b167e659	2518
2522	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	\N	2023-12-06 19:12:51.956288	2023-12-06 19:12:51.956275	efe5fe8e-ec04-471c-895d-b0706926d0f5	2522
2525	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	\N	2023-12-06 19:12:51.962325	2023-12-06 19:12:51.962312	7026ef48-40ab-4ac0-86aa-7e218802f204	2525
2529	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	\N	2023-12-06 19:12:51.976294	2023-12-06 19:12:51.976267	ab424874-dd3c-45aa-8cbf-02aa6059d299	2529
2535	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.99083	2023-12-06 19:12:51.990694	a79fd828-1a3b-4857-9f36-a7830decb6a8	2535
2537	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:51.994498	2023-12-06 19:12:51.994483	0ec3d938-6369-4bed-94da-89ff2cc95fa7	2537
2540	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.001403	2023-12-06 19:12:52.001389	2c57c3aa-6368-47ee-a2f4-b82c81654cac	2540
2542	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.008308	2023-12-06 19:12:52.008267	dc540799-94dd-453e-a6a7-46d430c666d9	2542
2547	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	\N	2023-12-06 19:12:52.019515	2023-12-06 19:12:52.019495	03cad9b6-40e1-43a8-853e-d18b756ab990	2547
2552	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	\N	2023-12-06 19:12:52.030724	2023-12-06 19:12:52.030697	b95e9d1b-eb91-445e-9427-3c8934b757f8	2552
2554	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.042521	2023-12-06 19:12:52.042472	25d9016e-21bc-47f6-9493-d9ba44b33ab0	2554
2561	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	\N	2023-12-06 19:12:52.053429	2023-12-06 19:12:52.05238	93b34a94-d831-4e06-bd10-45f8cf06f14a	2561
2565	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	\N	2023-12-06 19:12:52.062938	2023-12-06 19:12:52.062887	cc27b2e3-5de2-437d-8548-f0177c4fee4a	2565
2492	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.892325	2023-12-06 19:12:51.8923	b71e3153-f323-4e7c-9f88-6a350fed6ad3	2492
2494	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.896785	2023-12-06 19:12:51.89667	8f6d622c-140a-4353-8009-bf73fa165f43	2494
2501	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:51.910028	2023-12-06 19:12:51.910003	3d516e3b-ca75-4d0c-9e85-60921e70c6dd	2501
2505	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:51.920054	2023-12-06 19:12:51.919918	364846e3-1a87-41ca-aa6d-49bc6c8634ce	2505
2508	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	\N	2023-12-06 19:12:51.926286	2023-12-06 19:12:51.926235	08455de3-5209-4b7e-8ccc-b6087a134129	2508
2510	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	\N	2023-12-06 19:12:51.929426	2023-12-06 19:12:51.929401	00621453-794f-4224-9b65-18e402b3bbf7	2510
2513	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	\N	2023-12-06 19:12:51.935227	2023-12-06 19:12:51.935192	4b98d8eb-ea43-4dd0-a5fc-948f71170cce	2513
2520	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indians-Eastern Division	Chickahominy Indians-Eastern Division	Chickahominy Indian Tribe - Eastern Division	\N	\N	\N	\N	2023-12-06 19:12:51.950563	2023-12-06 19:12:51.950286	12963f10-cadc-4e81-ab5c-3d830c2a1177	2520
2523	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.959321	2023-12-06 19:12:51.959241	cc52f54d-9e23-416e-86dc-27feec974263	2523
2526	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	\N	2023-12-06 19:12:51.971441	2023-12-06 19:12:51.971424	0d7dca73-e996-4f32-9682-17aa94a7f1c9	2526
2532	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	\N	2023-12-06 19:12:51.981938	2023-12-06 19:12:51.981901	68f75dda-f66d-439b-be39-1f0aa2bb984f	2532
2536	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	\N	2023-12-06 19:12:51.991405	2023-12-06 19:12:51.991369	c570e73b-f9cb-4367-84b1-1233b70ccccd	2536
2539	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	\N	2023-12-06 19:12:51.997052	2023-12-06 19:12:51.996193	a00c49c7-a017-43e9-b230-6abebcdaf3fc	2539
2544	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.009737	2023-12-06 19:12:52.009724	3354390d-622a-4fe2-bce4-e2d095656054	2544
2548	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of the Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	\N	2023-12-06 19:12:52.022779	2023-12-06 19:12:52.022447	605423dd-3c60-4b9b-b3e1-29dee8e05b2c	2548
2551	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	\N	2023-12-06 19:12:52.029058	2023-12-06 19:12:52.029031	5e0c1019-446c-48f9-adba-90e6c4e0fee2	2551
2555	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	\N	2023-12-06 19:12:52.042808	2023-12-06 19:12:52.042794	9203c8e1-0fd8-44e0-869c-61dd17ca8c2b	2555
2558	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	\N	2023-12-06 19:12:52.049574	2023-12-06 19:12:52.049511	d0e7790b-b918-4194-bf1d-00f2e9e8fdc4	2558
2564	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:52.059168	2023-12-06 19:12:52.0591	0d70e39f-859a-47b5-8d5b-7b3b852560a4	2564
2572	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.081672	2023-12-06 19:12:52.081646	99ce6efb-d13e-4b60-a5af-86a5f321eb5e	2572
2574	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	\N	2023-12-06 19:12:52.087484	2023-12-06 19:12:52.08713	63e68501-80c9-4488-beeb-29b1f8eb3a25	2574
2578	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	\N	2023-12-06 19:12:52.095777	2023-12-06 19:12:52.09549	dcac13d8-d7ed-4890-8129-e437ecf8803b	2578
2585	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.109477	2023-12-06 19:12:52.109443	794cab41-c879-440d-976e-08d6e902bfcf	2585
2592	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.124877	2023-12-06 19:12:52.124658	470b6e69-601a-487b-83c3-a208bdb69043	2592
2595	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.130482	2023-12-06 19:12:52.130261	34e75bb3-bee3-4e58-9195-f093f31a5f04	2595
2598	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.149627	2023-12-06 19:12:52.149598	c7d6c132-a277-4a35-a623-cb60046e5a33	2598
2603	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	\N	2023-12-06 19:12:52.157465	2023-12-06 19:12:52.157439	92c75841-5c89-4742-9b46-950f53e90d24	2603
2609	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	\N	2023-12-06 19:12:52.169427	2023-12-06 19:12:52.169415	7349e256-30ae-48a2-951b-3207c9bb7631	2609
2614	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	\N	2023-12-06 19:12:52.179942	2023-12-06 19:12:52.179913	b8ff38bb-a661-42e6-be0d-87f18031b68d	2614
2615	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.184333	2023-12-06 19:12:52.183753	2ea67ae6-753e-4ff4-b7d1-9662867bd45c	2615
2619	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	\N	2023-12-06 19:12:52.191769	2023-12-06 19:12:52.19174	90473750-d91d-4a7a-83ec-49481de7bec9	2619
2625	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.19926	2023-12-06 19:12:52.198713	4d19fe33-b9fd-4695-ba7d-d1670261c1a7	2625
2628	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	\N	2023-12-06 19:12:52.206684	2023-12-06 19:12:52.206637	b1c4fbeb-87ad-4880-9183-37430ae42b71	2628
2506	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.920814	2023-12-06 19:12:51.920787	391b6c5a-b892-432c-a765-3914a790a527	2506
2511	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	\N	2023-12-06 19:12:51.929588	2023-12-06 19:12:51.929574	4629bedf-540e-4d67-96a1-002c5d7fdb31	2511
2512	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:51.934282	2023-12-06 19:12:51.934254	621a9a2b-b118-4d82-97ef-e0a1c6ee7c81	2512
2514	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:51.937102	2023-12-06 19:12:51.937077	78d48ea6-5afa-491e-9c71-bc3d4dae36d7	2514
2524	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	\N	2023-12-06 19:12:51.960369	2023-12-06 19:12:51.960302	3dc3a1f0-ca4b-4c39-8766-42071710c07e	2524
2528	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	\N	2023-12-06 19:12:51.974344	2023-12-06 19:12:51.974329	4a9c8f79-3fb3-4679-808f-5d4a3e669556	2528
2531	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	\N	2023-12-06 19:12:51.979364	2023-12-06 19:12:51.979229	5df504c1-ace4-4691-8262-1f8aff79fba9	2531
2534	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	\N	2023-12-06 19:12:51.988926	2023-12-06 19:12:51.988209	2df2367a-be43-440a-8ea6-fa0ee2c99b87	2534
2538	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:51.9969	2023-12-06 19:12:51.996866	a41f4137-6977-4e3c-9632-15127643b5b7	2538
2543	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.00878	2023-12-06 19:12:52.008574	a7da9b9b-54bd-4aa6-9b16-f71b15d0c9f9	2543
2549	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	\N	2023-12-06 19:12:52.023129	2023-12-06 19:12:52.022972	ea9a153e-8610-4f13-8b06-182caae3a0c1	2549
2557	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:52.042568	2023-12-06 19:12:52.042551	565d8067-7c76-49f7-9c1d-51e1aba5f4b3	2556
2559	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	\N	2023-12-06 19:12:52.050639	2023-12-06 19:12:52.050573	d752e0ff-e2c0-43a4-8b31-c3b39e45be6a	2559
2563	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	\N	2023-12-06 19:12:52.058974	2023-12-06 19:12:52.058929	75ebc13e-65a3-4c98-b81a-ea9bc0ad2015	2563
2567	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.068757	2023-12-06 19:12:52.068493	29a91294-9895-465d-9354-cdae6f53a8fd	2567
2570	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	\N	2023-12-06 19:12:52.079729	2023-12-06 19:12:52.079699	81a36dcf-3950-4317-957d-f7beebb6a8b3	2570
2575	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.089334	2023-12-06 19:12:52.089218	2a90629a-0ff8-4594-ba2e-cf867cc11378	2575
2579	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.098427	2023-12-06 19:12:52.098086	698033eb-e36c-4e4a-a166-ee92c225d5ca	2579
2584	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	\N	2023-12-06 19:12:52.108668	2023-12-06 19:12:52.108594	5a32ce59-729f-42ca-9da4-237643f22a19	2584
2587	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	\N	2023-12-06 19:12:52.116144	2023-12-06 19:12:52.116101	8da7255f-8c9c-4484-804f-cdd8a5dfa95f	2587
2589	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.119386	2023-12-06 19:12:52.119349	19097c57-667c-475c-b015-c571941d58c9	2589
2599	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	\N	2023-12-06 19:12:52.149851	2023-12-06 19:12:52.149824	743f4adb-3c96-454e-af5b-7af3f11b6322	2599
2601	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	\N	2023-12-06 19:12:52.155588	2023-12-06 19:12:52.155558	1e8e419d-e9fa-471a-a519-758d2ae7d839	2601
2606	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	\N	2023-12-06 19:12:52.163296	2023-12-06 19:12:52.163259	2c2c9be4-2bbf-4c47-ae80-b3f8005ee8f4	2606
2611	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.173798	2023-12-06 19:12:52.173764	fc26916c-803b-424c-a4d5-eab2171095f2	2611
2613	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:52.177796	2023-12-06 19:12:52.177075	8f833f9a-b4eb-44a7-9384-39688f014cf4	2613
2617	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	\N	2023-12-06 19:12:52.185791	2023-12-06 19:12:52.185755	b89fcc52-fd03-492b-8204-aa67accdce82	2617
2620	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.191918	2023-12-06 19:12:52.191893	f18f0bc1-ab79-4e5d-a3cd-a80080fcba22	2620
2624	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	\N	2023-12-06 19:12:52.199261	2023-12-06 19:12:52.199235	e187a40e-25c3-410e-aeea-908a050f4aad	2624
2627	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	\N	2023-12-06 19:12:52.204873	2023-12-06 19:12:52.204823	d8a06606-2a66-4a13-b999-814e71693cec	2627
2629	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.208569	2023-12-06 19:12:52.208543	2378c744-fd3c-46f4-8e38-8f44e5f86cea	2629
2636	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.224222	2023-12-06 19:12:52.224079	961b60ee-d36f-4409-9297-956d660b4727	2636
2641	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.232176	2023-12-06 19:12:52.232163	abd5d0dd-f597-45ae-8a03-95c652f0515e	2641
2546	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish and Kootenai Tribes of the Flathead Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.018239	2023-12-06 19:12:52.018137	6b88a339-8e9f-4738-a9bc-55a55566d6e2	2546
2550	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.024145	2023-12-06 19:12:52.024131	309e64cb-6c58-46d9-af41-3c77a9a5467b	2550
2553	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	\N	2023-12-06 19:12:52.031153	2023-12-06 19:12:52.031133	111b1f10-e61c-48a0-8150-6a3b2150a17d	2553
2556	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.043238	2023-12-06 19:12:52.043211	39463eb6-3af6-4ebe-99c1-64f7fecb7839	2557
2560	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.051382	2023-12-06 19:12:52.051367	80a94164-6d25-495d-9a50-b61e9fcb27e7	2560
2562	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.058234	2023-12-06 19:12:52.058203	3547453e-f64d-45e6-b6e5-73355ea4ac17	2562
2569	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	\N	2023-12-06 19:12:52.073105	2023-12-06 19:12:52.072902	a9f10461-3ddc-4b1b-8675-40d2262070eb	2569
2571	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	\N	2023-12-06 19:12:52.080056	2023-12-06 19:12:52.079993	b6ccf079-b8b3-4417-aec7-77b8598c72c3	2571
2576	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	\N	2023-12-06 19:12:52.09016	2023-12-06 19:12:52.090135	f8cdd1f0-4438-4f38-aa45-53a40e46ca2a	2576
2581	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.100624	2023-12-06 19:12:52.100584	4fc23de2-e7e8-43aa-af1c-e21dd46ee9fb	2581
2583	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	\N	2023-12-06 19:12:52.108213	2023-12-06 19:12:52.108157	eb78870e-7c60-4c2a-a702-c896ad5d7bce	2583
2588	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	\N	2023-12-06 19:12:52.116213	2023-12-06 19:12:52.115844	57e8ec58-cca3-4a93-ab40-4c29a9dd9bba	2588
2590	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	\N	2023-12-06 19:12:52.12216	2023-12-06 19:12:52.122067	0621387f-3c40-4677-85b7-68203eca71cc	2590
2596	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.133451	2023-12-06 19:12:52.133438	73a386b9-108c-4a19-8e8b-7d710e1b035a	2596
2597	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.149609	2023-12-06 19:12:52.149567	d0c3fe39-a9af-4053-a13a-24cad3040b19	2597
2604	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.159628	2023-12-06 19:12:52.159447	b069e78f-7632-405c-9d8e-62af9476c0c4	2604
2608	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa and Chippewa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.169353	2023-12-06 19:12:52.169319	d093f900-1da1-40db-96df-00b149f03564	2608
2612	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village Council	\N	\N	\N	\N	2023-12-06 19:12:52.17735	2023-12-06 19:12:52.177316	27c70174-43fe-4fdb-85ac-a08f1405ac41	2612
2618	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	\N	2023-12-06 19:12:52.185703	2023-12-06 19:12:52.185667	62f19f6a-b06b-4e86-890b-2d9f14a4044b	2618
2621	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.191824	2023-12-06 19:12:52.191633	97db27ae-b94f-433f-b05b-45b32c910d64	2621
2626	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.202061	2023-12-06 19:12:52.202018	db57035c-eec0-43c4-acda-064a2396486d	2626
2631	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:52.211472	2023-12-06 19:12:52.211444	05613003-f41c-4c46-be99-37e2136e4e95	2631
2634	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	\N	2023-12-06 19:12:52.21861	2023-12-06 19:12:52.218597	f36fdaf4-e2af-48e6-8879-01a008087890	2634
2640	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.230852	2023-12-06 19:12:52.230814	a1524d4b-39b4-43e0-b685-246eaadecbd7	2640
2644	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	\N	2023-12-06 19:12:52.23974	2023-12-06 19:12:52.239727	5f61f468-dcec-4780-9d8a-8272c482688e	2644
2650	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.252587	2023-12-06 19:12:52.25256	6504a0da-713a-4790-9b37-8904174ce056	2650
2651	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.259609	2023-12-06 19:12:52.259584	dc3b7118-30cf-42c3-baca-4c302ea6b96e	2651
2658	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.275247	2023-12-06 19:12:52.275232	16c68238-73ec-4f5c-a62f-d5909b860440	2658
2661	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.279327	2023-12-06 19:12:52.279168	be833fc3-fb20-4257-8347-4144a9d9be92	2661
2664	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	\N	2023-12-06 19:12:52.28667	2023-12-06 19:12:52.286634	5f0293ae-72a2-43b6-8c35-20dadc7cf7d0	2664
2666	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe of Indians of the Kickapoo Reservation in Kansas	\N	\N	\N	\N	2023-12-06 19:12:52.292316	2023-12-06 19:12:52.292286	fd5b1f5c-a8a6-4005-9c66-aaebcfd52dc0	2666
2669	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.298019	2023-12-06 19:12:52.297994	a8094eda-fc46-456e-9589-1f9b1bcd047d	2669
2672	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.304021	2023-12-06 19:12:52.303994	1065053a-1edb-41da-8925-0fdeeff778f4	2672
2676	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	\N	2023-12-06 19:12:52.312358	2023-12-06 19:12:52.312132	23fb71a0-c860-4b4d-b570-fa47313629b4	2676
2568	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.072619	2023-12-06 19:12:52.072498	65fd0e29-e09d-4340-8fff-93025ceef4c5	2568
2573	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-12-06 19:12:52.082112	2023-12-06 19:12:52.082087	be445cb9-6f6e-4ee9-9310-1347a5c5c0a1	2573
2577	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	\N	2023-12-06 19:12:52.090883	2023-12-06 19:12:52.090857	80800117-7099-4c53-80b5-d52daa753122	2577
2580	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	\N	2023-12-06 19:12:52.098583	2023-12-06 19:12:52.098571	6a1d6e10-d85d-48c7-b763-5901559059ba	2580
2582	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.105484	2023-12-06 19:12:52.105358	02417b08-8011-4386-b2d9-7d1f14a31ab9	2582
2586	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.113944	2023-12-06 19:12:52.113457	f251637d-8f7e-4823-a2fe-20839c4d4121	2586
2591	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.122562	2023-12-06 19:12:52.122512	5fa1db37-5f3b-45a2-bae4-ce88f247f3cd	2591
2593	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	\N	2023-12-06 19:12:52.127437	2023-12-06 19:12:52.127415	2dd3899e-ba39-4052-b531-de2d21f11e78	2593
2594	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	\N	2023-12-06 19:12:52.130552	2023-12-06 19:12:52.130526	f6a687c8-9bb2-4aff-9098-f46464168e75	2594
2600	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	\N	2023-12-06 19:12:52.149609	2023-12-06 19:12:52.149567	dce00e07-eec3-428a-bb81-6aa232908ccc	2600
2602	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	\N	2023-12-06 19:12:52.155988	2023-12-06 19:12:52.155945	15341f32-5f73-4e16-a112-de38822f0c26	2602
2605	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	\N	2023-12-06 19:12:52.161747	2023-12-06 19:12:52.161721	949d9618-d93f-4e6c-9fdf-0269f58e2fab	2605
2607	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	\N	2023-12-06 19:12:52.166407	2023-12-06 19:12:52.16637	183d5c37-8a60-4a83-8581-20d598cb929c	2607
2610	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	\N	2023-12-06 19:12:52.17062	2023-12-06 19:12:52.170499	000d403e-cfce-438e-b3c0-650c34cf0d43	2610
2616	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.185629	2023-12-06 19:12:52.185601	c51626e8-754a-4b6e-b443-9a41440f7de7	2616
2622	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.193986	2023-12-06 19:12:52.193889	92b3593a-bb64-4042-94ac-9c2df9022600	2622
2623	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:52.197734	2023-12-06 19:12:52.197694	2b3858bd-894a-43c6-9216-f2ec00172272	2623
2630	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	\N	2023-12-06 19:12:52.210464	2023-12-06 19:12:52.2104	974948b3-d9b5-4da9-8239-b8a8c5d8863c	2630
2633	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	\N	2023-12-06 19:12:52.218049	2023-12-06 19:12:52.218022	85d37313-3853-45b7-ba22-87937c738383	2633
2637	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:52.224745	2023-12-06 19:12:52.224729	af518360-2842-45c1-a834-d50f0ae02d3f	2637
2639	uri://ed-fi.org/TribalAffiliationDescriptor	Iqugmiut	Iqugmiut	Iqugmiut Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:52.230393	2023-12-06 19:12:52.230378	a377eaef-a210-4237-8379-22cd6cdcf709	2639
2642	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	\N	2023-12-06 19:12:52.238915	2023-12-06 19:12:52.238842	6c8baaaf-7096-431b-aab4-d21fff67fc2d	2642
2646	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.245743	2023-12-06 19:12:52.245717	9c278099-4a5c-434f-8369-4fd177e9a2b9	2646
2649	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	\N	2023-12-06 19:12:52.252298	2023-12-06 19:12:52.252271	80153474-d8b0-4b70-9f97-8067cec16d70	2649
2654	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	\N	2023-12-06 19:12:52.263589	2023-12-06 19:12:52.263563	816cc055-e4d4-488e-b16e-9ae9bf97794c	2654
2655	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	\N	2023-12-06 19:12:52.267898	2023-12-06 19:12:52.267862	f60dcc77-5606-46b7-88ea-c7b841c669ce	2655
2656	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	\N	2023-12-06 19:12:52.270282	2023-12-06 19:12:52.270247	9029b83b-c7fc-4770-8772-4b2f1167d1d6	2656
2659	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.276932	2023-12-06 19:12:52.276865	dc2cc280-72b8-45dd-af42-82d92aaf5b7a	2659
2663	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.286182	2023-12-06 19:12:52.286134	a6764436-8566-47f4-adc2-97288b80d82f	2663
2667	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	\N	2023-12-06 19:12:52.293043	2023-12-06 19:12:52.293016	f3ddeb87-fd6e-49cd-abef-6aa6e64edbeb	2667
2673	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	\N	2023-12-06 19:12:52.304556	2023-12-06 19:12:52.304519	9163b587-c4b3-4eee-92a7-f212964ecda5	2673
2677	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.312907	2023-12-06 19:12:52.312842	f1d5ffb0-8947-4d86-80f2-59fb87f0335c	2677
2681	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	\N	2023-12-06 19:12:52.323351	2023-12-06 19:12:52.323319	fadde2a6-de3e-458f-9478-10c4a6afa1de	2681
2632	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	\N	2023-12-06 19:12:52.213032	2023-12-06 19:12:52.212694	394c7782-1b87-474d-9a7c-beccda028915	2632
2635	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.218907	2023-12-06 19:12:52.218859	16a8287a-6533-47e2-a8a1-271056af3fe5	2635
2638	uri://ed-fi.org/TribalAffiliationDescriptor	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-12-06 19:12:52.229266	2023-12-06 19:12:52.229252	26cd6264-9621-4b6e-89fb-62fd923027c8	2638
2645	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	\N	2023-12-06 19:12:52.245174	2023-12-06 19:12:52.244495	51623021-f332-4a1e-8f80-605f0ca734da	2645
2648	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	\N	2023-12-06 19:12:52.250778	2023-12-06 19:12:52.250761	a11a3a39-ad23-4f9c-90f9-4911d3daa660	2648
2652	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	\N	2023-12-06 19:12:52.259678	2023-12-06 19:12:52.259166	b12f9642-637c-4e7b-8b9e-8f78ecbde55d	2652
2657	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.271461	2023-12-06 19:12:52.271426	832a2f84-daea-4af4-a28c-799d95730e72	2657
2662	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Community	\N	\N	\N	\N	2023-12-06 19:12:52.284319	2023-12-06 19:12:52.284263	51984ab8-f24d-47ad-aa4d-efae6e0ddf35	2662
2670	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	\N	2023-12-06 19:12:52.300407	2023-12-06 19:12:52.300366	230a7eaf-7aa6-4eb6-9412-81f1623cf39a	2670
2674	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti Kaah	Kluti Kaah	Native Village of Kluti Kaah (aka Copper Center)	\N	\N	\N	\N	2023-12-06 19:12:52.310516	2023-12-06 19:12:52.310481	fe2ece04-f274-449d-9f25-4088f9fb054c	2674
2679	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	\N	2023-12-06 19:12:52.321172	2023-12-06 19:12:52.321152	affa454e-d75e-422c-bb35-43a00e516d37	2679
2682	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	\N	2023-12-06 19:12:52.328443	2023-12-06 19:12:52.328401	c5bc0073-212f-4b3d-a97d-5094479b688a	2682
2687	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.335662	2023-12-06 19:12:52.335637	78fcc019-8af8-439f-9728-ad38022ebbd3	2687
2688	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	\N	2023-12-06 19:12:52.343315	2023-12-06 19:12:52.34329	80679b5f-60ba-49f7-9f05-75b43ec9ac5c	2688
2694	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.352931	2023-12-06 19:12:52.352203	7a521da0-823e-48e8-86f3-c37f0bc3c64d	2694
2697	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	\N	2023-12-06 19:12:52.360721	2023-12-06 19:12:52.360563	d42ec471-1480-45b5-94a0-a8a371c97a77	2697
2699	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.368116	2023-12-06 19:12:52.368087	1a30c5be-7473-4460-bbd5-b30ed10d9e77	2699
2704	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.377542	2023-12-06 19:12:52.377497	fce2e14b-adc8-4666-b336-19b61cea5964	2704
2710	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.389553	2023-12-06 19:12:52.389492	1a88f799-3cde-4fbc-b7cf-a19fe3f0cfb8	2710
2714	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.396277	2023-12-06 19:12:52.396219	4ad7f715-7b9a-4fac-88fb-1c6281be0c19	2714
2717	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.403367	2023-12-06 19:12:52.403302	d0d444b7-d4d8-4d70-97ec-f8e2dc7f8599	2717
2718	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	\N	2023-12-06 19:12:52.408647	2023-12-06 19:12:52.408618	8fb73027-9d0f-4494-a365-cbc4cc62b902	2718
2722	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.415581	2023-12-06 19:12:52.415485	c275ab06-31f6-44da-a057-08ddcd980f0b	2722
2726	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:52.425097	2023-12-06 19:12:52.425043	763ae1d6-c642-478a-8845-5b98dab69d13	2726
2729	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.433035	2023-12-06 19:12:52.432735	eb072cc6-0d31-4488-bde9-771bbd8ec1fb	2729
2732	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	\N	2023-12-06 19:12:52.43999	2023-12-06 19:12:52.439942	1bcf0ae1-2aaa-42bc-bae8-47fd25c10f0f	2732
2736	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	\N	2023-12-06 19:12:52.447113	2023-12-06 19:12:52.44705	8c9a9e3f-db9e-4e75-9390-a22ab96928e0	2736
2738	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	Modoc Nation	\N	\N	\N	\N	2023-12-06 19:12:52.452219	2023-12-06 19:12:52.452193	1b342849-9ab9-402e-b571-d0604a15ac89	2738
2740	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	\N	2023-12-06 19:12:52.456118	2023-12-06 19:12:52.456083	e701387f-d3df-47b3-9eba-100fbdb2f60f	2740
2741	uri://ed-fi.org/TribalAffiliationDescriptor	Monacan Indian Nation	Monacan Indian Nation	Monacan Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.459456	2023-12-06 19:12:52.45929	57f41190-022a-4f5f-8a49-888e73fc69a5	2741
2745	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.466133	2023-12-06 19:12:52.466009	25c50753-7b2d-46f2-a74c-1a0ac9c79909	2745
2748	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	\N	2023-12-06 19:12:52.474322	2023-12-06 19:12:52.474298	fce15ef5-8221-41f7-9671-fc9651079c2c	2748
2751	uri://ed-fi.org/TribalAffiliationDescriptor	Native Village of Atqasuk	Native Village of Atqasuk	Native Village of Atqasuk	\N	\N	\N	\N	2023-12-06 19:12:52.481646	2023-12-06 19:12:52.481576	a38f1040-2831-4d7b-89ca-40bb1a50cab1	2751
2643	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.239248	2023-12-06 19:12:52.23922	5647ea5a-1300-455b-b797-e80b768f8d9f	2643
2647	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	\N	2023-12-06 19:12:52.245797	2023-12-06 19:12:52.24576	4eadf833-560c-4e1e-8f0d-a5816b48382c	2647
2653	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	\N	2023-12-06 19:12:52.260792	2023-12-06 19:12:52.260642	9d11d885-457e-4b7e-ab31-1811510caff5	2653
2660	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	\N	2023-12-06 19:12:52.277916	2023-12-06 19:12:52.277902	33c87588-a2ca-4785-9172-a95339c29f3e	2660
2665	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:52.287218	2023-12-06 19:12:52.287201	7ce92354-eab3-4d59-8415-b2f6a559a106	2665
2668	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	\N	2023-12-06 19:12:52.294682	2023-12-06 19:12:52.294656	2d1e6d93-3caa-4143-8ca7-e6745d190da8	2668
2671	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Indian Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.302365	2023-12-06 19:12:52.302322	6bf4fb2b-62f5-406b-a0a2-84b1336e9586	2671
2675	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:52.312316	2023-12-06 19:12:52.312265	9c504916-154d-4db1-b60e-e0f706a8ce7d	2675
2686	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	\N	2023-12-06 19:12:52.336075	2023-12-06 19:12:52.336062	a0bd5aee-537d-4d5d-8ac2-1fde9296f5b8	2686
2690	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	\N	2023-12-06 19:12:52.343001	2023-12-06 19:12:52.342973	afc635c2-18ec-4824-bf90-b1f8778994cc	2690
2693	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of the Lac du Flambeau Reservation of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.352813	2023-12-06 19:12:52.352562	e8d431aa-7967-4e23-b7ad-965df8890dfe	2693
2698	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.361612	2023-12-06 19:12:52.361554	74d97247-ed93-4c7c-9239-62abc19e39b3	2698
2701	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	\N	2023-12-06 19:12:52.369434	2023-12-06 19:12:52.369314	3cb935fe-3c7a-44e1-a310-2326e893905e	2701
2705	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla and Cupeno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.377666	2023-12-06 19:12:52.377094	d42dbe45-1c0c-42f0-847f-b52dabdfe1fe	2705
2708	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:52.38531	2023-12-06 19:12:52.385284	e9f16d89-81a7-4bb5-a567-0c013cc7b81d	2708
2711	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.393628	2023-12-06 19:12:52.393582	87e320ff-997a-4988-87b9-5969aa2a4ec6	2711
2719	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.409964	2023-12-06 19:12:52.409936	ffed01f1-1785-41f0-94ab-5f7c4068e73a	2719
2721	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.415154	2023-12-06 19:12:52.414948	6a2ea8c8-1834-43fe-8a29-3534f3ce366e	2721
2724	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.422424	2023-12-06 19:12:52.422397	60eacec6-c42d-4557-b1d1-b5b3b5d3710b	2724
2727	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.426592	2023-12-06 19:12:52.426559	b9affa39-ac00-4cee-b1ea-92b31e469ff3	2727
2728	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	\N	2023-12-06 19:12:52.432462	2023-12-06 19:12:52.432397	09b18e91-be69-4e38-af06-758f8cc898f9	2728
2731	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:52.435872	2023-12-06 19:12:52.435844	e33f6759-833e-4f2e-bf3a-c26a3e8fe77a	2731
2733	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.440905	2023-12-06 19:12:52.439694	e0dd77cd-436c-4d60-ae42-089350c7ed21	2733
2737	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	\N	2023-12-06 19:12:52.449713	2023-12-06 19:12:52.449683	95f9b1bf-564b-48dd-a4f4-7d4b92d9abf8	2737
2742	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.461189	2023-12-06 19:12:52.461157	1487df8a-d420-4f23-82a3-1d8921a67ab7	2742
2744	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee (Creek) Nation	Muscogee (Creek) Nation	The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-12-06 19:12:52.466091	2023-12-06 19:12:52.466053	c9705edb-4d0d-4ea3-bcfa-8479d792ccfc	2744
2753	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	\N	2023-12-06 19:12:52.483785	2023-12-06 19:12:52.483373	9ac62c22-250e-42f2-bb5b-bf2915e6d494	2753
2760	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	\N	2023-12-06 19:12:52.499179	2023-12-06 19:12:52.499154	38fdc66a-2727-476a-b535-a9522011f67b	2760
2762	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	\N	2023-12-06 19:12:52.502462	2023-12-06 19:12:52.502387	fb14cce7-786f-4252-ba0b-f0f173abde83	2762
2767	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	\N	2023-12-06 19:12:52.512864	2023-12-06 19:12:52.512839	2d335afb-9e4c-49b8-968b-1de45ddb0c63	2767
2769	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	\N	2023-12-06 19:12:52.516028	2023-12-06 19:12:52.516003	e751b6ba-6e67-41d1-a907-78554ea08de2	2769
2772	uri://ed-fi.org/TribalAffiliationDescriptor	North Fork	North Fork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.522053	2023-12-06 19:12:52.522005	d4067797-3c80-418e-846e-0c4cb7dd39e8	2772
2777	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.532761	2023-12-06 19:12:52.532726	320fe306-22e0-424c-919b-9b6b0cb31d3b	2777
2678	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	\N	2023-12-06 19:12:52.317057	2023-12-06 19:12:52.317043	f8e49570-9958-4df7-88bf-84ba5790141f	2678
2680	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	\N	2023-12-06 19:12:52.321255	2023-12-06 19:12:52.321117	92b3e917-54a7-4bbc-92ab-f33744fa9de0	2680
2683	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	\N	2023-12-06 19:12:52.330167	2023-12-06 19:12:52.330155	3f364646-92db-4aa1-98a7-5a3f36a9c9b0	2683
2685	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	\N	2023-12-06 19:12:52.334865	2023-12-06 19:12:52.334622	99ae8e6e-e9b1-4905-a0c0-5e9676016cd0	2685
2689	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.343593	2023-12-06 19:12:52.343562	2401f3e5-78a6-4bbb-a05f-278b3994bebe	2689
2692	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.351496	2023-12-06 19:12:52.351287	9636cf53-157b-4183-bf76-4f1f4c6e183e	2692
2696	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	\N	2023-12-06 19:12:52.36028	2023-12-06 19:12:52.360019	4394f4c6-086b-4b16-939e-4049ccaa2126	2696
2700	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.36903	2023-12-06 19:12:52.368919	7e8375a9-56eb-4122-85dd-df6e2f02ee5f	2700
2702	uri://ed-fi.org/TribalAffiliationDescriptor	Little Shell Tribe 	Little Shell Tribe 	Little Shell Tribe of Chippewa Indians of Montana	\N	\N	\N	\N	2023-12-06 19:12:52.372759	2023-12-06 19:12:52.372706	da3d2a69-73be-4c6c-9803-38969c1b200e	2702
2706	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.379263	2023-12-06 19:12:52.379238	933e32b1-382c-433e-b8df-7c5b53bc0852	2706
2709	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	\N	2023-12-06 19:12:52.386717	2023-12-06 19:12:52.386705	1c893ef9-5d2b-41b0-a245-b2ca899a7802	2709
2712	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:52.395452	2023-12-06 19:12:52.395416	67fc417d-890d-452b-98eb-0ec359a8a38f	2712
2716	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	\N	2023-12-06 19:12:52.402767	2023-12-06 19:12:52.402681	7b2f5c0c-8bb5-4559-8888-7ea62c5d585e	2716
2723	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.416891	2023-12-06 19:12:52.416878	bb664b11-014c-4a48-b876-613e81e8be94	2723
2725	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	\N	2023-12-06 19:12:52.423377	2023-12-06 19:12:52.423352	80b79c39-3602-4702-baa6-4308c761b030	2725
2730	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero Apache	Mescalero Apache	Mescalero Apache Tribe of the Mescalero Reservation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.43325	2023-12-06 19:12:52.433226	1a5553ad-198b-41a5-8bb0-460369494393	2730
2735	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:52.44341	2023-12-06 19:12:52.443387	4870195f-19a0-440c-b9a1-c5f3157f541e	2735
2747	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	\N	2023-12-06 19:12:52.473805	2023-12-06 19:12:52.473724	e369dbba-73c6-4eaf-8019-fa306fba530b	2747
2750	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	\N	2023-12-06 19:12:52.477226	2023-12-06 19:12:52.477193	491b52fd-d025-48ee-8986-8abe69ced25e	2750
2755	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	\N	2023-12-06 19:12:52.489863	2023-12-06 19:12:52.489823	e80cdaa2-671a-4f96-90b8-f3079402ca83	2755
2758	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	\N	2023-12-06 19:12:52.493564	2023-12-06 19:12:52.493514	e5fd2dbe-63de-4047-af6f-93a573a0d038	2757
2761	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.499886	2023-12-06 19:12:52.499851	d36dc9a1-ca76-4d57-9a60-dbc3fa962f45	2761
2764	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	\N	2023-12-06 19:12:52.505984	2023-12-06 19:12:52.505973	71df02a7-37e1-4c28-856c-ecb2c00ae54b	2764
2765	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	\N	2023-12-06 19:12:52.508123	2023-12-06 19:12:52.508096	b9f11e00-697e-400a-bd87-8fcc430b252b	2765
2768	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	\N	2023-12-06 19:12:52.514785	2023-12-06 19:12:52.514692	083b3136-6ba6-4859-9eff-fb59fe961487	2768
2771	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	\N	2023-12-06 19:12:52.520339	2023-12-06 19:12:52.520072	0770f3e2-decd-46dd-8337-9bc91a5582d0	2771
2776	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of the Shoshone Nation	\N	\N	\N	\N	2023-12-06 19:12:52.531628	2023-12-06 19:12:52.531302	c62bca30-f9c5-47af-9249-921d39ccc626	2776
2780	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	\N	2023-12-06 19:12:52.540486	2023-12-06 19:12:52.540343	872fe32a-63d6-490c-8082-4c87a46a757b	2780
2785	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamiut	Ohogamiut	Village of Ohogamiut	\N	\N	\N	\N	2023-12-06 19:12:52.550328	2023-12-06 19:12:52.550282	89452a4d-8a0a-463c-8129-5de4132c545e	2785
2786	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida	Oneida	Oneida Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.555022	2023-12-06 19:12:52.554997	5968da39-6787-4128-9882-6d7a7127bbd9	2786
2788	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	\N	2023-12-06 19:12:52.558236	2023-12-06 19:12:52.558211	777b3843-8d72-4bb8-80d7-7ad15fe2666d	2788
2791	uri://ed-fi.org/TribalAffiliationDescriptor	Osage Nation	Osage Nation	The Osage Nation	\N	\N	\N	\N	2023-12-06 19:12:52.564769	2023-12-06 19:12:52.564744	22815e66-b367-460f-bf99-07ed502cb017	2791
2800	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.579004	2023-12-06 19:12:52.578976	d22d8981-ba12-426f-bc49-3df72579d6f0	2800
2954	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	\N	2023-12-06 19:12:52.914521	2023-12-06 19:12:52.914508	045cdf4f-4bc7-4635-8cd1-5f05d3c3f2b8	2954
2684	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	\N	2023-12-06 19:12:52.331972	2023-12-06 19:12:52.331921	1c87393c-4c68-4535-84ba-2b965a20e27d	2684
2691	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.351505	2023-12-06 19:12:52.351378	bc487a6a-731e-4797-874f-a9d7fc5a708e	2691
2695	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	\N	2023-12-06 19:12:52.359227	2023-12-06 19:12:52.359121	3297fdef-9942-4992-b678-a8df1757545b	2695
2703	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.374888	2023-12-06 19:12:52.374862	b28233c1-13c5-4a96-abfc-c8c47cf7282d	2703
2707	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	\N	2023-12-06 19:12:52.383531	2023-12-06 19:12:52.383495	5c700697-b76e-407f-9035-26e543b51b6c	2707
2713	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	\N	2023-12-06 19:12:52.396084	2023-12-06 19:12:52.396006	8cb0d36b-b4c0-45f8-8d46-7281d5fd538f	2713
2715	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	\N	2023-12-06 19:12:52.400538	2023-12-06 19:12:52.400504	8fccb629-f4df-474d-8dd6-585818abff8d	2715
2720	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.410484	2023-12-06 19:12:52.410457	feedccd9-2fda-43b0-9aa7-bdd4e6ffaf09	2720
2734	uri://ed-fi.org/TribalAffiliationDescriptor	Mi'kmaq Nation	Mi'kmaq Nation	Mi'kmaq Nation	\N	\N	\N	\N	2023-12-06 19:12:52.443528	2023-12-06 19:12:52.443288	18a6f588-1f6d-4c4a-81f5-ee8b55299961	2734
2739	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.453208	2023-12-06 19:12:52.45318	45b38e9e-1b63-44d9-a905-05a18b5f8750	2739
2743	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.461879	2023-12-06 19:12:52.461573	017fb680-1c5c-4ac1-9860-43854c849ef4	2743
2746	uri://ed-fi.org/TribalAffiliationDescriptor	Nansemond Indian Tribe	Nansemond Indian Tribe	Nansemond Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.468655	2023-12-06 19:12:52.468554	e9c6c276-b208-4231-92e0-85791294273b	2746
2749	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.47422	2023-12-06 19:12:52.474084	5a332d9d-ec3a-47b3-8324-67555d54d9d8	2749
2752	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.483641	2023-12-06 19:12:52.483616	fddfc3f2-1aa0-4550-9198-55b99ad5819e	2752
2757	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	\N	2023-12-06 19:12:52.493549	2023-12-06 19:12:52.493478	78b13095-2293-4c9b-88be-ed4c2325b7ce	2758
2770	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.517289	2023-12-06 19:12:52.517184	7fa6182f-d2f6-4689-8eb9-8bf7f98d3bb1	2770
2773	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-12-06 19:12:52.525821	2023-12-06 19:12:52.525785	d9486d78-e0be-477b-95f9-481eebb266f0	2773
2792	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:52.565116	2023-12-06 19:12:52.565092	200b6855-f3bc-4f18-97f0-5e4e46439d39	2792
2797	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.577073	2023-12-06 19:12:52.57704	f6b4435c-3b6a-4772-bad1-8697ce6f77a0	2797
2802	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.584538	2023-12-06 19:12:52.584511	1b163157-feb7-4cfc-888e-cb3641454955	2802
2804	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Pleasant Point	Passamaquoddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-12-06 19:12:52.589515	2023-12-06 19:12:52.589478	5dbb0f8c-1e7c-4ce5-b1cb-3b0912ee0b01	2804
2808	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.597594	2023-12-06 19:12:52.597559	a23458ec-7c67-4564-b493-4652ed8c78a3	2808
2810	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	\N	2023-12-06 19:12:52.601565	2023-12-06 19:12:52.601513	59e8ccfc-f940-4141-b1f8-6136151d7682	2810
2819	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:52.621216	2023-12-06 19:12:52.621191	3c3ed0e5-f3ba-433e-90e8-67e1fdaab2b6	2819
2821	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:52.626485	2023-12-06 19:12:52.626188	1b5440e2-ffea-4959-8315-798275dd477f	2821
2824	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	\N	2023-12-06 19:12:52.632362	2023-12-06 19:12:52.632349	b18201ea-885c-4c8c-8790-dffbbb77f440	2824
2830	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	\N	2023-12-06 19:12:52.647412	2023-12-06 19:12:52.647344	1e1a5dbc-ae32-4e47-bd26-ac3c17724d6f	2830
2833	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	\N	2023-12-06 19:12:52.650989	2023-12-06 19:12:52.650863	16df86c5-0f5c-4f36-afab-ff840452495a	2833
2838	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.659373	2023-12-06 19:12:52.659325	ef337e68-7653-4c0b-8af2-4861f8abee00	2838
2842	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.667423	2023-12-06 19:12:52.667371	54252fd8-b768-4f67-a099-215a99027c48	2842
2844	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.672384	2023-12-06 19:12:52.672091	0d3c24e5-87e2-4a5e-a03f-0094ba725fe4	2844
2853	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.699042	2023-12-06 19:12:52.699031	1c90179f-c1c1-4918-98ff-b97ac3126532	2853
2892	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	\N	2023-12-06 19:12:52.788519	2023-12-06 19:12:52.78848	58ab04ff-7397-40d9-b4eb-412dcd6bc2c3	2892
2754	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	\N	2023-12-06 19:12:52.484839	2023-12-06 19:12:52.484725	99236135-c959-40a9-9271-fa06d9c31b1c	2754
2756	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	\N	2023-12-06 19:12:52.491531	2023-12-06 19:12:52.491431	1db57654-1ea8-4f5c-bbbe-0cc2c0cfa52c	2756
2759	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	\N	2023-12-06 19:12:52.498454	2023-12-06 19:12:52.498404	f6455ad9-8bd3-432d-a98d-7ef1ab6e3547	2759
2763	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	\N	2023-12-06 19:12:52.50514	2023-12-06 19:12:52.505093	64d72c41-7464-4e10-893f-2e3d753bbb02	2763
2766	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.509836	2023-12-06 19:12:52.509797	8b8b0459-97d9-4f9e-9471-e9d94defc34c	2766
2774	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	\N	2023-12-06 19:12:52.527401	2023-12-06 19:12:52.527324	fd5b563b-9dc6-43ae-bd0f-293d6a493163	2774
2775	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe of the Northern Cheyenne Indian Reservation, Montana	\N	\N	\N	\N	2023-12-06 19:12:52.530878	2023-12-06 19:12:52.530867	317ce90a-db29-4271-8eaf-d1564882a94e	2775
2778	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	\N	2023-12-06 19:12:52.535404	2023-12-06 19:12:52.534502	c579a7dd-63a9-405c-9831-1b41c71fb87f	2778
2779	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	\N	2023-12-06 19:12:52.539718	2023-12-06 19:12:52.539684	8f1746d8-6dc8-4251-97f0-2338cb75b933	2779
2781	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.543355	2023-12-06 19:12:52.54333	1af4bc7e-a49d-4838-99e6-3b3a32e795f9	2781
2783	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.547671	2023-12-06 19:12:52.547623	4a027a66-5f4c-4e4c-955f-f314e885de8f	2783
2787	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:52.555172	2023-12-06 19:12:52.555148	8c58f151-203b-4934-9aac-bb9bf932b185	2787
2789	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	\N	2023-12-06 19:12:52.559502	2023-12-06 19:12:52.559461	15d05e59-baff-480b-b39f-5f9a39571f0f	2789
2794	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.568998	2023-12-06 19:12:52.56896	6f50dc33-88a4-4d3c-9db0-f59fc369707b	2794
2795	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	\N	2023-12-06 19:12:52.572061	2023-12-06 19:12:52.572026	70bf9323-e3c4-42c7-8d13-87be83006006	2795
2798	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	\N	2023-12-06 19:12:52.577825	2023-12-06 19:12:52.577792	9f7c4c6e-dc74-4f17-99bb-c9ef62168cee	2798
2801	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.584322	2023-12-06 19:12:52.584093	06420718-a698-414b-8b0b-da886963afd1	2801
2805	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Tribe	Passamaquoddy Tribe	Passamaquoddy Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.593305	2023-12-06 19:12:52.59328	e605adb4-c277-4bac-a652-a415576cdef6	2805
2807	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.596433	2023-12-06 19:12:52.596406	3064d44c-bfc7-4cec-ae62-4aca9fea15e7	2807
2811	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria Tribe of Oklahoma	Peoria Tribe of Oklahoma	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.60494	2023-12-06 19:12:52.604914	2faaf5b4-0bce-43e6-a4e1-446440f04040	2811
2814	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	\N	2023-12-06 19:12:52.612335	2023-12-06 19:12:52.61229	389bd20d-3e2a-4e31-a0d6-b825bc6182fc	2814
2816	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.615817	2023-12-06 19:12:52.615141	a47d64ef-130d-43b9-987e-de59dd3d141d	2816
2823	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	\N	2023-12-06 19:12:52.630746	2023-12-06 19:12:52.63044	56e65f95-8019-4bc7-853c-9c7f85bf2d7d	2823
2825	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:52.635911	2023-12-06 19:12:52.635859	46a48e1c-4897-4fcd-a365-de92b4c3fbbb	2825
2829	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	\N	2023-12-06 19:12:52.642763	2023-12-06 19:12:52.642737	45e31087-5fc9-45a0-bb9b-c55eeb1c5aff	2829
2834	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band Potawatomi Nation	\N	\N	\N	\N	2023-12-06 19:12:52.653473	2023-12-06 19:12:52.653443	00763dcb-c0e9-45f9-9fcc-69c888a24028	2834
2836	uri://ed-fi.org/TribalAffiliationDescriptor	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	\N	\N	\N	\N	2023-12-06 19:12:52.658365	2023-12-06 19:12:52.657977	ce5eb664-d9d1-4dc6-bbdd-0c37ed947123	2836
2841	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.666572	2023-12-06 19:12:52.666547	dc6a2b63-8f7c-4ede-81fc-04dd58cb34fc	2841
2845	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.673915	2023-12-06 19:12:52.673827	f684df70-d09a-4fd9-ab0c-4f6a76c08612	2845
2846	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.677121	2023-12-06 19:12:52.677107	8ab16443-4373-4a0c-afd0-cd0329208ef1	2846
2851	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.688766	2023-12-06 19:12:52.688741	327d1a3f-eaf3-433f-b31e-f3082a48b7c2	2851
2857	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point	\N	\N	\N	\N	2023-12-06 19:12:52.709194	2023-12-06 19:12:52.708242	a9f87059-2b20-40d9-b67a-c5cbc67f9bcb	2857
2862	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	\N	2023-12-06 19:12:52.719855	2023-12-06 19:12:52.71965	a63111e6-ed83-4d59-bc65-b3839dc3d01d	2862
2782	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	\N	2023-12-06 19:12:52.543943	2023-12-06 19:12:52.543795	098e6e3b-140d-4437-80f7-4e9ce173dfbb	2782
2784	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay Owingeh	Ohkay Owingeh	Ohkay Owingeh, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.549985	2023-12-06 19:12:52.549962	e8a8cd7f-61af-42e1-8cc4-9bcbfa546dec	2784
2790	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	\N	2023-12-06 19:12:52.56183	2023-12-06 19:12:52.561776	92791384-0a3f-46df-9012-05d938601761	2790
2793	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.568872	2023-12-06 19:12:52.568847	16a2c855-3cec-42a2-b7d2-3cda491a053b	2793
2796	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	\N	2023-12-06 19:12:52.572422	2023-12-06 19:12:52.572395	3671834c-ac5f-48ba-ad0c-f4660d31ee86	2796
2799	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	\N	2023-12-06 19:12:52.579347	2023-12-06 19:12:52.579296	f96524de-0909-4a96-b23c-a3996af9f4af	2799
2803	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	\N	2023-12-06 19:12:52.586783	2023-12-06 19:12:52.586688	8edbf33d-e071-4de9-a0ea-c6e1c9fff5c0	2803
2806	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	\N	2023-12-06 19:12:52.59374	2023-12-06 19:12:52.59369	6b077494-59f1-4f11-a58e-54342d04d1f5	2806
2809	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga Band of Indians 	Pechanga Band of Indians 	Pechanga Band of Indians	\N	\N	\N	\N	2023-12-06 19:12:52.600875	2023-12-06 19:12:52.600846	cdc95c37-d0a1-4b18-bb94-2ff2e03f5deb	2809
2812	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	\N	2023-12-06 19:12:52.605081	2023-12-06 19:12:52.60404	19316dc9-24b6-46a6-bc43-decd5e454935	2812
2817	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	\N	2023-12-06 19:12:52.618979	2023-12-06 19:12:52.618842	c7b263cb-66eb-4f4f-a8a9-1c555ee3d234	2817
2822	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creek Indians	\N	\N	\N	\N	2023-12-06 19:12:52.627626	2023-12-06 19:12:52.627524	a1c99b69-cf28-4a0d-aac9-c7869cc5f989	2822
2826	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan and Indiana	\N	\N	\N	\N	2023-12-06 19:12:52.636711	2023-12-06 19:12:52.636628	6b3fa6bd-abac-4944-827e-d18787f1f262	2826
2828	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.640358	2023-12-06 19:12:52.640322	19fb65d3-eaa0-412e-8cac-28ae63d5d54e	2828
2831	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	\N	2023-12-06 19:12:52.647582	2023-12-06 19:12:52.646823	2c5cca0d-20ac-4f03-92eb-7ef2b78cc610	2831
2835	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:52.654246	2023-12-06 19:12:52.65422	a251a1ed-0052-43e0-8fe1-f5e830867f9f	2835
2840	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.665013	2023-12-06 19:12:52.664999	532a499e-d3b8-4fa2-883b-958624ed1cea	2840
2843	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.671592	2023-12-06 19:12:52.671555	7465e5b1-4dbd-4fd1-8e06-1a005be6adb0	2843
2848	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.682988	2023-12-06 19:12:52.682949	4259fdb6-24d2-445b-b002-9835f5c79d4d	2848
2850	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.687108	2023-12-06 19:12:52.687074	0dfe1cc4-6288-4488-b23c-f96cad943725	2850
2852	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.691722	2023-12-06 19:12:52.69168	cb6f384b-25a2-47c5-9506-ccabe87275cc	2852
2856	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw Tribe	Quapaw Tribe	Quapaw Nation	\N	\N	\N	\N	2023-12-06 19:12:52.708994	2023-12-06 19:12:52.708981	fc064c8e-5d7e-4f7b-9ebf-a78db961ede3	2856
2860	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.718738	2023-12-06 19:12:52.718428	852032b3-ba15-4068-9e39-696f311c71bd	2860
2863	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	\N	2023-12-06 19:12:52.724917	2023-12-06 19:12:52.724858	cc9dfe02-15e0-45af-97d8-18d3c447c0f9	2863
2865	uri://ed-fi.org/TribalAffiliationDescriptor	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	\N	\N	\N	\N	2023-12-06 19:12:52.729037	2023-12-06 19:12:52.729009	080591c5-b69c-40f5-ac68-45ad88018c2b	2865
2868	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	\N	2023-12-06 19:12:52.733825	2023-12-06 19:12:52.733304	a452d483-1fea-483a-9c2b-ee90a51940c4	2868
2879	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.759092	2023-12-06 19:12:52.7589	dd8f4d95-23e3-496c-8033-4468cecc8091	2879
2882	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.765237	2023-12-06 19:12:52.76521	c44475ee-e349-4bba-ba3a-00357d85c7f7	2882
2883	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	\N	2023-12-06 19:12:52.768711	2023-12-06 19:12:52.768685	785280e7-e4f9-4253-b86c-572fb065ff2d	2883
2885	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.774115	2023-12-06 19:12:52.774103	3278480f-834f-4e77-92d6-8490359b5070	2885
2888	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.777117	2023-12-06 19:12:52.777098	80a4592d-89ce-4ce0-a39c-7a6ab0850c65	2888
2890	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.782853	2023-12-06 19:12:52.78283	5a65b6fb-f9d8-49d1-a9a8-9603fb4f8ed5	2890
2813	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	\N	2023-12-06 19:12:52.607911	2023-12-06 19:12:52.607866	d2ed66ba-aed7-4c7d-ba98-58725459d11f	2813
2815	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	\N	2023-12-06 19:12:52.61284	2023-12-06 19:12:52.612828	3fb2a3a5-acbe-4cd2-a6c1-26d60dfd24b4	2815
2818	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	\N	2023-12-06 19:12:52.620578	2023-12-06 19:12:52.620542	83be05e3-e113-45b3-b2d2-c037fb5c7d36	2818
2820	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Pitka's Point Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:52.625132	2023-12-06 19:12:52.62504	61de5296-c527-4c8f-93a8-61fe957ed394	2820
2827	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.638331	2023-12-06 19:12:52.638279	516647a2-b8ca-49b5-8d47-bbb9f2786269	2827
2832	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:52.648824	2023-12-06 19:12:52.648795	844acc32-b0c8-4cd9-86ae-56a70d11de5f	2832
2837	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.658098	2023-12-06 19:12:52.658075	969e4267-3a19-40d0-b8d7-b573d1613142	2837
2839	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.664181	2023-12-06 19:12:52.664154	790c8f80-d025-4532-838c-7a52900c9962	2839
2847	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.680296	2023-12-06 19:12:52.680271	32279e8f-4041-4041-be00-f636d59cfcce	2847
2849	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.684987	2023-12-06 19:12:52.684933	0fc8da13-bb8e-4794-b010-6f0cf732e711	2849
2854	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zuni	Pueblo of Zuni	Zuni Tribe of the Zuni Reservation, New Mexico	\N	\N	\N	\N	2023-12-06 19:12:52.698955	2023-12-06 19:12:52.698817	35d8dc6a-9253-4f3c-972d-0555efc7d8d6	2854
2858	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	\N	2023-12-06 19:12:52.709958	2023-12-06 19:12:52.709945	8353dc2a-3034-414e-b094-b8b05363acb0	2858
2859	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.715937	2023-12-06 19:12:52.715868	027f6ce8-9df1-488c-a5a4-548cc1350cd5	2859
2869	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:52.736483	2023-12-06 19:12:52.736458	8c7cd64c-94ce-4fd4-8ad0-b3512f0cbb19	2869
2871	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	\N	2023-12-06 19:12:52.743562	2023-12-06 19:12:52.743535	9338c5cc-4a67-4ccd-a4ff-456e1339064a	2871
2872	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.746232	2023-12-06 19:12:52.746215	7b2daa15-6755-4339-a196-5e77e4d3d826	2872
2876	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria	\N	\N	\N	\N	2023-12-06 19:12:52.752311	2023-12-06 19:12:52.752214	d64f958a-3d9c-4f81-a2a9-6b397ba2915e	2876
2878	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.75918	2023-12-06 19:12:52.759089	da54ca65-7e3f-404c-9657-2c7da2e1b73a	2878
2886	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.776069	2023-12-06 19:12:52.775911	4e5575c6-da7a-4c5e-becd-6989ffde1a81	2886
2896	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	\N	2023-12-06 19:12:52.798927	2023-12-06 19:12:52.798893	89e6faf9-0e45-4e4e-a99f-98529a88d371	2896
2902	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	\N	2023-12-06 19:12:52.809082	2023-12-06 19:12:52.80905	e9671db8-bcce-47ff-a1a8-ddaac85a1573	2902
2905	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	\N	2023-12-06 19:12:52.815106	2023-12-06 19:12:52.815079	97512415-6fd8-4f3b-add1-a9852000a595	2905
2913	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.833135	2023-12-06 19:12:52.832597	27144785-dff1-4371-9d44-6b822c5af86b	2913
2916	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe of the Shoalwater Bay Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.839787	2023-12-06 19:12:52.839738	080faf17-8c4f-4ff2-9df9-2832c0a44a13	2916
2918	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.842208	2023-12-06 19:12:52.842182	569db0fc-1f56-4726-b650-383b5d403821	2918
2924	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.853562	2023-12-06 19:12:52.853486	38f877ec-95f3-4daa-a645-cf39523354f9	2924
2929	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	\N	2023-12-06 19:12:52.866825	2023-12-06 19:12:52.866799	0ff5e781-72db-499b-b98f-96bb6832a0df	2929
2931	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe of the Southern Ute Reservation, Colorado	\N	\N	\N	\N	2023-12-06 19:12:52.870035	2023-12-06 19:12:52.870022	858e72c5-8455-44a6-8e17-651acf757b15	2931
2936	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.881397	2023-12-06 19:12:52.881284	5d909fc1-bb77-4758-a830-fa85741f39d1	2936
2941	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	\N	2023-12-06 19:12:52.892813	2023-12-06 19:12:52.892799	cef8ac96-e362-48b1-8649-a188b87c4859	2941
2945	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	\N	2023-12-06 19:12:52.89968	2023-12-06 19:12:52.899666	a5dd1f0a-1b32-4328-ae2c-ec3b89dbef6b	2945
2949	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	\N	2023-12-06 19:12:52.904983	2023-12-06 19:12:52.904962	ffdaf54f-da25-48dc-81b2-9d30e0eff8d5	2949
2951	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria 	\N	\N	\N	\N	2023-12-06 19:12:52.909574	2023-12-06 19:12:52.909434	828962e4-f5ce-447a-ace1-bb0edf34dc6d	2951
2855	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.70643	2023-12-06 19:12:52.706405	9c027062-d35e-4a33-b8c7-460394142d71	2855
2861	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	\N	2023-12-06 19:12:52.719737	2023-12-06 19:12:52.71958	1061ddc1-fea3-4dc7-bad7-ae04f674715c	2861
2864	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	\N	2023-12-06 19:12:52.725858	2023-12-06 19:12:52.725823	cf403ff2-6daa-48a6-ac14-467dd1f0cefb	2864
2866	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.731097	2023-12-06 19:12:52.731063	31d4b754-420c-4228-b150-5e7955165364	2866
2870	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.740893	2023-12-06 19:12:52.740526	d7785923-0d3b-4b98-9f70-0d1f8abeec9f	2870
2873	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.747154	2023-12-06 19:12:52.747129	16c3d735-2e17-4126-a89c-38ee21577960	2873
2880	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation of Missouri in KS & NE	Sac & Fox Nation of Missouri in Kansas and Nebraska	Sac & Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:52.761697	2023-12-06 19:12:52.76165	c0cad53d-af48-4287-9c6b-1c9534bd6ec5	2880
2884	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatof	Salamatof	Salamatof Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.771807	2023-12-06 19:12:52.771525	7d01284f-3a1d-43ea-8e55-366805363470	2884
2894	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.791003	2023-12-06 19:12:52.790991	07d88482-e23a-4c2e-bcd4-5d1acd731ba9	2894
2899	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.801302	2023-12-06 19:12:52.801275	4f3cf048-4573-45ac-9cf2-c7b3e653b636	2899
2903	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.814248	2023-12-06 19:12:52.813823	57a5d2c3-e7b7-479d-959b-1eb190e0f206	2903
2906	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	\N	2023-12-06 19:12:52.817816	2023-12-06 19:12:52.817782	84ba2312-1bb2-497f-8811-c3d57737eee8	2906
2908	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.824573	2023-12-06 19:12:52.82449	ec424cea-7c3a-410c-a28e-ce51d1052e83	2908
2912	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.832063	2023-12-06 19:12:52.832049	e978bf2d-5db3-4ed3-9533-5e72398d74e9	2912
2920	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	\N	2023-12-06 19:12:52.846715	2023-12-06 19:12:52.8467	25ba814f-0c8e-4604-b905-c8814d065624	2920
2923	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	\N	2023-12-06 19:12:52.851301	2023-12-06 19:12:52.851276	d3e2e79b-b21f-42d5-8432-d178f0cb18c8	2923
2926	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	\N	2023-12-06 19:12:52.859324	2023-12-06 19:12:52.85921	f953400d-e255-45e9-bbb5-2223c6b26a87	2926
2928	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.863229	2023-12-06 19:12:52.863203	82dcd5ca-798d-48b8-8b4c-c7a79152fad5	2928
2935	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.874272	2023-12-06 19:12:52.874259	6b0608b0-96e0-4ba1-bab8-b3c5a8adf588	2935
2939	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.885928	2023-12-06 19:12:52.885915	4c030346-1969-436d-bdd2-6d15e74d1964	2939
2942	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	\N	2023-12-06 19:12:52.892979	2023-12-06 19:12:52.892958	49b86e49-a1e4-4676-a5f7-3d21b40dcab9	2942
2946	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.89982	2023-12-06 19:12:52.899755	199d68ed-d9c9-4ef2-ae01-4d7b074d575b	2946
2950	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	\N	2023-12-06 19:12:52.907104	2023-12-06 19:12:52.907034	45af0a77-0302-42da-a695-fa54ff8a4c9d	2950
2955	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village 	\N	\N	\N	\N	2023-12-06 19:12:52.918062	2023-12-06 19:12:52.918048	01fb7478-3bac-47a3-ad42-83c4c4e7e735	2955
2960	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	\N	2023-12-06 19:12:52.927272	2023-12-06 19:12:52.927238	3b8cf339-46b1-4a08-baa9-7b363ef9fc65	2960
2962	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band, Elko Band, South Fork Band and Wells Band)	\N	\N	\N	\N	2023-12-06 19:12:52.932198	2023-12-06 19:12:52.932185	8e6ff186-a600-4df8-83f8-f05996f2bc23	2962
2968	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	\N	2023-12-06 19:12:52.942375	2023-12-06 19:12:52.942318	955f15b0-a346-4f40-ba06-868160a4a241	2968
2972	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.951984	2023-12-06 19:12:52.951958	5c9209cc-f14c-4984-8b8a-1ed1f6c9d298	2972
2975	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	\N	2023-12-06 19:12:52.956894	2023-12-06 19:12:52.956641	68f7c85a-e896-4e61-ab64-d19a4614df10	2975
2978	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:52.964333	2023-12-06 19:12:52.964309	638092e6-869d-45c9-b10e-fe1666179c53	2978
2980	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	\N	2023-12-06 19:12:52.970313	2023-12-06 19:12:52.970127	011c13db-c5d2-43ca-8ea5-1b502937608b	2980
2984	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	\N	2023-12-06 19:12:52.976826	2023-12-06 19:12:52.976613	ee740721-d6fc-46b9-a7d1-f4f6836144a3	2984
2989	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	\N	2023-12-06 19:12:52.987821	2023-12-06 19:12:52.987785	cdc70f92-6adb-47a1-821c-47de9f773dab	2989
2867	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah Navajo Chapter	Ramah Navajo Chapter	Ramah Navajo Chapter of the Navajo Nation	\N	\N	\N	\N	2023-12-06 19:12:52.733502	2023-12-06 19:12:52.733478	79880779-f999-418c-9411-8b561fa9c0f6	2867
2874	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	\N	2023-12-06 19:12:52.747784	2023-12-06 19:12:52.747197	0e79eccf-b5b7-459c-b358-7ac4a6c4d52b	2874
2875	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.752031	2023-12-06 19:12:52.752004	76a26c1f-c0e5-4cd4-b3ff-1187174e6cf8	2875
2877	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	\N	2023-12-06 19:12:52.756361	2023-12-06 19:12:52.756326	a92e060c-4aa7-4709-83a2-a76bac4e7dae	2877
2881	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	\N	2023-12-06 19:12:52.764264	2023-12-06 19:12:52.764224	f6a12747-65e9-4521-a034-4140f7e54f47	2881
2887	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.776225	2023-12-06 19:12:52.776109	8c609b66-9bb2-4d22-993e-e8e2ecb0a374	2887
2889	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.781789	2023-12-06 19:12:52.781776	0c4a621d-a8e5-4608-be6e-a17d07e78125	2889
2891	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Cahuilla	Santa Rosa of Cahuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.785661	2023-12-06 19:12:52.785636	501936b8-10a4-4387-ad80-e98ca7be45a7	2891
2893	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.789126	2023-12-06 19:12:52.789103	8bbfdd3d-c806-4b67-b094-166436916347	2893
2898	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	\N	2023-12-06 19:12:52.800297	2023-12-06 19:12:52.800284	ff54e03c-1b88-4414-a1f1-767585ed74c2	2898
2901	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	\N	2023-12-06 19:12:52.808351	2023-12-06 19:12:52.808113	705ffdec-4e22-4394-af38-aafbaed96a3a	2901
2907	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga Nation	Seneca-Cayuga Nation	Seneca-Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:52.819595	2023-12-06 19:12:52.819582	603c7f0f-61ab-42f5-81db-c5e8de927715	2907
2910	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee Tribe	Shawnee Tribe	Shawnee Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.826231	2023-12-06 19:12:52.82622	bc31c843-a6f3-4d03-bbb8-e0e1a2855ca8	2910
2915	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	\N	2023-12-06 19:12:52.836367	2023-12-06 19:12:52.83631	c829e4f4-a6db-4b31-890b-5ecf2345081b	2915
2917	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.840393	2023-12-06 19:12:52.84031	f8844834-27a9-4bdc-a3ea-dbb550b272f4	2917
2922	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, South Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.851075	2023-12-06 19:12:52.851048	01362020-c465-43d0-a583-0b7d0f577e19	2922
2927	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	\N	2023-12-06 19:12:52.860841	2023-12-06 19:12:52.860703	3223a0e5-3d50-4a88-9359-c1d6fd79d5b9	2927
2932	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.872038	2023-12-06 19:12:52.872022	e550992b-2778-4e4c-b7dd-082ff273f746	2932
2933	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.876121	2023-12-06 19:12:52.876097	bd4a7268-9e6f-491d-a379-fc0aed9c7910	2933
2937	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	\N	2023-12-06 19:12:52.882612	2023-12-06 19:12:52.882012	fd1194ce-16e2-4aa5-bc6f-61a0e61d8e77	2937
2940	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	\N	2023-12-06 19:12:52.888516	2023-12-06 19:12:52.88845	9e1c8c9a-2f93-46c1-8e4f-baaae11e99dc	2940
2943	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	\N	2023-12-06 19:12:52.894683	2023-12-06 19:12:52.894661	dcacb4d7-8f55-4af1-b2ad-73080ea8997f	2943
2948	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:52.904917	2023-12-06 19:12:52.904891	3d1a2f58-d435-46d7-9c9e-96a9f73e1295	2948
2952	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	\N	2023-12-06 19:12:52.912168	2023-12-06 19:12:52.912026	0eda043a-d9d7-4a34-947a-9f88861eb486	2952
2957	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	\N	2023-12-06 19:12:52.920523	2023-12-06 19:12:52.920509	5624f169-45eb-4340-9128-65ff8086b609	2957
2959	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	\N	2023-12-06 19:12:52.925018	2023-12-06 19:12:52.924995	8790805c-b03b-4bc6-8811-ca6c3e45f2e5	2959
2961	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	\N	2023-12-06 19:12:52.929977	2023-12-06 19:12:52.929952	564a565f-2c39-4a9e-8683-f7ae747f01a4	2961
2965	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, North Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.937838	2023-12-06 19:12:52.937802	b7573075-1589-487d-96e3-bea940a7b155	2965
2969	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-ni'	Tolowa Dee-ni'	Tolowa Dee-ni' Nation	\N	\N	\N	\N	2023-12-06 19:12:52.944875	2023-12-06 19:12:52.94485	20a22dcb-184d-4a15-9688-baa8d2b8ca3d	2969
2971	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.948919	2023-12-06 19:12:52.948882	3bfed52b-4202-4580-843b-f488b4a75a10	2971
2983	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	\N	2023-12-06 19:12:52.972783	2023-12-06 19:12:52.972722	bce0df83-b9d4-4bd7-ac3f-214e4804854f	2983
2985	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	\N	2023-12-06 19:12:52.977164	2023-12-06 19:12:52.977138	2ee36b5e-e978-4551-a259-654c16ed0de0	2985
2999	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	\N	2023-12-06 19:12:53.008377	2023-12-06 19:12:53.008351	0534c4ef-84aa-4cd4-933a-9d1a84c9834f	2999
2895	uri://ed-fi.org/TribalAffiliationDescriptor	Santo Domingo	Santo Domingo	Santo Domingo Pueblo	\N	\N	\N	\N	2023-12-06 19:12:52.793044	2023-12-06 19:12:52.793031	b055c1d2-1799-4257-95df-c3db0d19244a	2895
2897	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	\N	2023-12-06 19:12:52.799356	2023-12-06 19:12:52.799289	33fb3a94-6c9a-4da9-888a-184110215803	2897
2900	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.807882	2023-12-06 19:12:52.807866	c217f102-7314-42c4-8442-a393310c48bf	2900
2904	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole Nation of Oklahoma	Seminole Nation of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.814741	2023-12-06 19:12:52.814692	6b7c33e0-ac4b-4aa4-9d37-fb8642355d89	2904
2909	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	\N	2023-12-06 19:12:52.825196	2023-12-06 19:12:52.825169	9d0a7812-9ef2-440b-a995-55cbbf735639	2909
2911	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	\N	2023-12-06 19:12:52.828096	2023-12-06 19:12:52.828049	6f1fce5c-0c71-4918-9f7d-4e3b9e946b40	2911
2914	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	\N	2023-12-06 19:12:52.835055	2023-12-06 19:12:52.835026	1fd33bee-65a0-493c-9335-45930850c557	2914
2919	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	\N	2023-12-06 19:12:52.844161	2023-12-06 19:12:52.844136	1de8ea6b-e97d-4e31-a6fb-ce252c76738e	2919
2921	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	\N	2023-12-06 19:12:52.850693	2023-12-06 19:12:52.850667	59bf6ce2-492a-4970-b3f3-3cbe334a1c56	2921
2925	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.858464	2023-12-06 19:12:52.858318	da900df9-2f17-4047-b764-7886183bc1ce	2925
2930	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	\N	2023-12-06 19:12:52.869629	2023-12-06 19:12:52.869616	38ed0087-eda7-468e-8c59-700b83d817f8	2930
2934	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.87822	2023-12-06 19:12:52.878208	a346e4b7-f4cd-45b1-80ef-2d635330e15e	2934
2938	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	\N	2023-12-06 19:12:52.885035	2023-12-06 19:12:52.885009	149a2da4-ecbe-4138-acc0-6c24ba78b298	2938
2944	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	\N	2023-12-06 19:12:52.894733	2023-12-06 19:12:52.89461	f6662a06-d6be-46c0-8ef8-39f4c6cfc2d9	2944
2947	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.902034	2023-12-06 19:12:52.902019	2de98030-9069-4e28-bd25-9e418ff44ce7	2947
2953	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	\N	2023-12-06 19:12:52.913546	2023-12-06 19:12:52.9135	0e2fa349-f761-47ef-ba60-12f248334e07	2953
2956	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	\N	2023-12-06 19:12:52.920139	2023-12-06 19:12:52.920114	b3946f69-f68b-440e-a592-ae25d37b1f56	2956
2964	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Timbisha Shoshone Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.935193	2023-12-06 19:12:52.935147	8793c9c1-c360-4679-bcef-3ac453013b02	2964
2966	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes	\N	\N	\N	\N	2023-12-06 19:12:52.940613	2023-12-06 19:12:52.940485	e24c7fbb-4e90-47fd-924f-ff26199ab874	2966
2973	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:52.95396	2023-12-06 19:12:52.953931	e0305522-e320-469c-8c16-aadf2d31a8bf	2973
2976	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	\N	2023-12-06 19:12:52.959453	2023-12-06 19:12:52.959441	dbd2ee03-0e5a-47de-8acf-91b0f8cb0bfc	2976
2979	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	\N	2023-12-06 19:12:52.965746	2023-12-06 19:12:52.965733	9d39a71e-3ab8-4ab3-b016-7c7ee929e030	2979
2981	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	\N	2023-12-06 19:12:52.970277	2023-12-06 19:12:52.970258	c16138c1-4a25-4172-a8df-6851a74866fd	2981
2988	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	\N	2023-12-06 19:12:52.983973	2023-12-06 19:12:52.983826	b2d5c553-a359-4623-b80f-3a3f9e8c5836	2988
2991	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	\N	2023-12-06 19:12:52.9914	2023-12-06 19:12:52.991387	2a6cac11-402a-48e3-99bd-0105a2396342	2991
2995	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	\N	2023-12-06 19:12:53.000869	2023-12-06 19:12:53.000841	7cce8f2b-1171-42b7-84cf-bddd6a4b8515	2995
2998	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government (Arctic Village and Village of Venetie)	\N	\N	\N	\N	2023-12-06 19:12:53.008163	2023-12-06 19:12:53.008125	51f9c4da-5902-4435-aa87-51129063fc8d	2998
3007	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	\N	2023-12-06 19:12:53.027802	2023-12-06 19:12:53.027776	690f67b3-de88-4ea6-b8bc-9be87110b78d	3007
3008	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	\N	2023-12-06 19:12:53.031741	2023-12-06 19:12:53.031729	c720ee33-886e-4dc9-8319-f5fa7bde2c49	3008
3012	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	\N	2023-12-06 19:12:53.039843	2023-12-06 19:12:53.039829	234bdd4e-69f2-461b-88f4-ef680fe8e146	3012
3014	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	\N	2023-12-06 19:12:53.044288	2023-12-06 19:12:53.044264	5e70a086-88ce-4fa2-b5f3-c7b9a2783826	3014
3019	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	\N	2023-12-06 19:12:53.051944	2023-12-06 19:12:53.051924	3705d5a3-f453-4926-9548-36035cdd1a17	3019
3128	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-12-06 19:12:53.43716	2023-12-06 19:12:53.436889	57823989-0f42-448f-a17e-3ff147313c31	3128
2958	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.92164	2023-12-06 19:12:52.921577	293ef07e-683e-4760-8fd4-c5288d6555b3	2958
2963	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:52.934446	2023-12-06 19:12:52.934421	b35ea245-b660-4e6d-97a2-e2a5aabdc304	2963
2967	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	\N	2023-12-06 19:12:52.941733	2023-12-06 19:12:52.941719	41858b41-a31b-4142-a426-54d0cf2ca375	2967
2970	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	\N	2023-12-06 19:12:52.946536	2023-12-06 19:12:52.946523	978169ea-c3f2-4fff-a423-edd7425ac84e	2970
2974	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:52.954581	2023-12-06 19:12:52.954554	1171bc72-9b7d-44b1-af95-998134b810e0	2974
2977	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.960735	2023-12-06 19:12:52.960681	c825413b-2d96-4900-9856-f942b777c963	2977
2982	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	\N	2023-12-06 19:12:52.970939	2023-12-06 19:12:52.970834	9da2770a-fe19-4139-bfe9-1eb94414f20d	2982
2987	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	\N	2023-12-06 19:12:52.981865	2023-12-06 19:12:52.981822	d64b042a-c79a-48a5-8b23-9021aba90c58	2987
2990	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	\N	2023-12-06 19:12:52.989043	2023-12-06 19:12:52.988963	ca69875d-6177-4da9-ad57-dc4ca095dc0a	2990
2993	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Mattaponi Tribe	Upper Mattaponi Tribe	Upper Mattaponi Tribe	\N	\N	\N	\N	2023-12-06 19:12:52.996067	2023-12-06 19:12:52.996046	642f22bb-652c-434b-94f5-e60a0099aea2	2993
2996	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	\N	2023-12-06 19:12:53.002325	2023-12-06 19:12:53.0023	2ec3d5b1-3ae0-4277-80c5-005cda4456d0	2996
3000	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Baron Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:53.012406	2023-12-06 19:12:53.012379	361b7154-7f03-46ac-a20f-e85be98c02c5	3000
3002	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:53.01745	2023-12-06 19:12:53.017435	e200ac9f-5d78-4b1b-9027-135ef2ea8ed9	3002
3005	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	\N	2023-12-06 19:12:53.026086	2023-12-06 19:12:53.026061	7d105fac-c27e-4e25-9008-ec0800903c76	3005
3009	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes (Wichita, Keechi, Waco & Tawakonie), Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.034057	2023-12-06 19:12:53.034	d3960a70-c6a9-467c-99a2-dc3e5d34ba9e	3009
3015	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	\N	2023-12-06 19:12:53.043719	2023-12-06 19:12:53.043706	0a9a69c9-3eda-43f5-9ee3-696f755824bb	3015
3018	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.051277	2023-12-06 19:12:53.050949	6cfce9c3-c17a-4bc1-8a25-3f794302e09e	3018
3023	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	\N	2023-12-06 19:12:53.05973	2023-12-06 19:12:53.059673	23c7f4a5-7804-4b1e-932e-cf296b15243e	3023
3027	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	DEPRECATED: Aroostok	DEPRECATED: Aroostook Band of Micmacs	\N	\N	\N	\N	2023-12-06 19:12:53.070278	2023-12-06 19:12:53.070209	d3f67623-164c-4dbc-af79-d436292a0d47	3027
3036	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	DEPRECATED: Muscogee	DEPRECATED: The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-12-06 19:12:53.084323	2023-12-06 19:12:53.084288	1db919f6-1802-4e43-8e12-5a5b634095f0	3036
3038	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	DEPRECATED: Northfork	DEPRECATED: Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-12-06 19:12:53.08871	2023-12-06 19:12:53.088278	d916138c-5002-4b94-b5b5-08b3e6781922	3038
3042	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	DEPRECATED: Passamaquaddy Pleasant Point	DEPRECATED: Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-12-06 19:12:53.097756	2023-12-06 19:12:53.097725	8b326f37-94f8-4acc-b0ce-4436813327da	3042
3045	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	DEPRECATED: Peoria	DEPRECATED: Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.102283	2023-12-06 19:12:53.102245	e1255988-0e9e-4e64-92a3-c33bf24000b8	3045
3047	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	DEPRECATED: Quapaw	DEPRECATED: The Quapaw Tribe of Indians	\N	\N	\N	\N	2023-12-06 19:12:53.107009	2023-12-06 19:12:53.106905	b3377fea-a15e-44cc-835b-ab76ca00ecab	3047
3052	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	DEPRECATED: Santa Rosa of Chuilla	DEPRECATED: Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-12-06 19:12:53.114428	2023-12-06 19:12:53.114398	d4d883d0-e1b6-49d0-bb11-d97e118ec852	3052
3055	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	DEPRECATED: Thlopthlocco	DEPRECATED: Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-12-06 19:12:53.120945	2023-12-06 19:12:53.120925	fbb7c3c0-12d2-40fb-86ed-341603612d0c	3055
3058	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	DEPRECATED: Zuni	DEPRECATED: Zuni Tribe of the Zuni Reservation	\N	\N	\N	\N	2023-12-06 19:12:53.126269	2023-12-06 19:12:53.126236	0a203f14-7461-4e5f-bf57-3995ffc85b63	3058
3060	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	\N	2023-12-06 19:12:53.162549	2023-12-06 19:12:53.161547	eb3f90ba-a52c-4275-aedb-2d80f6b39c30	3060
3067	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	\N	2023-12-06 19:12:53.172848	2023-12-06 19:12:53.172745	343952df-229a-49cf-affe-af886ce436a3	3067
3068	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	\N	2023-12-06 19:12:53.178067	2023-12-06 19:12:53.17791	224ef909-89aa-44cb-8095-9670939d27e4	3068
3073	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	\N	2023-12-06 19:12:53.185353	2023-12-06 19:12:53.18523	5c22f0c1-a5e8-4f46-91d8-dcd1f1ecab4c	3073
3078	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	\N	2023-12-06 19:12:53.217835	2023-12-06 19:12:53.216873	9e0e8b2c-2673-4db5-a622-f455524a695c	3078
2986	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	\N	2023-12-06 19:12:52.98067	2023-12-06 19:12:52.980627	8d8e3124-b8dd-4292-a39a-ed6073b46880	2986
2992	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah Band	United Keetoowah Band	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:52.993902	2023-12-06 19:12:52.993877	1720acc5-da66-4ed9-9f23-8588eab2d87f	2992
2994	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.000539	2023-12-06 19:12:53.000504	9897d116-c8c1-45fa-8af8-a068f11b47d9	2994
2997	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain Ute	Ute Mountain Ute	Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.006932	2023-12-06 19:12:53.006896	0d141457-e7b4-4e36-b1a1-ce9e49547bec	2997
3003	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	\N	2023-12-06 19:12:53.019272	2023-12-06 19:12:53.019247	c75e3062-f104-4aea-a378-8c3f4c70a0c7	3003
3006	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	\N	2023-12-06 19:12:53.026236	2023-12-06 19:12:53.026224	f98e37e5-7c56-4ea2-8690-54b8ad494c07	3006
3010	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:53.035949	2023-12-06 19:12:53.035935	8caec7f1-ebab-48a7-9fa2-2831971553fa	3010
3016	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-12-06 19:12:53.049372	2023-12-06 19:12:53.049324	0b275290-ec33-4322-afd9-b982969c9225	3016
3020	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.057428	2023-12-06 19:12:53.05678	f3c9ce78-b452-43bc-99a9-0476f36e2536	3020
3024	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	\N	2023-12-06 19:12:53.064116	2023-12-06 19:12:53.064073	ea412a5c-537e-4b7d-b5f4-7080684dd1a9	3024
3030	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	DEPRECATED: Arctic Slope	DEPRECATED: Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-12-06 19:12:53.073294	2023-12-06 19:12:53.073282	6a7510b8-01aa-4461-83b8-0328aaf9fb15	3030
3031	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	DEPRECATED: Inc.	DEPRECATED: Chickahominy Indian Tribe, Inc.	\N	\N	\N	\N	2023-12-06 19:12:53.077117	2023-12-06 19:12:53.076836	268b7513-965d-487b-a40c-749e6dbd2a0a	3031
3034	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	DEPRECATED: Kluti-Kaah	DEPRECATED: Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	\N	2023-12-06 19:12:53.080798	2023-12-06 19:12:53.080769	66e78878-fd33-48bc-b801-307f05a6c0bb	3034
3040	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	\N	\N	\N	\N	2023-12-06 19:12:53.091206	2023-12-06 19:12:53.091147	1c68a82e-3d62-457b-9de8-cab6371cab3a	3040
3041	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	DEPRECATED: Osage	DEPRECATED: The Osage Nation	\N	\N	\N	\N	2023-12-06 19:12:53.09544	2023-12-06 19:12:53.095345	1aafdf42-5e2a-440c-9663-342400e92dcc	3041
3048	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	DEPRECATED: Oklahoma	DEPRECATED: Sac and Fox Nation, Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.107297	2023-12-06 19:12:53.107272	50b45454-785b-43ac-ae24-8e6dc5390fa1	3048
3053	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	DEPRECATED: Seminole of Oklahoma	DEPRECATED: The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.115501	2023-12-06 19:12:53.115454	ab45810b-2a83-478a-9b6c-2f53976f9997	3053
3063	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	\N	2023-12-06 19:12:53.162551	2023-12-06 19:12:53.161549	9b00e33c-0a21-464f-9025-24cd8288cfa4	3063
3066	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	\N	2023-12-06 19:12:53.172128	2023-12-06 19:12:53.17205	caaafa87-fe08-4e57-a173-8bf07afed16c	3066
3071	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	\N	2023-12-06 19:12:53.180269	2023-12-06 19:12:53.180207	2272dbbf-8289-49fb-90fd-1ad4388905f5	3071
3072	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	\N	2023-12-06 19:12:53.184407	2023-12-06 19:12:53.184015	4811107b-88ee-4f61-a952-f7f9d0703bdf	3072
3077	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	\N	2023-12-06 19:12:53.217863	2023-12-06 19:12:53.216838	4f518f5f-4f59-4b4c-bae8-be8208afc435	3075
3079	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	\N	2023-12-06 19:12:53.226707	2023-12-06 19:12:53.226682	05e17eaf-4eaf-4411-9807-332a7ad6cfbf	3079
3086	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-12-06 19:12:53.264635	2023-12-06 19:12:53.263649	c26d2333-808d-4fa7-a2dd-c152fb1c3dce	3086
3089	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	\N	2023-12-06 19:12:53.274685	2023-12-06 19:12:53.274652	4c7e5859-dd1f-40b8-8d07-4cb888db25d8	3089
3091	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	\N	2023-12-06 19:12:53.30887	2023-12-06 19:12:53.307763	b7d8d46d-05d0-4a0e-8903-70aa7c8e30f7	3091
3097	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	\N	2023-12-06 19:12:53.318521	2023-12-06 19:12:53.318482	b91f19a4-1afc-44d7-9d1c-642c77504145	3097
3101	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	\N	2023-12-06 19:12:53.325938	2023-12-06 19:12:53.325778	da8e49fc-97c6-4a78-9cfc-df9257b2f079	3101
3106	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	\N	2023-12-06 19:12:53.333014	2023-12-06 19:12:53.333002	78568120-92ac-44f4-8205-10b0e12b6af8	3106
3108	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	\N	2023-12-06 19:12:53.339305	2023-12-06 19:12:53.339271	d7bae0bb-6412-455c-970e-0a2799a33185	3108
3109	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	\N	2023-12-06 19:12:53.34368	2023-12-06 19:12:53.343668	1a92399e-a6e3-4047-a8f3-2dd8926e608a	3109
3001	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	\N	2023-12-06 19:12:53.016262	2023-12-06 19:12:53.016215	a76cbc39-c12c-4fd9-813f-dd405ae6c10f	3001
3004	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	\N	2023-12-06 19:12:53.025473	2023-12-06 19:12:53.02546	a0600690-bad9-4ba1-91e2-efaea0249b0e	3004
3011	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	\N	2023-12-06 19:12:53.037089	2023-12-06 19:12:53.037063	dd128469-3d64-4ed2-a17b-68dea20123b6	3011
3013	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria, California	\N	\N	\N	\N	2023-12-06 19:12:53.040342	2023-12-06 19:12:53.040316	d8f8db23-a648-4d65-935c-4a81d39b21de	3013
3017	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	\N	2023-12-06 19:12:53.051134	2023-12-06 19:12:53.051123	dc34e20a-d742-4c76-9428-cc21e6a4dc8c	3017
3022	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony and Campbell Ranch, Nevada	\N	\N	\N	\N	2023-12-06 19:12:53.059361	2023-12-06 19:12:53.059328	0ac0303c-ee51-4962-bf21-72a4f32f30c6	3022
3026	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:53.066689	2023-12-06 19:12:53.06633	2a9af795-47bd-4882-886f-0961f3142f5c	3026
3029	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	DEPRECATED: Atqasuk	DEPRECATED: Atqasuk Village (Atkasook)	\N	\N	\N	\N	2023-12-06 19:12:53.072553	2023-12-06 19:12:53.072527	b6c412b2-08e7-4a97-a207-b3ebe702e9d3	3029
3032	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	DEPRECATED: Iqurmuit	DEPRECATED: Iqurmuit Traditional Council	\N	\N	\N	\N	2023-12-06 19:12:53.077978	2023-12-06 19:12:53.077836	8c5fc104-a313-4891-9b83-a23945858324	3032
3037	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	DEPRECATED: Ohkay	DEPRECATED: Ohkay Owingeh	\N	\N	\N	\N	2023-12-06 19:12:53.087782	2023-12-06 19:12:53.087735	4896c004-afb9-45b0-bc11-9c9ed0cfd396	3037
3044	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	DEPRECATED: Pechanga	DEPRECATED: Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	\N	2023-12-06 19:12:53.098986	2023-12-06 19:12:53.09887	0c4fac73-d55d-4ca6-bb79-d76e63196a78	3044
3046	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	DEPRECATED: Ramah	DEPRECATED: Ramah Navajo Chapter	\N	\N	\N	\N	2023-12-06 19:12:53.104374	2023-12-06 19:12:53.104347	3c18b65e-a1ab-4547-b65e-abae95f055c3	3046
3049	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-12-06 19:12:53.108652	2023-12-06 19:12:53.108613	49e0731d-4fc4-4bc0-92f0-beb3f2b7987f	3049
3051	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	DEPRECATED: San Manuel	DEPRECATED: San Manuel Band of Mission Indians, California	\N	\N	\N	\N	2023-12-06 19:12:53.113768	2023-12-06 19:12:53.113733	ac8c4f92-fb4a-4a90-a530-4881ef1d6351	3051
3056	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	DEPRECATED: Shawnee	DEPRECATED: Shawnee Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.121012	2023-12-06 19:12:53.120655	8927cec3-ca46-4dde-89de-77986d8f4852	3056
3059	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	DEPRECATED: Ute Mountain	DEPRECATED: Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.127126	2023-12-06 19:12:53.127103	1c3c2544-78fc-4f55-b68c-e42d7a5ff410	3059
3062	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	\N	2023-12-06 19:12:53.162551	2023-12-06 19:12:53.161567	47df5ee8-0d1b-45e4-88c4-ecb44cc0f164	3062
3065	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	\N	2023-12-06 19:12:53.171403	2023-12-06 19:12:53.171359	a8e86c3a-e708-44b5-b96a-a394a717ad64	3065
3069	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	\N	2023-12-06 19:12:53.178187	2023-12-06 19:12:53.178163	69cb29b9-f2ca-4836-a680-c0b9474fb5e3	3069
3074	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	\N	2023-12-06 19:12:53.187313	2023-12-06 19:12:53.187199	0d57fe02-c54a-4838-b7c4-7bea5a334869	3074
3075	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	\N	2023-12-06 19:12:53.217863	2023-12-06 19:12:53.216856	b972db8f-814e-47bc-bd38-adc720a4e8aa	3076
3080	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	\N	2023-12-06 19:12:53.226877	2023-12-06 19:12:53.226646	ca728591-c04e-46ed-b46b-27fd2f085a51	3080
3084	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:53.264635	2023-12-06 19:12:53.263657	a5f1b683-05cd-4c2c-b1ff-818605fe1299	3085
3090	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:53.273241	2023-12-06 19:12:53.27315	26ae71dd-fc01-4652-942d-a1c986b07c6c	3090
3094	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	\N	2023-12-06 19:12:53.308864	2023-12-06 19:12:53.307772	040cfff3-4f10-415a-bf0b-958188e884da	3094
3096	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	\N	2023-12-06 19:12:53.317989	2023-12-06 19:12:53.317976	0de7e58e-3a8b-4f9f-ba68-dc4531d33bb2	3096
3100	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	\N	2023-12-06 19:12:53.324787	2023-12-06 19:12:53.324761	c686b782-4dd7-4673-984d-02e2a80a0cf9	3100
3104	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	\N	2023-12-06 19:12:53.332188	2023-12-06 19:12:53.332161	73862445-6c45-4e30-bbf0-c9abba886bac	3104
3111	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	\N	2023-12-06 19:12:53.345263	2023-12-06 19:12:53.345136	e34490e8-9961-4e04-b096-eb390c833e5e	3111
3116	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	\N	2023-12-06 19:12:53.384461	2023-12-06 19:12:53.383452	ac06eae4-1f93-48b7-9526-072c36ef1258	3116
3120	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-12-06 19:12:53.421868	2023-12-06 19:12:53.420776	482e4fb8-9d93-499e-8bdc-b2d67277b1fb	3121
3125	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	\N	2023-12-06 19:12:53.430619	2023-12-06 19:12:53.430368	2fa1af16-cbb1-4dcc-9201-3c370762550f	3125
3141	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-12-06 19:12:53.519736	2023-12-06 19:12:53.518846	1b890b31-3dde-4ff3-a0e1-7019fa3f1d40	3140
3021	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	\N	2023-12-06 19:12:53.058945	2023-12-06 19:12:53.058922	a9481354-387b-4a15-8c2c-ddf5e5cf7570	3021
3025	uri://ed-fi.org/TribalAffiliationDescriptor	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	\N	\N	\N	\N	2023-12-06 19:12:53.066219	2023-12-06 19:12:53.065708	37708ab4-6c9a-402f-917a-a8607eca9bdc	3025
3028	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	DEPRECATED: Cheyenne-Arapaho	DEPRECATED: Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	\N	2023-12-06 19:12:53.07242	2023-12-06 19:12:53.072392	da62664d-d8cd-45f4-a6bf-f1a080572548	3028
3033	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	DEPRECATED: Kewa Pueblo	DEPRECATED: Kewa Pueblo	\N	\N	\N	\N	2023-12-06 19:12:53.079936	2023-12-06 19:12:53.079908	70a9c66d-0a1c-4faa-8c1f-bd09f336881a	3033
3035	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	DEPRECATED: Mescalero	DEPRECATED: Mescalero Apache Tribe	\N	\N	\N	\N	2023-12-06 19:12:53.083892	2023-12-06 19:12:53.083857	69693d46-0764-4827-a66b-ad85d5b4806f	3035
3039	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	DEPRECATED: Ohogamuit	DEPRECATED: Village of Ohogamiut	\N	\N	\N	\N	2023-12-06 19:12:53.091284	2023-12-06 19:12:53.091258	500f81e9-7863-4c92-885a-947fc6876a9f	3039
3043	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	DEPRECATED: Ottawa of Oklahoma	DEPRECATED: Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.098296	2023-12-06 19:12:53.098207	c11b296c-2f89-4e71-88e1-39ca6c612126	3043
3050	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	DEPRECATED: Salamatoff	DEPRECATED: Village of Salamatoff	\N	\N	\N	\N	2023-12-06 19:12:53.111479	2023-12-06 19:12:53.111467	85cd1999-20a1-4e51-9fc0-00e29de3ac5e	3050
3054	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	DEPRECATED: Seneca-Cayuga	DEPRECATED: Seneca-Cayuga Nation	\N	\N	\N	\N	2023-12-06 19:12:53.117671	2023-12-06 19:12:53.11751	748f2568-d74b-495e-b161-c5c59eda9107	3054
3057	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	DEPRECATED: United Keetoowah	DEPRECATED: United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-12-06 19:12:53.123008	2023-12-06 19:12:53.122981	bee80d8d-8867-424b-9622-220442b0c166	3057
3061	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	\N	2023-12-06 19:12:53.162576	2023-12-06 19:12:53.161556	d5278257-1a1b-4297-ab7f-062ce73cb7f4	3061
3064	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	\N	2023-12-06 19:12:53.170902	2023-12-06 19:12:53.170865	5a8a26bb-ef51-46c5-9559-e19e9b59c424	3064
3070	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	\N	2023-12-06 19:12:53.178623	2023-12-06 19:12:53.178585	5667fc22-9f1c-4cdf-8859-9f5731c86f91	3070
3076	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	\N	2023-12-06 19:12:53.217858	2023-12-06 19:12:53.216848	880f600c-3db0-41a5-bdf8-6e988945254c	3077
3081	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	\N	2023-12-06 19:12:53.227833	2023-12-06 19:12:53.227811	f3f85220-a090-4bd1-8c40-247ea106e74b	3081
3083	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:53.264628	2023-12-06 19:12:53.263671	60c60c5e-0775-454e-b3df-0cb9c3e91926	3083
3088	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-12-06 19:12:53.273676	2023-12-06 19:12:53.273649	06e24482-90eb-42cd-8f70-e31117cfb95d	3088
3093	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	\N	2023-12-06 19:12:53.30886	2023-12-06 19:12:53.307786	cf7dd823-3a6d-48de-b4ce-1a86c4036ae7	3093
3095	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	\N	2023-12-06 19:12:53.317306	2023-12-06 19:12:53.317291	4057bd08-c280-448e-8512-b6eb2c80900d	3095
3102	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	\N	2023-12-06 19:12:53.326279	2023-12-06 19:12:53.326255	b1d92668-95ff-4220-bc2c-75a9de573208	3102
3103	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	\N	2023-12-06 19:12:53.330436	2023-12-06 19:12:53.329771	617c4ca1-ef90-4b25-9525-394223c77c75	3103
3112	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	\N	2023-12-06 19:12:53.345459	2023-12-06 19:12:53.345441	35afbd07-1d44-4de3-972d-1bf943e0cf64	3112
3113	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:12:53.350945	2023-12-06 19:12:53.350899	4a3d493f-635b-4027-9d07-4a18dc399031	3113
3119	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-12-06 19:12:53.384478	2023-12-06 19:12:53.383469	6a3f91b4-d655-4ec1-838c-79ebfb0f7ebc	3119
3123	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	\N	2023-12-06 19:12:53.421842	2023-12-06 19:12:53.420799	45efda92-f977-4e69-a0c2-cf5476494a5e	3123
3124	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:53.430528	2023-12-06 19:12:53.430498	60aa3099-dd0e-44ec-aa48-b15a4aa584c4	3124
3131	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	\N	2023-12-06 19:12:53.439656	2023-12-06 19:12:53.43963	6a9d9c5e-ff71-4b75-9dc1-91a14b7fd320	3131
3133	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	\N	2023-12-06 19:12:53.473803	2023-12-06 19:12:53.472893	1ccd1835-3931-439b-b257-25ee7661cadc	3133
3136	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	\N	2023-12-06 19:12:53.481886	2023-12-06 19:12:53.48183	e8cb6d9c-5b57-4ce2-9957-ca778e1edaae	3136
3139	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	\N	2023-12-06 19:12:53.487227	2023-12-06 19:12:53.487185	a16a48fb-33ce-4985-baff-0d4071fbbb2a	3139
3142	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-12-06 19:12:53.519708	2023-12-06 19:12:53.518872	87f92546-d455-4b36-a8e0-3b1c5e27dab2	3142
3082	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	\N	2023-12-06 19:12:53.228793	2023-12-06 19:12:53.228759	d3f45e62-c9be-4faf-818e-3f5a9090f6ea	3082
3085	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-12-06 19:12:53.264644	2023-12-06 19:12:53.263641	2d20e96d-a34d-4136-8128-c46600afebf1	3084
3087	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	National	National	National	\N	\N	\N	\N	2023-12-06 19:12:53.273429	2023-12-06 19:12:53.273405	2e0480e9-759a-4e27-89da-0cd349293fdb	3087
3092	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	\N	2023-12-06 19:12:53.30888	2023-12-06 19:12:53.307754	913c63f1-c8c5-49f1-9589-bef68fd25239	3092
3098	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-12-06 19:12:53.319124	2023-12-06 19:12:53.319099	1ba8ef1b-20d5-47ae-8ea6-2b2618574c75	3098
3099	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	\N	2023-12-06 19:12:53.323605	2023-12-06 19:12:53.323579	15767427-2b11-42d2-9ad6-fb7c19ff062b	3099
3105	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	\N	2023-12-06 19:12:53.332888	2023-12-06 19:12:53.332864	45e33262-1bec-418a-ab5d-5b659850f714	3105
3107	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	\N	2023-12-06 19:12:53.33881	2023-12-06 19:12:53.338753	acacf0fc-0fe0-42b3-a6a1-3b1294c88f29	3107
3110	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	\N	2023-12-06 19:12:53.343926	2023-12-06 19:12:53.343852	e8ed2a58-9c70-4508-b70b-27d92270a414	3110
3115	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	\N	2023-12-06 19:12:53.351175	2023-12-06 19:12:53.351151	0770337a-84f3-40ca-bbe3-dcd3021e8024	3115
3117	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:12:53.384465	2023-12-06 19:12:53.383445	9ab319f7-0765-417e-bd16-82f8e1c0e2ca	3118
3122	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	\N	2023-12-06 19:12:53.421848	2023-12-06 19:12:53.420783	a18e209a-810d-42d4-9f96-4a81d9ffc157	3122
3127	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	\N	2023-12-06 19:12:53.432214	2023-12-06 19:12:53.432201	62ad8db9-f7b5-49c1-a1c7-3cff2b005623	3127
3130	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	\N	2023-12-06 19:12:53.439183	2023-12-06 19:12:53.43917	0c9d8b35-2df4-41f7-8781-3d228e2c6794	3130
3135	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	\N	2023-12-06 19:12:53.473973	2023-12-06 19:12:53.472914	d50f4ec8-56d3-40f3-8a3b-cd36e8c1ad17	3135
3138	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	\N	2023-12-06 19:12:53.487128	2023-12-06 19:12:53.487089	31631eef-73a2-4436-b3b6-e8364678d87c	3138
3143	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	\N	2023-12-06 19:12:53.519725	2023-12-06 19:12:53.518876	38e63f62-b761-464f-aeda-3199c5470088	3143
3146	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:53.52958	2023-12-06 19:12:53.529408	b5a3470d-e10b-43a1-8969-9cb591a5b040	3146
3147	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	\N	2023-12-06 19:12:53.563207	2023-12-06 19:12:53.562269	228af54c-65f1-4b5b-8581-581eb0f96c5d	3147
3156	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:53.606082	2023-12-06 19:12:53.605159	5863c225-89b0-4da3-b1ae-50798572e00c	3156
3159	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	\N	2023-12-06 19:12:53.616306	2023-12-06 19:12:53.61596	53dbed22-a0d8-4c0a-b258-73f61acae31f	3159
3161	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	\N	2023-12-06 19:12:53.621459	2023-12-06 19:12:53.621431	344140cf-7e6b-4b33-8209-c48e17c7df9b	3161
3164	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	\N	2023-12-06 19:12:53.624438	2023-12-06 19:12:53.624373	11894335-ac27-4363-b912-2a36c3b76df7	3164
3114	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	\N	2023-12-06 19:12:53.351287	2023-12-06 19:12:53.350918	92105182-daac-4696-b9e5-6e529f175c33	3114
3118	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	\N	2023-12-06 19:12:53.38448	2023-12-06 19:12:53.383436	12d6f14d-908e-4a0f-ac76-98a029f55e0a	3117
3121	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-12-06 19:12:53.421858	2023-12-06 19:12:53.420767	ce857deb-a9c7-4794-bfd1-69bd0d490cb8	3120
3126	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-12-06 19:12:53.431335	2023-12-06 19:12:53.431237	ac9832ff-1f42-413a-ace7-5edbbb4d607c	3126
3129	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	\N	2023-12-06 19:12:53.437314	2023-12-06 19:12:53.437301	89fa03fe-6d4d-4a96-939f-62a20691e0e2	3129
3134	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	\N	2023-12-06 19:12:53.473832	2023-12-06 19:12:53.472887	c55073de-4de3-45b8-b38a-49ad790028d8	3134
3137	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:12:53.482925	2023-12-06 19:12:53.482913	234d599a-e3b3-4961-b7ed-5828ea794e3f	3137
3145	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	\N	2023-12-06 19:12:53.529245	2023-12-06 19:12:53.52919	5e2a08c1-13c2-4229-b68c-2155666ea766	3145
3148	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	\N	2023-12-06 19:12:53.563203	2023-12-06 19:12:53.562186	a5ae2597-e715-468f-aae4-a46037a0df93	3148
3152	uri://ed-fi.org/AccountTypeDescriptor	Expenditure	Expenditure	Expenditure	\N	\N	\N	\N	2023-12-06 19:12:53.574068	2023-12-06 19:12:53.574053	b117caef-06be-4db7-ad98-980deccf0299	3152
3153	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	\N	2023-12-06 19:12:53.606097	2023-12-06 19:12:53.605181	cedac76d-e140-4aa3-ad16-c97e0344cd9a	3154
3160	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	\N	2023-12-06 19:12:53.616072	2023-12-06 19:12:53.615705	29a89aa5-d94a-46ac-9969-d8baacfadf0a	3160
3162	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	\N	2023-12-06 19:12:53.623949	2023-12-06 19:12:53.623936	96979635-5083-4086-94d5-c1c2d16400b8	3162
3132	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	\N	2023-12-06 19:12:53.473788	2023-12-06 19:12:53.472914	0a2237eb-44e6-4d44-a482-d3c69fc85e61	3132
3140	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:12:53.519733	2023-12-06 19:12:53.518854	1069c591-5ed4-4d39-98df-f8e67876ff50	3141
3150	uri://ed-fi.org/AccountTypeDescriptor	Balance sheet	Balance sheet	Balance sheet	\N	\N	\N	\N	2023-12-06 19:12:53.570095	2023-12-06 19:12:53.56868	efe153a5-43e2-4aa3-8b4d-75241c64c9ed	3150
3154	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	\N	2023-12-06 19:12:53.606039	2023-12-06 19:12:53.605167	b5f50a77-8188-4db9-b83c-0022f543a93f	3153
3157	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	\N	2023-12-06 19:12:53.615925	2023-12-06 19:12:53.615884	b4f25e00-18e6-4a04-97f6-784d88df3bbb	3157
3163	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	\N	2023-12-06 19:12:53.624426	2023-12-06 19:12:53.624401	d194d4f6-d90d-4291-828b-bb3edc31e2b1	3163
3144	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	\N	2023-12-06 19:12:53.527601	2023-12-06 19:12:53.527515	c70bfd39-6c67-4b31-9ec6-8838510b7cc2	3144
3149	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	\N	2023-12-06 19:12:53.56319	2023-12-06 19:12:53.562278	0600036b-333b-41e0-b50e-eb637314f280	3149
3151	uri://ed-fi.org/AccountTypeDescriptor	Revenue	Revenue	Revenue	\N	\N	\N	\N	2023-12-06 19:12:53.573392	2023-12-06 19:12:53.573377	fe30f8a6-b247-4f82-ae4d-283019fad0a9	3151
3155	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	\N	2023-12-06 19:12:53.606113	2023-12-06 19:12:53.605153	7d72ba26-3de9-4e8e-b262-e5b85e285011	3155
3158	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	\N	2023-12-06 19:12:53.61594	2023-12-06 19:12:53.615893	ed61ac44-6b27-4150-913d-9bcf67636982	3158
3165	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Traditional Certification Program	Traditional Certification Program	Traditional Certification Program	\N	\N	\N	\N	2023-12-06 19:28:31.199396	2023-12-06 19:28:31.187571	3e3a20d8-ee40-4169-8b4d-e5552220e2c9	3165
3166	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Post-Baccalaureate	Post-Baccalaureate	Master's + Teaching certificate	\N	\N	\N	\N	2023-12-06 19:28:31.301429	2023-12-06 19:28:31.301308	6f37eebb-9601-42fc-890d-105d043116ca	3166
3167	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Continuing Education Certificate	Continuing Education Certificate	Certificates offered by education institution	\N	\N	\N	\N	2023-12-06 19:28:31.308114	2023-12-06 19:28:31.308072	243c508e-9798-410c-b738-0f294e1ab96c	3167
3168	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Alternative	Alternative	Training offered in ESC's, community colleges, private vendors, etc.	\N	\N	\N	\N	2023-12-06 19:28:31.313015	2023-12-06 19:28:31.31297	59577511-0ebe-49dc-aa61-de0d3377a798	3168
3169	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Master's Program	Master's Program	Master's Program	\N	\N	\N	\N	2023-12-06 19:28:31.344517	2023-12-06 19:28:31.3436	10d36181-a031-4122-aa20-e6345def541b	3169
3170	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-12-06 19:28:31.351443	2023-12-06 19:28:31.351401	23f2240a-350a-4e8e-bdeb-8923b7c01b01	3170
3171	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-12-06 19:28:31.356402	2023-12-06 19:28:31.356364	ecbf0488-9316-44fa-9af1-abb64f0f454e	3171
3172	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Freshman	Freshman	Freshman	\N	\N	\N	\N	2023-12-06 19:28:31.360815	2023-12-06 19:28:31.360768	6b2cd85d-84b2-4d0a-9606-8ce07069ed25	3172
3173	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Sophomore	Sophomore	Sophomore	\N	\N	\N	\N	2023-12-06 19:28:31.365727	2023-12-06 19:28:31.36568	63540308-b966-4fbf-b8e1-b538747bc31e	3173
3174	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Junior	Junior	Junior	\N	\N	\N	\N	2023-12-06 19:28:31.370093	2023-12-06 19:28:31.370052	70057ab9-2d4f-4ab3-b33f-41ead7e535b5	3174
3175	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Senior	Senior	Senior	\N	\N	\N	\N	2023-12-06 19:28:31.37479	2023-12-06 19:28:31.374745	f79683b3-396e-465b-b347-c284a84af7fa	3175
3176	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Postbaccalaureate	Postbaccalaureate	Postbaccalaureate	\N	\N	\N	\N	2023-12-06 19:28:31.379158	2023-12-06 19:28:31.37912	c82a2b58-f136-4890-93a1-b36b961e751d	3176
3177	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Doctoral Program	Doctoral Program	Doctoral Program	\N	\N	\N	\N	2023-12-06 19:28:31.383602	2023-12-06 19:28:31.383563	aa46cf51-eeef-4253-94ae-72698f8ca128	3177
3179	uri://tpdm.ed-fi.org/GenderDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-12-06 19:28:31.45707	2023-12-06 19:28:31.458495	fdba27e6-6133-48ca-b35d-6e0dc0d4f0a5	3181
3180	uri://tpdm.ed-fi.org/GenderDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:28:31.463908	2023-12-06 19:28:31.465221	f5b82b8b-4a9b-4326-8e7f-f23553591a61	3183
3181	uri://tpdm.ed-fi.org/GenderDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-12-06 19:28:31.470509	2023-12-06 19:28:31.471728	d91679fd-b56d-418d-9c05-79222211c9ba	3185
3182	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-12-06 19:28:31.498223	2023-12-06 19:28:31.500277	b7b170f8-f22c-422f-a9df-4ab032b4de59	3187
3183	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-12-06 19:28:31.506412	2023-12-06 19:28:31.507832	0daceba0-6d17-4d4f-89eb-fddeab2ad710	3189
3184	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-12-06 19:28:31.512999	2023-12-06 19:28:31.514391	bfcc9483-463e-4bf4-8d5f-839bff7efd97	3191
3185	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:28:31.519579	2023-12-06 19:28:31.52097	550405d0-9d34-42c6-a1cd-64168e98197a	3193
3186	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Rated	Not Rated	Not Rated	\N	\N	\N	\N	2023-12-06 19:28:31.547865	2023-12-06 19:28:31.549979	c6106db2-3956-4886-a546-3087418f82df	3195
3187	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited	Accredited	Accredited	\N	\N	\N	\N	2023-12-06 19:28:31.556595	2023-12-06 19:28:31.557987	ba86ff8f-ad5c-433b-9694-c4ee88855a7c	3197
3188	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Warned	Accredited - Warned	Accredited - Warned	\N	\N	\N	\N	2023-12-06 19:28:31.563238	2023-12-06 19:28:31.564695	034d0623-2f01-4a47-a776-2eb20c6429f8	3199
3189	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Probation	Accredited - Probation	Accredited - Probation	\N	\N	\N	\N	2023-12-06 19:28:31.569922	2023-12-06 19:28:31.571389	f29c010d-8def-443f-a0f8-67e2782ae03f	3201
3190	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Accredited	Not Accredited	Not Accredited	\N	\N	\N	\N	2023-12-06 19:28:31.577098	2023-12-06 19:28:31.578489	ed47cbd6-23f9-4f90-a7c6-0fe9510a6d54	3203
3191	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Not Started	Not Started	Not Started	\N	\N	\N	\N	2023-12-06 19:28:31.607596	2023-12-06 19:28:31.609746	7a65f2ad-e4f3-4c22-81d8-0537be9bd6df	3205
3192	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	In Progress	In Progress	In Progress	\N	\N	\N	\N	2023-12-06 19:28:31.616281	2023-12-06 19:28:31.617641	0932760d-7a59-4790-9910-79dd04b3e4e1	3207
3193	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-12-06 19:28:31.623427	2023-12-06 19:28:31.624829	e87461d9-422b-4788-873c-18aa11e8b764	3209
3194	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Queued	Queued	Queued	\N	\N	\N	\N	2023-12-06 19:28:31.630497	2023-12-06 19:28:31.632005	0aeb01a9-fc2d-42f2-898f-d354726a9301	3211
3195	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:28:31.637406	2023-12-06 19:28:31.638824	f319a089-016f-431f-836c-cff32b0db965	3213
3196	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-12-06 19:28:31.645464	2023-12-06 19:28:31.64689	a5a7497d-9bbb-43ae-a643-83613e4985db	3215
3197	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-12-06 19:28:31.672712	2023-12-06 19:28:31.674589	f20314b9-a38d-4d96-927d-8f5b02a90287	3217
3198	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	\N	2023-12-06 19:28:31.679877	2023-12-06 19:28:31.681186	548cc353-f049-41d1-bf9d-4dc932f1c4f4	3219
3199	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Associate School Psychologist	Associate School Psychologist	Associate School Psychologist	\N	\N	\N	\N	2023-12-06 19:28:31.685287	2023-12-06 19:28:31.686531	372587b6-4a56-4429-b8d1-459dd3131f67	3221
3200	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-12-06 19:28:31.690473	2023-12-06 19:28:31.691693	430e3d21-b70c-4d2a-acc8-1e346e3fe281	3223
3201	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Diagnostician	Educational Diagnostician	Educational Diagnostician	\N	\N	\N	\N	2023-12-06 19:28:31.695719	2023-12-06 19:28:31.696982	1089b1d5-f378-4ea7-82a6-b78fc8b50b18	3225
3202	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Instructional Officer	Instructional Officer	Instructional Officer	\N	\N	\N	\N	2023-12-06 19:28:31.701005	2023-12-06 19:28:31.70224	289e0ded-2aa4-4d4d-bce5-d288e48133ec	3227
3203	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Librarian	Librarian	Librarian	\N	\N	\N	\N	2023-12-06 19:28:31.706397	2023-12-06 19:28:31.707615	f7fec962-128d-4a25-ad49-3e4881c79ff9	3229
3204	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Physician	Physician	Physician	\N	\N	\N	\N	2023-12-06 19:28:31.711515	2023-12-06 19:28:31.712797	15f7c062-49e1-4329-83d0-4c554cd25872	3231
3205	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-12-06 19:28:31.716718	2023-12-06 19:28:31.717962	f030f52a-6779-4db2-b6dc-b830e29171f4	3233
3206	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Nurse	School Nurse	School Nurse	\N	\N	\N	\N	2023-12-06 19:28:31.721898	2023-12-06 19:28:31.723179	c97ec07a-cebc-458d-878f-4c4a0976098b	3235
3207	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-12-06 19:28:31.727211	2023-12-06 19:28:31.728443	22486f30-0179-4695-9c1b-31211d11c2e4	3237
3208	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	\N	2023-12-06 19:28:31.732307	2023-12-06 19:28:31.733555	c32d616e-4b70-40cd-86db-0016c5c74081	3239
3209	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher Supervisor	Teacher Supervisor	Teacher Supervisor	\N	\N	\N	\N	2023-12-06 19:28:31.738151	2023-12-06 19:28:31.73944	a8efc6af-94da-4f23-b762-12ca2e9cdea9	3241
3210	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-12-06 19:28:31.743536	2023-12-06 19:28:31.744753	3eca7b72-0708-457c-8f4c-889f07d8770d	3243
3211	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Visiting Teacher	Visiting Teacher	Visiting Teacher	\N	\N	\N	\N	2023-12-06 19:28:31.748931	2023-12-06 19:28:31.750207	8a0fba5c-31ec-4dae-80c1-5f5e79e1e7a5	3245
3212	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Secretary	Educational Secretary	Educational Secretary	\N	\N	\N	\N	2023-12-06 19:28:31.754766	2023-12-06 19:28:31.756252	14ff0cfb-9828-4abf-a9ee-eb9cd45da49b	3247
3213	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Aide	Educational Aide	Educational Aide	\N	\N	\N	\N	2023-12-06 19:28:31.760963	2023-12-06 19:28:31.762348	4e7192e1-f2eb-4a64-b144-8aa0e6af988c	3249
3214	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:28:31.767002	2023-12-06 19:28:31.768428	829e31ae-1aa0-47f6-923a-79ec229c48fe	3251
3215	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-12-06 19:28:31.772974	2023-12-06 19:28:31.774327	af6d4867-e392-405d-a0c4-f89a031c709d	3253
3216	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Fellowship	Fellowship	Fellowship	\N	\N	\N	\N	2023-12-06 19:28:31.803398	2023-12-06 19:28:31.80551	3e51c8eb-7c10-4779-87ce-f656cb32846b	3255
3217	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-12-06 19:28:31.811426	2023-12-06 19:28:31.812697	e87b1fc3-2db9-4ca6-9842-ef69f6c555e8	3257
3218	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-12-06 19:28:31.817135	2023-12-06 19:28:31.818361	f51ff85b-0717-4525-bac2-9250cf440f50	3259
3219	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Traditional	Traditional	Traditional	\N	\N	\N	\N	2023-12-06 19:28:31.822718	2023-12-06 19:28:31.824016	feb018e1-3d77-4e19-bdd3-9f428e63188e	3261
3220	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:28:31.828208	2023-12-06 19:28:31.829402	726342a0-568d-421f-bd5b-10129cd20570	3263
3221	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-12-06 19:28:31.857003	2023-12-06 19:28:31.856149	f2ab031e-ba01-4546-93ac-e15dd519e925	3264
3222	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Received Degree	Received Degree	Received Degree	\N	\N	\N	\N	2023-12-06 19:28:31.863169	2023-12-06 19:28:31.863114	b6239ebf-245d-4125-a1a4-7fac64160049	3265
3223	uri://tpdm.ed-fi.org/AidTypeDescriptor	Assistantship	Assistantship	Assistantship	\N	\N	\N	\N	2023-12-06 19:28:31.892281	2023-12-06 19:28:31.89431	097293d2-4a94-4e16-bf6c-be48ccef65df	3267
3224	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Scholarships	Federal Scholarships	Federal Scholarships	\N	\N	\N	\N	2023-12-06 19:28:31.900296	2023-12-06 19:28:31.901564	07b26f69-dc2d-4752-8e26-67a45cdb0b65	3269
3225	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Subsidized Loans	Federal Subsidized Loans	Federal Subsidized Loans	\N	\N	\N	\N	2023-12-06 19:28:31.906535	2023-12-06 19:28:31.90784	11924ef7-026e-4079-baa6-4aec3620a8c7	3271
3226	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Unsubsidized Loans	Federal Unsubsidized Loans	Federal Unsubsidized Loans	\N	\N	\N	\N	2023-12-06 19:28:31.912313	2023-12-06 19:28:31.913492	c2d1296e-7d05-4cb0-a480-8795eb2e9e64	3273
3227	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Work Study	Federal Work Study	Federal Work Study	\N	\N	\N	\N	2023-12-06 19:28:31.917878	2023-12-06 19:28:31.919055	3c5d0a0b-4413-4bf5-8d14-2b3cf8540aa5	3275
3228	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Grants	Institutional Grants	Institutional Grants	\N	\N	\N	\N	2023-12-06 19:28:31.923374	2023-12-06 19:28:31.924625	4b32c9a9-19fc-41b9-9353-0d6b55b96402	3277
3229	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Loans	Institutional Loans	Institutional Loans	\N	\N	\N	\N	2023-12-06 19:28:31.929908	2023-12-06 19:28:31.931326	c752884a-1051-4fd4-8361-797821175433	3279
3230	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Scholarships	Institutional Scholarships	Institutional Scholarships	\N	\N	\N	\N	2023-12-06 19:28:31.936644	2023-12-06 19:28:31.937955	6fba72fd-8e72-4fab-8a0f-9f67b1072333	3281
3231	uri://tpdm.ed-fi.org/AidTypeDescriptor	Loan Forgiveness	Loan Forgiveness	Loan Forgiveness	\N	\N	\N	\N	2023-12-06 19:28:31.942201	2023-12-06 19:28:31.943702	36617fa0-c2c5-4c0d-8c23-3665b36cd40c	3283
3232	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Federal Grants	Other Federal Grants	Other Federal Grants	\N	\N	\N	\N	2023-12-06 19:28:31.947836	2023-12-06 19:28:31.94916	cc84afe1-bf58-4ac6-abbc-5ac7990cf385	3285
3233	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Grants	Other Grants	Other Grants	\N	\N	\N	\N	2023-12-06 19:28:31.954066	2023-12-06 19:28:31.955322	1366dcb9-c9b8-4bbf-8c59-88d008bbed2c	3287
3234	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other On-Campus Work	Other On-Campus Work	Other On-Campus Work	\N	\N	\N	\N	2023-12-06 19:28:31.959372	2023-12-06 19:28:31.960632	c8a96ce1-2a95-4028-8f95-5fa03cbeb9db	3289
3235	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Scholarships	Other Scholarships	Other Scholarships	\N	\N	\N	\N	2023-12-06 19:28:31.964836	2023-12-06 19:28:31.966103	ddb6ee67-ae58-43fe-b3b5-b8f35b654999	3291
3236	uri://tpdm.ed-fi.org/AidTypeDescriptor	Parent PLUS Loans	Parent PLUS Loans	Parent PLUS Loans	\N	\N	\N	\N	2023-12-06 19:28:31.970334	2023-12-06 19:28:31.971633	f6cc728a-1e0b-4fd2-b423-8d92b9515cbe	3293
3237	uri://tpdm.ed-fi.org/AidTypeDescriptor	Pell Grants	Pell Grants	Pell Grants	\N	\N	\N	\N	2023-12-06 19:28:31.976104	2023-12-06 19:28:31.977391	310e5de4-5ee9-4022-ae36-abe32903f584	3295
3238	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Grants	Private Grants	Private Grants	\N	\N	\N	\N	2023-12-06 19:28:31.981928	2023-12-06 19:28:31.983195	c41c4793-e8c8-4bd7-85ab-4af183a336f5	3297
3239	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Loans	Private Loans	Private Loans	\N	\N	\N	\N	2023-12-06 19:28:31.993113	2023-12-06 19:28:31.994457	f59eb84f-f28c-4f56-bd28-d0cbf43d91a4	3299
3240	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Scholarships	Private Scholarships	Private Scholarships	\N	\N	\N	\N	2023-12-06 19:28:31.998972	2023-12-06 19:28:32.000239	78e2b5ef-193d-4382-bd18-c2982eb78951	3301
3241	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Grants	State and Local Grants	State and Local Grants	\N	\N	\N	\N	2023-12-06 19:28:32.004627	2023-12-06 19:28:32.005852	55a93e7f-0bbc-4f21-9fca-4e57a83d819b	3303
3242	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Scholarships	State and Local Scholarships	State and Local Scholarships	\N	\N	\N	\N	2023-12-06 19:28:32.010115	2023-12-06 19:28:32.011349	b92a01dd-88d1-4fad-a653-8dc2b8086291	3305
3243	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Loans	State Loans	State Loans	\N	\N	\N	\N	2023-12-06 19:28:32.015474	2023-12-06 19:28:32.016811	e1f07b41-cf05-4b44-821c-74dc95091881	3307
3244	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Work	State Work	State Work	\N	\N	\N	\N	2023-12-06 19:28:32.027027	2023-12-06 19:28:32.02842	37f8922b-87c8-4ddd-b71b-d9ceacbe552b	3309
3245	uri://tpdm.ed-fi.org/AidTypeDescriptor	Teach Grants	Teach Grants	Teach Grants	\N	\N	\N	\N	2023-12-06 19:28:32.03254	2023-12-06 19:28:32.033857	9d85b604-515c-466d-bcd8-d1af60980e97	3311
3246	uri://tpdm.ed-fi.org/AidTypeDescriptor	Tuition Reimbursements	Tuition Reimbursements	Tuition Reimbursements	\N	\N	\N	\N	2023-12-06 19:28:32.038162	2023-12-06 19:28:32.039382	74fea2fe-647e-430f-99c2-9e394a8cdd31	3313
3247	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Completion	Completion	A cohort year based on the candidate's scheduled completion	\N	\N	\N	\N	2023-12-06 19:28:32.074541	2023-12-06 19:28:32.073714	898901f8-b051-4dc7-8615-e9fbaf4379f4	3314
3248	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Entry	Entry	A cohort year based on the entry of candidate into the Eucator Preparation Provider	\N	\N	\N	\N	2023-12-06 19:28:32.080573	2023-12-06 19:28:32.08053	218a082d-4f0b-4fd9-a738-f9ccf165ae2f	3315
3249	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	MOY	MOY	Mid-Year	\N	\N	\N	\N	2023-12-06 19:28:32.119997	2023-12-06 19:28:32.122409	6df18148-64b3-41dc-aaa3-9c42279ca3b6	3317
3250	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	BOY	BOY	Beginning of year	\N	\N	\N	\N	2023-12-06 19:28:32.128922	2023-12-06 19:28:32.130338	e1e688b1-4936-4ca8-bbe1-574e4383f608	3319
3251	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	\N	2023-12-06 19:28:32.135295	2023-12-06 19:28:32.136671	e1251a78-fea2-4629-ad2b-c71496004581	3321
3252	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-12-06 19:28:32.152642	2023-12-06 19:28:32.154557	fe9d57b2-1166-42f4-9e2c-88d131422e00	3323
3253	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-12-06 19:28:32.161222	2023-12-06 19:28:32.162783	45379fb0-4a89-4abf-97a5-a12f4d0590b4	3325
3254	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-12-06 19:28:32.16924	2023-12-06 19:28:32.170998	1a42d539-9ff6-4df4-904a-f695dde03013	3327
3255	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	\N	2023-12-06 19:28:32.178142	2023-12-06 19:28:32.179541	b8b408c4-101b-4579-8242-c70e2165ba27	3329
3256	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-12-06 19:28:32.185952	2023-12-06 19:28:32.187367	27959e66-6110-4a1d-b932-6b477713ccd8	3331
3257	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-12-06 19:28:32.193978	2023-12-06 19:28:32.19533	802ce9c6-4cf6-4eed-829d-aa9e1fa5f26a	3333
3258	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-12-06 19:28:32.204054	2023-12-06 19:28:32.205523	c1da2ea4-00e4-434e-981d-c47492a3b9c3	3335
3259	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	\N	2023-12-06 19:28:32.210652	2023-12-06 19:28:32.212451	c110a400-67c2-4455-b188-25abe7386087	3337
3260	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:28:32.269038	2023-12-06 19:28:32.271282	e495cebf-0c64-4198-8ba8-eea3f3783b62	3339
3261	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:28:32.278354	2023-12-06 19:28:32.279677	c3d72a9d-8715-4583-bf5c-3ab176b85ed6	3341
3262	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:28:32.2839	2023-12-06 19:28:32.285148	39c776c2-b704-4cc9-8f4d-967e50fc67f6	3343
3263	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:28:32.295685	2023-12-06 19:28:32.297131	84b48817-0c04-47b2-aedf-2f86fb21dfe3	3345
3264	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:28:32.30257	2023-12-06 19:28:32.303958	7455b118-3e1a-4ac4-9f7a-aeb0a11bdc3f	3347
3265	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:28:32.313079	2023-12-06 19:28:32.314385	949083e8-b7e1-47d5-a970-8e630ec966b0	3349
3266	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.319034	2023-12-06 19:28:32.320352	354aadea-e881-4f8d-85d3-df08b908d096	3351
3267	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.324775	2023-12-06 19:28:32.326061	e0cf871b-d118-45df-b787-4d182f8ef493	3353
3268	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:28:32.331186	2023-12-06 19:28:32.332484	fc4d446b-75c5-4a27-94e1-a7455447b86f	3355
3269	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:28:32.361259	2023-12-06 19:28:32.363239	0763ef45-3c87-454f-be9c-f19a7884a1d4	3357
3270	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:28:32.369846	2023-12-06 19:28:32.371187	492c1e18-ba8f-4afc-b616-3f6e3e74de4b	3359
3271	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:28:32.375508	2023-12-06 19:28:32.376861	edcd91fd-e319-48ab-aafe-eda7c7756ade	3361
3272	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:28:32.380918	2023-12-06 19:28:32.382189	f26977bd-539e-4e71-aa84-c34f09519d4c	3363
3273	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:28:32.38652	2023-12-06 19:28:32.387806	76f2948e-7088-4b8f-a7fb-224810d1daf1	3365
3274	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:28:32.391886	2023-12-06 19:28:32.393139	4df4143c-2a0c-43ca-bfdd-5a5b24c3de7c	3367
3275	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.397002	2023-12-06 19:28:32.398228	20b34b95-c0d6-4192-949d-4fb98de866e7	3369
3276	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.402413	2023-12-06 19:28:32.403818	53329777-29f0-4194-9f01-64462b652ed6	3371
3277	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:28:32.408123	2023-12-06 19:28:32.409384	4d7834ec-2679-4805-ba1f-7a7d32195aa7	3373
3278	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:28:32.435831	2023-12-06 19:28:32.437886	cdb507e5-bfff-46e8-8c37-b9c9f36c8eda	3375
3279	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:28:32.443791	2023-12-06 19:28:32.445061	816bc581-5f7a-4301-8830-7284ead40356	3377
3280	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:28:32.449366	2023-12-06 19:28:32.450602	031554dc-bcc9-4071-a0cd-770233e80c89	3379
3281	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:28:32.454815	2023-12-06 19:28:32.456106	1fac8ed5-77e2-4b1a-8662-d674f6aaf4f0	3381
3282	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:28:32.460133	2023-12-06 19:28:32.461386	c0c5ed43-ec1f-4f78-9dc7-5acc9de3b0fc	3383
3283	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:28:32.465646	2023-12-06 19:28:32.46689	ffacf5bd-dd1e-42f7-9d5e-16f1796ba695	3385
3284	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.471007	2023-12-06 19:28:32.472231	6d640203-0fd9-49eb-b666-569bd39bab56	3387
3285	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.476159	2023-12-06 19:28:32.477509	cb72c8b2-01b0-4bfd-8def-b5a6194c82ad	3389
3286	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:28:32.481767	2023-12-06 19:28:32.48301	08dd093a-1361-402c-bc55-64199bfa5931	3391
3287	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Assist	One Teach, One Assist	One Teach, One Assist	\N	\N	\N	\N	2023-12-06 19:28:32.508711	2023-12-06 19:28:32.510641	d5d165a7-8370-4331-bd62-17c032ad0d38	3393
3288	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Observe	One Teach, One Observe	One Teach, One Observe	\N	\N	\N	\N	2023-12-06 19:28:32.515932	2023-12-06 19:28:32.517174	01dce4aa-89d4-497f-9ee5-f903ef5bb9f6	3395
3289	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Parallel Teaching	Parallel Teaching	Parallel Teaching	\N	\N	\N	\N	2023-12-06 19:28:32.521483	2023-12-06 19:28:32.522675	ce440245-a7ec-4277-b3d7-3c06a930b645	3397
3290	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Station Teaching	Station Teaching	Station Teaching	\N	\N	\N	\N	2023-12-06 19:28:32.526855	2023-12-06 19:28:32.528092	510606db-46d0-4db5-ac67-fccdeeee306f	3399
3291	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-12-06 19:28:32.532163	2023-12-06 19:28:32.533391	e6d3e0cb-9414-47c8-95b4-4d1ff667a114	3401
3292	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Team Teaching	Team Teaching	Team Teaching	\N	\N	\N	\N	2023-12-06 19:28:32.537691	2023-12-06 19:28:32.539071	be2c5e86-a6b9-41f4-9e02-3faa65fc9354	3403
3293	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Alternative Teaching	Alternative Teaching	Alternative Teaching	\N	\N	\N	\N	2023-12-06 19:28:32.543256	2023-12-06 19:28:32.544608	f616fc75-ed4c-4381-9e64-693412183972	3405
3294	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Renewed	Renewed	Renewed	\N	\N	\N	\N	2023-12-06 19:28:32.571034	2023-12-06 19:28:32.572998	10403b8f-c7ac-4419-bc86-178e28b903a8	3407
3295	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Revoked	Revoked	Revoked	\N	\N	\N	\N	2023-12-06 19:28:32.578528	2023-12-06 19:28:32.579821	be1b2736-42e9-4976-a926-6db388675642	3409
3296	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Suspended	Suspended	Suspended	\N	\N	\N	\N	2023-12-06 19:28:32.584159	2023-12-06 19:28:32.585555	ed1a0c67-7ae9-4894-ba26-479533f98024	3411
3297	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-12-06 19:28:32.590036	2023-12-06 19:28:32.591257	ce13008d-e682-4f31-9284-fa2afcb90dbe	3413
3298	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Voluntary Surrender	Voluntary Surrender	Voluntary Surrender	\N	\N	\N	\N	2023-12-06 19:28:32.595507	2023-12-06 19:28:32.596776	af2f0607-c2ec-44f9-82f6-ecf509404f19	3415
3299	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Expired	Expired	Expired	\N	\N	\N	\N	2023-12-06 19:28:32.600831	2023-12-06 19:28:32.602055	d96727f7-df42-48c2-830f-6a47a7eca38c	3417
3300	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-12-06 19:28:32.606208	2023-12-06 19:28:32.607472	c2402294-d4fb-4d30-9311-51fb7a21a74f	3419
3301	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-12-06 19:28:32.611802	2023-12-06 19:28:32.613025	5c223948-ce6c-4cfb-aead-b4760b497330	3421
3302	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:28:32.639534	2023-12-06 19:28:32.641568	dc590535-55e3-42a5-94e6-c59bcd218958	3423
3303	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:28:32.647201	2023-12-06 19:28:32.648507	14df392c-ecdf-440c-b9b2-d89bf1ae0829	3425
3304	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:28:32.652861	2023-12-06 19:28:32.654177	7c95d1d4-d91a-41cf-b335-8a0fadaaa5e0	3427
3305	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:28:32.658341	2023-12-06 19:28:32.6596	8124464c-854f-41ff-b5ca-31cbc3940375	3429
3306	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:28:32.663603	2023-12-06 19:28:32.664853	850a9775-1c05-4e9c-8d32-408c9cac0fae	3431
3307	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:28:32.669186	2023-12-06 19:28:32.670464	b3b79e1b-1862-4670-9ed6-5ed7ec8b185f	3433
3308	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.674517	2023-12-06 19:28:32.675982	4fdda6a7-e62c-4aab-9f4f-6c4a19025647	3435
3309	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.679934	2023-12-06 19:28:32.681161	625712d9-71bd-45d8-b221-32666ffac73a	3437
3310	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:28:32.685016	2023-12-06 19:28:32.686269	3933cdf1-46a1-453d-acf7-6effbe063ffe	3439
3311	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-12-06 19:28:32.712737	2023-12-06 19:28:32.714594	d643b719-71cd-497f-bb79-1bca92ad0ddc	3441
3312	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-12-06 19:28:32.71998	2023-12-06 19:28:32.721264	ffa9da5f-9f2a-4e11-9db4-df291a125142	3443
3313	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:32.725534	2023-12-06 19:28:32.726766	408c2863-8492-4060-af7c-8aeb1d359fdf	3445
3314	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-12-06 19:28:32.730948	2023-12-06 19:28:32.732183	15052b7d-6c3c-42f4-9631-a75777adaac4	3447
3315	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Growth Measures	Student Growth Measures	Student Growth Measures	\N	\N	\N	\N	2023-12-06 19:28:32.736712	2023-12-06 19:28:32.737959	d9fde429-ac5a-44f3-82a8-ce3f68941037	3449
3316	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:32.742017	2023-12-06 19:28:32.743215	49b21404-1206-4387-bf1b-0b267335ffa3	3451
3317	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:32.747094	2023-12-06 19:28:32.748352	f9b8fc4c-fb4f-4a53-89a9-d1ac48fcd93e	3453
3318	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-12-06 19:28:32.752266	2023-12-06 19:28:32.753501	d85c1c68-b5a5-41d0-84ae-ebe5c7bc780e	3455
3319	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-12-06 19:28:32.757559	2023-12-06 19:28:32.758759	5830e864-ffa6-45c9-876f-3e956b74b287	3457
3320	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-12-06 19:28:32.762717	2023-12-06 19:28:32.76404	f21b7414-35d1-4c1d-b107-dc890354cd00	3459
3321	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-12-06 19:28:32.7909	2023-12-06 19:28:32.792875	be31d129-f3b3-48c3-a916-268ec88447e1	3461
3322	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-12-06 19:28:32.798273	2023-12-06 19:28:32.799529	984d0500-4f7f-4816-84c6-4946d3432d2c	3463
3323	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-12-06 19:28:32.80367	2023-12-06 19:28:32.804935	0db8a9fb-7860-4e90-894c-f89327790d2b	3465
3324	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-12-06 19:28:32.808961	2023-12-06 19:28:32.81021	8899eaf1-ead7-4987-8223-4b539de774a2	3467
3325	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-12-06 19:28:32.81416	2023-12-06 19:28:32.815372	17c48d8d-9b5e-4080-8a0c-e2ae93b1a2f0	3469
3326	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-12-06 19:28:32.819402	2023-12-06 19:28:32.820609	fcbd6735-5342-4e27-b25e-41573a8a04a9	3471
3327	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.824554	2023-12-06 19:28:32.825882	435030ba-5543-4f1c-b1ff-f664773aed16	3473
3328	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-12-06 19:28:32.82986	2023-12-06 19:28:32.83119	8183ac3d-878b-475e-932e-f38bea7236e4	3475
3329	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-12-06 19:28:32.835466	2023-12-06 19:28:32.836712	5e7ecea2-7411-4a33-b327-545086bbde06	3477
3330	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Alternative Program	Alternative Program	Alternative Program	\N	\N	\N	\N	2023-12-06 19:28:32.86253	2023-12-06 19:28:32.864725	fbc52e75-a951-4040-8efd-c7bf13e9f575	3479
3331	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Center for Professional Development	Center for Professional Development	Center for Professional Development	\N	\N	\N	\N	2023-12-06 19:28:32.870144	2023-12-06 19:28:32.871418	c788586f-cfb9-4441-907d-437ae3812bcf	3481
3332	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Vocational Experience	Vocational Experience	Vocational Experience	\N	\N	\N	\N	2023-12-06 19:28:32.875773	2023-12-06 19:28:32.877052	6c542fb3-455c-41da-9ae5-dea9e7c6b8e3	3483
3333	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Certification by Exam	Certification by Exam	Certification by Exam	\N	\N	\N	\N	2023-12-06 19:28:32.881125	2023-12-06 19:28:32.882363	9700b932-dfeb-4398-af6e-9a45f997793e	3485
3334	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Out of State	Out of State	Out of State	\N	\N	\N	\N	2023-12-06 19:28:32.886435	2023-12-06 19:28:32.887641	bb39ebe0-171c-4c47-8aea-dbe0e9327f9e	3487
3335	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Paraprofessional Program	Paraprofessional Program	Paraprofessional Program	\N	\N	\N	\N	2023-12-06 19:28:32.891419	2023-12-06 19:28:32.892703	e2f6d936-a23c-4023-bba5-edee6a091871	3489
3336	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Post-Baccalaureate	Post-Baccalaureate	Post-Baccalaureate	\N	\N	\N	\N	2023-12-06 19:28:32.896687	2023-12-06 19:28:32.897914	5f7c3b4b-d31d-44d1-8e97-6f7f1f6a7f30	3491
3337	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Permit Program	Permit Program	Permit Program	\N	\N	\N	\N	2023-12-06 19:28:32.90223	2023-12-06 19:28:32.903535	95b6f929-a0d6-4144-977e-de0682140cc8	3493
3338	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Standard Program	Standard Program	Standard Program	\N	\N	\N	\N	2023-12-06 19:28:32.907788	2023-12-06 19:28:32.909014	9c7c4101-8a0a-4f9a-a839-f66a46bfc0bb	3495
3339	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-12-06 19:28:32.914366	2023-12-06 19:28:32.915633	55a7a0f6-4103-4053-894a-efe39ae741f9	3497
3340	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Temporary Teaching Certificate	Temporary Teaching Certificate	Temporary Teaching Certificate	\N	\N	\N	\N	2023-12-06 19:28:32.919813	2023-12-06 19:28:32.921077	78f24b45-ea20-4c57-b1b5-44ec710303b3	3499
3341	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	Educator Preparation Provider	Educator Preparation Provider	Educator Preparation Provider	\N	\N	\N	\N	2023-12-06 19:28:32.965389	2023-12-06 19:28:32.964527	b7eafc5b-4341-471e-ad38-debc5fa74f29	3500
3342	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	University	University	University	\N	\N	\N	\N	2023-12-06 19:28:32.972091	2023-12-06 19:28:32.97205	d5d1e132-a146-47f1-bfac-8092360f3100	3501
3343	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-12-06 19:28:33.000858	2023-12-06 19:28:33.000016	e6cd53e6-e0b0-4c3c-91ad-6608d57e092b	3502
3344	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	English Language Learners	English Language Learners	English Language Learners	\N	\N	\N	\N	2023-12-06 19:28:33.007525	2023-12-06 19:28:33.00748	2a6a4a40-e399-4c8b-9e90-5d4c58285572	3503
3345	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Multiple Subjects	Multiple Subjects	Multiple Subjects	\N	\N	\N	\N	2023-12-06 19:28:33.012067	2023-12-06 19:28:33.012011	73439f4b-54b9-4015-a0b2-4229f5a9c540	3504
3346	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-12-06 19:28:33.016743	2023-12-06 19:28:33.016703	af380416-62f4-4a21-84e8-6d89ea497016	3505
3347	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-12-06 19:28:33.044245	2023-12-06 19:28:33.046313	33576999-274d-4aef-b338-e8223385110b	3507
3348	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-12-06 19:28:33.05149	2023-12-06 19:28:33.052821	e38b2138-64fe-459c-a217-6822121f86de	3509
3349	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:33.057025	2023-12-06 19:28:33.058285	c1701d4e-f3b6-4a59-ab0a-1d268c113f71	3511
3350	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-12-06 19:28:33.0628	2023-12-06 19:28:33.064152	11c45765-bad2-4a02-90f6-0c8e2cb28b5f	3513
3351	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	\N	2023-12-06 19:28:33.068681	2023-12-06 19:28:33.069984	65f4d63b-8d38-4ba0-b4a0-c5b99dd6e845	3515
3352	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:33.074288	2023-12-06 19:28:33.075562	2925063c-9a85-490a-b2a7-c55088fea211	3517
3353	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-12-06 19:28:33.079887	2023-12-06 19:28:33.08113	f49163a3-cb46-45d3-b3ac-0525994a00ab	3519
3354	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-12-06 19:28:33.085341	2023-12-06 19:28:33.086594	ef4edbe9-69da-4d61-acdf-2cec6bf75dab	3521
3355	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-12-06 19:28:33.091025	2023-12-06 19:28:33.09239	76683d45-1e56-41ee-95fe-4c9f416d27f7	3523
3356	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-12-06 19:28:33.096871	2023-12-06 19:28:33.098182	24d1bf33-a748-4c54-b953-82d8d1bcd74b	3525
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormapping (mappednamespace, mappedvalue, namespace, value, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: descriptormappingmodelentity; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormappingmodelentity (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
555
556
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
1335
1338
1337
1336
1339
1340
1341
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
2259
2264
2265
2271
2257
2263
2272
2273
2260
2261
2266
2268
2269
2258
2262
2267
2270
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
2041
2042
2043
2044
2045
2046
2048
2047
2049
2050
2051
2052
2053
2054
2055
2056
2057
2058
2059
2060
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
1033
1034
1035
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
2099
2097
2098
2100
2101
2103
2102
2104
2105
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, actualdisciplineactionlength, assignmentschoolid, disciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, iepplacementmeetingindicator, receivededucationservicesduringexpulsion, relatedtozerotolerancepolicy, responsibilityschoolid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
3154
3153
3155
3156
3157
3158
3159
3160
3161
3162
3163
3164
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, studentusi, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentassociation (disciplineactionidentifier, disciplinedate, studentusi, incidentidentifier, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
389
390
388
391
392
393
394
395
396
397
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, casenumber, incidentcost, incidentdate, incidentdescription, incidentlocationdescriptorid, incidenttime, reportedtolawenforcement, reporterdescriptiondescriptorid, reportername, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (incidentidentifier, schoolid, behaviordescriptorid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
1420
1423
1421
1422
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
469
471
475
477
478
480
472
474
479
481
470
473
476
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, additionalauthorsindicator, contentclassdescriptorid, cost, costratedescriptorid, description, interactivitystyledescriptorid, learningresourcemetadatauri, learningstandardid, namespace, publicationdate, publicationyear, publisher, shortdescription, timerequired, userightsurl, version, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (contentidentifier, author, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, operationalstatusdescriptorid, shortnameofinstitution, website, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationassociationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationassociationtypedescriptor (educationorganizationassociationtypedescriptorid) FROM stdin;
1973
1974
1975
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationid, educationorganizationcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
1151
1153
1154
1152
1155
1156
1157
1158
3341
3342
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
520
521
519
522
523
525
524
526
527
528
529
\.


--
-- Data for Name: educationorganizationindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicator (educationorganizationid, indicatordescriptorid, designatedby, indicatorgroupdescriptorid, indicatorleveldescriptorid, indicatorvalue, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicatorperiod (educationorganizationid, indicatordescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (educationorganizationid, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
2246
2248
2245
2252
2249
2251
2253
2254
2255
2247
2250
2256
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
2108
2109
2106
2107
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
88
92
87
91
94
86
90
85
89
93
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
1290
1291
1289
1288
1292
1293
1294
1295
1296
1297
1298
1299
1300
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
2140
2141
2142
2143
2144
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
342
345
344
343
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
362
361
363
364
365
366
367
368
369
370
371
372
373
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
1441
1444
1448
1453
1440
1446
1449
1452
1443
1445
1450
1454
1442
1447
1451
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: financialcollectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.financialcollectiondescriptor (financialcollectiondescriptorid) FROM stdin;
1968
1970
1969
1971
1972
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: functiondimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: funddimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, designatedby, participationstatusdescriptorid, statusbegindate, statusenddate, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationprogramparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, designatedby, statusenddate, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, currentgradeasofdate, currentgradeindicator, diagnosticstatement, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (gradebookentryidentifier, namespace, dateassigned, description, duedate, duetime, gradebookentrytypedescriptorid, gradingperioddescriptorid, localcoursecode, maxpoints, periodsequence, schoolid, schoolyear, sectionidentifier, sessionname, sourcesectionidentifier, title, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (gradebookentryidentifier, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
1026
1025
1027
1028
1030
1029
1031
1032
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid, diagnosticstatement, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
640
645
647
652
656
659
661
663
642
641
643
644
648
649
651
653
655
657
660
662
664
639
646
650
654
658
3169
3170
3171
3172
3173
3174
3175
3176
3177
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
666
665
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
140
143
142
141
144
145
146
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
530
532
533
531
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcreditconversion, totalrequiredcredits, totalrequiredcredittypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, creditconversion, credits, credittypedescriptorid, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, performanceleveldescriptorid, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
550
552
553
551
554
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
576
577
578
579
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
965
964
966
967
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
1345
1346
1347
1348
1349
1350
1351
1352
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
2299
2300
2301
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
3091
3094
3092
3093
3095
3096
3097
3098
3099
3100
3101
3102
3103
3104
3105
3106
3107
3108
3109
3110
3111
3112
3113
3115
3114
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatordescriptor (indicatordescriptorid) FROM stdin;
1047
1045
1046
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid) FROM stdin;
1067
1068
1069
1070
1071
1072
1073
1074
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorleveldescriptor (indicatorleveldescriptorid) FROM stdin;
37
39
38
40
36
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
3142
3141
3143
3140
3144
3146
3145
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
2437
2436
2439
2438
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
18
20
19
21
22
23
24
25
26
28
27
29
30
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid) FROM stdin;
581
584
582
585
583
586
580
587
588
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid) FROM stdin;
2138
2137
2139
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, begindate, deliverymethoddescriptorid, enddate, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
2
3
1
4
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (educationorganizationid, interventionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
1075
1076
1077
1078
1079
1080
1081
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, interventionidentificationcode, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (educationorganizationid, interventionstudyidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
1461
1462
1460
1459
1463
1464
1465
1466
1468
1467
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1490
1489
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1539
1538
1540
1541
1542
1543
1545
1544
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1557
1556
1558
1559
1560
1561
1562
1564
1563
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1585
1584
1583
1586
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1600
1599
1601
1602
1604
1605
1603
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1627
1628
1626
1629
1630
1631
1632
1633
1634
1635
1636
1638
1639
1640
1637
1641
1642
1644
1643
1645
1646
1647
1648
1649
1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1687
1691
1697
1700
1705
1707
1716
1719
1720
1723
1727
1729
1731
1732
1736
1739
1742
1745
1748
1751
1753
1757
1761
1765
1766
1769
1770
1774
1777
1782
1784
1787
1793
1795
1798
1800
1806
1811
1815
1818
1822
1826
1828
1829
1833
1837
1841
1846
1849
1853
1857
1860
1867
1871
1874
1883
1885
1888
1891
1894
1896
1898
1903
1908
1910
1914
1919
1923
1926
1931
1935
1937
1940
1942
1686
1692
1696
1699
1704
1708
1711
1714
1718
1721
1728
1734
1738
1740
1743
1747
1752
1754
1756
1762
1768
1775
1778
1781
1785
1789
1796
1803
1807
1809
1813
1819
1823
1824
1827
1831
1834
1838
1840
1844
1850
1855
1856
1863
1865
1868
1872
1878
1881
1887
1900
1904
1915
1920
1924
1929
1941
1688
1690
1695
1698
1701
1703
1706
1713
1715
1725
1735
1746
1749
1750
1759
1764
1767
1772
1779
1780
1783
1786
1788
1791
1792
1794
1797
1801
1805
1810
1814
1816
1821
1836
1842
1847
1851
1852
1859
1862
1864
1869
1870
1875
1877
1882
1886
1890
1892
1897
1899
1902
1906
1909
1911
1916
1917
1921
1927
1928
1932
1934
1939
1689
1693
1694
1702
1709
1710
1712
1717
1722
1724
1726
1730
1733
1737
1741
1744
1755
1758
1760
1763
1771
1773
1776
1790
1799
1802
1804
1808
1812
1817
1820
1825
1830
1832
1835
1839
1843
1845
1848
1854
1858
1861
1866
1873
1876
1879
1880
1884
1889
1893
1895
1901
1905
1907
1912
1913
1918
1922
1925
1930
1933
1936
1938
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
2229
2230
2231
2228
2232
2233
2234
2235
2237
2236
2238
2239
2240
2241
2242
2243
2244
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
3132
3133
3134
3135
3136
3137
3138
3139
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjective (learningobjectiveid, namespace, description, nomenclature, objective, parentlearningobjectiveid, parentnamespace, successcriteria, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningobjectiveacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectiveacademicsubject (learningobjectiveid, namespace, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandard (learningobjectiveid, namespace, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandardauthor (learningobjectiveid, namespace, author, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivegradelevel (learningobjectiveid, namespace, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivelearningstandard (learningobjectiveid, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, coursetitle, description, learningstandardcategorydescriptorid, learningstandarditemcode, learningstandardscopedescriptorid, namespace, parentlearningstandardid, successcriteria, uri, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (learningstandardid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
621
619
620
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (learningstandardid, author, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescription, learningstandardequivalencestrengthdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
2034
2037
2036
2035
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (learningstandardid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (learningstandardid, contentstandardname, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardprerequisitelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardprerequisitelearningstandard (learningstandardid, prerequisitelearningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
2145
2147
2146
2148
2149
2150
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
1145
1146
1148
1150
1147
1144
1149
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
1365
1366
1367
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
627
624
628
630
633
634
637
638
625
629
635
636
626
631
632
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
572
573
574
575
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, chartofaccountidentifier, chartofaccounteducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localactual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localbudget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localcontractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1354
1355
1353
1356
1357
1358
1359
1360
1361
1362
1364
1363
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, charterstatusdescriptorid, educationservicecenterid, localeducationagencycategorydescriptorid, parentlocaleducationagencyid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
2414
2413
2412
2416
2417
2418
2419
2420
2411
2415
2421
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (localeducationagencyid, fiscalyear, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, stateassessmentadministrationfunding, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localencumbrance (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localpayroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
709
708
710
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1999
1998
2000
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
1373
1376
1375
1374
1377
1378
1379
1380
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1387
1388
1390
1389
1392
1391
1393
\.


--
-- Data for Name: modelentitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.modelentitydescriptor (modelentitydescriptorid) FROM stdin;
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
2038
2039
2040
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
1306
1309
1308
1307
1310
1311
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
6
11
13
7
9
15
17
8
12
14
16
5
10
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
493
492
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, academicsubjectdescriptorid, description, maxrawscore, nomenclature, parentidentificationcode, percentofassessment, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: oldethnicitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.oldethnicitydescriptor (oldethnicitydescriptorid) FROM stdin;
1976
1977
1978
1979
1980
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, dateposted, datepostingremoved, employmentstatusdescriptorid, positiontitle, postingresultdescriptorid, programassignmentdescriptorid, staffclassificationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (educationorganizationid, requisitionnumber, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, requisitionnumber, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
334
335
338
340
337
336
339
341
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: operationalunitdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.organizationdepartment (organizationdepartmentid, academicsubjectdescriptorid, parenteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
568
569
571
570
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parent (parentusi, firstname, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, lastsurname, loginid, maidenname, middlename, parentuniqueid, personaltitleprefix, personid, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: parentaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddress (parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: parentaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddressperiod (parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentelectronicmail (parentusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: parentinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentinternationaladdress (parentusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguage (parentusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguageuse (parentusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentothername (parentusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: parentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentpersonalidentificationdocument (parentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: parenttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parenttelephone (parentusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
3116
3119
3117
3118
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
2112
2111
2113
2110
2114
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
1185
1191
1188
1189
1187
1190
1186
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
375
376
374
377
378
381
379
380
382
383
384
385
386
387
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.person (personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
2386
2387
2389
2388
2391
2390
2392
2393
2394
2395
2396
2397
2398
2399
2400
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
999
998
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
975
977
976
978
979
980
981
982
983
984
985
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
1984
1985
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
609
610
611
608
612
614
613
615
616
617
618
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, administrativefundingcontroldescriptorid, postsecondaryinstitutionleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
2377
2375
2379
2380
2385
2378
2382
2384
2376
2381
2383
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (postsecondaryinstitutionid, mediumofinstructiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid) FROM stdin;
1274
1273
1275
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid) FROM stdin;
406
407
408
409
410
411
412
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid) FROM stdin;
694
696
695
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
2121
2122
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
987
988
990
986
989
991
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningobjective (educationorganizationid, programname, programtypedescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, programname, programtypedescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: programservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programservice (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
1276
1277
1279
1278
1280
1281
1282
1283
1284
1285
1287
1286
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
1214
1213
1215
1216
1217
1219
1218
1220
1221
1223
1222
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1238
1237
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1268
1267
1269
1270
1271
1272
3165
3166
3167
3168
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
2328
2330
2329
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
2168
2169
2167
2166
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: projectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
450
448
449
451
453
452
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
3147
3149
3148
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
1981
1982
1983
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
1041
1044
1042
1043
1040
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.questionformdescriptor (questionformdescriptorid) FROM stdin;
482
484
483
485
486
487
488
489
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
561
562
563
564
565
567
566
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
2274
2276
2275
2278
2280
2281
2283
2285
2284
2286
2277
2279
2282
3221
3222
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
2124
2123
2125
2126
2127
2128
2130
2129
2131
2132
2133
2134
2135
2136
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
1430
1429
1428
1431
1432
1433
1434
1435
1436
1437
1438
1439
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
219
220
221
223
224
225
226
228
230
231
232
233
234
236
238
239
241
240
242
245
247
248
249
250
252
254
255
256
257
259
260
261
262
263
264
266
218
222
227
229
235
237
243
244
246
251
253
258
265
267
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
166
169
167
168
170
171
172
173
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gpacumulative, gpagivengradingperiod, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentlearningobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
1381
1384
1385
1383
1386
1382
\.


--
-- Data for Name: reportingtagdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportingtagdescriptor (reportingtagdescriptorid) FROM stdin;
1061
1059
1062
1060
1063
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
418
417
419
420
421
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
2319
2320
2321
2322
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
1327
1329
1328
1330
1331
1332
1333
1334
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, educationalenvironmentdescriptorid, eventdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
403
404
405
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
121
124
123
120
125
122
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
992
995
994
993
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, administrativefundingcontroldescriptorid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear, charterstatusdescriptorid, internetaccessdescriptorid, localeducationagencyid, magnetspecialprogramemphasisschooldescriptorid, schooltypedescriptorid, titleipartaschooldesignationdescriptorid) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolid, schoolcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
1405
1407
1406
1404
1408
1409
1411
1410
1412
1413
1414
1415
1416
1417
1418
1419
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
711
713
712
714
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
2202
2203
2204
2205
2206
2207
2208
2209
2210
2211
2212
2213
2214
2216
2215
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
2323
2325
2326
2327
2324
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id, changeversion) FROM stdin;
2024	2023-2024	t	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	3e090974-5e81-424e-98c7-a23e77708a3a	0
1991	1990-1991	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	fea4c6eb-23e6-4155-9083-0566e65837dc	0
1992	1991-1992	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	e5c20c5e-e27d-439e-8871-949b4964e048	0
1993	1992-1993	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	f0b2f31f-1520-47c2-9a38-bbc9b6a39379	0
1994	1993-1994	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	0b2e7ecf-06bf-4a2f-b322-9dfe80ffaa56	0
1995	1994-1995	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	4d87c8f5-bda9-47fc-8bdb-c76150216895	0
1996	1995-1996	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	a46c8c6e-bd62-460e-b7f9-6d81731bd398	0
1997	1996-1997	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	46936eaf-b3b5-439f-a9dc-669811a28100	0
1998	1997-1998	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	0a80d6ce-add6-4704-a5d4-c297c6e89ecc	0
1999	1998-1999	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	06e32f15-7775-4e67-a8bc-1f08a0a12353	0
2000	1999-2000	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	6c683216-9c3e-4b8d-a620-f394d942b315	0
2001	2000-2001	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	011a6441-2e4d-4ca0-a606-131610580154	0
2002	2001-2002	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	3c0e670a-eb40-41f8-b7ad-12e49c9b7b19	0
2003	2002-2003	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	7c55ab91-4d33-4641-b533-84d351ec4a6d	0
2004	2003-2004	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	0026f332-6b87-4614-9d8f-65ccb7d5df29	0
2005	2004-2005	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	fe8274fc-7875-43d3-a4bd-64f12c6c80bc	0
2006	2005-2006	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	660e1187-2926-4f7f-9e69-f97d890c179c	0
2007	2006-2007	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	a36e7bfd-8e38-41cd-a374-9b0470ad7754	0
2008	2007-2008	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	717cf0e8-4835-4d3b-bf02-753c5705aa83	0
2009	2008-2009	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	dc37722a-bb2e-4995-9ee8-1e974c35894a	0
2010	2009-2010	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	e557b7ce-968b-46b7-aa61-111faee32ac0	0
2011	2010-2011	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	cc43facd-0780-4d4e-ab87-d69c827091cf	0
2012	2011-2012	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	5f3a80d1-a5ca-47a4-a0e2-d6faf1cf6af8	0
2013	2012-2013	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	dcd530a0-4041-4b19-868c-206bcf246689	0
2014	2013-2014	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	f14cd0b6-4c4f-454e-b7a4-7256423b930b	0
2015	2014-2015	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	496c15c0-8f12-41f9-ab59-fdc271669c16	0
2016	2015-2016	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	93e13031-1eed-4e74-bba5-701fa74df34c	0
2017	2016-2017	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	6ebea5eb-e5f5-4b7d-99b6-e79de7c5f4ab	0
2018	2017-2018	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	ba0c9270-a6d7-4357-b142-7d5c05ab2418	0
2019	2018-2019	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	70f98bcb-5003-430c-ab5d-0d6052c5fe10	0
2020	2019-2020	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	d1b4bf46-9f2d-4dc7-bb30-fca4506be0aa	0
2021	2020-2021	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	9606c778-d89b-4ad1-a612-68ea720d58a3	0
2022	2021-2022	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	e07f6b99-de96-4136-ba0c-147b586acf66	0
2023	2022-2023	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	fb3bbc02-6f25-4422-a9c3-8ec21f737e41	0
2025	2024-2025	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	9dc1cdf5-c9e7-402f-b170-5d28245e6e4f	0
2026	2025-2026	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	4ddd9e32-291a-4b38-8b71-f2ff1567f24e	0
2027	2026-2027	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	005f95d8-e8be-4732-bce2-69ca2122dc3f	0
2028	2027-2028	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	3fb93019-a4b3-46a8-ad66-7bbdec3f3966	0
2029	2028-2029	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	c09e192d-6bae-4686-8fd9-673c366c84e0	0
2030	2029-2030	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	b5fcdd64-ec34-4365-830f-26ca96dd89f3	0
2031	2030-2031	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	389e143a-d942-49da-a44d-7bd68604b193	0
2032	2031-2032	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	1f3125ca-747b-450d-a882-9d6d99841266	0
2033	2032-2033	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	208a5e31-a9d1-4e86-ba63-a178caed0bb8	0
2034	2033-2034	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	ac00f6b0-228b-43c9-a3c7-10f45a712d69	0
2035	2034-2035	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	fde07fc0-b794-4169-8ac7-6ca1964a052c	0
2036	2035-2036	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	cf9485ee-2c3d-4ec5-9f3a-3b073e82d0b3	0
2037	2036-2037	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	9531d241-7f48-4e54-9d75-24488a728d0a	0
2038	2037-2038	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	615e86a2-504c-49f0-bd65-191637654cc6	0
2039	2038-2039	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	f577570a-3f16-46a3-b34a-ab07bd20414a	0
2040	2039-2040	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	2b128c25-3722-4e68-b1b8-474353652e2c	0
2041	2040-2041	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	f1165f26-c6c1-4b8f-a8bd-9a66f8e0cffd	0
2042	2041-2042	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	f7c1dbc8-561b-455f-b90d-23a36dda7110	0
2043	2042-2043	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	0cf624af-86de-47a9-ad2c-def2154fc729	0
2044	2043-2044	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	68fdebfe-f96e-4e14-98a0-45db09d7126c	0
2045	2044-2045	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	480f08c1-62d1-41ed-a7ec-bb14f6ea4318	0
2046	2045-2046	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	2f9aaf94-1bb9-4ab5-84b3-5f5f209c0b4d	0
2047	2046-2047	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	bccb08bf-9786-4e5a-bbcc-6d5b3dc5c077	0
2048	2047-2048	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	c4751400-160f-4b58-9db5-b2933955a15e	0
2049	2048-2049	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	38785345-798f-4471-b76e-da1c7e71b7b3	0
2050	2049-2050	f	2023-12-06 19:12:20.314491	2023-12-06 19:12:20.314491	377171f5-f6f2-4807-ba7c-7b4da198fef9	0
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, availablecreditconversion, availablecredits, availablecredittypedescriptorid, educationalenvironmentdescriptorid, instructionlanguagedescriptorid, locationclassroomidentificationcode, locationschoolid, mediumofinstructiondescriptorid, officialattendanceperiod, populationserveddescriptorid, sectionname, sequenceofcourse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
622
623
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
2182
2185
2183
2184
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2217
2218
2220
2219
2221
2222
2223
2224
2225
2226
2227
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
3062
3061
3060
3063
3064
3065
3066
3067
3068
3070
3069
3071
3072
3073
3074
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (schoolid, schoolyear, sessionname, gradingperioddescriptorid, periodsequence, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
1456
1455
1458
1457
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sourcedimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcesystemdescriptor (sourcesystemdescriptorid) FROM stdin;
135
136
137
139
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
1161
1165
1168
1162
1163
1169
1159
1164
1167
1160
1166
1170
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
1954
1953
1952
1955
1956
1957
1958
1959
1960
1962
1961
1963
1964
1965
1966
1967
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, birthdate, citizenshipstatusdescriptorid, firstname, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, highlyqualifiedteacher, hispaniclatinoethnicity, lastsurname, loginid, maidenname, middlename, oldethnicitydescriptorid, personaltitleprefix, personid, sexdescriptorid, sourcesystemdescriptorid, staffuniqueid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffancestryethnicorigin (staffusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
269
270
271
268
272
274
273
275
276
277
279
278
281
280
282
283
284
287
286
285
288
290
289
291
292
293
294
295
296
297
298
299
300
302
301
303
304
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, credentialidentifier, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, enddate, fulltimeequivalency, orderofassignment, positiontitle, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, addresstypedescriptorid, apartmentroomsuitenumber, buildingsitenumber, city, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, postalcode, stateabbreviationdescriptorid, streetnumbername, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (contacttitle, educationorganizationid, staffusi, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, credentialidentifier, department, enddate, fulltimeequivalency, hourlywage, offerdate, separationdescriptorid, separationreasondescriptorid, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (staffusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffusi, staffidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
307
308
309
310
311
312
313
314
315
316
317
318
319
321
320
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (staffusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (staffusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (staffusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
2298
2302
2303
2304
2305
2306
2307
2308
2310
2309
2311
2313
2312
2314
2315
2316
2317
2318
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (staffusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (staffusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (staffusi, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, begindate, classroompositiondescriptorid, enddate, highlyqualifiedteacher, percentagecontribution, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
1084
1087
1091
1093
1095
1098
1109
1110
1119
1122
1123
1126
1129
1134
1136
1141
1083
1089
1094
1096
1101
1104
1105
1107
1108
1112
1114
1115
1118
1124
1128
1130
1132
1139
1142
1085
1086
1092
1099
1103
1106
1111
1116
1120
1125
1135
1138
1143
1082
1088
1090
1097
1100
1102
1113
1117
1121
1127
1131
1133
1137
1140
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (stateeducationagencyid, schoolyear, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (stateeducationagencyid, fiscalyear, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, citizenshipstatusdescriptorid, dateenteredus, firstname, generationcodesuffix, lastsurname, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, sourcesystemdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeattemptedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, cumulativegradepointaverage, cumulativegradepointsearned, gradevaluequalifier, projectedgraduationdate, sessionattemptedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionearnedcreditconversion, sessionearnedcredits, sessionearnedcredittypedescriptorid, sessiongradepointaverage, sessiongradepointsearned, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, honorawarddate, honorawardexpiresdate, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, classrankingdate, percentageranking, totalnumberinclass, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, ctecompleter, diplomaawardexpiresdate, diplomadescription, diplomaleveldescriptorid, evidencestatement, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, administrationenvironmentdescriptorid, administrationlanguagedescriptorid, assessedminutes, eventcircumstancedescriptorid, eventdescription, platformtypedescriptorid, reasonnottesteddescriptorid, reportedschoolid, reportedschoolidentifier, retestindicatordescriptorid, schoolyear, serialnumber, whenassessedgradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmenteducationorganizationassociation (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentitemresultdescriptorid, assessmentresponse, descriptivefeedback, itemnumber, rawscoreresult, responseindicatordescriptorid, timeassessed, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperiod (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, administrationdate, administrationenddate, assessedminutes, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
2015
2014
2017
2016
2019
2020
2018
2021
2022
2023
2024
2025
2026
2027
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogram (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, careerpathwaydescriptorid, cipcode, cteprogramcompletionindicator, primarycteprogramindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid, cipcode, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociation (incidentidentifier, schoolid, studentusi, studentparticipationcodedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociationbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociationbehavior (incidentidentifier, schoolid, studentusi, behaviordescriptorid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, barriertointernetaccessinresidencedescriptorid, hispaniclatinoethnicity, internetaccessinresidence, internetaccesstypeinresidencedescriptorid, internetperformanceinresidencedescriptorid, limitedenglishproficiencydescriptorid, loginid, oldethnicitydescriptorid, primarylearningdeviceaccessdescriptorid, primarylearningdeviceawayfromschooldescriptorid, primarylearningdeviceproviderdescriptorid, profilethumbnail, sexdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationancestryethnicorigin (educationorganizationid, studentusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (educationorganizationid, studentusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, studentusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipat_810575 (educationorganizationid, studentusi, programtypedescriptorid, programcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipation (educationorganizationid, studentusi, programtypedescriptorid, begindate, designatedby, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, studentusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentusi, studentcharacteristicdescriptorid, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, studentusi, indicatorname, designatedby, indicator, indicatorgroup, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (educationorganizationid, studentusi, indicatorname, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (gradebookentryidentifier, namespace, studentusi, assignmentlatestatusdescriptorid, competencyleveldescriptorid, datefulfilled, diagnosticstatement, lettergradeearned, numericgradeearned, pointsearned, submissionstatusdescriptorid, timefulfilled, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, awaitingfostercare, homelessprimarynighttimeresidencedescriptorid, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
3120
3121
3123
3122
3124
3125
3126
3127
3129
3128
3130
3131
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, dosage, englishlearnerparticipation) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear, monitoreddescriptorid, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjective (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivegeneralstudentprogramassociation (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivestudentsectionassociation (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, continuationofservicesreasondescriptorid, eligibilityexpirationdate, lastqualifyingmove, priorityforservices, qualifyingarrivaldate, stateresidencydate, usinitialentry, usinitialschoolentry, usmostrecententry) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid, neglectedordelinquentprogramdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (studentusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparentassociation (parentusi, studentusi, contactpriority, contactrestrictions, emergencycontactstatus, legalguardian, liveswith, primarycontactstatus, relationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
691
689
692
690
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, calendarcode, classofschoolyear, educationorganizationid, employedwhileenrolled, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, exitwithdrawdate, exitwithdrawtypedescriptorid, fulltimeequivalency, graduationplantypedescriptorid, graduationschoolyear, primaryschool, repeatgradeindicator, residencystatusdescriptorid, schoolchoicetransfer, schoolyear, termcompletionindicator, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (entrydate, schoolid, studentusi, educationplandescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attemptstatusdescriptorid, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceeventclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceeventclassperiod (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, iepbegindate, iependdate, iepreviewdate, lastevaluationdate, medicallyfragile, multiplydisabled, schoolhoursperweek, specialeducationhoursperweek, specialeducationsettingdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: submissionstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.submissionstatusdescriptor (submissionstatusdescriptorid) FROM stdin;
399
400
401
398
402
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.survey (namespace, surveyidentifier, educationorganizationid, numberadministered, schoolid, schoolyear, sessionname, surveycategorydescriptorid, surveytitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycategorydescriptor (surveycategorydescriptorid) FROM stdin;
2401
2403
2404
2402
2405
2406
2407
2408
2409
2410
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyleveldescriptor (surveyleveldescriptorid) FROM stdin;
95
101
103
108
115
118
96
99
106
107
114
119
98
100
104
109
112
117
97
102
105
110
111
113
116
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestion (namespace, questioncode, surveyidentifier, questionformdescriptorid, questiontext, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionmatrix; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionmatrix (namespace, questioncode, surveyidentifier, matrixelement, maxrawscore, minrawscore, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, comment, noresponse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsechoice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsechoice (namespace, questioncode, surveyidentifier, sortorder, numericvalue, textvalue, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement, maxnumericresponse, minnumericresponse, noresponse, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsevalue; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsevalue (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, electronicmailaddress, fullname, location, parentusi, responsedate, responsetime, staffusi, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsesurveylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsesurveylevel (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, sectionrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
3075
3080
3076
3081
3078
3082
3077
3079
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
591
589
593
596
598
600
602
603
592
594
597
601
590
595
599
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
422
424
423
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
2175
2174
2176
2177
2178
2179
2180
2181
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
2186
2189
2188
2187
2190
2191
2192
2193
2194
2196
2195
2197
2198
2199
2200
2201
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
32
31
34
33
35
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
60
62
59
61
63
64
66
65
67
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
1171
1172
1173
1174
1175
1176
1177
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
2440
2441
2443
2442
2444
2445
2446
2447
2448
2449
2450
2451
2453
2452
2454
2455
2456
2457
2458
2459
2460
2461
2462
2463
2464
2465
2466
2467
2468
2469
2470
2471
2473
2472
2474
2475
2476
2477
2478
2479
2480
2481
2482
2483
2484
2485
2486
2487
2489
2488
2490
2491
2492
2493
2494
2495
2496
2497
2498
2499
2500
2501
2502
2503
2504
2505
2506
2507
2508
2509
2511
2510
2512
2513
2514
2515
2516
2517
2518
2519
2520
2521
2522
2523
2524
2525
2526
2527
2528
2529
2530
2531
2532
2533
2534
2535
2536
2537
2538
2539
2540
2541
2543
2542
2544
2545
2546
2547
2548
2549
2550
2551
2552
2553
2555
2557
2556
2554
2558
2559
2560
2561
2562
2563
2564
2565
2566
2567
2569
2568
2570
2571
2572
2573
2574
2575
2576
2577
2578
2579
2580
2581
2582
2583
2584
2585
2586
2587
2588
2589
2590
2591
2592
2593
2594
2595
2596
2597
2599
2598
2600
2601
2602
2603
2604
2605
2606
2607
2608
2609
2610
2611
2612
2613
2614
2615
2616
2617
2618
2619
2620
2621
2622
2623
2624
2625
2626
2627
2628
2629
2630
2631
2632
2634
2633
2635
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2652
2651
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2669
2672
2676
2678
2680
2683
2685
2689
2692
2696
2700
2702
2706
2709
2712
2716
2723
2725
2730
2735
2747
2750
2755
2758
2761
2764
2765
2768
2771
2776
2780
2785
2786
2788
2791
2800
2813
2815
2818
2820
2827
2832
2837
2839
2847
2849
2854
2858
2859
2869
2871
2872
2876
2878
2886
2896
2902
2905
2913
2916
2918
2924
2929
2931
2936
2941
2945
2949
2951
2954
2958
2963
2967
2970
2974
2977
2982
2987
2990
2993
2996
3000
3002
3005
3009
3015
3018
3023
3027
3036
3038
3042
3045
3047
3052
3055
3058
2668
2671
2675
2686
2690
2693
2698
2701
2705
2708
2711
2719
2721
2724
2727
2728
2731
2733
2737
2742
2744
2753
2760
2762
2767
2769
2772
2777
2782
2784
2790
2793
2796
2799
2803
2806
2809
2812
2817
2822
2826
2828
2831
2835
2840
2843
2848
2850
2852
2856
2860
2863
2865
2868
2879
2882
2883
2885
2888
2890
2892
2895
2897
2900
2904
2909
2911
2914
2919
2921
2925
2930
2934
2938
2944
2947
2953
2956
2964
2966
2973
2976
2979
2981
2988
2991
2995
2998
3007
3008
3012
3014
3019
3021
3025
3028
3033
3035
3039
3043
3050
3054
3057
2670
2674
2679
2682
2687
2688
2694
2697
2699
2704
2710
2714
2717
2718
2722
2726
2729
2732
2736
2738
2740
2741
2745
2748
2751
2754
2756
2759
2763
2766
2774
2775
2778
2779
2781
2783
2787
2789
2794
2795
2798
2801
2805
2807
2811
2814
2816
2823
2825
2829
2834
2836
2841
2845
2846
2851
2857
2862
2867
2874
2875
2877
2881
2887
2889
2891
2893
2898
2901
2907
2910
2915
2917
2922
2927
2932
2933
2937
2940
2943
2948
2952
2957
2959
2961
2965
2969
2971
2983
2985
2986
2992
2994
2997
3003
3006
3010
3016
3020
3024
3030
3031
3034
3040
3041
3048
3053
2667
2673
2677
2681
2684
2691
2695
2703
2707
2713
2715
2720
2734
2739
2743
2746
2749
2752
2757
2770
2773
2792
2797
2802
2804
2808
2810
2819
2821
2824
2830
2833
2838
2842
2844
2853
2855
2861
2864
2866
2870
2873
2880
2884
2894
2899
2903
2906
2908
2912
2920
2923
2926
2928
2935
2939
2942
2946
2950
2955
2960
2962
2968
2972
2975
2978
2980
2984
2989
2999
3001
3004
3011
3013
3017
3022
3026
3029
3032
3037
3044
3046
3049
3051
3056
3059
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
1179
1180
1183
1184
1181
1178
1182
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2023-12-06 19:12:20.318937	2023-12-06 19:12:20.318937	2b77704c-1304-46d4-8889-a5649e3c554e
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2023-12-06 19:12:17.558538
2	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2023-12-06 19:12:17.572119
3	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2023-12-06 19:12:18.377353
4	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2023-12-06 19:12:19.967114
5	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2023-12-06 19:12:20.070271
6	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2023-12-06 19:12:20.12662
7	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2023-12-06 19:12:20.140513
8	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2023-12-06 19:12:20.146856
9	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2023-12-06 19:12:20.159003
10	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2023-12-06 19:12:20.162375
11	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2023-12-06 19:12:20.164195
12	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2023-12-06 19:12:20.17
13	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2023-12-06 19:12:20.171118
14	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1040-MissingSecurityViews.sql	2023-12-06 19:12:20.173192
15	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1100-AddMoreContextToEducationIdentifiersView.sql	2023-12-06 19:12:20.177558
16	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1100-CorrectCommunityOrganizationAuthViews.sql	2023-12-06 19:12:20.179442
17	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1120-RemoveCompositesHierarchicalViews.sql	2023-12-06 19:12:20.181648
18	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1150-UpdatedAuthViewsToPreventDuplicatesFromStaffEdOrgAssignmentsAndEmployments.sql	2023-12-06 19:12:20.186842
19	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1160-UpdateVersionTo510.sql	2023-12-06 19:12:20.18791
20	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1170-UpdatedAuthViewsToRemoveJoin.sql	2023-12-06 19:12:20.189505
21	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1180-Add-OrgDeptId-to-EdOrgIdentifiers.sql	2023-12-06 19:12:20.194114
22	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1190-UpdateVersionTo520.sql	2023-12-06 19:12:20.195533
23	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1200-AuthViewsSupportOrgDeptId.sql	2023-12-06 19:12:20.202406
24	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1290-RemoveAllUnusedAuthorizationViews.sql	2023-12-06 19:12:20.208816
25	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1300-CreateEdOrgToEdOrgTable.sql	2023-12-06 19:12:20.211163
26	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1302-CreateEdOrgToEdOrgTriggers.sql	2023-12-06 19:12:20.219198
27	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1303-AuthViewEducationOrganizationIdToStudentUSI.sql	2023-12-06 19:12:20.220699
28	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1304-AuthViewEducationOrganizationIdToParentUSI.sql	2023-12-06 19:12:20.222113
29	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1305-AuthViewsEducationOrganizationIdToStaffUSI.sql	2023-12-06 19:12:20.223534
30	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1306-AuthViewEducationOrganizationIdToStudentUSIThroughResponsibility.sql	2023-12-06 19:12:20.224723
31	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1320-UpdateVersionTo53.sql	2023-12-06 19:12:20.225762
32	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1340-UpdateVersionTo60.sql	2023-12-06 19:12:20.226788
33	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1370-AddEducationOrganizationIdToEducationOrganizationIdIndex.sql	2023-12-06 19:12:20.228873
34	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1380-UpdateVersionTo61.sql	2023-12-06 19:12:20.229716
35	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1390-UpdateVersionTo70.sql	2023-12-06 19:12:20.230661
36	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1410-CreateIndex-EdOrgIdsRelationship-AuthPerformance.sql	2023-12-06 19:12:20.290174
37	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1420-UpdateEdFiStandardVersionTo40.sql	2023-12-06 19:12:20.291484
38	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1430-UpdateVersionTo71.sql	2023-12-06 19:12:20.29232
39	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2023-12-06 19:12:20.317882
40	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2023-12-06 19:12:20.319454
41	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2023-12-06 19:12:20.321461
42	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-12-06 19:12:20.338412
43	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-12-06 19:12:20.340191
44	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-12-06 19:12:20.569017
45	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-12-06 19:12:20.660137
46	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0110-AddSnapshot-Tables.sql	2023-12-06 19:12:20.662452
47	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0120-AddSnapshotIdColumnUniqueIndexes.sql	2023-12-06 19:12:20.664032
48	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0130-AddSnapshotExtendedProperties.sql	2023-12-06 19:12:20.664965
49	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-12-06 19:12:20.914907
50	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-12-06 19:12:20.979671
51	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-12-06 19:12:21.156085
52	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.1010-CreateGetMaxChangeVersionFunction.sql	2023-12-06 19:12:21.158233
53	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.1020-AuthViewsIncludingDeletes.sql	2023-12-06 19:12:21.162476
54	EdFi.Ods.Standard.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.1030-DropSnapshot-Table.sql	2023-12-06 19:12:21.164835
55	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0001-EXTENSION-TPDM-SchemasValidation.sql	2023-12-06 19:28:08.398275
56	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0010-EXTENSION-TPDM-Schemas.sql	2023-12-06 19:28:08.408736
57	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0020-EXTENSION-TPDM-Tables.sql	2023-12-06 19:28:08.514486
58	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0030-EXTENSION-TPDM-ForeignKeys.sql	2023-12-06 19:28:08.71743
59	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0040-EXTENSION-TPDM-IdColumnUniqueIndexes.sql	2023-12-06 19:28:08.730507
60	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.0050-EXTENSION-TPDM-ExtendedProperties.sql	2023-12-06 19:28:08.739291
61	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.1410-EXTENSION-TPDM-CreateIndex-EdOrgIdsRelationship-AuthPerformance.sql	2023-12-06 19:28:08.750194
62	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-12-06 19:28:08.78297
63	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-12-06 19:28:08.784431
64	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-12-06 19:28:08.818571
65	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-12-06 19:28:08.831287
66	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-12-06 19:28:08.874614
67	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-12-06 19:28:08.882761
68	Extensions.TPDM.1.1.0.Standard.4.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-12-06 19:28:08.903018
\.


--
-- Data for Name: accreditationstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.accreditationstatusdescriptor (accreditationstatusdescriptorid) FROM stdin;
3186
3187
3188
3189
3190
\.


--
-- Data for Name: aidtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.aidtypedescriptor (aidtypedescriptorid) FROM stdin;
3223
3224
3225
3226
3227
3228
3229
3230
3231
3232
3233
3234
3235
3236
3237
3238
3239
3240
3241
3242
3243
3244
3245
3246
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidate (candidateidentifier, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, dateenteredus, displacementstatus, economicdisadvantaged, englishlanguageexamdescriptorid, firstgenerationstudent, firstname, genderdescriptorid, generationcodesuffix, hispaniclatinoethnicity, lastsurname, limitedenglishproficiencydescriptorid, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateaddress; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddress (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: candidateaddressperiod; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddressperiod (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisability; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisability (candidateidentifier, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisabilitydesignation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisabilitydesignation (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociation (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, enddate, eppprogrampathwaydescriptorid, reasonexiteddescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationcohortyear (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization, enddate, minorspecialization, createdate) FROM stdin;
\.


--
-- Data for Name: candidateelectronicmail; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateelectronicmail (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguage; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguage (candidateidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguageuse; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguageuse (candidateidentifier, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateothername; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateothername (candidateidentifier, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: candidatepersonalidentificationdocument; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatepersonalidentificationdocument (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: candidaterace; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidaterace (candidateidentifier, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatetelephone; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatetelephone (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: certificationroutedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.certificationroutedescriptor (certificationroutedescriptorid) FROM stdin;
3330
3331
3332
3333
3334
3335
3336
3337
3338
3339
3340
\.


--
-- Data for Name: coteachingstyleobserveddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.coteachingstyleobserveddescriptor (coteachingstyleobserveddescriptorid) FROM stdin;
3287
3288
3289
3290
3291
3292
3293
\.


--
-- Data for Name: credentialextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialextension (credentialidentifier, stateofissuestateabbreviationdescriptorid, boardcertificationindicator, certificationroutedescriptorid, certificationtitle, credentialstatusdate, credentialstatusdescriptorid, educatorroledescriptorid, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstatusdescriptor (credentialstatusdescriptorid) FROM stdin;
3294
3295
3296
3297
3298
3299
3300
3301
\.


--
-- Data for Name: credentialstudentacademicrecord; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstudentacademicrecord (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogram (educationorganizationid, programname, programtypedescriptorid, accreditationstatusdescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogramgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogramgradelevel (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorroledescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorroledescriptor (educatorroledescriptorid) FROM stdin;
3197
3198
3199
3200
3201
3202
3203
3204
3205
3206
3207
3208
3209
3210
3211
3212
3213
3214
3215
\.


--
-- Data for Name: englishlanguageexamdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.englishlanguageexamdescriptor (englishlanguageexamdescriptorid) FROM stdin;
3182
3183
3184
3185
\.


--
-- Data for Name: eppprogrampathwaydescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.eppprogrampathwaydescriptor (eppprogrampathwaydescriptorid) FROM stdin;
3216
3217
3218
3219
3220
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluation (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationdescription, evaluationtypedescriptorid, interraterreliabilityscore, maxrating, minrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelement (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementrating (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, areaofrefinement, areaofreinforcement, comments, evaluationelementratingleveldescriptorid, feedback, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratinglevel (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingleveldescriptor (evaluationelementratingleveldescriptorid) FROM stdin;
3302
3303
3304
3305
3306
3307
3308
3309
3310
\.


--
-- Data for Name: evaluationelementratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingresult (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjective (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationobjectivedescription, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiverating (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, comments, objectiveratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratinglevel (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratingresult (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationperioddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationperioddescriptor (evaluationperioddescriptorid) FROM stdin;
3249
3250
3251
3252
3253
3254
3255
3256
3257
3258
3259
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationrating (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, evaluationratingleveldescriptorid, evaluationratingstatusdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingleveldescriptor (evaluationratingleveldescriptorid) FROM stdin;
3269
3270
3271
3272
3273
3274
3275
3276
3277
\.


--
-- Data for Name: evaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingresult (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewer (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewerreceivedtraining (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingstatusdescriptor (evaluationratingstatusdescriptorid) FROM stdin;
3191
3192
3193
3194
3195
3196
\.


--
-- Data for Name: evaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationtypedescriptor (evaluationtypedescriptorid) FROM stdin;
3347
3348
3349
3350
3351
3352
3353
3354
3355
3356
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.financialaid (aidtypedescriptorid, begindate, studentusi, aidamount, aidconditiondescription, enddate, pellgrantrecipient, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: genderdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.genderdescriptor (genderdescriptorid) FROM stdin;
3178
3179
3180
3181
\.


--
-- Data for Name: objectiveratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.objectiveratingleveldescriptor (objectiveratingleveldescriptorid) FROM stdin;
3321
3322
3323
3324
3325
3326
3327
3328
3329
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluation (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, academicsubjectdescriptorid, performanceevaluationdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationgradelevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationrating (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, actualdate, actualduration, actualtime, announced, comments, coteachingstyleobserveddescriptorid, performanceevaluationratingleveldescriptorid, scheduledate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingleveldescriptor (performanceevaluationratingleveldescriptorid) FROM stdin;
3260
3261
3262
3263
3264
3265
3266
3267
3268
\.


--
-- Data for Name: performanceevaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingresult (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewer (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewerreceivedtraining (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationtypedescriptor (performanceevaluationtypedescriptorid) FROM stdin;
3311
3312
3313
3314
3315
3316
3317
3318
3319
3320
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricdimension (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid, criteriondescription, dimensionorder, rubricratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricratingleveldescriptor (rubricratingleveldescriptorid) FROM stdin;
3278
3279
3280
3281
3282
3283
3284
3285
3286
\.


--
-- Data for Name: schoolextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.schoolextension (schoolid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponseextension (namespace, surveyidentifier, surveyresponseidentifier, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveysectionresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.academicweek (oldschoolid, oldweekidentifier, newschoolid, newweekidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.accountabilityrating (oldeducationorganizationid, oldratingtitle, oldschoolyear, neweducationorganizationid, newratingtitle, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessment (oldassessmentidentifier, oldnamespace, newassessmentidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentitem (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentscorerangelearningstandard (oldassessmentidentifier, oldnamespace, oldscorerangeid, newassessmentidentifier, newnamespace, newscorerangeid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.balancesheetdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.bellschedule (oldbellschedulename, oldschoolid, newbellschedulename, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendar (oldcalendarcode, oldschoolid, oldschoolyear, newcalendarcode, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendardate (oldcalendarcode, olddate, oldschoolid, oldschoolyear, newcalendarcode, newdate, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.chartofaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.classperiod (oldclassperiodname, oldschoolid, newclassperiodname, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.cohort (oldcohortidentifier, oldeducationorganizationid, newcohortidentifier, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.communityproviderlicense (oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization, newcommunityproviderid, newlicenseidentifier, newlicensingorganization, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.competencyobjective (oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, neweducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.course (oldcoursecode, oldeducationorganizationid, newcoursecode, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.courseoffering (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.coursetranscript (oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, newcourseattemptresultdescriptorid, newcourseattemptresultdescriptornamespace, newcourseattemptresultdescriptorcodevalue, newcoursecode, newcourseeducationorganizationid, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.credential (oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue, newcredentialidentifier, newstateofissuestateabbreviationdescriptorid, newstateofissuestateabbreviationdescriptornamespace, newstateofissuestateabbreviationdescriptorcodevalue, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptor (olddescriptorid, oldcodevalue, oldnamespace, newdescriptorid, newcodevalue, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptormapping (oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue, newmappednamespace, newmappedvalue, newnamespace, newvalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineaction (olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid, newdisciplineactionidentifier, newdisciplinedate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineincident (oldincidentidentifier, oldschoolid, newincidentidentifier, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationcontent (oldcontentidentifier, newcontentidentifier, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganization (oldeducationorganizationid, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptioneducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationnetworkassociation (oldeducationorganizationnetworkid, oldmembereducationorganizationid, neweducationorganizationnetworkid, newmembereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationpeerassociation (oldeducationorganizationid, oldpeereducationorganizationid, neweducationorganizationid, newpeereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.feederschoolassociation (oldbegindate, oldfeederschoolid, oldschoolid, newbegindate, newfeederschoolid, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.functiondimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.funddimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.generalstudentprogramassociation (oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.grade (oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodsequence, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradebookentry (oldgradebookentryidentifier, oldnamespace, newgradebookentryidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradingperiod (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldperiodsequence, oldschoolid, oldschoolyear, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newperiodsequence, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.graduationplan (oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear, neweducationorganizationid, newgraduationplantypedescriptorid, newgraduationplantypedescriptornamespace, newgraduationplantypedescriptorcodevalue, newgraduationschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.intervention (oldeducationorganizationid, oldinterventionidentificationcode, neweducationorganizationid, newinterventionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionprescription (oldeducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionstudy (oldeducationorganizationid, oldinterventionstudyidentificationcode, neweducationorganizationid, newinterventionstudyidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningobjective (oldlearningobjectiveid, oldnamespace, newlearningobjectiveid, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandard (oldlearningstandardid, newlearningstandardid, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandardequivalenceassociation (oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid, newnamespace, newsourcelearningstandardid, newtargetlearningstandardid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localactual (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localbudget (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localcontractedstaff (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localencumbrance (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localpayroll (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.location (oldclassroomidentificationcode, oldschoolid, newclassroomidentificationcode, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectiveassessment (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.openstaffposition (oldeducationorganizationid, oldrequisitionnumber, neweducationorganizationid, newrequisitionnumber, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.operationalunitdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.parent (oldparentusi, oldparentuniqueid, newparentusi, newparentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.person (oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.postsecondaryevent (oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, neweventdate, newpostsecondaryeventcategorydescriptorid, newpostsecondaryeventcategorydescriptornamespace, newpostsecondaryeventcategorydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.program (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.projectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.reportcard (oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodsequence, newgradingperiodschoolid, newgradingperiodschoolyear, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.restraintevent (oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newrestrainteventidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.schoolyeartype (oldschoolyear, newschoolyear, id, changeversion, createdate) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.section (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sectionattendancetakenevent (oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.session (oldschoolid, oldschoolyear, oldsessionname, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sourcedimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staff (oldstaffusi, oldstaffuniqueid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffabsenceevent (oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid, newabsenceeventcategorydescriptorid, newabsenceeventcategorydescriptornamespace, newabsenceeventcategorydescriptorcodevalue, neweventdate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid, newincidentidentifier, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationassignmentassociation (oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, neweducationorganizationid, newstaffclassificationdescriptorid, newstaffclassificationdescriptornamespace, newstaffclassificationdescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationcontactassociation (oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newcontacttitle, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationemploymentassociation (oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid, neweducationorganizationid, newemploymentstatusdescriptorid, newemploymentstatusdescriptornamespace, newemploymentstatusdescriptorcodevalue, newhiredate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffleave (oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newstaffleaveeventcategorydescriptorid, newstaffleaveeventcategorydescriptornamespace, newstaffleaveeventcategorydescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffprogramassociation (oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffschoolassociation (oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid, newprogramassignmentdescriptorid, newprogramassignmentdescriptornamespace, newprogramassignmentdescriptorcodevalue, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffsectionassociation (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.student (oldstudentusi, oldstudentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentacademicrecord (oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessment (oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessmenteducationorganizationassociation (oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, neweducationorganizationassociationtypedescriptorid, neweducationorganizationassociationtypedescriptornamespace, neweducationorganizationassociationtypedescriptorcodevalue, neweducationorganizationid, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcompetencyobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodsequence, newgradingperiodschoolid, newgradingperiodschoolyear, newobjectiveeducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newbehaviordescriptorid, newbehaviordescriptornamespace, newbehaviordescriptorcodevalue, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationassociation (oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newresponsibilitydescriptorid, newresponsibilitydescriptornamespace, newresponsibilitydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentgradebookentry (oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionassociation (oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentlearningobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodsequence, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldlearningobjectiveid, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodsequence, newgradingperiodschoolid, newgradingperiodschoolyear, newlearningobjectiveid, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentparentassociation (oldparentusi, oldparentuniqueid, oldstudentusi, oldstudentuniqueid, newparentusi, newparentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolassociation (oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, newentrydate, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionassociation (oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.survey (oldnamespace, oldsurveyidentifier, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveycourseassociation (oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier, newcoursecode, neweducationorganizationid, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyprogramassociation (oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier, neweducationorganizationid, newnamespace, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestion (oldnamespace, oldquestioncode, oldsurveyidentifier, newnamespace, newquestioncode, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestionresponse (oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newquestioncode, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysection (oldnamespace, oldsurveyidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionassociation (oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidate (oldcandidateidentifier, newcandidateidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newbegindate, newcandidateidentifier, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.educatorpreparationprogram (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelement (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelementrating (oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjective (oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjectiverating (oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationrating (oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.financialaid (oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid, newaidtypedescriptorid, newaidtypedescriptornamespace, newaidtypedescriptorcodevalue, newbegindate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluationrating (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.rubricdimension (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newrubricrating, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveyresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveysectionresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Name: changeversionsequence; Type: SEQUENCE SET; Schema: changes; Owner: postgres
--

SELECT pg_catalog.setval('changes.changeversionsequence', 3525, true);


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 3356, true);


--
-- Name: parent_parentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.parent_parentusi_seq', 1, false);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 68, true);


--
-- Name: educationorganizationidtoeducationorganizationid educationorganizationidtoeducationorganizationid_pk; Type: CONSTRAINT; Schema: auth; Owner: postgres
--

ALTER TABLE ONLY auth.educationorganizationidtoeducationorganizationid
    ADD CONSTRAINT educationorganizationidtoeducationorganizationid_pk PRIMARY KEY (sourceeducationorganizationid, targeteducationorganizationid);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accounttypedescriptor accounttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT accounttypedescriptor_pk PRIMARY KEY (accounttypedescriptorid);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (ancestryethnicorigindescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (assessmentidentifier, namespace, academicsubjectdescriptorid);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, namespace, gradeleveldescriptorid);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, namespace, author);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, namespace, languagedescriptorid);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentperioddescriptorid);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid);


--
-- Name: assessmentscorerangelearningstandardlearningstandard assessmentscorerangelearningstandardlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandardlearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid, learningstandardid);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: assignmentlatestatusdescriptor assignmentlatestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT assignmentlatestatusdescriptor_pk PRIMARY KEY (assignmentlatestatusdescriptorid);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: balancesheetdimensionreportingtag balancesheetdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT balancesheetdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (barriertointernetaccessinresidencedescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, schoolid, classperiodname);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, schoolid, date);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, schoolid, gradeleveldescriptorid);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, schoolid, schoolyear, gradeleveldescriptorid);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: chartofaccountreportingtag chartofaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT chartofaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, schoolid, endtime, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (coursecode, educationorganizationid, competencyleveldescriptorid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, educationorganizationid, courseidentificationsystemdescriptorid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningobjective courselearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT courselearningobjective_pk PRIMARY KEY (coursecode, educationorganizationid, learningobjectiveid, namespace);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid);


--
-- Name: coursetranscriptpartialcoursetranscriptawards coursetranscriptpartialcoursetranscriptawards_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT coursetranscriptpartialcoursetranscriptawards_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (namespace, codevalue);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value);


--
-- Name: descriptormappingmodelentity descriptormappingmodelentity_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT descriptormappingmodelentity_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, staffusi);


--
-- Name: disciplineactionstudentdisciplineincidentassociation disciplineactionstudentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, incidentidentifier, schoolid);


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation disciplineactionstudentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (incidentidentifier, schoolid, behaviordescriptorid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (contentidentifier, author);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: educationorganizationassociationtypedescriptor educationorganizationassociationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT educationorganizationassociationtypedescriptor_pk PRIMARY KEY (educationorganizationassociationtypedescriptorid);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationid, educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationindicator educationorganizationindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT educationorganizationindicator_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationindicatorperiod educationorganizationindicatorperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT educationorganizationindicatorperiod_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid, begindate);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: financialcollectiondescriptor financialcollectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT financialcollectiondescriptor_pk PRIMARY KEY (financialcollectiondescriptorid);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: functiondimensionreportingtag functiondimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT functiondimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: funddimensionreportingtag funddimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT funddimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationparticipationstatus generalstudentprogramassociationparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus generalstudentprogramassociationprogramparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationprogramparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (gradebookentryidentifier, namespace, learningstandardid);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (indicatordescriptorid);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (indicatorgroupdescriptorid);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (indicatorleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (internetaccesstypeinresidencedescriptorid);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (internetperformanceinresidencedescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, contentidentifier);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, endtime, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, contentidentifier);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectiveacademicsubject learningobjectiveacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT learningobjectiveacademicsubject_pk PRIMARY KEY (learningobjectiveid, namespace, academicsubjectdescriptorid);


--
-- Name: learningobjectivecontentstandard learningobjectivecontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT learningobjectivecontentstandard_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandardauthor learningobjectivecontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT learningobjectivecontentstandardauthor_pk PRIMARY KEY (learningobjectiveid, namespace, author);


--
-- Name: learningobjectivegradelevel learningobjectivegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT learningobjectivegradelevel_pk PRIMARY KEY (learningobjectiveid, namespace, gradeleveldescriptorid);


--
-- Name: learningobjectivelearningstandard learningobjectivelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT learningobjectivelearningstandard_pk PRIMARY KEY (learningobjectiveid, namespace, learningstandardid);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (learningstandardid, academicsubjectdescriptorid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (learningstandardid, author);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (learningstandardid, gradeleveldescriptorid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (learningstandardid, contentstandardname, identificationcode);


--
-- Name: learningstandardprerequisitelearningstandard learningstandardprerequisitelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT learningstandardprerequisitelearningstandard_pk PRIMARY KEY (learningstandardid, prerequisitelearningstandardid);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccountreportingtag localaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT localaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (localeducationagencyid, fiscalyear);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: modelentitydescriptor modelentitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT modelentitydescriptor_pk PRIMARY KEY (modelentitydescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: objectdimensionreportingtag objectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT objectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: oldethnicitydescriptor oldethnicitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT oldethnicitydescriptor_pk PRIMARY KEY (oldethnicitydescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (educationorganizationid, requisitionnumber, academicsubjectdescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, requisitionnumber, gradeleveldescriptorid);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: operationalunitdimensionreportingtag operationalunitdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT operationalunitdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (organizationdepartmentid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (parentusi);


--
-- Name: parentaddress parentaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT parentaddress_pk PRIMARY KEY (parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentaddressperiod parentaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT parentaddressperiod_pk PRIMARY KEY (parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: parentelectronicmail parentelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT parentelectronicmail_pk PRIMARY KEY (parentusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: parentinternationaladdress parentinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT parentinternationaladdress_pk PRIMARY KEY (parentusi, addresstypedescriptorid);


--
-- Name: parentlanguage parentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT parentlanguage_pk PRIMARY KEY (parentusi, languagedescriptorid);


--
-- Name: parentlanguageuse parentlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT parentlanguageuse_pk PRIMARY KEY (parentusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: parentothername parentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT parentothername_pk PRIMARY KEY (parentusi, othernametypedescriptorid);


--
-- Name: parentpersonalidentificationdocument parentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT parentpersonalidentificationdocument_pk PRIMARY KEY (parentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: parenttelephone parenttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT parenttelephone_pk PRIMARY KEY (parentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (personid, sourcesystemdescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (postsecondaryinstitutionid, mediumofinstructiondescriptorid);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (primarylearningdeviceaccessdescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (primarylearningdeviceproviderdescriptorid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: programdimensionreportingtag programdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT programdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: programlearningobjective programlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT programlearningobjective_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, learningobjectiveid, namespace);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, learningstandardid);


--
-- Name: programservice programservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT programservice_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: projectdimensionreportingtag projectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT projectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (questionformdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: reportcardstudentlearningobjective reportcardstudentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT reportcardstudentlearningobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi, learningobjectiveid, namespace);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: reportingtagdescriptor reportingtagdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT reportingtagdescriptor_pk PRIMARY KEY (reportingtagdescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolid, schoolcategorydescriptorid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (schoolid, gradeleveldescriptorid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (schoolid, schoolyear, sessionname, gradingperioddescriptorid, periodsequence);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: sourcedimensionreportingtag sourcedimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT sourcedimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (sourcesystemdescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: staffancestryethnicorigin staffancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT staffancestryethnicorigin_pk PRIMARY KEY (staffusi, ancestryethnicorigindescriptorid);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, begindate);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (staffusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffusi, staffidentificationsystemdescriptorid);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (staffusi, addresstypedescriptorid);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (staffusi, languagedescriptorid);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (staffusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (staffusi, othernametypedescriptorid);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (staffusi, racedescriptorid);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (staffusi, recognitiontypedescriptorid);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (stateeducationagencyid, schoolyear);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (stateeducationagencyid, fiscalyear);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentperiod studentassessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT studentassessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogram studentcteprogramassociationcteprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT studentcteprogramassociationcteprogram_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, careerpathwaydescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationservice studentcteprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT studentcteprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentassociationbehavior studentdisciplineincidentassociationbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT studentdisciplineincidentassociationbehavior_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi, behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a studentdisciplineincidentnonoffenderassociationdis_4c979a_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociationdis_4c979a_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin studenteducationorganizationassociationancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT studenteducationorganizationassociationancestryethnicorigin_pk PRIMARY KEY (educationorganizationid, studentusi, ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 studenteducationorganizationassociationprogrampart_810575_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT studenteducationorganizationassociationprogrampart_810575_pk PRIMARY KEY (educationorganizationid, studentusi, programtypedescriptorid, programcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipation studenteducationorganizationassociationprogramparticipation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT studenteducationorganizationassociationprogramparticipation_pk PRIMARY KEY (educationorganizationid, studentusi, programtypedescriptorid);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, studentusi, racedescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname, begindate);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation studentlearningobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentlearningobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentlearningobjectivestudentsectionassociation studentlearningobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT studentlearningobjectivestudentsectionassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (studentusi, othernametypedescriptorid);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (parentusi, studentusi);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, educationplandescriptorid);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceeventclassperiod studentsectionattendanceeventclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT studentsectionattendanceeventclassperiod_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationservice studenttitleipartaprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT studenttitleipartaprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: submissionstatusdescriptor submissionstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT submissionstatusdescriptor_pk PRIMARY KEY (submissionstatusdescriptorid);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (namespace, surveyidentifier);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (surveycategorydescriptorid);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (coursecode, educationorganizationid, namespace, surveyidentifier);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (surveyleveldescriptorid);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionmatrix surveyquestionmatrix_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT surveyquestionmatrix_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, matrixelement);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsechoice surveyquestionresponsechoice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT surveyquestionresponsechoice_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, sortorder);


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse surveyquestionresponsesurveyquestionmatrixelementresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT surveyquestionresponsesurveyquestionmatrixelementresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement);


--
-- Name: surveyquestionresponsevalue surveyquestionresponsevalue_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT surveyquestionresponsevalue_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsesurveylevel surveyresponsesurveylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT surveyresponsesurveylevel_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: accreditationstatusdescriptor accreditationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT accreditationstatusdescriptor_pk PRIMARY KEY (accreditationstatusdescriptorid);


--
-- Name: aidtypedescriptor aidtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT aidtypedescriptor_pk PRIMARY KEY (aidtypedescriptorid);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (candidateidentifier);


--
-- Name: candidateaddress candidateaddress_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT candidateaddress_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: candidateaddressperiod candidateaddressperiod_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT candidateaddressperiod_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: candidatedisability candidatedisability_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT candidatedisability_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid);


--
-- Name: candidatedisabilitydesignation candidatedisabilitydesignation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT candidatedisabilitydesignation_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear candidateeducatorpreparationprogramassociationcohortyear_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationcohortyear_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 candidateeducatorpreparationprogramassociationdegr_2501c4_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationdegr_2501c4_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization);


--
-- Name: candidateelectronicmail candidateelectronicmail_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT candidateelectronicmail_pk PRIMARY KEY (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: candidatelanguage candidatelanguage_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT candidatelanguage_pk PRIMARY KEY (candidateidentifier, languagedescriptorid);


--
-- Name: candidatelanguageuse candidatelanguageuse_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT candidatelanguageuse_pk PRIMARY KEY (candidateidentifier, languagedescriptorid, languageusedescriptorid);


--
-- Name: candidateothername candidateothername_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT candidateothername_pk PRIMARY KEY (candidateidentifier, othernametypedescriptorid);


--
-- Name: candidatepersonalidentificationdocument candidatepersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT candidatepersonalidentificationdocument_pk PRIMARY KEY (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: candidaterace candidaterace_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT candidaterace_pk PRIMARY KEY (candidateidentifier, racedescriptorid);


--
-- Name: candidatetelephone candidatetelephone_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT candidatetelephone_pk PRIMARY KEY (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: certificationroutedescriptor certificationroutedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT certificationroutedescriptor_pk PRIMARY KEY (certificationroutedescriptorid);


--
-- Name: coteachingstyleobserveddescriptor coteachingstyleobserveddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT coteachingstyleobserveddescriptor_pk PRIMARY KEY (coteachingstyleobserveddescriptorid);


--
-- Name: credentialextension credentialextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT credentialextension_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialstatusdescriptor credentialstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT credentialstatusdescriptor_pk PRIMARY KEY (credentialstatusdescriptorid);


--
-- Name: credentialstudentacademicrecord credentialstudentacademicrecord_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT credentialstudentacademicrecord_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: educatorpreparationprogramgradelevel educatorpreparationprogramgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT educatorpreparationprogramgradelevel_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid);


--
-- Name: educatorroledescriptor educatorroledescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT educatorroledescriptor_pk PRIMARY KEY (educatorroledescriptorid);


--
-- Name: englishlanguageexamdescriptor englishlanguageexamdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT englishlanguageexamdescriptor_pk PRIMARY KEY (englishlanguageexamdescriptorid);


--
-- Name: eppprogrampathwaydescriptor eppprogrampathwaydescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT eppprogrampathwaydescriptor_pk PRIMARY KEY (eppprogrampathwaydescriptorid);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationelementratinglevel evaluationelementratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT evaluationelementratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationelementratingleveldescriptor evaluationelementratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT evaluationelementratingleveldescriptor_pk PRIMARY KEY (evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementratingresult evaluationelementratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT evaluationelementratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiveratinglevel evaluationobjectiveratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT evaluationobjectiveratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationobjectiveratingresult evaluationobjectiveratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT evaluationobjectiveratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationperioddescriptor evaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT evaluationperioddescriptor_pk PRIMARY KEY (evaluationperioddescriptorid);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratinglevel evaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT evaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationratingleveldescriptor evaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT evaluationratingleveldescriptor_pk PRIMARY KEY (evaluationratingleveldescriptorid);


--
-- Name: evaluationratingresult evaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT evaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationratingreviewer evaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT evaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingreviewerreceivedtraining evaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT evaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingstatusdescriptor evaluationratingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT evaluationratingstatusdescriptor_pk PRIMARY KEY (evaluationratingstatusdescriptorid);


--
-- Name: evaluationtypedescriptor evaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT evaluationtypedescriptor_pk PRIMARY KEY (evaluationtypedescriptorid);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (aidtypedescriptorid, begindate, studentusi);


--
-- Name: genderdescriptor genderdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT genderdescriptor_pk PRIMARY KEY (genderdescriptorid);


--
-- Name: objectiveratingleveldescriptor objectiveratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT objectiveratingleveldescriptor_pk PRIMARY KEY (objectiveratingleveldescriptorid);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationgradelevel performanceevaluationgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT performanceevaluationgradelevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratinglevel performanceevaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT performanceevaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor performanceevaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT performanceevaluationratingleveldescriptor_pk PRIMARY KEY (performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingresult performanceevaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT performanceevaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: performanceevaluationratingreviewer performanceevaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT performanceevaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationratingreviewerreceivedtraining performanceevaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT performanceevaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationtypedescriptor performanceevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT performanceevaluationtypedescriptor_pk PRIMARY KEY (performanceevaluationtypedescriptorid);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid);


--
-- Name: rubricratingleveldescriptor rubricratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT rubricratingleveldescriptor_pk PRIMARY KEY (rubricratingleveldescriptorid);


--
-- Name: schoolextension schoolextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT schoolextension_pk PRIMARY KEY (schoolid);


--
-- Name: surveyresponseextension surveyresponseextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT surveyresponseextension_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (changeversion);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (changeversion);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (changeversion);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (changeversion);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (changeversion);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (changeversion);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (changeversion);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (changeversion);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (changeversion);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (changeversion);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (changeversion);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (changeversion);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (changeversion);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (changeversion);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (changeversion);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (changeversion);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (changeversion);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (changeversion);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (changeversion);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (changeversion);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (changeversion);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (changeversion);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (changeversion);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (changeversion);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (changeversion);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (changeversion);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (changeversion);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (changeversion);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (changeversion);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (changeversion);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (changeversion);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (changeversion);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (changeversion);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (changeversion);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (changeversion);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (changeversion);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (changeversion);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (changeversion);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (changeversion);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (changeversion);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (changeversion);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (changeversion);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (changeversion);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (changeversion);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (changeversion);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (changeversion);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (changeversion);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (changeversion);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (changeversion);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (changeversion);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (changeversion);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (changeversion);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: ix_educationorganizationidtoeducationorganizationid; Type: INDEX; Schema: auth; Owner: postgres
--

CREATE INDEX ix_educationorganizationidtoeducationorganizationid ON auth.educationorganizationidtoeducationorganizationid USING btree (targeteducationorganizationid) INCLUDE (sourceeducationorganizationid);


--
-- Name: fk_000683_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_financialcollectiondescriptor ON edfi.localbudget USING btree (financialcollectiondescriptorid);


--
-- Name: fk_000683_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_localaccount ON edfi.localbudget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_02ddd8_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_02ddd8_assessmentperioddescriptor ON edfi.studentassessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_03f044_surveyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyleveldescriptor ON edfi.surveyresponsesurveylevel USING btree (surveyleveldescriptorid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_0855d2_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_participationstatusdescriptor ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c6eff_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c6eff_reportingtagdescriptor ON edfi.sourcedimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0e0a11_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_othernametypedescriptor ON edfi.parentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_131e2b_accounttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_accounttypedescriptor ON edfi.chartofaccount USING btree (accounttypedescriptorid);


--
-- Name: fk_131e2b_balancesheetdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_balancesheetdimension ON edfi.chartofaccount USING btree (balancesheetcode, fiscalyear);


--
-- Name: fk_131e2b_functiondimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_functiondimension ON edfi.chartofaccount USING btree (functioncode, fiscalyear);


--
-- Name: fk_131e2b_funddimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_funddimension ON edfi.chartofaccount USING btree (fundcode, fiscalyear);


--
-- Name: fk_131e2b_objectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_objectdimension ON edfi.chartofaccount USING btree (objectcode, fiscalyear);


--
-- Name: fk_131e2b_operationalunitdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_operationalunitdimension ON edfi.chartofaccount USING btree (operationalunitcode, fiscalyear);


--
-- Name: fk_131e2b_programdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_programdimension ON edfi.chartofaccount USING btree (programcode, fiscalyear);


--
-- Name: fk_131e2b_projectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_projectdimension ON edfi.chartofaccount USING btree (projectcode, fiscalyear);


--
-- Name: fk_131e2b_sourcedimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_sourcedimension ON edfi.chartofaccount USING btree (sourcecode, fiscalyear);


--
-- Name: fk_13b924_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_academicsubjectdescriptor ON edfi.organizationdepartment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_13b924_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_educationorganization1 ON edfi.organizationdepartment USING btree (parenteducationorganizationid);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bb88c_questionformdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_questionformdescriptor ON edfi.surveyquestion USING btree (questionformdescriptorid);


--
-- Name: fk_1bb88c_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_survey ON edfi.surveyquestion USING btree (namespace, surveyidentifier);


--
-- Name: fk_1bb88c_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_surveysection ON edfi.surveyquestion USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_1c30e0_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_generalstudentprogramassociation ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_2096ce_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_academicsubjectdescriptor ON edfi.course USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_211bb3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_schoolyeartype ON edfi.survey USING btree (schoolyear);


--
-- Name: fk_211bb3_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_session ON edfi.survey USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_surveycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_surveycategorydescriptor ON edfi.survey USING btree (surveycategorydescriptorid);


--
-- Name: fk_2189c3_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveyresponse ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_2189c3_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveysection ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_23fa0f_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_academicsubjectdescriptor ON edfi.learningobjectiveacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_person ON edfi.student USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2c2b13_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_ancestryethnicorigindescriptor ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_studentdisciplineincidentbehaviorassociation ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32eddb_chartofaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_chartofaccount ON edfi.localaccount USING btree (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear);


--
-- Name: fk_34f9df_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_languagedescriptor ON edfi.parentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_39073d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_staff ON edfi.surveysectionresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_39073d_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_surveysectionresponse ON edfi.surveysectionresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b06c7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b06c7_reportingtagdescriptor ON edfi.operationalunitdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3e04ae_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e04ae_reportingtagdescriptor ON edfi.programdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_453ba8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_telephonenumbertypedescriptor ON edfi.parenttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_46e5c2_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_financialcollectiondescriptor ON edfi.localpayroll USING btree (financialcollectiondescriptorid);


--
-- Name: fk_46e5c2_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_localaccount ON edfi.localpayroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_46e5c2_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_staff ON edfi.localpayroll USING btree (staffusi);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4b43da_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_disciplineincident ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_4b43da_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_student ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (studentusi);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4d9b4a_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_financialcollectiondescriptor ON edfi.localcontractedstaff USING btree (financialcollectiondescriptorid);


--
-- Name: fk_4d9b4a_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_localaccount ON edfi.localcontractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_4d9b4a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_staff ON edfi.localcontractedstaff USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_588d15_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_588d15_learningobjective ON edfi.learningobjective USING btree (parentlearningobjectiveid, parentnamespace);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5c2c98_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_programtypedescriptor ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (programtypedescriptorid);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_5f7953_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_levelofeducationdescriptor ON edfi.parent USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_5f7953_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_person ON edfi.parent USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_5f7953_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_sexdescriptor ON edfi.parent USING btree (sexdescriptorid);


--
-- Name: fk_6007db_sourcesystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6007db_sourcesystemdescriptor ON edfi.person USING btree (sourcesystemdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_679174_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_disciplineincident ON edfi.studentdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_679174_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_student ON edfi.studentdisciplineincidentassociation USING btree (studentusi);


--
-- Name: fk_679174_studentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_studentparticipationcodedescriptor ON edfi.studentdisciplineincidentassociation USING btree (studentparticipationcodedescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_oldethnicitydescriptor ON edfi.staff USING btree (oldethnicitydescriptorid);


--
-- Name: fk_681927_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_person ON edfi.staff USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_termdescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_7062bd_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7062bd_reportingtagdescriptor ON edfi.funddimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_730be1_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_surveysectionresponse ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7433b4_modelentitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7433b4_modelentitydescriptor ON edfi.descriptormappingmodelentity USING btree (modelentitydescriptorid);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7d2fb4_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_servicedescriptor ON edfi.studenttitleipartaprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_80c6c1_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_classperiod ON edfi.studentsectionattendanceeventclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_810575_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_programcharacteristicdescriptor ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_81b800_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard1 ON edfi.learningstandardprerequisitelearningstandard USING btree (prerequisitelearningstandardid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_8422f4_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8422f4_reportingtagdescriptor ON edfi.chartofaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_85798e_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_electronicmailtypedescriptor ON edfi.parentelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d455d_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d455d_reportingtagdescriptor ON edfi.functiondimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_8d6383_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_parent ON edfi.surveyresponse USING btree (parentusi);


--
-- Name: fk_8d6383_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_staff ON edfi.surveyresponse USING btree (staffusi);


--
-- Name: fk_8d6383_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_student ON edfi.surveyresponse USING btree (studentusi);


--
-- Name: fk_8d6383_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_survey ON edfi.surveyresponse USING btree (namespace, surveyidentifier);


--
-- Name: fk_8d650e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_addresstypedescriptor ON edfi.parentinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_8d650e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_countrydescriptor ON edfi.parentinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_barriertointernetaccessinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (barriertointernetaccessinresidencedescriptorid);


--
-- Name: fk_8e1257_internetaccesstypeinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetaccesstypeinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetaccesstypeinresidencedescriptorid);


--
-- Name: fk_8e1257_internetperformanceinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetperformanceinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetperformanceinresidencedescriptorid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_oldethnicitydescriptor ON edfi.studenteducationorganizationassociation USING btree (oldethnicitydescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceaccessdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceaccessdescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceawayfromschooldescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceproviderdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceproviderdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceproviderdescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_9960a9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_learningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (learningstandardid);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9f1246_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_course ON edfi.surveycourseassociation USING btree (coursecode, educationorganizationid);


--
-- Name: fk_9f1246_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_survey ON edfi.surveycourseassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_a20588_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a20588_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessmentreportingmethoddescriptor ON edfi.assessmentscorerangelearningstandard USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_a20588_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_objectiveassessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a4a6ae_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_ancestryethnicorigindescriptor ON edfi.staffancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a92ef0_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_gradeleveldescriptor ON edfi.learningobjectivegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afb8b8_educationorganizationassociationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganizationassociationtypedescriptor ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationassociationtypedescriptorid);


--
-- Name: fk_afb8b8_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_schoolyeartype ON edfi.studentassessmenteducationorganizationassociation USING btree (schoolyear);


--
-- Name: fk_afb8b8_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_studentassessment ON edfi.studentassessmenteducationorganizationassociation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b2bd0a_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_surveyresponse ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b3fd05_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b3fd05_participationstatusdescriptor ON edfi.generalstudentprogramassociationparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_b43eed_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_behaviordescriptor ON edfi.studentdisciplineincidentassociationbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b5314a_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b5314a_reportingtagdescriptor ON edfi.projectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_b6310e_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_financialcollectiondescriptor ON edfi.localactual USING btree (financialcollectiondescriptorid);


--
-- Name: fk_b6310e_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_localaccount ON edfi.localactual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_b772b6_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_countrydescriptor ON edfi.parentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_b772b6_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_identificationdocumentusedescriptor ON edfi.parentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_b772b6_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_personalinformationverificationdescriptor ON edfi.parentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_baaa9d_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_competencyleveldescriptor ON edfi.studentlearningobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_baaa9d_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_gradingperiod ON edfi.studentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_baaa9d_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_learningobjective ON edfi.studentlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_baaa9d_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_student ON edfi.studentlearningobjective USING btree (studentusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcbd82_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcbd82_reportingtagdescriptor ON edfi.balancesheetdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_bf9d92_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_parent ON edfi.studentparentassociation USING btree (parentusi);


--
-- Name: fk_bf9d92_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_relationdescriptor ON edfi.studentparentassociation USING btree (relationdescriptorid);


--
-- Name: fk_bf9d92_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_student ON edfi.studentparentassociation USING btree (studentusi);


--
-- Name: fk_c098ce_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_studentlearningobjective ON edfi.reportcardstudentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_c0da6b_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_learningobjective ON edfi.courselearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16804_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_section ON edfi.surveysectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c16804_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_survey ON edfi.surveysectionassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2efaa_assignmentlatestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_assignmentlatestatusdescriptor ON edfi.studentgradebookentry USING btree (assignmentlatestatusdescriptorid);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (gradebookentryidentifier, namespace);


--
-- Name: fk_c2efaa_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_student ON edfi.studentgradebookentry USING btree (studentusi);


--
-- Name: fk_c2efaa_submissionstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_submissionstatusdescriptor ON edfi.studentgradebookentry USING btree (submissionstatusdescriptorid);


--
-- Name: fk_c38935_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c38935_reportingtagdescriptor ON edfi.localaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_c99b99_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningstandard ON edfi.learningobjectivelearningstandard USING btree (learningstandardid);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cc3333_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_addresstypedescriptor ON edfi.parentaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_cc3333_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_localedescriptor ON edfi.parentaddress USING btree (localedescriptorid);


--
-- Name: fk_cc3333_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_stateabbreviationdescriptor ON edfi.parentaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d2c8a9_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentsectionassociation ON edfi.studentlearningobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_dde098_indicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatordescriptor ON edfi.educationorganizationindicator USING btree (indicatordescriptorid);


--
-- Name: fk_dde098_indicatorgroupdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorgroupdescriptor ON edfi.educationorganizationindicator USING btree (indicatorgroupdescriptorid);


--
-- Name: fk_dde098_indicatorleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorleveldescriptor ON edfi.educationorganizationindicator USING btree (indicatorleveldescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e3e5a4_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_program ON edfi.surveyprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e3e5a4_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_survey ON edfi.surveyprogramassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e45c0b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_staff ON edfi.disciplineincident USING btree (staffusi);


--
-- Name: fk_e5572a_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e5572a_survey ON edfi.surveysection USING btree (namespace, surveyidentifier);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e811ad_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_methodcreditearneddescriptor ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_e943d3_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_servicedescriptor ON edfi.programservice USING btree (servicedescriptorid);


--
-- Name: fk_ea526f_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_financialcollectiondescriptor ON edfi.localencumbrance USING btree (financialcollectiondescriptorid);


--
-- Name: fk_ea526f_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_localaccount ON edfi.localencumbrance USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_eb5c90_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_servicedescriptor ON edfi.studentcteprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_eddd02_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyquestion ON edfi.surveyquestionresponse USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_eddd02_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyresponse ON edfi.surveyquestionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_school ON edfi.studentassessment USING btree (reportedschoolid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee50f2_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_careerpathwaydescriptor ON edfi.studentcteprogramassociationcteprogram USING btree (careerpathwaydescriptorid);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef0ece_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_studentdisciplineincidentassociation ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f4934f_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_behaviordescriptor ON edfi.studentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid);


--
-- Name: fk_f4934f_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_disciplineincident ON edfi.studentdisciplineincidentbehaviorassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_f4934f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_student ON edfi.studentdisciplineincidentbehaviorassociation USING btree (studentusi);


--
-- Name: fk_f5911f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_learningobjective ON edfi.programlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f67c61_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_languageusedescriptor ON edfi.parentlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f9457e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_staff ON edfi.surveyresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_f9457e_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_surveyresponse ON edfi.surveyresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_f99184_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_educationorganization ON edfi.learningobjectivecontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_f99184_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_publicationstatusdescriptor ON edfi.learningobjectivecontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_fda3b7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fda3b7_reportingtagdescriptor ON edfi.objectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: ix_academicweek_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_academicweek_schoolid ON edfi.academicweek USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_accountabilityrating_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_accountabilityrating_educationorganizationid ON edfi.accountabilityrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_assessment_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_assessment_educationorganizationid ON edfi.assessment USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_bellschedule_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_bellschedule_schoolid ON edfi.bellschedule USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_calendar_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_calendar_schoolid ON edfi.calendar USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_calendardate_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_calendardate_schoolid ON edfi.calendardate USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_chartofaccount_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_chartofaccount_educationorganizationid ON edfi.chartofaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_classperiod_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_classperiod_schoolid ON edfi.classperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_cohort_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_cohort_educationorganizationid ON edfi.cohort USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_communityproviderlicense_communityproviderid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_communityproviderlicense_communityproviderid ON edfi.communityproviderlicense USING btree (communityproviderid) INCLUDE (id);


--
-- Name: ix_competencyobjective_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_competencyobjective_educationorganizationid ON edfi.competencyobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_course_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_course_educationorganizationid ON edfi.course USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_courseoffering_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_courseoffering_educationorganizationid ON edfi.courseoffering USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_courseoffering_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_courseoffering_schoolid ON edfi.courseoffering USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_coursetranscript_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_coursetranscript_educationorganizationid ON edfi.coursetranscript USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_disciplineincident_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_disciplineincident_schoolid ON edfi.disciplineincident USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_educationorganization_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganization_educationorganizationid ON edfi.educationorganization USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educationorganizationinterventionprescriptionassociation_edu; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationinterventionprescriptionassociation_edu ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educationorganizationnetworkassociation_educationorganizatio; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationnetworkassociation_educationorganizatio ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid) INCLUDE (id);


--
-- Name: ix_educationorganizationpeerassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_educationorganizationpeerassociation_educationorganizationid ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_feederschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_feederschoolassociation_schoolid ON edfi.feederschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_generalstudentprogramassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_generalstudentprogramassociation_educationorganizationid ON edfi.generalstudentprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_grade_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_grade_schoolid ON edfi.grade USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_gradebookentry_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_gradebookentry_schoolid ON edfi.gradebookentry USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_gradingperiod_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_gradingperiod_schoolid ON edfi.gradingperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_graduationplan_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_graduationplan_educationorganizationid ON edfi.graduationplan USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_intervention_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_intervention_educationorganizationid ON edfi.intervention USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_interventionprescription_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_interventionprescription_educationorganizationid ON edfi.interventionprescription USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_interventionstudy_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_interventionstudy_educationorganizationid ON edfi.interventionstudy USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localaccount_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localaccount_educationorganizationid ON edfi.localaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localactual_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localactual_educationorganizationid ON edfi.localactual USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localbudget_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localbudget_educationorganizationid ON edfi.localbudget USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localcontractedstaff_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localcontractedstaff_educationorganizationid ON edfi.localcontractedstaff USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localencumbrance_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localencumbrance_educationorganizationid ON edfi.localencumbrance USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_localpayroll_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_localpayroll_educationorganizationid ON edfi.localpayroll USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_location_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_location_schoolid ON edfi.location USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_openstaffposition_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_openstaffposition_educationorganizationid ON edfi.openstaffposition USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_postsecondaryevent_postsecondaryinstitutionid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_postsecondaryevent_postsecondaryinstitutionid ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid) INCLUDE (id);


--
-- Name: ix_program_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_program_educationorganizationid ON edfi.program USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_reportcard_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_reportcard_educationorganizationid ON edfi.reportcard USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_restraintevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_restraintevent_schoolid ON edfi.restraintevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_section_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_section_schoolid ON edfi.section USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_sectionattendancetakenevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_sectionattendancetakenevent_schoolid ON edfi.sectionattendancetakenevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_session_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_session_schoolid ON edfi.session USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffcohortassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffcohortassociation_educationorganizationid ON edfi.staffcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffdisciplineincidentassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffdisciplineincidentassociation_schoolid ON edfi.staffdisciplineincidentassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationassignmentassociation_educationorg; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationassignmentassociation_educationorg ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationcontactassociation_educationorgani; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationcontactassociation_educationorgani ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffeducationorganizationemploymentassociation_educationorg; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffeducationorganizationemploymentassociation_educationorg ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_staffschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffschoolassociation_schoolid ON edfi.staffschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_staffsectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_staffsectionassociation_schoolid ON edfi.staffsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentacademicrecord_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentacademicrecord_educationorganizationid ON edfi.studentacademicrecord USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentassessmenteducationorganizationassociation_educationo; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentassessmenteducationorganizationassociation_educationo ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentcohortassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentcohortassociation_educationorganizationid ON edfi.studentcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentdisciplineincidentassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentdisciplineincidentassociation_schoolid ON edfi.studentdisciplineincidentassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentdisciplineincidentbehaviorassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentdisciplineincidentbehaviorassociation_schoolid ON edfi.studentdisciplineincidentbehaviorassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentdisciplineincidentnonoffenderassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentdisciplineincidentnonoffenderassociation_schoolid ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studenteducationorganizationassociation_educationorganizatio; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studenteducationorganizationassociation_educationorganizatio ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studenteducationorganizationresponsibilityassociation_educat; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studenteducationorganizationresponsibilityassociation_educat ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentinterventionassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentinterventionassociation_educationorganizationid ON edfi.studentinterventionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentinterventionattendanceevent_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentinterventionattendanceevent_educationorganizationid ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentprogramattendanceevent_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentprogramattendanceevent_educationorganizationid ON edfi.studentprogramattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentschoolassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolassociation_educationorganizationid ON edfi.studentschoolassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_studentschoolassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolassociation_schoolid ON edfi.studentschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentschoolattendanceevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentschoolattendanceevent_schoolid ON edfi.studentschoolattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentsectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentsectionassociation_schoolid ON edfi.studentsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_studentsectionattendanceevent_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_studentsectionattendanceevent_schoolid ON edfi.studentsectionattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_survey_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_survey_educationorganizationid ON edfi.survey USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_survey_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_survey_schoolid ON edfi.survey USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_surveycourseassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveycourseassociation_educationorganizationid ON edfi.surveycourseassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveyprogramassociation_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveyprogramassociation_educationorganizationid ON edfi.surveyprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveyresponseeducationorganizationtargetassociation_educati; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveyresponseeducationorganizationtargetassociation_educati ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_surveysectionassociation_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveysectionassociation_schoolid ON edfi.surveysectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_surveysectionresponseeducationorganizationtargetassociation_; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_surveysectionresponseeducationorganizationtargetassociation_ ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: parent_ui_parentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX parent_ui_parentuniqueid ON edfi.parent USING btree (parentuniqueid) INCLUDE (parentusi);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid) INCLUDE (staffusi);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid) INCLUDE (studentusi);


--
-- Name: ux_000683_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_000683_changeversion ON edfi.localbudget USING btree (changeversion);


--
-- Name: ux_000683_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_000683_id ON edfi.localbudget USING btree (id);


--
-- Name: ux_01fe80_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_01fe80_changeversion ON edfi.classperiod USING btree (changeversion);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0325c5_changeversion ON edfi.courseoffering USING btree (changeversion);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0516f9_changeversion ON edfi.generalstudentprogramassociation USING btree (changeversion);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0fae05_changeversion ON edfi.intervention USING btree (changeversion);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0ff8d6_changeversion ON edfi.studentacademicrecord USING btree (changeversion);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_11f7b6_changeversion ON edfi.feederschoolassociation USING btree (changeversion);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_131e2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_131e2b_changeversion ON edfi.chartofaccount USING btree (changeversion);


--
-- Name: ux_131e2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_131e2b_id ON edfi.chartofaccount USING btree (id);


--
-- Name: ux_15b619_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_15b619_changeversion ON edfi.location USING btree (changeversion);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_170747_changeversion ON edfi.staffcohortassociation USING btree (changeversion);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_17c02a_changeversion ON edfi.learningstandardequivalenceassociation USING btree (changeversion);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_19c6d6_changeversion ON edfi.cohort USING btree (changeversion);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1bb88c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1bb88c_changeversion ON edfi.surveyquestion USING btree (changeversion);


--
-- Name: ux_1bb88c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1bb88c_id ON edfi.surveyquestion USING btree (id);


--
-- Name: ux_2096ce_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2096ce_changeversion ON edfi.course USING btree (changeversion);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_211bb3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_211bb3_changeversion ON edfi.survey USING btree (changeversion);


--
-- Name: ux_211bb3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_211bb3_id ON edfi.survey USING btree (id);


--
-- Name: ux_2189c3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2189c3_changeversion ON edfi.surveysectionresponse USING btree (changeversion);


--
-- Name: ux_2189c3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2189c3_id ON edfi.surveysectionresponse USING btree (id);


--
-- Name: ux_219915_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_219915_changeversion ON edfi.descriptor USING btree (changeversion);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_252151_changeversion ON edfi.educationorganizationnetworkassociation USING btree (changeversion);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_25cb9c_changeversion ON edfi.studentinterventionassociation USING btree (changeversion);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_269e10_changeversion ON edfi.objectiveassessment USING btree (changeversion);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_28b7c4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_28b7c4_changeversion ON edfi.operationalunitdimension USING btree (changeversion);


--
-- Name: ux_28b7c4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_28b7c4_id ON edfi.operationalunitdimension USING btree (id);


--
-- Name: ux_2a164d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2a164d_changeversion ON edfi.student USING btree (changeversion);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2d3c0c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2d3c0c_changeversion ON edfi.accountabilityrating USING btree (changeversion);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_317aeb_changeversion ON edfi.studentprogramattendanceevent USING btree (changeversion);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_32eddb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_32eddb_changeversion ON edfi.localaccount USING btree (changeversion);


--
-- Name: ux_32eddb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_32eddb_id ON edfi.localaccount USING btree (id);


--
-- Name: ux_369ddc_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_369ddc_changeversion ON edfi.studentcohortassociation USING btree (changeversion);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3800be_changeversion ON edfi.restraintevent USING btree (changeversion);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_39073d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39073d_changeversion ON edfi.surveysectionresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_39073d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39073d_id ON edfi.surveysectionresponsestafftargetassociation USING btree (id);


--
-- Name: ux_395c07_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_395c07_changeversion ON edfi.studentcompetencyobjective USING btree (changeversion);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39aa3c_changeversion ON edfi.studentsectionassociation USING btree (changeversion);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3cc1d4_changeversion ON edfi.openstaffposition USING btree (changeversion);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_4100ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4100ee_changeversion ON edfi.objectdimension USING btree (changeversion);


--
-- Name: ux_4100ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4100ee_id ON edfi.objectdimension USING btree (id);


--
-- Name: ux_42aa64_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_42aa64_changeversion ON edfi.studenteducationorganizationresponsibilityassociation USING btree (changeversion);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4525e6_changeversion ON edfi.educationorganization USING btree (changeversion);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_464d7a_changeversion ON edfi.schoolyeartype USING btree (changeversion);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_466cfa_changeversion ON edfi.gradebookentry USING btree (changeversion);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_46e5c2_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_46e5c2_changeversion ON edfi.localpayroll USING btree (changeversion);


--
-- Name: ux_46e5c2_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_46e5c2_id ON edfi.localpayroll USING btree (id);


--
-- Name: ux_4b43da_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b43da_changeversion ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (changeversion);


--
-- Name: ux_4b43da_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b43da_id ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (id);


--
-- Name: ux_4d9b4a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4d9b4a_changeversion ON edfi.localcontractedstaff USING btree (changeversion);


--
-- Name: ux_4d9b4a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4d9b4a_id ON edfi.localcontractedstaff USING btree (id);


--
-- Name: ux_4e79b9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4e79b9_changeversion ON edfi.staffeducationorganizationemploymentassociation USING btree (changeversion);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_515cb5_changeversion ON edfi.staffsectionassociation USING btree (changeversion);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_588d15_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_588d15_changeversion ON edfi.learningobjective USING btree (changeversion);


--
-- Name: ux_588d15_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_588d15_id ON edfi.learningobjective USING btree (id);


--
-- Name: ux_5a18f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5a18f9_changeversion ON edfi.gradingperiod USING btree (changeversion);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5e9932_changeversion ON edfi.competencyobjective USING btree (changeversion);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_5f7953_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5f7953_changeversion ON edfi.parent USING btree (changeversion);


--
-- Name: ux_5f7953_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5f7953_id ON edfi.parent USING btree (id);


--
-- Name: ux_6007db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6007db_changeversion ON edfi.person USING btree (changeversion);


--
-- Name: ux_6007db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6007db_id ON edfi.person USING btree (id);


--
-- Name: ux_61b087_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_61b087_changeversion ON edfi.studentsectionattendanceevent USING btree (changeversion);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_631023_changeversion ON edfi.studentinterventionattendanceevent USING btree (changeversion);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_679174_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_679174_changeversion ON edfi.studentdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_679174_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_679174_id ON edfi.studentdisciplineincidentassociation USING btree (id);


--
-- Name: ux_681927_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_681927_changeversion ON edfi.staff USING btree (changeversion);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6959b4_changeversion ON edfi.session USING btree (changeversion);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6acf2b_changeversion ON edfi.coursetranscript USING btree (changeversion);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_730be1_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_730be1_changeversion ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_730be1_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_730be1_id ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_735dd8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_735dd8_changeversion ON edfi.staffeducationorganizationcontactassociation USING btree (changeversion);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_74e4e5_changeversion ON edfi.educationorganizationpeerassociation USING btree (changeversion);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7808ee_changeversion ON edfi.assessment USING btree (changeversion);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_78fd7f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_78fd7f_changeversion ON edfi.studentschoolattendanceevent USING btree (changeversion);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7bbbe7_changeversion ON edfi.sectionattendancetakenevent USING btree (changeversion);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_839e20_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_839e20_changeversion ON edfi.grade USING btree (changeversion);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_857b52_changeversion ON edfi.studentschoolassociation USING btree (changeversion);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8a9a67_changeversion ON edfi.calendardate USING btree (changeversion);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8ceb4c_changeversion ON edfi.learningstandard USING btree (changeversion);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8d6383_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8d6383_changeversion ON edfi.surveyresponse USING btree (changeversion);


--
-- Name: ux_8d6383_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8d6383_id ON edfi.surveyresponse USING btree (id);


--
-- Name: ux_8e1257_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8e1257_changeversion ON edfi.studenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_90920d_changeversion ON edfi.program USING btree (changeversion);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_937af8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_937af8_changeversion ON edfi.funddimension USING btree (changeversion);


--
-- Name: ux_937af8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_937af8_id ON edfi.funddimension USING btree (id);


--
-- Name: ux_9965a5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9965a5_changeversion ON edfi.educationcontent USING btree (changeversion);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9bbaf5_changeversion ON edfi.bellschedule USING btree (changeversion);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_9f1246_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9f1246_changeversion ON edfi.surveycourseassociation USING btree (changeversion);


--
-- Name: ux_9f1246_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9f1246_id ON edfi.surveycourseassociation USING btree (id);


--
-- Name: ux_a20588_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a20588_changeversion ON edfi.assessmentscorerangelearningstandard USING btree (changeversion);


--
-- Name: ux_a20588_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a20588_id ON edfi.assessmentscorerangelearningstandard USING btree (id);


--
-- Name: ux_a97956_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a97956_changeversion ON edfi.academicweek USING btree (changeversion);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9a613_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9a613_changeversion ON edfi.programdimension USING btree (changeversion);


--
-- Name: ux_a9a613_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9a613_id ON edfi.programdimension USING btree (id);


--
-- Name: ux_a9c0d9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9c0d9_changeversion ON edfi.staffprogramassociation USING btree (changeversion);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_af86db_changeversion ON edfi.staffdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_afb8b8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_afb8b8_changeversion ON edfi.studentassessmenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_afb8b8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_afb8b8_id ON edfi.studentassessmenteducationorganizationassociation USING btree (id);


--
-- Name: ux_b13bbd_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b13bbd_changeversion ON edfi.staffabsenceevent USING btree (changeversion);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b1c42b_changeversion ON edfi.credential USING btree (changeversion);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b2bd0a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b2bd0a_changeversion ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_b2bd0a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2bd0a_id ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_b6310e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b6310e_changeversion ON edfi.localactual USING btree (changeversion);


--
-- Name: ux_b6310e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b6310e_id ON edfi.localactual USING btree (id);


--
-- Name: ux_b8b6d7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b8b6d7_changeversion ON edfi.postsecondaryevent USING btree (changeversion);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b9be24_changeversion ON edfi.staffeducationorganizationassignmentassociation USING btree (changeversion);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_baaa9d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_baaa9d_changeversion ON edfi.studentlearningobjective USING btree (changeversion);


--
-- Name: ux_baaa9d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_baaa9d_id ON edfi.studentlearningobjective USING btree (id);


--
-- Name: ux_be1ea4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_be1ea4_changeversion ON edfi.graduationplan USING btree (changeversion);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_bf9d92_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_bf9d92_changeversion ON edfi.studentparentassociation USING btree (changeversion);


--
-- Name: ux_bf9d92_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_bf9d92_id ON edfi.studentparentassociation USING btree (id);


--
-- Name: ux_c16804_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c16804_changeversion ON edfi.surveysectionassociation USING btree (changeversion);


--
-- Name: ux_c16804_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c16804_id ON edfi.surveysectionassociation USING btree (id);


--
-- Name: ux_c2efaa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c2efaa_changeversion ON edfi.studentgradebookentry USING btree (changeversion);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c4d12e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c4d12e_changeversion ON edfi.functiondimension USING btree (changeversion);


--
-- Name: ux_c4d12e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c4d12e_id ON edfi.functiondimension USING btree (id);


--
-- Name: ux_ce2080_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ce2080_changeversion ON edfi.staffschoolassociation USING btree (changeversion);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d16e19_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d16e19_changeversion ON edfi.projectdimension USING btree (changeversion);


--
-- Name: ux_d16e19_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d16e19_id ON edfi.projectdimension USING btree (id);


--
-- Name: ux_d5d0a3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d5d0a3_changeversion ON edfi.calendar USING btree (changeversion);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d92986_changeversion ON edfi.interventionstudy USING btree (changeversion);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dc3dcf_changeversion ON edfi.assessmentitem USING btree (changeversion);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_debd4f_changeversion ON edfi.staffleave USING btree (changeversion);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_descriptor_uri; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_descriptor_uri ON edfi.descriptor USING btree (uri) INCLUDE (descriptorid, discriminator);


--
-- Name: ux_dfca5d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dfca5d_changeversion ON edfi.section USING btree (changeversion);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e3e5a4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e3e5a4_changeversion ON edfi.surveyprogramassociation USING btree (changeversion);


--
-- Name: ux_e3e5a4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e3e5a4_id ON edfi.surveyprogramassociation USING btree (id);


--
-- Name: ux_e45c0b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e45c0b_changeversion ON edfi.disciplineincident USING btree (changeversion);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e52c9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e52c9c_changeversion ON edfi.balancesheetdimension USING btree (changeversion);


--
-- Name: ux_e52c9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e52c9c_id ON edfi.balancesheetdimension USING btree (id);


--
-- Name: ux_e5572a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e5572a_changeversion ON edfi.surveysection USING btree (changeversion);


--
-- Name: ux_e5572a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e5572a_id ON edfi.surveysection USING btree (id);


--
-- Name: ux_e670ae_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e670ae_changeversion ON edfi.educationorganizationinterventionprescriptionassociation USING btree (changeversion);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e91a4d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e91a4d_changeversion ON edfi.sourcedimension USING btree (changeversion);


--
-- Name: ux_e91a4d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e91a4d_id ON edfi.sourcedimension USING btree (id);


--
-- Name: ux_e93bc3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e93bc3_changeversion ON edfi.interventionprescription USING btree (changeversion);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ea526f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ea526f_changeversion ON edfi.localencumbrance USING btree (changeversion);


--
-- Name: ux_ea526f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ea526f_id ON edfi.localencumbrance USING btree (id);


--
-- Name: ux_ec1992_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ec1992_changeversion ON edfi.reportcard USING btree (changeversion);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_eddd02_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eddd02_changeversion ON edfi.surveyquestionresponse USING btree (changeversion);


--
-- Name: ux_eddd02_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eddd02_id ON edfi.surveyquestionresponse USING btree (id);


--
-- Name: ux_ee3b2a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee3b2a_changeversion ON edfi.studentassessment USING btree (changeversion);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_ee9047_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee9047_changeversion ON edfi.descriptormapping USING btree (changeversion);


--
-- Name: ux_ee9047_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee9047_id ON edfi.descriptormapping USING btree (id);


--
-- Name: ux_eec7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eec7b6_changeversion ON edfi.disciplineaction USING btree (changeversion);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f092ff_changeversion ON edfi.communityproviderlicense USING btree (changeversion);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_f4934f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f4934f_changeversion ON edfi.studentdisciplineincidentbehaviorassociation USING btree (changeversion);


--
-- Name: ux_f4934f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f4934f_id ON edfi.studentdisciplineincidentbehaviorassociation USING btree (id);


--
-- Name: ux_f9457e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f9457e_changeversion ON edfi.surveyresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_f9457e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f9457e_id ON edfi.surveyresponsestafftargetassociation USING btree (id);


--
-- Name: fk_09c531_telephonenumbertypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_09c531_telephonenumbertypedescriptor ON tpdm.candidatetelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_15d685_academicsubjectdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_academicsubjectdescriptor ON tpdm.performanceevaluation USING btree (academicsubjectdescriptorid);


--
-- Name: fk_15d685_evaluationperioddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_evaluationperioddescriptor ON tpdm.performanceevaluation USING btree (evaluationperioddescriptorid);


--
-- Name: fk_15d685_performanceevaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_performanceevaluationtypedescriptor ON tpdm.performanceevaluation USING btree (performanceevaluationtypedescriptorid);


--
-- Name: fk_15d685_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_schoolyeartype ON tpdm.performanceevaluation USING btree (schoolyear);


--
-- Name: fk_15d685_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_termdescriptor ON tpdm.performanceevaluation USING btree (termdescriptorid);


--
-- Name: fk_160329_addresstypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_addresstypedescriptor ON tpdm.candidateaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_160329_localedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_localedescriptor ON tpdm.candidateaddress USING btree (localedescriptorid);


--
-- Name: fk_160329_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_stateabbreviationdescriptor ON tpdm.candidateaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_163e44_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_evaluationtypedescriptor ON tpdm.evaluation USING btree (evaluationtypedescriptorid);


--
-- Name: fk_163e44_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_performanceevaluation ON tpdm.evaluation USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_195935_accreditationstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_accreditationstatusdescriptor ON tpdm.educatorpreparationprogram USING btree (accreditationstatusdescriptorid);


--
-- Name: fk_195935_programtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_programtypedescriptor ON tpdm.educatorpreparationprogram USING btree (programtypedescriptorid);


--
-- Name: fk_1d984c_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_1d984c_evaluationratingleveldescriptor ON tpdm.evaluationobjectiveratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_2199be_postsecondaryinstitution; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2199be_postsecondaryinstitution ON tpdm.schoolextension USING btree (postsecondaryinstitutionid);


--
-- Name: fk_236ee4_disabilitydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydescriptor ON tpdm.candidatedisability USING btree (disabilitydescriptorid);


--
-- Name: fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydeterminationsourcetypedescriptor ON tpdm.candidatedisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_268283_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_268283_resultdatatypetypedescriptor ON tpdm.evaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d29eb_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2d29eb_person ON tpdm.evaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_3f00b1_languageusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_3f00b1_languageusedescriptor ON tpdm.candidatelanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_4479ea_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelement ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_4479ea_evaluationelementratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelementratingleveldescriptor ON tpdm.evaluationelementrating USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_4479ea_evaluationobjectiverating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationobjectiverating ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_4521bb_othernametypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4521bb_othernametypedescriptor ON tpdm.candidateothername USING btree (othernametypedescriptorid);


--
-- Name: fk_477526_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_477526_person ON tpdm.performanceevaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_520027_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_person ON tpdm.surveyresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_520027_surveyresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_surveyresponse ON tpdm.surveyresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_5b9d31_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_5b9d31_gradeleveldescriptor ON tpdm.performanceevaluationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_620d03_cohortyeartypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_cohortyeartypedescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_620d03_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_schoolyeartype ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_620d03_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_termdescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_643c81_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_evaluationelement ON tpdm.rubricdimension USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_643c81_rubricratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_rubricratingleveldescriptor ON tpdm.rubricdimension USING btree (rubricratingleveldescriptorid);


--
-- Name: fk_6aa942_racedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6aa942_racedescriptor ON tpdm.candidaterace USING btree (racedescriptorid);


--
-- Name: fk_6edb1d_disabilitydesignationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6edb1d_disabilitydesignationdescriptor ON tpdm.candidatedisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6fae52_certificationroutedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_certificationroutedescriptor ON tpdm.credentialextension USING btree (certificationroutedescriptorid);


--
-- Name: fk_6fae52_credentialstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_credentialstatusdescriptor ON tpdm.credentialextension USING btree (credentialstatusdescriptorid);


--
-- Name: fk_6fae52_educatorroledescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_educatorroledescriptor ON tpdm.credentialextension USING btree (educatorroledescriptorid);


--
-- Name: fk_6fae52_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_person ON tpdm.credentialextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7052f8_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7052f8_evaluationratingleveldescriptor ON tpdm.evaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_73e151_studentacademicrecord; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_73e151_studentacademicrecord ON tpdm.credentialstudentacademicrecord USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_759abe_coteachingstyleobserveddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_coteachingstyleobserveddescriptor ON tpdm.performanceevaluationrating USING btree (coteachingstyleobserveddescriptorid);


--
-- Name: fk_759abe_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluation ON tpdm.performanceevaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_759abe_performanceevaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluationratingleveldescriptor ON tpdm.performanceevaluationrating USING btree (performanceevaluationratingleveldescriptorid);


--
-- Name: fk_759abe_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_person ON tpdm.performanceevaluationrating USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7ae19d_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationobjective ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_7ae19d_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationrating ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_7ae19d_objectiveratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_objectiveratingleveldescriptor ON tpdm.evaluationobjectiverating USING btree (objectiveratingleveldescriptorid);


--
-- Name: fk_863fa4_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_863fa4_resultdatatypetypedescriptor ON tpdm.performanceevaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_90ed3d_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_90ed3d_evaluationratingleveldescriptor ON tpdm.performanceevaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_93a227_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_countrydescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_93a227_identificationdocumentusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_identificationdocumentusedescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_93a227_personalinformationverificationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_personalinformationverificationdescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a465f2_aidtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_aidtypedescriptor ON tpdm.financialaid USING btree (aidtypedescriptorid);


--
-- Name: fk_a465f2_student; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_student ON tpdm.financialaid USING btree (studentusi);


--
-- Name: fk_afbeb2_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_afbeb2_evaluationratingleveldescriptor ON tpdm.evaluationelementratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_b2452d_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_countrydescriptor ON tpdm.candidate USING btree (birthcountrydescriptorid);


--
-- Name: fk_b2452d_englishlanguageexamdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_englishlanguageexamdescriptor ON tpdm.candidate USING btree (englishlanguageexamdescriptorid);


--
-- Name: fk_b2452d_genderdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_genderdescriptor ON tpdm.candidate USING btree (genderdescriptorid);


--
-- Name: fk_b2452d_limitedenglishproficiencydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_limitedenglishproficiencydescriptor ON tpdm.candidate USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_b2452d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_person ON tpdm.candidate USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor ON tpdm.candidate USING btree (sexdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor1; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor1 ON tpdm.candidate USING btree (birthsexdescriptorid);


--
-- Name: fk_b2452d_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_stateabbreviationdescriptor ON tpdm.candidate USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_beeccb_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_beeccb_resultdatatypetypedescriptor ON tpdm.evaluationobjectiveratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_bfaa20_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluation ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_bfaa20_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingleveldescriptor ON tpdm.evaluationrating USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_bfaa20_evaluationratingstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingstatusdescriptor ON tpdm.evaluationrating USING btree (evaluationratingstatusdescriptorid);


--
-- Name: fk_bfaa20_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_performanceevaluationrating ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_bfaa20_section; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_section ON tpdm.evaluationrating USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c5124f_electronicmailtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5124f_electronicmailtypedescriptor ON tpdm.candidateelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_c5877a_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5877a_resultdatatypetypedescriptor ON tpdm.evaluationelementratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_d3a222_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d3a222_gradeleveldescriptor ON tpdm.educatorpreparationprogramgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_d4565d_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluation ON tpdm.evaluationobjective USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_d4565d_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluationtypedescriptor ON tpdm.evaluationobjective USING btree (evaluationtypedescriptorid);


--
-- Name: fk_e21e4b_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_person ON tpdm.surveysectionresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_e21e4b_surveysectionresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_surveysectionresponse ON tpdm.surveysectionresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_e5239b_languagedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e5239b_languagedescriptor ON tpdm.candidatelanguage USING btree (languagedescriptorid);


--
-- Name: fk_e53186_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationobjective ON tpdm.evaluationelement USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_e53186_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationtypedescriptor ON tpdm.evaluationelement USING btree (evaluationtypedescriptorid);


--
-- Name: fk_fa906d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fa906d_person ON tpdm.surveyresponseextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_fc61b2_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_candidate ON tpdm.candidateeducatorpreparationprogramassociation USING btree (candidateidentifier);


--
-- Name: fk_fc61b2_educatorpreparationprogram; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_educatorpreparationprogram ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fc61b2_eppprogrampathwaydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_eppprogrampathwaydescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (eppprogrampathwaydescriptorid);


--
-- Name: fk_fc61b2_reasonexiteddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_reasonexiteddescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: ix_candidateeducatorpreparationprogramassociation_educationorga; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_candidateeducatorpreparationprogramassociation_educationorga ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_educatorpreparationprogram_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_educatorpreparationprogram_educationorganizationid ON tpdm.educatorpreparationprogram USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluation_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluation_educationorganizationid ON tpdm.evaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationelement_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationelement_educationorganizationid ON tpdm.evaluationelement USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationelementrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationelementrating_educationorganizationid ON tpdm.evaluationelementrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationobjective_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationobjective_educationorganizationid ON tpdm.evaluationobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationobjectiverating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationobjectiverating_educationorganizationid ON tpdm.evaluationobjectiverating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationrating_educationorganizationid ON tpdm.evaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_evaluationrating_schoolid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_evaluationrating_schoolid ON tpdm.evaluationrating USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_performanceevaluation_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_performanceevaluation_educationorganizationid ON tpdm.performanceevaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_performanceevaluationrating_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_performanceevaluationrating_educationorganizationid ON tpdm.performanceevaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_rubricdimension_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_rubricdimension_educationorganizationid ON tpdm.rubricdimension USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ux_15d685_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_15d685_changeversion ON tpdm.performanceevaluation USING btree (changeversion);


--
-- Name: ux_15d685_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_15d685_id ON tpdm.performanceevaluation USING btree (id);


--
-- Name: ux_163e44_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_163e44_changeversion ON tpdm.evaluation USING btree (changeversion);


--
-- Name: ux_163e44_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_163e44_id ON tpdm.evaluation USING btree (id);


--
-- Name: ux_195935_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_195935_changeversion ON tpdm.educatorpreparationprogram USING btree (changeversion);


--
-- Name: ux_195935_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_195935_id ON tpdm.educatorpreparationprogram USING btree (id);


--
-- Name: ux_4479ea_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_4479ea_changeversion ON tpdm.evaluationelementrating USING btree (changeversion);


--
-- Name: ux_4479ea_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_4479ea_id ON tpdm.evaluationelementrating USING btree (id);


--
-- Name: ux_520027_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_520027_changeversion ON tpdm.surveyresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_520027_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_520027_id ON tpdm.surveyresponsepersontargetassociation USING btree (id);


--
-- Name: ux_643c81_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_643c81_changeversion ON tpdm.rubricdimension USING btree (changeversion);


--
-- Name: ux_643c81_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_643c81_id ON tpdm.rubricdimension USING btree (id);


--
-- Name: ux_759abe_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_759abe_changeversion ON tpdm.performanceevaluationrating USING btree (changeversion);


--
-- Name: ux_759abe_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_759abe_id ON tpdm.performanceevaluationrating USING btree (id);


--
-- Name: ux_7ae19d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_7ae19d_changeversion ON tpdm.evaluationobjectiverating USING btree (changeversion);


--
-- Name: ux_7ae19d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_7ae19d_id ON tpdm.evaluationobjectiverating USING btree (id);


--
-- Name: ux_a465f2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_a465f2_changeversion ON tpdm.financialaid USING btree (changeversion);


--
-- Name: ux_a465f2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_a465f2_id ON tpdm.financialaid USING btree (id);


--
-- Name: ux_b2452d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_b2452d_changeversion ON tpdm.candidate USING btree (changeversion);


--
-- Name: ux_b2452d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2452d_id ON tpdm.candidate USING btree (id);


--
-- Name: ux_bfaa20_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_bfaa20_changeversion ON tpdm.evaluationrating USING btree (changeversion);


--
-- Name: ux_bfaa20_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_bfaa20_id ON tpdm.evaluationrating USING btree (id);


--
-- Name: ux_d4565d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_d4565d_changeversion ON tpdm.evaluationobjective USING btree (changeversion);


--
-- Name: ux_d4565d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_d4565d_id ON tpdm.evaluationobjective USING btree (id);


--
-- Name: ux_e21e4b_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e21e4b_changeversion ON tpdm.surveysectionresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_e21e4b_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e21e4b_id ON tpdm.surveysectionresponsepersontargetassociation USING btree (id);


--
-- Name: ux_e53186_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e53186_changeversion ON tpdm.evaluationelement USING btree (changeversion);


--
-- Name: ux_e53186_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e53186_id ON tpdm.evaluationelement USING btree (id);


--
-- Name: ux_fc61b2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_fc61b2_changeversion ON tpdm.candidateeducatorpreparationprogramassociation USING btree (changeversion);


--
-- Name: ux_fc61b2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_fc61b2_id ON tpdm.candidateeducatorpreparationprogramassociation USING btree (id);


--
-- Name: communityorganization deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_delete();


--
-- Name: communityprovider deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_delete();


--
-- Name: educationorganizationnetwork deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete();


--
-- Name: educationservicecenter deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_delete();


--
-- Name: localeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_delete();


--
-- Name: organizationdepartment deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_delete();


--
-- Name: postsecondaryinstitution deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete();


--
-- Name: school deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_delete();


--
-- Name: stateeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_delete();


--
-- Name: classperiod handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classperiodname, schoolid ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_keychg();


--
-- Name: courseoffering handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sessionname ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_keychg();


--
-- Name: grade handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_keychg();


--
-- Name: gradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_keychg();


--
-- Name: location handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classroomidentificationcode, schoolid ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_keychg();


--
-- Name: parent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF parentuniqueid ON edfi.parent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.parent_keychg();


--
-- Name: section handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_keychg();


--
-- Name: sectionattendancetakenevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg();


--
-- Name: session handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF schoolid, schoolyear, sessionname ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_keychg();


--
-- Name: staff handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF staffuniqueid ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_keychg();


--
-- Name: staffsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg();


--
-- Name: student handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF studentuniqueid ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_keychg();


--
-- Name: studentgradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace, studentusi ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg();


--
-- Name: studentschoolassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF entrydate, schoolid, studentusi ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg();


--
-- Name: studentschoolattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg();


--
-- Name: studentsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg();


--
-- Name: studentsectionattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg();


--
-- Name: surveysectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg();


--
-- Name: communityorganization insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_insert();


--
-- Name: communityprovider insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_insert();


--
-- Name: educationorganizationnetwork insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert();


--
-- Name: educationservicecenter insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_insert();


--
-- Name: localeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_insert();


--
-- Name: organizationdepartment insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_insert();


--
-- Name: postsecondaryinstitution insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert();


--
-- Name: school insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_insert();


--
-- Name: stateeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_insert();


--
-- Name: absenceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.absenceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted();


--
-- Name: academichonorcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academichonorcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted();


--
-- Name: academicsubjectdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicsubjectdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted();


--
-- Name: academicweek trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicweek_deleted();


--
-- Name: accommodationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accommodationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted();


--
-- Name: accountabilityrating trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accountabilityrating_deleted();


--
-- Name: accounttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accounttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted();


--
-- Name: achievementcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.achievementcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted();


--
-- Name: additionalcredittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.additionalcredittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted();


--
-- Name: addresstypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.addresstypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted();


--
-- Name: administrationenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrationenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted();


--
-- Name: administrativefundingcontroldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrativefundingcontroldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted();


--
-- Name: ancestryethnicorigindescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ancestryethnicorigindescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted();


--
-- Name: assessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessment_deleted();


--
-- Name: assessmentcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted();


--
-- Name: assessmentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted();


--
-- Name: assessmentitem trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitem_deleted();


--
-- Name: assessmentitemcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted();


--
-- Name: assessmentitemresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted();


--
-- Name: assessmentperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted();


--
-- Name: assessmentreportingmethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentreportingmethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted();


--
-- Name: assessmentscorerangelearningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted();


--
-- Name: assignmentlatestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assignmentlatestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted();


--
-- Name: attemptstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attemptstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted();


--
-- Name: attendanceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attendanceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted();


--
-- Name: balancesheetdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted();


--
-- Name: barriertointernetaccessinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.barriertointernetaccessinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted();


--
-- Name: behaviordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.behaviordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted();


--
-- Name: bellschedule trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.bellschedule_deleted();


--
-- Name: calendar trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendar_deleted();


--
-- Name: calendardate trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendardate_deleted();


--
-- Name: calendareventdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendareventdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted();


--
-- Name: calendartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted();


--
-- Name: careerpathwaydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.careerpathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted();


--
-- Name: charterapprovalagencytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterapprovalagencytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted();


--
-- Name: charterstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted();


--
-- Name: chartofaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.chartofaccount_deleted();


--
-- Name: citizenshipstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.citizenshipstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted();


--
-- Name: classperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_deleted();


--
-- Name: classroompositiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classroompositiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted();


--
-- Name: cohort trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohort_deleted();


--
-- Name: cohortscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted();


--
-- Name: cohorttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohorttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted();


--
-- Name: cohortyeartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortyeartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted();


--
-- Name: communityproviderlicense trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted();


--
-- Name: competencyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted();


--
-- Name: competencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyobjective_deleted();


--
-- Name: contacttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contacttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted();


--
-- Name: contentclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contentclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted();


--
-- Name: continuationofservicesreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.continuationofservicesreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted();


--
-- Name: costratedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.costratedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.costratedescriptor_deleted();


--
-- Name: countrydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.countrydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.countrydescriptor_deleted();


--
-- Name: course trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.course FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.course_deleted();


--
-- Name: courseattemptresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseattemptresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted();


--
-- Name: coursedefinedbydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursedefinedbydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted();


--
-- Name: coursegpaapplicabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursegpaapplicabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted();


--
-- Name: courseidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted();


--
-- Name: courselevelcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courselevelcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted();


--
-- Name: courseoffering trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_deleted();


--
-- Name: courserepeatcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courserepeatcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted();


--
-- Name: coursetranscript trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursetranscript_deleted();


--
-- Name: credential trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credential_deleted();


--
-- Name: credentialfielddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialfielddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted();


--
-- Name: credentialtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted();


--
-- Name: creditcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.creditcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted();


--
-- Name: credittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted();


--
-- Name: cteprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cteprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted();


--
-- Name: curriculumuseddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.curriculumuseddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted();


--
-- Name: deliverymethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.deliverymethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted();


--
-- Name: descriptormapping trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.descriptormapping_deleted();


--
-- Name: diagnosisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diagnosisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted();


--
-- Name: diplomaleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomaleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted();


--
-- Name: diplomatypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomatypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted();


--
-- Name: disabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted();


--
-- Name: disabilitydesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted();


--
-- Name: disabilitydeterminationsourcetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydeterminationsourcetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted();


--
-- Name: disciplineaction trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineaction_deleted();


--
-- Name: disciplineactionlengthdifferencereasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineactionlengthdifferencereasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted();


--
-- Name: disciplinedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplinedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted();


--
-- Name: disciplineincident trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincident_deleted();


--
-- Name: disciplineincidentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincidentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted();


--
-- Name: educationalenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationalenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted();


--
-- Name: educationcontent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationcontent_deleted();


--
-- Name: educationorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganization_deleted();


--
-- Name: educationorganizationassociationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationassociationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted();


--
-- Name: educationorganizationcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted();


--
-- Name: educationorganizationidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted();


--
-- Name: educationorganizationinterventionprescriptionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted();


--
-- Name: educationorganizationnetworkassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted();


--
-- Name: educationorganizationpeerassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted();


--
-- Name: educationplandescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationplandescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted();


--
-- Name: electronicmailtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.electronicmailtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted();


--
-- Name: employmentstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.employmentstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted();


--
-- Name: entrygradelevelreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrygradelevelreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted();


--
-- Name: entrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted();


--
-- Name: eventcircumstancedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eventcircumstancedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted();


--
-- Name: exitwithdrawtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.exitwithdrawtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted();


--
-- Name: feederschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted();


--
-- Name: financialcollectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.financialcollectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted();


--
-- Name: functiondimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.functiondimension_deleted();


--
-- Name: funddimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.funddimension_deleted();


--
-- Name: generalstudentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted();


--
-- Name: grade trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_deleted();


--
-- Name: gradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_deleted();


--
-- Name: gradebookentrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted();


--
-- Name: gradeleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradeleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted();


--
-- Name: gradepointaveragetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradepointaveragetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted();


--
-- Name: gradetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted();


--
-- Name: gradingperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperiod_deleted();


--
-- Name: gradingperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted();


--
-- Name: graduationplan trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplan_deleted();


--
-- Name: graduationplantypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplantypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted();


--
-- Name: gunfreeschoolsactreportingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gunfreeschoolsactreportingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted();


--
-- Name: homelessprimarynighttimeresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprimarynighttimeresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted();


--
-- Name: homelessprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted();


--
-- Name: identificationdocumentusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.identificationdocumentusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted();


--
-- Name: incidentlocationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.incidentlocationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted();


--
-- Name: indicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted();


--
-- Name: indicatorgroupdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorgroupdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted();


--
-- Name: indicatorleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted();


--
-- Name: institutiontelephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.institutiontelephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted();


--
-- Name: interactivitystyledescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interactivitystyledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted();


--
-- Name: internetaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted();


--
-- Name: internetaccesstypeinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccesstypeinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted();


--
-- Name: internetperformanceinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetperformanceinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted();


--
-- Name: intervention trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.intervention_deleted();


--
-- Name: interventionclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted();


--
-- Name: interventioneffectivenessratingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventioneffectivenessratingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted();


--
-- Name: interventionprescription trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionprescription_deleted();


--
-- Name: interventionstudy trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionstudy_deleted();


--
-- Name: languagedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languagedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languagedescriptor_deleted();


--
-- Name: languageinstructionprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageinstructionprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted();


--
-- Name: languageusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted();


--
-- Name: learningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningobjective_deleted();


--
-- Name: learningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandard_deleted();


--
-- Name: learningstandardcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted();


--
-- Name: learningstandardequivalenceassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted();


--
-- Name: learningstandardequivalencestrengthdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalencestrengthdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted();


--
-- Name: learningstandardscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted();


--
-- Name: levelofeducationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.levelofeducationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted();


--
-- Name: licensestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted();


--
-- Name: licensetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted();


--
-- Name: limitedenglishproficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.limitedenglishproficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted();


--
-- Name: localaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localaccount_deleted();


--
-- Name: localactual trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localactual_deleted();


--
-- Name: localbudget trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localbudget_deleted();


--
-- Name: localcontractedstaff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted();


--
-- Name: localedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localedescriptor_deleted();


--
-- Name: localeducationagencycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagencycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted();


--
-- Name: localencumbrance trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localencumbrance_deleted();


--
-- Name: localpayroll trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localpayroll_deleted();


--
-- Name: location trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_deleted();


--
-- Name: magnetspecialprogramemphasisschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.magnetspecialprogramemphasisschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted();


--
-- Name: mediumofinstructiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.mediumofinstructiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted();


--
-- Name: methodcreditearneddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.methodcreditearneddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted();


--
-- Name: migranteducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.migranteducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted();


--
-- Name: modelentitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.modelentitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted();


--
-- Name: monitoreddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.monitoreddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted();


--
-- Name: neglectedordelinquentprogramdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted();


--
-- Name: neglectedordelinquentprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted();


--
-- Name: networkpurposedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.networkpurposedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted();


--
-- Name: objectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectdimension_deleted();


--
-- Name: objectiveassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectiveassessment_deleted();


--
-- Name: oldethnicitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.oldethnicitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted();


--
-- Name: openstaffposition trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.openstaffposition_deleted();


--
-- Name: operationalstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted();


--
-- Name: operationalunitdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted();


--
-- Name: othernametypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.othernametypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted();


--
-- Name: parent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.parent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.parent_deleted();


--
-- Name: participationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationdescriptor_deleted();


--
-- Name: participationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted();


--
-- Name: performancebaseconversiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performancebaseconversiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted();


--
-- Name: performanceleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performanceleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted();


--
-- Name: person trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.person FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.person_deleted();


--
-- Name: personalinformationverificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.personalinformationverificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted();


--
-- Name: platformtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.platformtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted();


--
-- Name: populationserveddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.populationserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted();


--
-- Name: postingresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postingresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted();


--
-- Name: postsecondaryevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted();


--
-- Name: postsecondaryeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted();


--
-- Name: postsecondaryinstitutionleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitutionleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted();


--
-- Name: primarylearningdeviceaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted();


--
-- Name: primarylearningdeviceawayfromschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceawayfromschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted();


--
-- Name: primarylearningdeviceproviderdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceproviderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted();


--
-- Name: proficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.proficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted();


--
-- Name: program trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.program FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.program_deleted();


--
-- Name: programassignmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programassignmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted();


--
-- Name: programcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted();


--
-- Name: programdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programdimension_deleted();


--
-- Name: programsponsordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programsponsordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted();


--
-- Name: programtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted();


--
-- Name: progressdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressdescriptor_deleted();


--
-- Name: progressleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted();


--
-- Name: projectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.projectdimension_deleted();


--
-- Name: providercategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providercategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted();


--
-- Name: providerprofitabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerprofitabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted();


--
-- Name: providerstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted();


--
-- Name: publicationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.publicationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted();


--
-- Name: questionformdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.questionformdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted();


--
-- Name: racedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.racedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.racedescriptor_deleted();


--
-- Name: reasonexiteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonexiteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted();


--
-- Name: reasonnottesteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonnottesteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted();


--
-- Name: recognitiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.recognitiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted();


--
-- Name: relationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.relationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.relationdescriptor_deleted();


--
-- Name: repeatidentifierdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.repeatidentifierdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted();


--
-- Name: reportcard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportcard_deleted();


--
-- Name: reporterdescriptiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reporterdescriptiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted();


--
-- Name: reportingtagdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportingtagdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted();


--
-- Name: residencystatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.residencystatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted();


--
-- Name: responseindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responseindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted();


--
-- Name: responsibilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responsibilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted();


--
-- Name: restraintevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restraintevent_deleted();


--
-- Name: restrainteventreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restrainteventreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted();


--
-- Name: resultdatatypetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.resultdatatypetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted();


--
-- Name: retestindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.retestindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted();


--
-- Name: schoolcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted();


--
-- Name: schoolchoiceimplementstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoiceimplementstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted();


--
-- Name: schoolfoodserviceprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolfoodserviceprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted();


--
-- Name: schooltypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schooltypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted();


--
-- Name: schoolyeartype trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolyeartype_deleted();


--
-- Name: section trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_deleted();


--
-- Name: sectionattendancetakenevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted();


--
-- Name: sectioncharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectioncharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted();


--
-- Name: separationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationdescriptor_deleted();


--
-- Name: separationreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted();


--
-- Name: servicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.servicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.servicedescriptor_deleted();


--
-- Name: session trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_deleted();


--
-- Name: sexdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sexdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sexdescriptor_deleted();


--
-- Name: sourcedimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcedimension_deleted();


--
-- Name: sourcesystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcesystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted();


--
-- Name: specialeducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted();


--
-- Name: specialeducationsettingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationsettingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted();


--
-- Name: staff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_deleted();


--
-- Name: staffabsenceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted();


--
-- Name: staffclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffclassificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted();


--
-- Name: staffcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted();


--
-- Name: staffdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted();


--
-- Name: staffeducationorganizationassignmentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted();


--
-- Name: staffeducationorganizationcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted();


--
-- Name: staffeducationorganizationemploymentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted();


--
-- Name: staffidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted();


--
-- Name: staffleave trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleave_deleted();


--
-- Name: staffleaveeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleaveeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted();


--
-- Name: staffprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted();


--
-- Name: staffschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted();


--
-- Name: staffsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted();


--
-- Name: stateabbreviationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateabbreviationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted();


--
-- Name: student trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_deleted();


--
-- Name: studentacademicrecord trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted();


--
-- Name: studentassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessment_deleted();


--
-- Name: studentassessmenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted();


--
-- Name: studentcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted();


--
-- Name: studentcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted();


--
-- Name: studentcompetencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted();


--
-- Name: studentdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted();


--
-- Name: studentdisciplineincidentbehaviorassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted();


--
-- Name: studentdisciplineincidentnonoffenderassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted();


--
-- Name: studenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted();


--
-- Name: studenteducationorganizationresponsibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted();


--
-- Name: studentgradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted();


--
-- Name: studentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted();


--
-- Name: studentinterventionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted();


--
-- Name: studentinterventionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted();


--
-- Name: studentlearningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentlearningobjective_deleted();


--
-- Name: studentparentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparentassociation_deleted();


--
-- Name: studentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted();


--
-- Name: studentprogramattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted();


--
-- Name: studentschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted();


--
-- Name: studentschoolattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted();


--
-- Name: studentsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted();


--
-- Name: studentsectionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted();


--
-- Name: submissionstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.submissionstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted();


--
-- Name: survey trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.survey_deleted();


--
-- Name: surveycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted();


--
-- Name: surveycourseassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted();


--
-- Name: surveyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted();


--
-- Name: surveyprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted();


--
-- Name: surveyquestion trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestion_deleted();


--
-- Name: surveyquestionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted();


--
-- Name: surveyresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponse_deleted();


--
-- Name: surveyresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted();


--
-- Name: surveyresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted();


--
-- Name: surveysection trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysection_deleted();


--
-- Name: surveysectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted();


--
-- Name: surveysectionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted();


--
-- Name: surveysectionresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted();


--
-- Name: teachingcredentialbasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialbasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted();


--
-- Name: teachingcredentialdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted();


--
-- Name: technicalskillsassessmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.technicalskillsassessmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted();


--
-- Name: telephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.telephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted();


--
-- Name: termdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.termdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.termdescriptor_deleted();


--
-- Name: titleipartaparticipantdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaparticipantdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted();


--
-- Name: titleipartaprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted();


--
-- Name: titleipartaschooldesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaschooldesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted();


--
-- Name: tribalaffiliationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.tribalaffiliationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted();


--
-- Name: visadescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.visadescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.visadescriptor_deleted();


--
-- Name: weapondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.weapondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.weapondescriptor_deleted();


--
-- Name: communityprovider updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_update();


--
-- Name: educationservicecenter updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_update();


--
-- Name: localeducationagency updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_update();


--
-- Name: organizationdepartment updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_update();


--
-- Name: school updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_update();


--
-- Name: academicweek updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accountabilityrating updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentitem updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentscorerangelearningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: balancesheetdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: bellschedule updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendar updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendardate updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: chartofaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: classperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: cohort updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: communityproviderlicense updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: competencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: course updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.course FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: courseoffering updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: coursetranscript updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: credential updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptor updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptor FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptormapping updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineaction updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineincident updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationcontent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganization updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationinterventionprescriptionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationnetworkassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationpeerassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: feederschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: functiondimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: funddimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: generalstudentprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: grade updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradingperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: graduationplan updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: intervention updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionprescription updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionstudy updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandardequivalenceassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localactual updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localcontractedstaff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localencumbrance updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localpayroll updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: location updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.location FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectiveassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: openstaffposition updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: operationalunitdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: parent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.parent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: person updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.person FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: postsecondaryevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: program updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.program FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: projectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: reportcard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: restraintevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: schoolyeartype updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: section updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.section FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sectionattendancetakenevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: session updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.session FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sourcedimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffabsenceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationassignmentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationemploymentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffleave updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: student updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.student FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentacademicrecord updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessmenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcompetencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentbehaviorassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentnonoffenderassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationresponsibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentgradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentlearningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentparentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentparentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: survey updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveycourseassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestion updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysection updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accreditationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.accreditationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted();


--
-- Name: aidtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.aidtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted();


--
-- Name: candidate trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidate_deleted();


--
-- Name: candidateeducatorpreparationprogramassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted();


--
-- Name: certificationroutedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.certificationroutedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted();


--
-- Name: coteachingstyleobserveddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.coteachingstyleobserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted();


--
-- Name: credentialstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.credentialstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted();


--
-- Name: educatorpreparationprogram trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted();


--
-- Name: educatorroledescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorroledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted();


--
-- Name: englishlanguageexamdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.englishlanguageexamdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted();


--
-- Name: eppprogrampathwaydescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.eppprogrampathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted();


--
-- Name: evaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluation_deleted();


--
-- Name: evaluationelement trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelement_deleted();


--
-- Name: evaluationelementrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted();


--
-- Name: evaluationelementratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted();


--
-- Name: evaluationobjective trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted();


--
-- Name: evaluationobjectiverating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted();


--
-- Name: evaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted();


--
-- Name: evaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationrating_deleted();


--
-- Name: evaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted();


--
-- Name: evaluationratingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted();


--
-- Name: evaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted();


--
-- Name: financialaid trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.financialaid_deleted();


--
-- Name: genderdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.genderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted();


--
-- Name: objectiveratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.objectiveratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted();


--
-- Name: performanceevaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted();


--
-- Name: performanceevaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted();


--
-- Name: performanceevaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted();


--
-- Name: performanceevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted();


--
-- Name: rubricdimension trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricdimension_deleted();


--
-- Name: rubricratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted();


--
-- Name: surveyresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted();


--
-- Name: surveysectionresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted();


--
-- Name: candidate updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: candidateeducatorpreparationprogramassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educatorpreparationprogram updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelement updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelementrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjective updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjectiverating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: financialaid updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: rubricdimension updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget fk_000683_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localbudget fk_000683_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessmentperiod fk_02ddd8_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: studentassessmentperiod fk_02ddd8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyleveldescriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.surveyleveldescriptor(surveyleveldescriptorid);


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse fk_048797_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT fk_048797_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: indicatorleveldescriptor fk_05d3f9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT fk_05d3f9_descriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sourcedimensionreportingtag fk_0c6eff_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: sourcedimensionreportingtag fk_0c6eff_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_sourcedimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: parentothername fk_0e0a11_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: parentothername fk_0e0a11_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: parentaddressperiod fk_123e27_parentaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT fk_123e27_parentaddress FOREIGN KEY (parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.parentaddress(parentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: chartofaccount fk_131e2b_accounttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_accounttypedescriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.accounttypedescriptor(accounttypedescriptorid);


--
-- Name: chartofaccount fk_131e2b_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_balancesheetdimension FOREIGN KEY (balancesheetcode, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: chartofaccount fk_131e2b_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_functiondimension FOREIGN KEY (functioncode, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_funddimension FOREIGN KEY (fundcode, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_objectdimension FOREIGN KEY (objectcode, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_operationalunitdimension FOREIGN KEY (operationalunitcode, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_programdimension FOREIGN KEY (programcode, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_projectdimension FOREIGN KEY (projectcode, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_sourcedimension FOREIGN KEY (sourcecode, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear);


--
-- Name: organizationdepartment fk_13b924_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: organizationdepartment fk_13b924_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization FOREIGN KEY (organizationdepartmentid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization1 FOREIGN KEY (parenteducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestion fk_1bb88c_questionformdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_questionformdescriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.questionformdescriptor(questionformdescriptorid);


--
-- Name: surveyquestion fk_1bb88c_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: surveyquestion fk_1bb88c_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsechoice fk_1c624b_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT fk_1c624b_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: survey fk_211bb3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: survey fk_211bb3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: survey fk_211bb3_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: survey fk_211bb3_surveycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_surveycategorydescriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.surveycategorydescriptor(surveycategorydescriptorid);


--
-- Name: surveysectionresponse fk_2189c3_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponse fk_2189c3_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: internetperformanceinresidencedescriptor fk_256049_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT fk_256049_descriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, studentusi, languagedescriptorid) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, studentusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: localaccount fk_32eddb_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_chartofaccount FOREIGN KEY (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccount fk_32eddb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: parentlanguage fk_34f9df_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: parentlanguage fk_34f9df_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_operationalunitdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_programdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: questionformdescriptor fk_43a820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT fk_43a820_descriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: parenttelephone fk_453ba8_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parenttelephone fk_453ba8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: localpayroll fk_46e5c2_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localpayroll fk_46e5c2_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localpayroll fk_46e5c2_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_studentdisciplineincidentnonoffenderassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentnonoffenderassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localcontractedstaff fk_4d9b4a_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localcontractedstaff fk_4d9b4a_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff fk_4d9b4a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: surveycategorydescriptor fk_4e55bd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT fk_4e55bd_descriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: assignmentlatestatusdescriptor fk_518b3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT fk_518b3c_descriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: learningobjective fk_588d15_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT fk_588d15_learningobjective FOREIGN KEY (parentlearningobjectiveid, parentnamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor fk_5ee08d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT fk_5ee08d_descriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (educationorganizationid, studentusi, disabilitydescriptorid) REFERENCES edfi.studenteducationorganizationassociationdisability(educationorganizationid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parent fk_5f7953_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: parent fk_5f7953_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: parent fk_5f7953_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: person fk_6007db_sourcesystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT fk_6007db_sourcesystemdescriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.sourcesystemdescriptor(sourcesystemdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: surveyquestionmatrix fk_64d76d_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT fk_64d76d_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentdisciplineincidentassociation fk_679174_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentassociation fk_679174_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentassociation fk_679174_studentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_studentparticipationcodedescriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.studentparticipationcodedescriptor(studentparticipationcodedescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: staff fk_681927_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: financialcollectiondescriptor fk_6dc716_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT fk_6dc716_descriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: funddimensionreportingtag fk_7062bd_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_funddimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: funddimensionreportingtag fk_7062bd_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: descriptormappingmodelentity fk_7433b4_descriptormapping; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_descriptormapping FOREIGN KEY (mappednamespace, mappedvalue, namespace, value) REFERENCES edfi.descriptormapping(mappednamespace, mappedvalue, namespace, value) ON DELETE CASCADE;


--
-- Name: descriptormappingmodelentity fk_7433b4_modelentitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_modelentitydescriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.modelentitydescriptor(modelentitydescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: internetaccesstypeinresidencedescriptor fk_8007d5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT fk_8007d5_descriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_studentsectionattendanceevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_studentsectionattendanceevent FOREIGN KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionattendanceevent(attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_studenteducationorganizationassociationprogrampartici; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_studenteducationorganizationassociationprogrampartici FOREIGN KEY (educationorganizationid, studentusi, programtypedescriptorid) REFERENCES edfi.studenteducationorganizationassociationprogramparticipation(educationorganizationid, studentusi, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard1 FOREIGN KEY (prerequisitelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: oldethnicitydescriptor fk_821652_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT fk_821652_descriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_chartofaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicatorperiod fk_8486ae_educationorganizationindicator; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT fk_8486ae_educationorganizationindicator FOREIGN KEY (educationorganizationid, indicatordescriptorid) REFERENCES edfi.educationorganizationindicator(educationorganizationid, indicatordescriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: parentelectronicmail fk_85798e_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: parentelectronicmail fk_85798e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: modelentitydescriptor fk_88479e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT fk_88479e_descriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_functiondimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyresponse fk_8d6383_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: surveyresponse fk_8d6383_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponse fk_8d6383_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyresponse fk_8d6383_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: parentinternationaladdress fk_8d650e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_barriertointernetaccessinresidencedescriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.barriertointernetaccessinresidencedescriptor(barriertointernetaccessinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetaccesstypeinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetaccesstypeinresidencedescriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.internetaccesstypeinresidencedescriptor(internetaccesstypeinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetperformanceinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetperformanceinresidencedescriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.internetperformanceinresidencedescriptor(internetperformanceinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceaccessdescriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.primarylearningdeviceaccessdescriptor(primarylearningdeviceaccessdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceawayfromschooldescriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.primarylearningdeviceawayfromschooldescriptor(primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceproviderdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceproviderdescriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.primarylearningdeviceproviderdescriptor(primarylearningdeviceproviderdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: submissionstatusdescriptor fk_8e9244_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT fk_8e9244_descriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: accounttypedescriptor fk_8f249f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT fk_8f249f_descriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.studenteducationorganizationassociationaddress(educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_assessmentscorerangelearningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_assessmentscorerangelearningstandard FOREIGN KEY (assessmentidentifier, namespace, scorerangeid) REFERENCES edfi.assessmentscorerangelearningstandard(assessmentidentifier, namespace, scorerangeid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveycourseassociation fk_9f1246_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: surveycourseassociation fk_9f1246_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandardauthor fk_a165fa_learningobjectivecontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT fk_a165fa_learningobjectivecontentstandard FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjectivecontentstandard(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentusi, studentcharacteristicdescriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceproviderdescriptor fk_a1f277_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT fk_a1f277_descriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: ancestryethnicorigindescriptor fk_a21217_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT fk_a21217_descriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffancestryethnicorigin fk_a4a6ae_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: staffancestryethnicorigin fk_a4a6ae_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, studentusi, indicatorname) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, studentusi, indicatorname) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivegradelevel fk_a92ef0_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningobjectivegradelevel fk_a92ef0_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganizationassociationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganizationassociationtypedescriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.educationorganizationassociationtypedescriptor(educationorganizationassociationtypedescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: reportingtagdescriptor fk_b173f4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT fk_b173f4_descriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (staffusi, languagedescriptorid) REFERENCES edfi.stafflanguage(staffusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_projectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localactual fk_b6310e_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localactual fk_b6310e_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjective fk_baaa9d_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentlearningobjective fk_baaa9d_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentlearningobjective fk_baaa9d_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: studentlearningobjective fk_baaa9d_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_balancesheetdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyleveldescriptor fk_bce725_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT fk_bce725_descriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentparentassociation fk_bf9d92_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: studentparentassociation fk_bf9d92_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentparentassociation fk_bf9d92_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi);


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: surveysectionassociation fk_c16804_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: surveysectionassociation fk_c16804_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_assignmentlatestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_assignmentlatestatusdescriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.assignmentlatestatusdescriptor(assignmentlatestatusdescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentgradebookentry fk_c2efaa_submissionstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_submissionstatusdescriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.submissionstatusdescriptor(submissionstatusdescriptorid);


--
-- Name: localaccountreportingtag fk_c38935_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: localaccountreportingtag fk_c38935_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceaccessdescriptor fk_cbfe5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT fk_cbfe5d_descriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentaddress fk_cc3333_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: parentaddress fk_cc3333_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor fk_cce75a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT fk_cce75a_descriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyquestionresponsevalue fk_d047f5_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT fk_d047f5_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationassociationtypedescriptor fk_d9f485_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT fk_d9f485_descriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) REFERENCES edfi.graduationplancreditsbycourse(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicator fk_dde098_indicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatordescriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.indicatordescriptor(indicatordescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorgroupdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorgroupdescriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.indicatorgroupdescriptor(indicatorgroupdescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorleveldescriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.indicatorleveldescriptor(indicatorleveldescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: indicatorgroupdescriptor fk_e0f6fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT fk_e0f6fe_descriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyprogramassociation fk_e3e5a4_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: surveyprogramassociation fk_e3e5a4_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineincident fk_e45c0b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysection fk_e5572a_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT fk_e5572a_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: programservice fk_e943d3_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programservice fk_e943d3_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localencumbrance fk_ea526f_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localencumbrance fk_ea526f_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyquestionresponse fk_eddd02_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse fk_eddd02_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: indicatordescriptor fk_ee0bbf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT fk_ee0bbf_descriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_school FOREIGN KEY (reportedschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: programlearningobjective fk_f5911f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: programlearningobjective fk_f5911f_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: parentlanguageuse fk_f67c61_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: parentlanguageuse fk_f67c61_parentlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_parentlanguage FOREIGN KEY (parentusi, languagedescriptorid) REFERENCES edfi.parentlanguage(parentusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: sourcesystemdescriptor fk_f71783_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT fk_f71783_descriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: learningobjectivecontentstandard fk_f99184_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningobjectivecontentstandard fk_f99184_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandard fk_f99184_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_objectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- Name: candidatetelephone fk_09c531_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatetelephone fk_09c531_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: performanceevaluation fk_15d685_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: performanceevaluation fk_15d685_evaluationperioddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_evaluationperioddescriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES tpdm.evaluationperioddescriptor(evaluationperioddescriptorid);


--
-- Name: performanceevaluation fk_15d685_performanceevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_performanceevaluationtypedescriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES tpdm.performanceevaluationtypedescriptor(performanceevaluationtypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: performanceevaluation fk_15d685_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: candidateaddress fk_160329_addresstypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: candidateaddress fk_160329_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateaddress fk_160329_localedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: candidateaddress fk_160329_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: evaluation fk_163e44_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: evaluation fk_163e44_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: candidateaddressperiod fk_17e793_candidateaddress; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT fk_17e793_candidateaddress FOREIGN KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES tpdm.candidateaddress(candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogram fk_195935_accreditationstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_accreditationstatusdescriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES tpdm.accreditationstatusdescriptor(accreditationstatusdescriptorid);


--
-- Name: educatorpreparationprogram fk_195935_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educatorpreparationprogram fk_195935_programtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: schoolextension fk_2199be_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: schoolextension fk_2199be_school; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_disabilitydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: candidatedisability fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 fk_2501c4_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT fk_2501c4_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: performanceevaluationtypedescriptor fk_2ba831_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT fk_2ba831_descriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidatelanguageuse fk_3f00b1_candidatelanguage; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_candidatelanguage FOREIGN KEY (candidateidentifier, languagedescriptorid) REFERENCES tpdm.candidatelanguage(candidateidentifier, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: candidatelanguageuse fk_3f00b1_languageusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: certificationroutedescriptor fk_40b601_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT fk_40b601_descriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementrating fk_4479ea_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationelementratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelementratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES tpdm.evaluationelementratingleveldescriptor(evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: candidateothername fk_4521bb_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateothername fk_4521bb_othernametypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: performanceevaluationratingreviewer fk_477526_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingreviewer fk_477526_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratingstatusdescriptor fk_4b53ea_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT fk_4b53ea_descriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponsepersontargetassociation fk_520027_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponsepersontargetassociation fk_520027_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: genderdescriptor fk_554e4f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT fk_554e4f_descriptor FOREIGN KEY (genderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationgradelevel fk_5b9d31_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: performanceevaluationgradelevel fk_5b9d31_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingleveldescriptor fk_5fb2ad_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT fk_5fb2ad_descriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewerreceivedtraining fk_608112_evaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_608112_evaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.evaluationratingreviewer(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: rubricdimension fk_643c81_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: rubricdimension fk_643c81_rubricratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_rubricratingleveldescriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES tpdm.rubricratingleveldescriptor(rubricratingleveldescriptorid);


--
-- Name: evaluationtypedescriptor fk_67cd19_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT fk_67cd19_descriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: accreditationstatusdescriptor fk_69de81_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT fk_69de81_descriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_racedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: performanceevaluationratingreviewerreceivedtraining fk_6e6517_performanceevaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_6e6517_performanceevaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.performanceevaluationratingreviewer(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_candidatedisability; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_candidatedisability FOREIGN KEY (candidateidentifier, disabilitydescriptorid) REFERENCES tpdm.candidatedisability(candidateidentifier, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: credentialextension fk_6fae52_certificationroutedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_certificationroutedescriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES tpdm.certificationroutedescriptor(certificationroutedescriptorid);


--
-- Name: credentialextension fk_6fae52_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialextension fk_6fae52_credentialstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credentialstatusdescriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES tpdm.credentialstatusdescriptor(credentialstatusdescriptorid);


--
-- Name: credentialextension fk_6fae52_educatorroledescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_educatorroledescriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES tpdm.educatorroledescriptor(educatorroledescriptorid);


--
-- Name: credentialextension fk_6fae52_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratinglevel fk_7052f8_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratinglevel fk_7052f8_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: credentialstudentacademicrecord fk_73e151_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstudentacademicrecord fk_73e151_studentacademicrecord; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_coteachingstyleobserveddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_coteachingstyleobserveddescriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES tpdm.coteachingstyleobserveddescriptor(coteachingstyleobserveddescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluationratingleveldescriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES tpdm.performanceevaluationratingleveldescriptor(performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: englishlanguageexamdescriptor fk_76d6e8_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT fk_76d6e8_descriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_objectiveratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_objectiveratingleveldescriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES tpdm.objectiveratingleveldescriptor(objectiveratingleveldescriptorid);


--
-- Name: evaluationperioddescriptor fk_83ff2a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT fk_83ff2a_descriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationelementratingleveldescriptor fk_86df6c_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT fk_86df6c_descriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratinglevel fk_90ed3d_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratinglevel fk_90ed3d_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstatusdescriptor fk_91080a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT fk_91080a_descriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coteachingstyleobserveddescriptor fk_932c9a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT fk_932c9a_descriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: financialaid fk_a465f2_aidtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_aidtypedescriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES tpdm.aidtypedescriptor(aidtypedescriptorid);


--
-- Name: financialaid fk_a465f2_student; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: candidate fk_b2452d_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidate fk_b2452d_englishlanguageexamdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_englishlanguageexamdescriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES tpdm.englishlanguageexamdescriptor(englishlanguageexamdescriptorid);


--
-- Name: candidate fk_b2452d_genderdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_genderdescriptor FOREIGN KEY (genderdescriptorid) REFERENCES tpdm.genderdescriptor(genderdescriptorid);


--
-- Name: candidate fk_b2452d_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: candidate fk_b2452d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor1; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor1 FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: educatorroledescriptor fk_bc8b94_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT fk_bc8b94_descriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingstatusdescriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES tpdm.evaluationratingstatusdescriptor(evaluationratingstatusdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_section; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: evaluationelementratingresult fk_c5877a_evaluationelementrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_evaluationelementrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationelementrating(educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratingresult fk_c5877a_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: eppprogrampathwaydescriptor fk_cde665_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT fk_cde665_descriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: objectiveratingleveldescriptor fk_d49b1f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT fk_d49b1f_descriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: aidtypedescriptor fk_d6106a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT fk_d6106a_descriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_surveysectionresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: candidatelanguage fk_e5239b_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatelanguage fk_e5239b_languagedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor fk_ed7e01_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT fk_ed7e01_descriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: rubricratingleveldescriptor fk_f24609_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT fk_f24609_descriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponseextension fk_fa906d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponseextension fk_fa906d_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_eppprogrampathwaydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_eppprogrampathwaydescriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES tpdm.eppprogrampathwaydescriptor(eppprogrampathwaydescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- PostgreSQL database dump complete
--

